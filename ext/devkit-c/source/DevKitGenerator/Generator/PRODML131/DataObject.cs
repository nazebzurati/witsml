//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=2.0.50727.3038.
// 
namespace Energistics.Generator.PRODML131 {
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_wftRuns))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_wellTests))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_timeSeriesStatistics))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_timeSeriesDatas))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_report))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_productVolumes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_productionOperations))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_productFlowModels))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_fluidSamples))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_fluidAnalysisResults))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_fluidAnalysiss))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_fiberOpticalPaths))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_dtsMeasurements))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_dtsInstrumentBoxes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(obj_dtsInstalledSystems))]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.energistics.org/schemas/abstract")]
    [System.Xml.Serialization.XmlRootAttribute("abstractDataObject", Namespace="http://www.energistics.org/schemas/abstract", IsNullable=false)]
    public abstract partial class abstractObject {
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wftSampleAcquisition {
        
        private refNameString sampleRefField;
        
        private string sampleCylinderIdField;
        
        private string nameField;
        
        private string kindField;
        
        private Energistics.DataAccess.Timestamp dTimStartField;
        
        private bool dTimStartFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimEndField;
        
        private bool dTimEndFieldSpecified;
        
        private string fieldCommentField;
        
        private string interpretationCommentField;
        
        private string sampleIdField;
        
        private string sampleCarrierSlotIdField;
        
        private string toolSectionIdField;
        
        private string bottleIdField;
        
        private string bottleConfigurationField;
        
        private generalMeasureType cushionPressureField;
        
        private string grossFluidKindField;
        
        private cs_wftTestResult[] resultField;
        
        private refNameString[] testRefField;
        
        private cs_wftTestData[] testDataField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Reference to the Sample that was collected at this point.</summary>
        [System.ComponentModel.DescriptionAttribute("Reference to the Sample that was collected at this point.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sampleRef", DataType="refNameString")]
        public refNameString sampleRef {
            get {
                return this.sampleRefField;
            }
            set {
                this.sampleRefField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The ID of the sample cylinder in which this sample was collected.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The ID of the sample cylinder in which this sample was collected.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sampleCylinderId", DataType="nameString")]
        public string sampleCylinderId {
            get {
                return this.sampleCylinderIdField;
            }
            set {
                this.sampleCylinderIdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A name assigned to the acquisition.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A name assigned to the acquisition.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The kind of sample acquisition.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The kind of sample acquisition.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("kind", DataType="kindString")]
        public string kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Sampling  start time.</summary>
        [System.ComponentModel.DescriptionAttribute("Sampling  start time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimStartSpecified {
            get {
                return this.dTimStartFieldSpecified;
            }
            set {
                this.dTimStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Sampling  end time.</summary>
        [System.ComponentModel.DescriptionAttribute("Sampling  end time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimEndSpecified {
            get {
                return this.dTimEndFieldSpecified;
            }
            set {
                this.dTimEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comments created by the field engineers collecting the sample.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Comments created by the field engineers collecting the sample.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fieldComment", DataType="commentString")]
        public string fieldComment {
            get {
                return this.fieldCommentField;
            }
            set {
                this.fieldCommentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comments created by the engineers analysing the sample.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Comments created by the engineers analysing the sample.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("interpretationComment", DataType="commentString")]
        public string interpretationComment {
            get {
                return this.interpretationCommentField;
            }
            set {
                this.interpretationCommentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An identifier for the fluid collected as part of this acquistion.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("An identifier for the fluid collected as part of this acquistion.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sampleId", DataType="str32")]
        public string sampleId {
            get {
                return this.sampleIdField;
            }
            set {
                this.sampleIdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An identifier for the slot in the sample carrier where the sample was acquired.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("An identifier for the slot in the sample carrier where the sample was acquired.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sampleCarrierSlotId", DataType="str32")]
        public string sampleCarrierSlotId {
            get {
                return this.sampleCarrierSlotIdField;
            }
            set {
                this.sampleCarrierSlotIdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An identifier for the formation tester tool section that acquired the sample.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("An identifier for the formation tester tool section that acquired the sample.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("toolSectionId", DataType="str32")]
        public string toolSectionId {
            get {
                return this.toolSectionIdField;
            }
            set {
                this.toolSectionIdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An identifier for the sample bottle that was used for this acquisition.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("An identifier for the sample bottle that was used for this acquisition.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bottleId", DataType="str32")]
        public string bottleId {
            get {
                return this.bottleIdField;
            }
            set {
                this.bottleIdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A description of the kind of bottle used, for example whether the bottle is pressurized with Nitrogen or not.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("A description of the kind of bottle used, for example whether the bottle is press" +
            "urized with Nitrogen or not.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bottleConfiguration", DataType="str32")]
        public string bottleConfiguration {
            get {
                return this.bottleConfigurationField;
            }
            set {
                this.bottleConfigurationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The pressure that was used to charge the sample bottle.</summary>
        [System.ComponentModel.DescriptionAttribute("The pressure that was used to charge the sample bottle.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cushionPressure", DataType="generalMeasureType")]
        public generalMeasureType cushionPressure {
            get {
                return this.cushionPressureField;
            }
            set {
                this.cushionPressureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The expected kind of the sample, typically oil, water or gas.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("The expected kind of the sample, typically oil, water or gas.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("grossFluidKind", DataType="str32")]
        public string grossFluidKind {
            get {
                return this.grossFluidKindField;
            }
            set {
                this.grossFluidKindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A result of formation tester analysis that applies to this acquisition.</summary>
        [System.Xml.Serialization.XmlElementAttribute("result")]
        [System.ComponentModel.DescriptionAttribute("A result of formation tester analysis that applies to this acquisition.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("result", DataType="cs_wftTestResult")]
        public cs_wftTestResult[] result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A refererence to a test (uid) under the current station.</summary>
        [System.Xml.Serialization.XmlElementAttribute("testRef")]
        [System.ComponentModel.DescriptionAttribute("A refererence to a test (uid) under the current station.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testRef", DataType="refNameString")]
        public refNameString[] testRef {
            get {
                return this.testRefField;
            }
            set {
                this.testRefField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A reference to the associated data acquired during this acquisition.</summary>
        [System.Xml.Serialization.XmlElementAttribute("testData")]
        [System.ComponentModel.DescriptionAttribute("A reference to the associated data acquired during this acquisition.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testData", DataType="cs_wftTestData")]
        public cs_wftTestData[] testData {
            get {
                return this.testDataField;
            }
            set {
                this.testDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class refNameString {
        
        private string uidRefField;
        
        private string valueField;
        
        /// <remarks/>
        /// <summary>A reference to the unique identifier (uid attribute) in the node referenced by the name value.  This attribute is required within the context of a WITSML server.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A reference to the unique identifier (uid attribute) in the node referenced by th" +
            "e name value.  This attribute is required within the context of a WITSML server." +
            "")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidRef", DataType="refString")]
        public string uidRef {
            get {
                return this.uidRefField;
            }
            set {
                this.uidRefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class generalMeasureType : abstractMeasure {
        
        private string uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(24)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="uomString")]
        public string uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(volumeQualifiedMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(volumeFlowRateQualifiedMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(temperatureSlopeMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(measureOrQuantity))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(lostVolumeAndReason))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(generalQualifiedMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(generalMeasureType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(wellElevationCoord))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(measuredDepthCoord))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(volumePerVolumeMeasurePercent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(volumePerVolumeMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(volumeFlowRateMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(volumeMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(velocityMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(timeMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(thermodynamicTemperatureMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(pressureMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(planeAngleMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(massMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(massConcentrationMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(lengthPerLengthMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(lengthMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(electricCurrentMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(dynamicViscosityMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(dimensionlessMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(densityMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(attenuationMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(workMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(volumePerStandardVolumeMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(standardVolumePerVolumeMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(standardVolumePerStandardVolumeMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(standardVolumeMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(thermalConductivityMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(productivityIndexMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(molarVolumeMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(molarFractionMeasurePercent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(modulusOfCompressionMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(massFlowRateMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(massConcentrationMeasurePercent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(frequencyMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(compressibilityMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(amountOfSubstanceMeasure))]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public abstract partial class abstractMeasure {
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class volumeQualifiedMeasure : abstractMeasure {
        
        private ValueStatus statusField;
        
        private bool statusFieldSpecified;
        
        private VolumeUom uomField;
        
        /// <remarks/>
        /// <summary>An indicator of the quality of the value.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute("An indicator of the quality of the value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("status", DataType="ValueStatus")]
        public ValueStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="VolumeUom")]
        public VolumeUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ValueStatus {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bad calibration")]
        badcalibration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("range limit")]
        rangelimit,
        
        /// <remarks/>
        questionable,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("device failure")]
        devicefailure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sensor failure")]
        sensorfailure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("comm failure")]
        commfailure,
        
        /// <remarks/>
        timeout,
        
        /// <remarks/>
        frozen,
        
        /// <remarks/>
        substituted,
        
        /// <remarks/>
        bad,
        
        /// <remarks/>
        overflow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("calculation failure")]
        calculationfailure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("not available")]
        notavailable,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("access denied")]
        accessdenied,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum VolumeUom {
        
        /// <remarks/>
        m3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("acre.ft")]
        acreft,
        
        /// <remarks/>
        bbl,
        
        /// <remarks/>
        bcf,
        
        /// <remarks/>
        cm3,
        
        /// <remarks/>
        dm3,
        
        /// <remarks/>
        flozUK,
        
        /// <remarks/>
        flozUS,
        
        /// <remarks/>
        ft3,
        
        /// <remarks/>
        galUK,
        
        /// <remarks/>
        galUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ha.m")]
        ham,
        
        /// <remarks/>
        hL,
        
        /// <remarks/>
        in3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000ft3")]
        Item1000ft3,
        
        /// <remarks/>
        km3,
        
        /// <remarks/>
        L,
        
        /// <remarks/>
        Mbbl,
        
        /// <remarks/>
        Mcf,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("M(ft3)")]
        Mft3,
        
        /// <remarks/>
        mi3,
        
        /// <remarks/>
        mL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("M(m3)")]
        Mm3,
        
        /// <remarks/>
        mm3,
        
        /// <remarks/>
        MMbbl,
        
        /// <remarks/>
        ptUK,
        
        /// <remarks/>
        ptUS,
        
        /// <remarks/>
        qtUK,
        
        /// <remarks/>
        qtUS,
        
        /// <remarks/>
        tcf,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("um2.m")]
        um2m,
        
        /// <remarks/>
        yd3,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class volumeFlowRateQualifiedMeasure : abstractMeasure {
        
        private ValueStatus statusField;
        
        private bool statusFieldSpecified;
        
        private VolumeFlowRateUom uomField;
        
        /// <remarks/>
        /// <summary>An indicator of the quality of the value.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute("An indicator of the quality of the value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("status", DataType="ValueStatus")]
        public ValueStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="VolumeFlowRateUom")]
        public VolumeFlowRateUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum VolumeFlowRateUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/s")]
        m3s,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/d")]
        bbld,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/hr")]
        bblhr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/min")]
        bblmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm3/30min")]
        cm330min,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm3/h")]
        cm3h,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm3/min")]
        cm3min,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm3/s")]
        cm3s,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dm3/s")]
        dm3s,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/d")]
        ft3d,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/h")]
        ft3h,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/min")]
        ft3min,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/s")]
        ft3s,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUK/d")]
        galUKd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUK/hr")]
        galUKhr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUK/min")]
        galUKmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUS/d")]
        galUSd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUS/hr")]
        galUShr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUS/min")]
        galUSmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kbbl/d")]
        kbbld,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000ft3/d")]
        Item1000ft3d,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000m3/d")]
        Item1000m3d,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000m3/h")]
        Item1000m3h,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/h")]
        Lh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/min")]
        Lmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/s")]
        Ls,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/d")]
        m3d,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/h")]
        m3h,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/min")]
        m3min,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mbbl/d")]
        Mbbld,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("M(ft3)/d")]
        Mft3d,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("M(m3)/d")]
        Mm3d,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class temperatureSlopeMeasure : abstractMeasure {
        
        private string uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(24)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="uomString")]
        public string uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class measureOrQuantity : abstractMeasure {
        
        private string uomField;
        
        /// <remarks/>
        /// <summary>The unit of measure for the quantity. This value must conform to the values allowed by a measure class.  If the value is a measure then the uom must be specified.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(24)]
        [System.ComponentModel.DescriptionAttribute("The unit of measure for the quantity. This value must conform to the values allow" +
            "ed by a measure class.  If the value is a measure then the uom must be specified" +
            ".")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="uomString")]
        public string uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class lostVolumeAndReason : abstractMeasure {
        
        private VolumeUom uomField;
        
        private ReasonLost reasonLostField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="VolumeUom")]
        public VolumeUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines why the volume was lost.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Defines why the volume was lost.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reasonLost", DataType="ReasonLost")]
        public ReasonLost reasonLost {
            get {
                return this.reasonLostField;
            }
            set {
                this.reasonLostField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ReasonLost {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("topside equipment failure-maint")]
        topsideequipmentfailuremaint,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("extended maint turnaround")]
        extendedmaintturnaround,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("extended maint turnaround export")]
        extendedmaintturnaroundexport,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("preventive maint topside")]
        preventivemainttopside,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("planned maint turnaround")]
        plannedmaintturnaround,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("marked oil")]
        markedoil,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("marked gas")]
        markedgas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("modification project")]
        modificationproject,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("operation mistakes")]
        operationmistakes,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("process and operation problem")]
        processandoperationproblem,
        
        /// <remarks/>
        production,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("regulatory reference")]
        regulatoryreference,
        
        /// <remarks/>
        reservoir,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("testing and logging")]
        testingandlogging,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("unavailable tanker storage")]
        unavailabletankerstorage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well equipment failure-maint")]
        wellequipmentfailuremaint,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well planned operations")]
        wellplannedoperations,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well preventive maint")]
        wellpreventivemaint,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("weather problem")]
        weatherproblem,
        
        /// <remarks/>
        hse,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("strike/lock-out")]
        strikelockout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3rd party processing")]
        Item3rdpartyprocessing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("daily total loss of prod")]
        dailytotallossofprod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well problems")]
        wellproblems,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class generalQualifiedMeasure : abstractMeasure {
        
        private ValueStatus statusField;
        
        private bool statusFieldSpecified;
        
        private string componentField;
        
        private string uomField;
        
        /// <remarks/>
        /// <summary>An indicator of the quality of the value.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute("An indicator of the quality of the value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("status", DataType="ValueStatus")]
        public ValueStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The kind of the value component. For example, "X" in a tuple of X and Y.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The kind of the value component. For example, \"X\" in a tuple of X and Y.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("component", DataType="kindString")]
        public string component {
            get {
                return this.componentField;
            }
            set {
                this.componentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unit of measure for the value. This value must conform to the values allowed by the measure class.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(24)]
        [System.ComponentModel.DescriptionAttribute("The unit of measure for the value. This value must conform to the values allowed " +
            "by the measure class.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="uomString")]
        public string uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class wellElevationCoord : abstractMeasure {
        
        private WellVerticalCoordinateUom uomField;
        
        private string datumField;
        
        /// <remarks/>
        /// <summary>The unit of measure of the quantity value. If not given then the default unit of measure of the explicitly or implicitly given datum must be assumed.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The unit of measure of the quantity value. If not given then the default unit of " +
            "measure of the explicitly or implicitly given datum must be assumed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="WellVerticalCoordinateUom")]
        public WellVerticalCoordinateUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the reference datum for this coordinate  value as defined in WellDatum.  If not given then the default WellDatum must be assumed.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A pointer to the reference datum for this coordinate  value as defined in WellDat" +
            "um.  If not given then the default WellDatum must be assumed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("datum", DataType="refWellDatum")]
        public string datum {
            get {
                return this.datumField;
            }
            set {
                this.datumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum WellVerticalCoordinateUom {
        
        /// <remarks/>
        m,
        
        /// <remarks/>
        ft,
        
        /// <remarks/>
        ftUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ftBr(65)")]
        ftBr65,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class measuredDepthCoord : abstractMeasure {
        
        private MeasuredDepthUom uomField;
        
        private string datumField;
        
        /// <remarks/>
        /// <summary>The unit of measure of the quantity value.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The unit of measure of the quantity value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="MeasuredDepthUom")]
        public MeasuredDepthUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the reference datum for this coordinate  value as defined in WellDatum. This value is assumed to match the uid value in a WellDatum. If not given then the default WellDatum must be assumed.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A pointer to the reference datum for this coordinate  value as defined in WellDat" +
            "um. This value is assumed to match the uid value in a WellDatum. If not given th" +
            "en the default WellDatum must be assumed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("datum", DataType="refWellDatum")]
        public string datum {
            get {
                return this.datumField;
            }
            set {
                this.datumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum MeasuredDepthUom {
        
        /// <remarks/>
        m,
        
        /// <remarks/>
        ft,
        
        /// <remarks/>
        ftUS,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class volumePerVolumeMeasurePercent : abstractMeasure {
        
        private PercentUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="PercentUom")]
        public PercentUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum PercentUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("%")]
        Item,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class volumePerVolumeMeasure : abstractMeasure {
        
        private VolumePerVolumeUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="VolumePerVolumeUom")]
        public VolumePerVolumeUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum VolumePerVolumeUom {
        
        /// <remarks/>
        Euc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("%")]
        Item,
        
        /// <remarks/>
        permil,
        
        /// <remarks/>
        ppdk,
        
        /// <remarks/>
        ppk,
        
        /// <remarks/>
        ppm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/acre.ft")]
        bblacreft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/bbl")]
        bblbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/ft3")]
        bblft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/100bbl")]
        bbl100bbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/k(ft3)")]
        bblkft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/M(ft3)")]
        bblMft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm3/cm3")]
        cm3cm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm3/m3")]
        cm3m3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dm3/m3")]
        dm3m3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/bbl")]
        ft3bbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/ft3")]
        ft3ft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUS/kgalUS")]
        galUSkgalUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUK/kgalUK")]
        galUKkgalUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUK/ft3")]
        galUKft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUK/Mbbl")]
        galUKMbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUS/bbl")]
        galUSbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUS/10bbl")]
        galUS10bbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUS/ft3")]
        galUSft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUS/Mbbl")]
        galUSMbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000ft3/bbl")]
        Item1000ft3bbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ksm3/sm3")]
        ksm3sm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/10bbl")]
        L10bbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/m3")]
        Lm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/ha.m")]
        m3ham,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/m3")]
        m3m3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("M(ft3)/acre.ft")]
        Mft3acreft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mL/galUK")]
        mLgalUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mL/galUS")]
        mLgalUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mL/mL")]
        mLmL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MMbbl/acre.ft")]
        MMbblacreft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MMscf60/stb60")]
        MMscf60stb60,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mscf60/stb60")]
        Mscf60stb60,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ptUK/Mbbl")]
        ptUKMbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ptUS/10bbl")]
        ptUS10bbl,
        
        /// <remarks/>
        pu,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("scm15/stb60")]
        scm15stb60,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sm3/ksm3")]
        sm3ksm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sm3/sm3")]
        sm3sm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stb60/MMscf60")]
        stb60MMscf60,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stb60/MMscm15")]
        stb60MMscm15,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stb60/Mscf60")]
        stb60Mscf60,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stb60/Mscm15")]
        stb60Mscm15,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stb60/scm15")]
        stb60scm15,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class volumeFlowRateMeasure : abstractMeasure {
        
        private VolumeFlowRateUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="VolumeFlowRateUom")]
        public VolumeFlowRateUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class volumeMeasure : abstractMeasure {
        
        private VolumeUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="VolumeUom")]
        public VolumeUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class velocityMeasure : abstractMeasure {
        
        private VelocityUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="VelocityUom")]
        public VelocityUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum VelocityUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/s")]
        ms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm/a")]
        cma,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm/s")]
        cms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dm/s")]
        dms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/d")]
        ftd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/h")]
        fth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/min")]
        ftmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/ms")]
        ftms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/s")]
        fts,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/us")]
        ftus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in/a")]
        ina,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in/min")]
        inmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in/s")]
        ins,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kft/h")]
        kfth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kft/s")]
        kfts,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("km/h")]
        kmh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("km/s")]
        kms,
        
        /// <remarks/>
        knot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/d")]
        md,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/h")]
        mh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/min")]
        mmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/ms")]
        mms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mi/h")]
        mih,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mil/yr")]
        milyr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mm/a")]
        mma,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mm/s")]
        mms1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nm/s")]
        nms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("um/s")]
        ums,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class timeMeasure : abstractMeasure {
        
        private TimeUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="TimeUom")]
        public TimeUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum TimeUom {
        
        /// <remarks/>
        s,
        
        /// <remarks/>
        a,
        
        /// <remarks/>
        cs,
        
        /// <remarks/>
        d,
        
        /// <remarks/>
        Ga,
        
        /// <remarks/>
        h,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("100s")]
        Item100s,
        
        /// <remarks/>
        Ma,
        
        /// <remarks/>
        min,
        
        /// <remarks/>
        ms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ms/2")]
        ms2,
        
        /// <remarks/>
        ns,
        
        /// <remarks/>
        ps,
        
        /// <remarks/>
        us,
        
        /// <remarks/>
        wk,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("100ka")]
        Item100ka,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class thermodynamicTemperatureMeasure : abstractMeasure {
        
        private ThermodynamicTemperatureUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="ThermodynamicTemperatureUom")]
        public ThermodynamicTemperatureUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ThermodynamicTemperatureUom {
        
        /// <remarks/>
        K,
        
        /// <remarks/>
        degC,
        
        /// <remarks/>
        degF,
        
        /// <remarks/>
        degR,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class pressureMeasure : abstractMeasure {
        
        private PressureUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="PressureUom")]
        public PressureUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum PressureUom {
        
        /// <remarks/>
        Pa,
        
        /// <remarks/>
        at,
        
        /// <remarks/>
        atm,
        
        /// <remarks/>
        bar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cmH2O(4degC)")]
        cmH2O4degC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dyne/cm2")]
        dynecm2,
        
        /// <remarks/>
        GPa,
        
        /// <remarks/>
        hbar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("inH2O(39.2F)")]
        inH2O392F,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("inH2O(60F)")]
        inH2O60F,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("inHg(32F)")]
        inHg32F,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("inHg(60F)")]
        inHg60F,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kgf/cm2")]
        kgfcm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kgf/mm2")]
        kgfmm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kN/m2")]
        kNm2,
        
        /// <remarks/>
        kPa,
        
        /// <remarks/>
        kpsi,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf/ft2")]
        lbfft2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf/100ft2")]
        lbf100ft2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf/in2")]
        lbfin2,
        
        /// <remarks/>
        mbar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mmHg(0C)")]
        mmHg0C,
        
        /// <remarks/>
        mPa,
        
        /// <remarks/>
        MPa,
        
        /// <remarks/>
        Mpsi,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("N/m2")]
        Nm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("N/mm2")]
        Nmm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Pa(g)")]
        Pag,
        
        /// <remarks/>
        pPa,
        
        /// <remarks/>
        psi,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonfUS/ft2")]
        tonfUSft2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonfUS/in2")]
        tonfUSin2,
        
        /// <remarks/>
        torr,
        
        /// <remarks/>
        ubar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("umHg(0C)")]
        umHg0C,
        
        /// <remarks/>
        uPa,
        
        /// <remarks/>
        upsi,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class planeAngleMeasure : abstractMeasure {
        
        private PlaneAngleUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="PlaneAngleUom")]
        public PlaneAngleUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum PlaneAngleUom {
        
        /// <remarks/>
        rad,
        
        /// <remarks/>
        c,
        
        /// <remarks/>
        ccgr,
        
        /// <remarks/>
        cgr,
        
        /// <remarks/>
        dega,
        
        /// <remarks/>
        gon,
        
        /// <remarks/>
        gr,
        
        /// <remarks/>
        Grad,
        
        /// <remarks/>
        krad,
        
        /// <remarks/>
        mila,
        
        /// <remarks/>
        mina,
        
        /// <remarks/>
        mrad,
        
        /// <remarks/>
        Mrad,
        
        /// <remarks/>
        mseca,
        
        /// <remarks/>
        seca,
        
        /// <remarks/>
        urad,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class massMeasure : abstractMeasure {
        
        private MassUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="MassUom")]
        public MassUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum MassUom {
        
        /// <remarks/>
        kg,
        
        /// <remarks/>
        ag,
        
        /// <remarks/>
        ct,
        
        /// <remarks/>
        cwtUK,
        
        /// <remarks/>
        cwtUS,
        
        /// <remarks/>
        g,
        
        /// <remarks/>
        grain,
        
        /// <remarks/>
        klbm,
        
        /// <remarks/>
        lbm,
        
        /// <remarks/>
        Mg,
        
        /// <remarks/>
        mg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oz(av)")]
        ozav,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oz(troy)")]
        oztroy,
        
        /// <remarks/>
        ozm,
        
        /// <remarks/>
        sack94,
        
        /// <remarks/>
        t,
        
        /// <remarks/>
        tonUK,
        
        /// <remarks/>
        tonUS,
        
        /// <remarks/>
        ug,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class massConcentrationMeasure : abstractMeasure {
        
        private MassConcentrationUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="MassConcentrationUom")]
        public MassConcentrationUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum MassConcentrationUom {
        
        /// <remarks/>
        Euc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("%")]
        Item,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("g/kg")]
        gkg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg/kg")]
        kgkg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg/sack94")]
        kgsack94,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mg/kg")]
        mgkg,
        
        /// <remarks/>
        permil,
        
        /// <remarks/>
        ppdk,
        
        /// <remarks/>
        ppk,
        
        /// <remarks/>
        ppm,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class lengthPerLengthMeasure : abstractMeasure {
        
        private LengthPerLengthUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="LengthPerLengthUom")]
        public LengthPerLengthUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum LengthPerLengthUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("%")]
        Item,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/100ft")]
        ft100ft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/ft")]
        ftft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/in")]
        ftin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/m")]
        ftm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/mi")]
        ftmi,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("km/cm")]
        kmcm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/30m")]
        m30m,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/cm")]
        mcm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/km")]
        mkm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/m")]
        mm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mi/in")]
        miin,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class lengthMeasure : abstractMeasure {
        
        private LengthUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="LengthUom")]
        public LengthUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum LengthUom {
        
        /// <remarks/>
        m,
        
        /// <remarks/>
        angstrom,
        
        /// <remarks/>
        chBnA,
        
        /// <remarks/>
        chBnB,
        
        /// <remarks/>
        chCla,
        
        /// <remarks/>
        chSe,
        
        /// <remarks/>
        chUS,
        
        /// <remarks/>
        cm,
        
        /// <remarks/>
        dm,
        
        /// <remarks/>
        fathom,
        
        /// <remarks/>
        fm,
        
        /// <remarks/>
        ft,
        
        /// <remarks/>
        ftBnA,
        
        /// <remarks/>
        ftBnB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ftBr(65)")]
        ftBr65,
        
        /// <remarks/>
        ftCla,
        
        /// <remarks/>
        ftGC,
        
        /// <remarks/>
        ftInd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ftInd(37)")]
        ftInd37,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ftInd(62)")]
        ftInd62,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ftInd(75)")]
        ftInd75,
        
        /// <remarks/>
        ftMA,
        
        /// <remarks/>
        ftSe,
        
        /// <remarks/>
        ftUS,
        
        /// <remarks/>
        @in,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in/10")]
        in10,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in/16")]
        in16,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in/32")]
        in32,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in/64")]
        in64,
        
        /// <remarks/>
        inUS,
        
        /// <remarks/>
        km,
        
        /// <remarks/>
        lkBnA,
        
        /// <remarks/>
        lkBnB,
        
        /// <remarks/>
        lkCla,
        
        /// <remarks/>
        lkSe,
        
        /// <remarks/>
        lkUS,
        
        /// <remarks/>
        mGer,
        
        /// <remarks/>
        mi,
        
        /// <remarks/>
        mil,
        
        /// <remarks/>
        miUS,
        
        /// <remarks/>
        mm,
        
        /// <remarks/>
        Mm,
        
        /// <remarks/>
        nautmi,
        
        /// <remarks/>
        nm,
        
        /// <remarks/>
        pm,
        
        /// <remarks/>
        um,
        
        /// <remarks/>
        yd,
        
        /// <remarks/>
        ydBnA,
        
        /// <remarks/>
        ydBnB,
        
        /// <remarks/>
        ydCla,
        
        /// <remarks/>
        ydIm,
        
        /// <remarks/>
        ydInd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ydInd(37)")]
        ydInd37,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ydInd(62)")]
        ydInd62,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ydInd(75)")]
        ydInd75,
        
        /// <remarks/>
        ydSe,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class electricCurrentMeasure : abstractMeasure {
        
        private ElectricCurrentUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="ElectricCurrentUom")]
        public ElectricCurrentUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ElectricCurrentUom {
        
        /// <remarks/>
        A,
        
        /// <remarks/>
        MA,
        
        /// <remarks/>
        kA,
        
        /// <remarks/>
        mA,
        
        /// <remarks/>
        nA,
        
        /// <remarks/>
        pA,
        
        /// <remarks/>
        uA,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class dynamicViscosityMeasure : abstractMeasure {
        
        private DynamicViscosityUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="DynamicViscosityUom")]
        public DynamicViscosityUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum DynamicViscosityUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Pa.s")]
        Pas,
        
        /// <remarks/>
        cP,
        
        /// <remarks/>
        P,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("psi.s")]
        psis,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dyne.s/cm2")]
        dynescm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kgf.s/m2")]
        kgfsm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf.s/ft2")]
        lbfsft2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf.s/in2")]
        lbfsin2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mPa.s")]
        mPas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("N.s/m2")]
        Nsm2,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class dimensionlessMeasure : abstractMeasure {
        
        private DimensionlessUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="DimensionlessUom")]
        public DimensionlessUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum DimensionlessUom {
        
        /// <remarks/>
        Euc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("%")]
        Item,
        
        /// <remarks/>
        cEuc,
        
        /// <remarks/>
        mEuc,
        
        /// <remarks/>
        nEuc,
        
        /// <remarks/>
        uEuc,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class densityMeasure : abstractMeasure {
        
        private DensityUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="DensityUom")]
        public DensityUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum DensityUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg/m3")]
        kgm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("10Mg/m3")]
        Item10Mgm3,
        
        /// <remarks/>
        dAPI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("g/cm3")]
        gcm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("g/dm3")]
        gdm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("g/galUK")]
        ggalUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("g/galUS")]
        ggalUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("g/L")]
        gL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("g/m3")]
        gm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("grain/ft3")]
        grainft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("grain/galUS")]
        graingalUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("grain/100ft3")]
        grain100ft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg/dm3")]
        kgdm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg/L")]
        kgL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mg/m3")]
        Mgm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/10bbl")]
        lbm10bbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/bbl")]
        lbmbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/ft3")]
        lbmft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/galUK")]
        lbmgalUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/1000galUK")]
        lbm1000galUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/galUS")]
        lbmgalUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/1000galUS")]
        lbm1000galUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/in3")]
        lbmin3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/Mbbl")]
        lbmMbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mg/dm3")]
        mgdm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mg/galUS")]
        mggalUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mg/L")]
        mgL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mg/m3")]
        mgm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ug/cm3")]
        ugcm3,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class attenuationMeasure : abstractMeasure {
        
        private AttenuationUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="AttenuationUom")]
        public AttenuationUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum AttenuationUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dB/km")]
        dBkm,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class workMeasure : abstractMeasure {
        
        private WorkUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="WorkUom")]
        public WorkUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum WorkUom {
        
        /// <remarks/>
        J,
        
        /// <remarks/>
        aJ,
        
        /// <remarks/>
        Btu,
        
        /// <remarks/>
        cal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ch.h")]
        chh,
        
        /// <remarks/>
        Chu,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CV.h")]
        CVh,
        
        /// <remarks/>
        EJ,
        
        /// <remarks/>
        erg,
        
        /// <remarks/>
        eV,
        
        /// <remarks/>
        GeV,
        
        /// <remarks/>
        GJ,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("GW.h")]
        GWh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hp.hr")]
        hphr,
        
        /// <remarks/>
        kcal,
        
        /// <remarks/>
        keV,
        
        /// <remarks/>
        kJ,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kW.h")]
        kWh,
        
        /// <remarks/>
        MeV,
        
        /// <remarks/>
        mJ,
        
        /// <remarks/>
        MJ,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MW.h")]
        MWh,
        
        /// <remarks/>
        nJ,
        
        /// <remarks/>
        quad,
        
        /// <remarks/>
        TeV,
        
        /// <remarks/>
        therm,
        
        /// <remarks/>
        TJ,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("TW.h")]
        TWh,
        
        /// <remarks/>
        uJ,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class volumePerStandardVolumeMeasure : abstractMeasure {
        
        private VolumePerVolumeUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="VolumePerVolumeUom")]
        public VolumePerVolumeUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class standardVolumePerVolumeMeasure : abstractMeasure {
        
        private VolumePerVolumeUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="VolumePerVolumeUom")]
        public VolumePerVolumeUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class standardVolumePerStandardVolumeMeasure : abstractMeasure {
        
        private VolumePerVolumeUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="VolumePerVolumeUom")]
        public VolumePerVolumeUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class standardVolumeMeasure : abstractMeasure {
        
        private VolumeUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="VolumeUom")]
        public VolumeUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class thermalConductivityMeasure : abstractMeasure {
        
        private ThermalConductivityUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="ThermalConductivityUom")]
        public ThermalConductivityUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ThermalConductivityUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("W/m.K")]
        WmK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Btu/hr.ft.degF")]
        BtuhrftdegF,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cal/h.cm.degC")]
        calhcmdegC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cal/s.cm.degC")]
        calscmdegC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kcal/h.m.degC")]
        kcalhmdegC,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class productivityIndexMeasure : abstractMeasure {
        
        private ProductivityIndexUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="ProductivityIndexUom")]
        public ProductivityIndexUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ProductivityIndexUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000ft3/psi.d")]
        Item1000ft3psid,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/bar.min")]
        Lbarmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/kPa.d")]
        bblkPad,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/psi.d")]
        bblpsid,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/Pa.s")]
        m3Pas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/Pa/s")]
        m3Pas1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/bar.d")]
        m3bard,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/bar.h")]
        m3barh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/bar.min")]
        m3barmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/kPa.d")]
        m3kPad,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/kPa.h")]
        m3kPah,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/psi.d")]
        m3psid,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class molarVolumeMeasure : abstractMeasure {
        
        private MolarVolumeUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="MolarVolumeUom")]
        public MolarVolumeUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum MolarVolumeUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/mol")]
        m3mol,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dm3/mol(kg)")]
        dm3molkg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/mol(lbm)")]
        ft3mollbm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/mol(g)")]
        Lmolg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/mol(kg)")]
        Lmolkg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/mol(kg)")]
        m3molkg,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class molarFractionMeasurePercent : abstractMeasure {
        
        private PercentUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="PercentUom")]
        public PercentUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class modulusOfCompressionMeasure : abstractMeasure {
        
        private ModulusOfCompressionUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="ModulusOfCompressionUom")]
        public ModulusOfCompressionUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ModulusOfCompressionUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("J/m3")]
        Jm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Btu/bbl")]
        Btubbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Btu/ft3")]
        Btuft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Btu/galUK")]
        BtugalUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Btu/galUS")]
        BtugalUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cal/cm3")]
        calcm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cal/mL")]
        calmL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cal/mm3")]
        calmm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("erg/cm3")]
        ergcm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("erg/m3")]
        ergm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft.lbf/bbl")]
        ftlbfbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft.lbf/galUS")]
        ftlbfgalUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hp.hr/bbl")]
        hphrbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("J/dm3")]
        Jdm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kcal/cm3")]
        kcalcm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kcal/m3")]
        kcalm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kJ/dm3")]
        kJdm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kJ/m3")]
        kJm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kW.h/dm3")]
        kWhdm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kW.h/m3")]
        kWhm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf.ft/bbl")]
        lbfftbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MJ/m3")]
        MJm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MW.h/m3")]
        MWhm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("therm/ft3")]
        thermft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("therm/galUK")]
        thermgalUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonfUS.mi/bbl")]
        tonfUSmibbl,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class massFlowRateMeasure : abstractMeasure {
        
        private MassFlowRateUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="MassFlowRateUom")]
        public MassFlowRateUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum MassFlowRateUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mg/a")]
        Mga,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mg/d")]
        Mgd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mg/h")]
        Mgh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mlbm/yr")]
        Mlbmyr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("g/s")]
        gs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg/d")]
        kgd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg/h")]
        kgh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg/min")]
        kgmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg/s")]
        kgs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/d")]
        lbmd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/h")]
        lbmh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/min")]
        lbmmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/s")]
        lbms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("t/a")]
        ta,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("t/d")]
        td,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("t/h")]
        th,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("t/min")]
        tmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonUK/a")]
        tonUKa,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonUK/d")]
        tonUKd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonUK/h")]
        tonUKh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonUK/min")]
        tonUKmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonUS/a")]
        tonUSa,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonUS/d")]
        tonUSd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonUS/h")]
        tonUSh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonUS/min")]
        tonUSmin,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class massConcentrationMeasurePercent : abstractMeasure {
        
        private PercentUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="PercentUom")]
        public PercentUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class frequencyMeasure : abstractMeasure {
        
        private FrequencyUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="FrequencyUom")]
        public FrequencyUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum FrequencyUom {
        
        /// <remarks/>
        Hz,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("c/s")]
        cs,
        
        /// <remarks/>
        GHz,
        
        /// <remarks/>
        kHz,
        
        /// <remarks/>
        mHz,
        
        /// <remarks/>
        MHz,
        
        /// <remarks/>
        uHz,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/s")]
        Item1s,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/a")]
        Item1a,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/d")]
        Item1d,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/h")]
        Item1h,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/min")]
        Item1min,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/wk")]
        Item1wk,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kEuc/s")]
        kEucs,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class compressibilityMeasure : abstractMeasure {
        
        private CompressibilityUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="CompressibilityUom")]
        public CompressibilityUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum CompressibilityUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/Pa")]
        Item1Pa,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/bar")]
        Item1bar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/kPa")]
        Item1kPa,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/pPa")]
        Item1pPa,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/psi")]
        Item1psi,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/upsi")]
        Item1upsi,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class amountOfSubstanceMeasure : abstractMeasure {
        
        private AmountOfSubstanceUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="AmountOfSubstanceUom")]
        public AmountOfSubstanceUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum AmountOfSubstanceUom {
        
        /// <remarks/>
        kmol,
        
        /// <remarks/>
        mmol,
        
        /// <remarks/>
        mol,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kmol")]
        kmol1,
        
        /// <remarks/>
        lbmole,
        
        /// <remarks/>
        umol,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wftTestResult {
        
        private WftTestResultKind kindField;
        
        private string methodField;
        
        private measuredDepthCoord mdTopField;
        
        private measuredDepthCoord mdBottomField;
        
        private cs_wftTestData[] testDataField;
        
        private cs_wftInOutParameter[] inputParameterField;
        
        private cs_wftInOutParameter[] outputParameterField;
        
        private cs_wftResultRef[] inputResultRefField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The kind of result represents a combination of test kind and  analysis method applied.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The kind of result represents a combination of test kind and  analysis method app" +
            "lied.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("kind", DataType="WftTestResultKind")]
        public WftTestResultKind kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of a proprietary method which generally  represents a specialization of a result kind.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The name of a proprietary method which generally  represents a specialization of " +
            "a result kind.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("method", DataType="kindString")]
        public string method {
            get {
                return this.methodField;
            }
            set {
                this.methodField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The top of the interval to which this result applies.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The top of the interval to which this result applies.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdTop", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdTop {
            get {
                return this.mdTopField;
            }
            set {
                this.mdTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The bottom of the interval to which this result applies.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The bottom of the interval to which this result applies.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdBottom", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdBottom {
            get {
                return this.mdBottomField;
            }
            set {
                this.mdBottomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A reference to the formation tester data used to derive this result.</summary>
        [System.Xml.Serialization.XmlElementAttribute("testData")]
        [System.ComponentModel.DescriptionAttribute("A reference to the formation tester data used to derive this result.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testData", DataType="cs_wftTestData")]
        public cs_wftTestData[] testData {
            get {
                return this.testDataField;
            }
            set {
                this.testDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An input parameter to the analysis method.</summary>
        [System.Xml.Serialization.XmlElementAttribute("inputParameter")]
        [System.ComponentModel.DescriptionAttribute("An input parameter to the analysis method.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("inputParameter", DataType="cs_wftInOutParameter")]
        public cs_wftInOutParameter[] inputParameter {
            get {
                return this.inputParameterField;
            }
            set {
                this.inputParameterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An output (result) parameter from the analysis of the test. The aggregate of parameters might represent something like the simulated response  of the test, to compare with actual.</summary>
        [System.Xml.Serialization.XmlElementAttribute("outputParameter")]
        [System.ComponentModel.DescriptionAttribute("An output (result) parameter from the analysis of the test. The aggregate of para" +
            "meters might represent something like the simulated response  of the test, to co" +
            "mpare with actual.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("outputParameter", DataType="cs_wftInOutParameter")]
        public cs_wftInOutParameter[] outputParameter {
            get {
                return this.outputParameterField;
            }
            set {
                this.outputParameterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A reference to an outputParameter of another result which was used as an input to this result. For a test result, the other result will be in the same test (i.e., ../result). For a station result, the other result will be in the same station (i.e., ../result) or  will be a test result in the same station (../test/result) or  will be an sampleAcquisition in the same station (i.e., ../sampleAcquisition/result). For a wftRun result, the other result will be in the same wftRun (i.e., ../result) or will be a result in a station (i.e., ../station/result) or will be a result in a station's test (i.e., ../station/test/result) or  will be a result in a station's sampleAcquisition (i.e., ../station/sampleAcquisition/result). The "../result" notation means: starting in the parent node, traverse down to the  appropriate child result using the provided pointers.</summary>
        [System.Xml.Serialization.XmlElementAttribute("inputResultRef")]
        [System.ComponentModel.DescriptionAttribute(@"A reference to an outputParameter of another result which was used as an input to this result. For a test result, the other result will be in the same test (i.e., ../result). For a station result, the other result will be in the same station (i.e., ../result) or  will be a test result in the same station (../test/result) or  will be an sampleAcquisition in the same station (i.e., ../sampleAcquisition/result). For a wftRun result, the other result will be in the same wftRun (i.e., ../result) or will be a result in a station (i.e., ../station/result) or will be a result in a station's test (i.e., ../station/test/result) or  will be a result in a station's sampleAcquisition (i.e., ../station/sampleAcquisition/result). The ""../result"" notation means: starting in the parent node, traverse down to the  appropriate child result using the provided pointers.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("inputResultRef", DataType="cs_wftResultRef")]
        public cs_wftResultRef[] inputResultRef {
            get {
                return this.inputResultRefField;
            }
            set {
                this.inputResultRefField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum WftTestResultKind {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("buildup result")]
        buildupresult,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drawdown result")]
        drawdownresult,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wftTestData {
        
        private WftTestDataRole roleField;
        
        private cs_wftCurveSection[] curveSectionField;
        
        private cs_wftInOutParameter[] parameterField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The role of the test data.  The role applies either to a curve or to a point parameter.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The role of the test data.  The role applies either to a curve or to a point para" +
            "meter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("role", DataType="WftTestDataRole")]
        public WftTestDataRole role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A reference to a specific interval of a specific curve in a specific log.</summary>
        [System.Xml.Serialization.XmlElementAttribute("curveSection")]
        [System.ComponentModel.DescriptionAttribute("A reference to a specific interval of a specific curve in a specific log.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("curveSection", DataType="cs_wftCurveSection")]
        public cs_wftCurveSection[] curveSection {
            get {
                return this.curveSectionField;
            }
            set {
                this.curveSectionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Test parameters used here are either control parameters used to govern  the test or are single value parameters measured by the test (and not by subsequent analysis).</summary>
        [System.Xml.Serialization.XmlElementAttribute("parameter")]
        [System.ComponentModel.DescriptionAttribute("Test parameters used here are either control parameters used to govern  the test " +
            "or are single value parameters measured by the test (and not by subsequent analy" +
            "sis).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("parameter", DataType="cs_wftInOutParameter")]
        public cs_wftInOutParameter[] parameter {
            get {
                return this.parameterField;
            }
            set {
                this.parameterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum WftTestDataRole {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure stream")]
        pressurestream,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("flow history")]
        flowhistory,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wftCurveSection {
        
        private refObjectString logRefField;
        
        private string mnemonicField;
        
        private Energistics.DataAccess.Timestamp dTimStartField;
        
        private bool dTimStartFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimEndField;
        
        private bool dTimEndFieldSpecified;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>A pointer to a specific log or wellLog that contains the curve.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A pointer to a specific log or wellLog that contains the curve.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("logRef", DataType="refObjectString")]
        public refObjectString logRef {
            get {
                return this.logRefField;
            }
            set {
                this.logRefField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The mnemonic of the curve in the referenced log or wellLog.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("The mnemonic of the curve in the referenced log or wellLog.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mnemonic", DataType="str32")]
        public string mnemonic {
            get {
                return this.mnemonicField;
            }
            set {
                this.mnemonicField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time of the start of the relevant interval. If not specified then the beginning of the curve is assumed.</summary>
        [System.ComponentModel.DescriptionAttribute("The date and time of the start of the relevant interval. If not specified then th" +
            "e beginning of the curve is assumed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimStartSpecified {
            get {
                return this.dTimStartFieldSpecified;
            }
            set {
                this.dTimStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time of the end of the relevant interval. If not specified then the end of the curve is assumed.</summary>
        [System.ComponentModel.DescriptionAttribute("The date and time of the end of the relevant interval. If not specified then the " +
            "end of the curve is assumed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimEndSpecified {
            get {
                return this.dTimEndFieldSpecified;
            }
            set {
                this.dTimEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class refObjectString {
        
        private string objectField;
        
        private string uidRefField;
        
        private string valueField;
        
        /// <remarks/>
        /// <summary>The name of the singular object being referenced.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the singular object being referenced.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("object", DataType="nameString")]
        public string @object {
            get {
                return this.objectField;
            }
            set {
                this.objectField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A reference to the unique identifier (uid attribute) in the object referenced by the name value.  This attribute is required within the context of a WITSML server.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A reference to the unique identifier (uid attribute) in the object referenced by " +
            "the name value.  This attribute is required within the context of a WITSML serve" +
            "r.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidRef", DataType="refString")]
        public string uidRef {
            get {
                return this.uidRefField;
            }
            set {
                this.uidRefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_extensionNameValue {
        
        private ExtensionName nameField;
        
        private extensionvalue valueField;
        
        private PrimitiveType dataTypeField;
        
        private Energistics.DataAccess.Timestamp dTimField;
        
        private bool dTimFieldSpecified;
        
        private measuredDepthCoord mdField;
        
        private short indexField;
        
        private bool indexFieldSpecified;
        
        private MeasureClass measureClassField;
        
        private bool measureClassFieldSpecified;
        
        private string descriptionField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The name of the extension. Each standard name should document the expected measure class. Each standard name should document the expected maximum size.  For numeric values the size should be in terms of xsd types such as int, long, short, byte, float or double. For strings, the maximum length should be defined in number of characters. Local extensions to the list of standard names are allowed but it is strongly recommended that the names and definitions be approved by the  WITSML SIG Technical Team before use.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"The name of the extension. Each standard name should document the expected measure class. Each standard name should document the expected maximum size.  For numeric values the size should be in terms of xsd types such as int, long, short, byte, float or double. For strings, the maximum length should be defined in number of characters. Local extensions to the list of standard names are allowed but it is strongly recommended that the names and definitions be approved by the  WITSML SIG Technical Team before use.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="ExtensionName")]
        public ExtensionName name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The value of the extension.  This may also include a uom attribute.  The content should conform to constraints defined by the data type.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The value of the extension.  This may also include a uom attribute.  The content " +
            "should conform to constraints defined by the data type.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("value", DataType="extensionvalue")]
        public extensionvalue value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The underlying XML type of the value.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The underlying XML type of the value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dataType", DataType="PrimitiveType")]
        public PrimitiveType dataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date-time associated with the value.</summary>
        [System.ComponentModel.DescriptionAttribute("The date-time associated with the value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimSpecified {
            get {
                return this.dTimFieldSpecified;
            }
            set {
                this.dTimFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth associated with the value.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth associated with the value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("md", DataType="measuredDepthCoord")]
        public measuredDepthCoord md {
            get {
                return this.mdField;
            }
            set {
                this.mdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Indexes things with the same name.  That is, 1 indicates the first one, 2 incidates the second one, etc.</summary>
        [System.ComponentModel.DescriptionAttribute("Indexes things with the same name.  That is, 1 indicates the first one, 2 incidat" +
            "es the second one, etc.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("index", DataType="positiveCount")]
        public short index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool indexSpecified {
            get {
                return this.indexFieldSpecified;
            }
            set {
                this.indexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The kind of the measure. For example, "length". This should be specified if the value requires a unit of measure.</summary>
        [System.ComponentModel.DescriptionAttribute("The kind of the measure. For example, \"length\". This should be specified if the v" +
            "alue requires a unit of measure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("measureClass", DataType="MeasureClass")]
        public MeasureClass measureClass {
            get {
                return this.measureClassField;
            }
            set {
                this.measureClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool measureClassSpecified {
            get {
                return this.measureClassFieldSpecified;
            }
            set {
                this.measureClassFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A textual description of the extension.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("A textual description of the extension.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="descriptionString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ExtensionName {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dummy-example-string")]
        dummyexamplestring,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dummy-example-measure")]
        dummyexamplemeasure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dummy-example-dateTime")]
        dummyexampledateTime,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class extensionvalue {
        
        private string uomField;
        
        private string valueField;
        
        /// <remarks/>
        /// <summary>The unit of measure for the value. This value must conform to the values allowed by a measure class.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(24)]
        [System.ComponentModel.DescriptionAttribute("The unit of measure for the value. This value must conform to the values allowed " +
            "by a measure class.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="uomString")]
        public string uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum PrimitiveType {
        
        /// <remarks/>
        @string,
        
        /// <remarks/>
        boolean,
        
        /// <remarks/>
        @float,
        
        /// <remarks/>
        @double,
        
        /// <remarks/>
        duration,
        
        /// <remarks/>
        dateTime,
        
        /// <remarks/>
        time,
        
        /// <remarks/>
        date,
        
        /// <remarks/>
        gYearMonth,
        
        /// <remarks/>
        gYear,
        
        /// <remarks/>
        gMonthDay,
        
        /// <remarks/>
        gDay,
        
        /// <remarks/>
        gMonth,
        
        /// <remarks/>
        base64Binary,
        
        /// <remarks/>
        anyURI,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum MeasureClass {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("absorbed dose")]
        absorbeddose,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("acceleration linear")]
        accelerationlinear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("activity (of radioactivity)")]
        activityofradioactivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("concentration of B")]
        concentrationofB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("amount of substance")]
        amountofsubstance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("angle per length")]
        angleperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("angle per time")]
        anglepertime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("angle per volume")]
        anglepervolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("angular acceleration")]
        angularacceleration,
        
        /// <remarks/>
        area,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("area per area")]
        areaperarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("area per volume")]
        areapervolume,
        
        /// <remarks/>
        attenuation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("attenuation per length")]
        attenuationperlength,
        
        /// <remarks/>
        capacitance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("charge density")]
        chargedensity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("chemical potential")]
        chemicalpotential,
        
        /// <remarks/>
        compressibility,
        
        /// <remarks/>
        conductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cross section absorption")]
        crosssectionabsorption,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("current density")]
        currentdensity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Darcy flow coefficient")]
        Darcyflowcoefficient,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("data transmission speed")]
        datatransmissionspeed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("delta temperature")]
        deltatemperature,
        
        /// <remarks/>
        density,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("diffusion coefficient")]
        diffusioncoefficient,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("digital storage")]
        digitalstorage,
        
        /// <remarks/>
        dimensionless,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dose equivalent")]
        doseequivalent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dose equivalent rate")]
        doseequivalentrate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dynamic viscosity")]
        dynamicviscosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electric charge")]
        electriccharge,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electric conductance")]
        electricconductance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electric current")]
        electriccurrent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electric dipole moment")]
        electricdipolemoment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electric field strength")]
        electricfieldstrength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electric polarization")]
        electricpolarization,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electric potential")]
        electricpotential,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electrical resistivity")]
        electricalresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electrochemical equivalent")]
        electrochemicalequivalent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electromagnetic moment")]
        electromagneticmoment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("energy length per area")]
        energylengthperarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("energy length per time area temperature")]
        energylengthpertimeareatemperature,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("energy per area")]
        energyperarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("energy per length")]
        energyperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("equivalent per mass")]
        equivalentpermass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("equivalent per volume")]
        equivalentpervolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("exposure (radioactivity)")]
        exposureradioactivity,
        
        /// <remarks/>
        force,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("force area")]
        forcearea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("force length per length")]
        forcelengthperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("force per force")]
        forceperforce,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("force per length")]
        forceperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("force per volume")]
        forcepervolume,
        
        /// <remarks/>
        frequency,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("frequency interval")]
        frequencyinterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gamma ray API unit")]
        gammarayAPIunit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("heat capacity")]
        heatcapacity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("heat flow rate")]
        heatflowrate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("heat transfer coefficient")]
        heattransfercoefficient,
        
        /// <remarks/>
        illuminance,
        
        /// <remarks/>
        irradiance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("isothermal compressibility")]
        isothermalcompressibility,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kinematic viscosity")]
        kinematicviscosity,
        
        /// <remarks/>
        length,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("length per length")]
        lengthperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("length per temperature")]
        lengthpertemperature,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("length per volume")]
        lengthpervolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("level of power intensity")]
        levelofpowerintensity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("light exposure")]
        lightexposure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mass per length")]
        massperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("linear thermal expansion")]
        linearthermalexpansion,
        
        /// <remarks/>
        luminance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("luminous efficacy")]
        luminousefficacy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("luminous flux")]
        luminousflux,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("luminous intensity")]
        luminousintensity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("magnetic dipole moment")]
        magneticdipolemoment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("magnetic field strength")]
        magneticfieldstrength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("magnetic flux")]
        magneticflux,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("magnetic induction")]
        magneticinduction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("magnetic permeability")]
        magneticpermeability,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("magnetic vector potential")]
        magneticvectorpotential,
        
        /// <remarks/>
        mass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mass attenuation coefficient")]
        massattenuationcoefficient,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mass flow rate")]
        massflowrate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mass length")]
        masslength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mass per energy")]
        massperenergy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mass per time per area")]
        masspertimeperarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mass per time per length")]
        masspertimeperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mass per volume per length")]
        masspervolumeperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mass concentration")]
        massconcentration,
        
        /// <remarks/>
        mobility,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("modulus of compression")]
        modulusofcompression,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("molar heat capacity")]
        molarheatcapacity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("molar volume")]
        molarvolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mole per area")]
        moleperarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mole per time")]
        molepertime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mole per time per area")]
        molepertimeperarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("moment of force")]
        momentofforce,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("moment of inertia")]
        momentofinertia,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("moment of section")]
        momentofsection,
        
        /// <remarks/>
        momentum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("neutron API unit")]
        neutronAPIunit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nonDarcy flow coefficient")]
        nonDarcyflowcoefficient,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("operations per time")]
        operationspertime,
        
        /// <remarks/>
        parachor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("per area")]
        perarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("per electric potential")]
        perelectricpotential,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("per force")]
        perforce,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("per length")]
        perlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("per mass")]
        permass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("per volume")]
        pervolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("permeability length")]
        permeabilitylength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("permeability rock")]
        permeabilityrock,
        
        /// <remarks/>
        permeance,
        
        /// <remarks/>
        permittivity,
        
        /// <remarks/>
        pH,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("plane angle")]
        planeangle,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("potential difference per power drop")]
        potentialdifferenceperpowerdrop,
        
        /// <remarks/>
        power,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("power per volume")]
        powerpervolume,
        
        /// <remarks/>
        pressure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure per time")]
        pressurepertime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure squared")]
        pressuresquared,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure squared per force time per area")]
        pressuresquaredperforcetimeperarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure time per volume")]
        pressuretimepervolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("productivity index")]
        productivityindex,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("quantity of light")]
        quantityoflight,
        
        /// <remarks/>
        radiance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("radiant intensity")]
        radiantintensity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("relative power")]
        relativepower,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("relative time")]
        relativetime,
        
        /// <remarks/>
        reluctance,
        
        /// <remarks/>
        resistance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("resistivity per length")]
        resistivityperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("second moment of area")]
        secondmomentofarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("solid angle")]
        solidangle,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("specific activity (of radioactivity)")]
        specificactivityofradioactivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("specific energy")]
        specificenergy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("specific heat capacity")]
        specificheatcapacity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("specific productivity index")]
        specificproductivityindex,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("specific volume")]
        specificvolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("standard volume")]
        standardvolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("standard volume per area")]
        standardvolumeperarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("standard volume per time")]
        standardvolumepertime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("standard volume per volume")]
        standardvolumepervolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("surface density")]
        surfacedensity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("temperature per length")]
        temperatureperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("temperature per time")]
        temperaturepertime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("thermal conductance")]
        thermalconductance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("thermal conductivity")]
        thermalconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("thermal diffusivity")]
        thermaldiffusivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("thermal insulance")]
        thermalinsulance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("thermal resistance")]
        thermalresistance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("thermodynamic temperature")]
        thermodynamictemperature,
        
        /// <remarks/>
        time,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("time per length")]
        timeperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("time per volume")]
        timepervolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("unit productivity index")]
        unitproductivityindex,
        
        /// <remarks/>
        velocity,
        
        /// <remarks/>
        volume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volume flow rate")]
        volumeflowrate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volume length per time")]
        volumelengthpertime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volume per area")]
        volumeperarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volume per length")]
        volumeperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volume per standard volume")]
        volumeperstandardvolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volume per time per area")]
        volumepertimeperarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volume per time per length")]
        volumepertimeperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volume per time per time")]
        volumepertimepertime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volume per time per volume")]
        volumepertimepervolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volume per volume")]
        volumepervolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volumetric heat transfer coefficient")]
        volumetricheattransfercoefficient,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volumetric thermal expansion")]
        volumetricthermalexpansion,
        
        /// <remarks/>
        work,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wftInOutParameter {
        
        private string nameField;
        
        private measureOrQuantity valueField;
        
        private MeasureClass measureClassField;
        
        private bool measureClassFieldSpecified;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The name of the parameter.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The value of the parameter.  If the value represents a measure, then the uom attribute  and the corresponding measureClass must be specified.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The value of the parameter.  If the value represents a measure, then the uom attr" +
            "ibute  and the corresponding measureClass must be specified.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("value", DataType="measureOrQuantity")]
        public measureOrQuantity value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The kind of the measure. For example, "length". This should be specified if the value requires a unit of measure.</summary>
        [System.ComponentModel.DescriptionAttribute("The kind of the measure. For example, \"length\". This should be specified if the v" +
            "alue requires a unit of measure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("measureClass", DataType="MeasureClass")]
        public MeasureClass measureClass {
            get {
                return this.measureClassField;
            }
            set {
                this.measureClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool measureClassSpecified {
            get {
                return this.measureClassFieldSpecified;
            }
            set {
                this.measureClassFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wftResultRef {
        
        private refNameString stationRefField;
        
        private refNameString testRefField;
        
        private refNameString sampleAcquisitionRefField;
        
        private refNameString resultRefField;
        
        private refNameString outputParameterRefField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>A pointer to the station node containing the specified nodes.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the station node containing the specified nodes.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stationRef", DataType="refNameString")]
        public refNameString stationRef {
            get {
                return this.stationRefField;
            }
            set {
                this.stationRefField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the test node containing the specified nodes.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the test node containing the specified nodes.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testRef", DataType="refNameString")]
        public refNameString testRef {
            get {
                return this.testRefField;
            }
            set {
                this.testRefField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the sampleAcquisition node containing the specified nodes.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the sampleAcquisition node containing the specified nodes.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sampleAcquisitionRef", DataType="refNameString")]
        public refNameString sampleAcquisitionRef {
            get {
                return this.sampleAcquisitionRefField;
            }
            set {
                this.sampleAcquisitionRefField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the desired result containing the outputParameter.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A pointer to the desired result containing the outputParameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("resultRef", DataType="refNameString")]
        public refNameString resultRef {
            get {
                return this.resultRefField;
            }
            set {
                this.resultRefField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the desired outputParameter.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A pointer to the desired outputParameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("outputParameterRef", DataType="refNameString")]
        public refNameString outputParameterRef {
            get {
                return this.outputParameterRefField;
            }
            set {
                this.outputParameterRefField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wftTest {
        
        private WftTestKind testKindField;
        
        private Energistics.DataAccess.Timestamp dTimStartField;
        
        private bool dTimStartFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimEndField;
        
        private bool dTimEndFieldSpecified;
        
        private cs_wftTestResult[] resultField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Describes whether the test is associated with a pressure buildup or a drawdown.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Describes whether the test is associated with a pressure buildup or a drawdown.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testKind", DataType="WftTestKind")]
        public WftTestKind testKind {
            get {
                return this.testKindField;
            }
            set {
                this.testKindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time when the data collection started for this test.</summary>
        [System.ComponentModel.DescriptionAttribute("The date and time when the data collection started for this test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimStartSpecified {
            get {
                return this.dTimStartFieldSpecified;
            }
            set {
                this.dTimStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time when the data collection ended for this test.</summary>
        [System.ComponentModel.DescriptionAttribute("The date and time when the data collection ended for this test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimEndSpecified {
            get {
                return this.dTimEndFieldSpecified;
            }
            set {
                this.dTimEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A result of formation tester analysis that applies to this test.</summary>
        [System.Xml.Serialization.XmlElementAttribute("result")]
        [System.ComponentModel.DescriptionAttribute("A result of formation tester analysis that applies to this test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("result", DataType="cs_wftTestResult")]
        public cs_wftTestResult[] result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum WftTestKind {
        
        /// <remarks/>
        drawdown,
        
        /// <remarks/>
        buildup,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wftEvent {
        
        private WftEventKind kindField;
        
        private Energistics.DataAccess.Timestamp dTimField;
        
        private timeMeasure durationField;
        
        private string commentField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The kind of event.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The kind of event.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("kind", DataType="WftEventKind")]
        public WftEventKind kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time of the start of the event.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Date and time of the start of the event.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The time duration of the event.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The time duration of the event.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("duration", DataType="timeMeasure")]
        public timeMeasure duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A comment about the event.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A comment about the event.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum WftEventKind {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tool set")]
        toolset,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tool retract")]
        toolretract,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wftStation {
        
        private WftStationKind stationKindField;
        
        private Energistics.DataAccess.Timestamp dTimStartField;
        
        private bool dTimStartFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimEndField;
        
        private bool dTimEndFieldSpecified;
        
        private WftFlowingIntervalKind flowingIntervalKindField;
        
        private measuredDepthCoord mdTopField;
        
        private measuredDepthCoord mdBottomField;
        
        private lengthMeasure diaProbeField;
        
        private string descriptionField;
        
        private refObjectString[] logRefField;
        
        private cs_wftEvent[] eventField;
        
        private cs_wftTest[] testField;
        
        private cs_wftSampleAcquisition[] sampleAcquisitionField;
        
        private cs_wftTestResult[] resultField;
        
        private refNameString stationRefField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The type of the station (such as, conventional, observation).</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The type of the station (such as, conventional, observation).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stationKind", DataType="WftStationKind")]
        public WftStationKind stationKind {
            get {
                return this.stationKindField;
            }
            set {
                this.stationKindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time when the data collection started for this station.</summary>
        [System.ComponentModel.DescriptionAttribute("The date and time when the data collection started for this station.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimStartSpecified {
            get {
                return this.dTimStartFieldSpecified;
            }
            set {
                this.dTimStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time when the data collection completed for this station.</summary>
        [System.ComponentModel.DescriptionAttribute("The date and time when the data collection completed for this station.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimEndSpecified {
            get {
                return this.dTimEndFieldSpecified;
            }
            set {
                this.dTimEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of flowing interval.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The type of flowing interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowingIntervalKind", DataType="WftFlowingIntervalKind")]
        public WftFlowingIntervalKind flowingIntervalKind {
            get {
                return this.flowingIntervalKindField;
            }
            set {
                this.flowingIntervalKindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Top depth of station if flowingIntervalKind="packed interval". Depth of probe if flowingIntervalKind="probe".</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Top depth of station if flowingIntervalKind=\"packed interval\". Depth of probe if " +
            "flowingIntervalKind=\"probe\".")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdTop", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdTop {
            get {
                return this.mdTopField;
            }
            set {
                this.mdTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bottom depth of station if flowingIntervalKind="packed interval".  Depth of probe if flowingIntervalKind="probe".</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Bottom depth of station if flowingIntervalKind=\"packed interval\".  Depth of probe" +
            " if flowingIntervalKind=\"probe\".")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdBottom", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdBottom {
            get {
                return this.mdBottomField;
            }
            set {
                this.mdBottomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The diameter of the probe used, only valid if flowingIntervalKind is equal to "probe".</summary>
        [System.ComponentModel.DescriptionAttribute("The diameter of the probe used, only valid if flowingIntervalKind is equal to \"pr" +
            "obe\".")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("diaProbe", DataType="lengthMeasure")]
        public lengthMeasure diaProbe {
            get {
                return this.diaProbeField;
            }
            set {
                this.diaProbeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A description of the station.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A description of the station.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="commentString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A reference a log containing WFT time-series data at this station (may be superset of all the test log references at this station).</summary>
        [System.Xml.Serialization.XmlElementAttribute("logRef")]
        [System.ComponentModel.DescriptionAttribute("A reference a log containing WFT time-series data at this station (may be superse" +
            "t of all the test log references at this station).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("logRef", DataType="refObjectString")]
        public refObjectString[] logRef {
            get {
                return this.logRefField;
            }
            set {
                this.logRefField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A formation tester event that occurs during this station.</summary>
        [System.Xml.Serialization.XmlElementAttribute("event")]
        [System.ComponentModel.DescriptionAttribute("A formation tester event that occurs during this station.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("event", DataType="cs_wftEvent")]
        public cs_wftEvent[] @event {
            get {
                return this.eventField;
            }
            set {
                this.eventField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A formation tester test period that is recorded as part of this station.</summary>
        [System.Xml.Serialization.XmlElementAttribute("test")]
        [System.ComponentModel.DescriptionAttribute("A formation tester test period that is recorded as part of this station.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("test", DataType="cs_wftTest")]
        public cs_wftTest[] test {
            get {
                return this.testField;
            }
            set {
                this.testField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A formation tester sample that is collected as part of this station.</summary>
        [System.Xml.Serialization.XmlElementAttribute("sampleAcquisition")]
        [System.ComponentModel.DescriptionAttribute("A formation tester sample that is collected as part of this station.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sampleAcquisition", DataType="cs_wftSampleAcquisition")]
        public cs_wftSampleAcquisition[] sampleAcquisition {
            get {
                return this.sampleAcquisitionField;
            }
            set {
                this.sampleAcquisitionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A result of formation tester analysis that applies to this station.</summary>
        [System.Xml.Serialization.XmlElementAttribute("result")]
        [System.ComponentModel.DescriptionAttribute("A result of formation tester analysis that applies to this station.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("result", DataType="cs_wftTestResult")]
        public cs_wftTestResult[] result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>References a station containing the flowing flowing Interval in  cases where this station is an observation station.</summary>
        [System.ComponentModel.DescriptionAttribute("References a station containing the flowing flowing Interval in  cases where this" +
            " station is an observation station.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stationRef", DataType="refNameString")]
        public refNameString stationRef {
            get {
                return this.stationRefField;
            }
            set {
                this.stationRefField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum WftStationKind {
        
        /// <remarks/>
        conventional,
        
        /// <remarks/>
        observation,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum WftFlowingIntervalKind {
        
        /// <remarks/>
        probe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("packed interval")]
        packedinterval,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("PRODML", "1.3.1.1")]
    public partial class obj_wftRun {
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string nameField;
        
        private bool objectGrowingField;
        
        private bool objectGrowingFieldSpecified;
        
        private refObjectString tieInLogRefField;
        
        private string serviceCompanyField;
        
        private Energistics.DataAccess.Timestamp dTimStartField;
        
        private bool dTimStartFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimEndField;
        
        private bool dTimEndFieldSpecified;
        
        private measuredDepthCoord minIndexField;
        
        private measuredDepthCoord maxIndexField;
        
        private string descriptionField;
        
        private cs_wftStation[] stationField;
        
        private cs_wftTestResult[] resultField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidWellboreField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the Wireline Formation Test (WFT).</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the Wireline Formation Test" +
            " (WFT).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore that contains the Wireline Formation Test (WFT).</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore that contains the Wireline Formation " +
            "Test (WFT).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWellbore", DataType="nameString")]
        public string nameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the Wireline Formation Test (WFT).</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the Wireline Formation Test (WFT).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The growing state of the object. This value is only relevant within the context of a server. This is an API server parameter releted to the "Special Handling of Change Information" within a server.  See the relevant API specification for the behavior related to this element.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The growing state of the object. This value is only relevant within the context of a server. This is an API server parameter releted to the ""Special Handling of Change Information"" within a server.  See the relevant API specification for the behavior related to this element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("objectGrowing", DataType="logicalBoolean")]
        public bool objectGrowing {
            get {
                return this.objectGrowingField;
            }
            set {
                this.objectGrowingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool objectGrowingSpecified {
            get {
                return this.objectGrowingFieldSpecified;
            }
            set {
                this.objectGrowingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>References a log containing WFT tie-in (e.g. gamma ray) log vs. depth data.</summary>
        [System.ComponentModel.DescriptionAttribute("References a log containing WFT tie-in (e.g. gamma ray) log vs. depth data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tieInLogRef", DataType="refObjectString")]
        public refObjectString tieInLogRef {
            get {
                return this.tieInLogRefField;
            }
            set {
                this.tieInLogRefField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of contractor who provided the service.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of contractor who provided the service.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("serviceCompany", DataType="nameString")]
        public string serviceCompany {
            get {
                return this.serviceCompanyField;
            }
            set {
                this.serviceCompanyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time when the data collection started.</summary>
        [System.ComponentModel.DescriptionAttribute("The date and time when the data collection started.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimStartSpecified {
            get {
                return this.dTimStartFieldSpecified;
            }
            set {
                this.dTimStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time when the data collection completed.</summary>
        [System.ComponentModel.DescriptionAttribute("The date and time when the data collection completed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimEndSpecified {
            get {
                return this.dTimEndFieldSpecified;
            }
            set {
                this.dTimEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The minimum station depth within this WFT. This is an API "structural-range" query parameter for growing objects.  See the relevant API specification for the query behavior related to this element.</summary>
        [System.ComponentModel.DescriptionAttribute("The minimum station depth within this WFT. This is an API \"structural-range\" quer" +
            "y parameter for growing objects.  See the relevant API specification for the que" +
            "ry behavior related to this element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("minIndex", DataType="measuredDepthCoord")]
        public measuredDepthCoord minIndex {
            get {
                return this.minIndexField;
            }
            set {
                this.minIndexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum station depth within this WFT. This is an API "structural-range" query parameter for growing objects.  See the relevant API specification for the query behavior related to this element.</summary>
        [System.ComponentModel.DescriptionAttribute("The maximum station depth within this WFT. This is an API \"structural-range\" quer" +
            "y parameter for growing objects.  See the relevant API specification for the que" +
            "ry behavior related to this element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("maxIndex", DataType="measuredDepthCoord")]
        public measuredDepthCoord maxIndex {
            get {
                return this.maxIndexField;
            }
            set {
                this.maxIndexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A description of the run.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A description of the run.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="commentString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An individual WFT station.</summary>
        [System.Xml.Serialization.XmlElementAttribute("station")]
        [System.ComponentModel.DescriptionAttribute("An individual WFT station.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("station", DataType="cs_wftStation")]
        public cs_wftStation[] station {
            get {
                return this.stationField;
            }
            set {
                this.stationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A single result derived from analysis of formation tester data.</summary>
        [System.Xml.Serialization.XmlElementAttribute("result")]
        [System.ComponentModel.DescriptionAttribute("A single result derived from analysis of formation tester data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("result", DataType="cs_wftTestResult")]
        public cs_wftTestResult[] result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidParentString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the wellbore. This uniquely represents  the wellbore referenced by the (possibly non-unique) nameWellbore.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the wellbore. This uniquely represents  the wellbore refere" +
            "nced by the (possibly non-unique) nameWellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWellbore", DataType="uidParentString")]
        public string uidWellbore {
            get {
                return this.uidWellboreField;
            }
            set {
                this.uidWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of an object. This should not be used for child nodes within an object. For an independent object, the value may be globally unique. For a dependent object, the value must be unique (for the same object type) within the context of the parent object. There should be no assumption as to the semantic content of this attribute. The purpose of this type is to facilitate modifying the optionality in derived schemas.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of an object. This should not be used for child nodes within an object. For an independent object, the value may be globally unique. For a dependent object, the value must be unique (for the same object type) within the context of the parent object. There should be no assumption as to the semantic content of this attribute. The purpose of this type is to facilitate modifying the optionality in derived schemas.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_commonData {
        
        private string sourceNameField;
        
        private Energistics.DataAccess.Timestamp dTimCreationField;
        
        private bool dTimCreationFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimLastChangeField;
        
        private bool dTimLastChangeFieldSpecified;
        
        private ItemState itemStateField;
        
        private bool itemStateFieldSpecified;
        
        private string serviceCategoryField;
        
        private string commentsField;
        
        private timestampedTimeZone[] acquisitionTimeZoneField;
        
        private cs_extensionAny extensionAnyField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        /// <remarks/>
        /// <summary>An identifier to indicate the data originator. This identifies the server that originally created  the object and thus most of the uids in the object (but not  necessarily the uids of the parents). This is typically a url.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("An identifier to indicate the data originator. This identifies the server that or" +
            "iginally created  the object and thus most of the uids in the object (but not  n" +
            "ecessarily the uids of the parents). This is typically a url.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sourceName", DataType="nameString")]
        public string sourceName {
            get {
                return this.sourceNameField;
            }
            set {
                this.sourceNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>When the data was created at the persistent data store.  In a query template, a specified value will be interpreted by the server as a request for dTimCreation values that are greater-than the specified value.</summary>
        [System.ComponentModel.DescriptionAttribute("When the data was created at the persistent data store.  In a query template, a s" +
            "pecified value will be interpreted by the server as a request for dTimCreation v" +
            "alues that are greater-than the specified value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimCreation", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimCreation {
            get {
                return this.dTimCreationField;
            }
            set {
                this.dTimCreationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimCreationSpecified {
            get {
                return this.dTimCreationFieldSpecified;
            }
            set {
                this.dTimCreationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Last change of any element of the data at the persistent data store. The change time is not updated for a growing object while it is growing. In a query template, a specified value will be interpreted by the server as a request for dTimLastChange values that are greater-than the specified value. The dTimLastChange value may be changed by a client (user).</summary>
        [System.ComponentModel.DescriptionAttribute(@"Last change of any element of the data at the persistent data store. The change time is not updated for a growing object while it is growing. In a query template, a specified value will be interpreted by the server as a request for dTimLastChange values that are greater-than the specified value. The dTimLastChange value may be changed by a client (user).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimLastChange", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimLastChange {
            get {
                return this.dTimLastChangeField;
            }
            set {
                this.dTimLastChangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimLastChangeSpecified {
            get {
                return this.dTimLastChangeFieldSpecified;
            }
            set {
                this.dTimLastChangeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The item state for the data object.</summary>
        [System.ComponentModel.DescriptionAttribute("The item state for the data object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("itemState", DataType="ItemState")]
        public ItemState itemState {
            get {
                return this.itemStateField;
            }
            set {
                this.itemStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool itemStateSpecified {
            get {
                return this.itemStateFieldSpecified;
            }
            set {
                this.itemStateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The category of the service related to the creation of the object.  For example, "mud log service", "cement service", "LWD service", "rig service", "drilling service". REALTIME STORE UNIQUE KEY: When accessed via the Store Interface, for each instance of realtime,  the combination of "uidWell", "uidWellbore", "idSub" and commonData's "serviceCategory"  must be unique. That is, the Store Interface will only retain one realtime   for a particular wellbore, subscription and service with the REALTIME STORE UNIQUE KEY  being the object selector.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute(@"The category of the service related to the creation of the object.  For example, ""mud log service"", ""cement service"", ""LWD service"", ""rig service"", ""drilling service"". REALTIME STORE UNIQUE KEY: When accessed via the Store Interface, for each instance of realtime,  the combination of ""uidWell"", ""uidWellbore"", ""idSub"" and commonData's ""serviceCategory""  must be unique. That is, the Store Interface will only retain one realtime   for a particular wellbore, subscription and service with the REALTIME STORE UNIQUE KEY  being the object selector.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("serviceCategory", DataType="kindString")]
        public string serviceCategory {
            get {
                return this.serviceCategoryField;
            }
            set {
                this.serviceCategoryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comments and remarks.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Comments and remarks.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comments", DataType="commentString")]
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The local time zone of the original acquisition date-time values.  It is the deviation in hours and minutes from UTC. The first occurrence should be the actual local time zone at the start of acquisition and may represent a seasonally adjusted value such as daylight savings. The dTim attribute must be populated in the second and subsequent occurrences  if the local time zone changes during acquisition. This knowledge is required because the original time zone in a dateTime value may be lost when software converts to a different time zone.</summary>
        [System.Xml.Serialization.XmlElementAttribute("acquisitionTimeZone")]
        [System.ComponentModel.DescriptionAttribute(@"The local time zone of the original acquisition date-time values.  It is the deviation in hours and minutes from UTC. The first occurrence should be the actual local time zone at the start of acquisition and may represent a seasonally adjusted value such as daylight savings. The dTim attribute must be populated in the second and subsequent occurrences  if the local time zone changes during acquisition. This knowledge is required because the original time zone in a dateTime value may be lost when software converts to a different time zone.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("acquisitionTimeZone", DataType="timestampedTimeZone")]
        public timestampedTimeZone[] acquisitionTimeZone {
            get {
                return this.acquisitionTimeZoneField;
            }
            set {
                this.acquisitionTimeZoneField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema using an xsd:any construct.</summary>
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema using an xsd:any construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionAny", DataType="cs_extensionAny")]
        public cs_extensionAny extensionAny {
            get {
                return this.extensionAnyField;
            }
            set {
                this.extensionAnyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ItemState {
        
        /// <remarks/>
        actual,
        
        /// <remarks/>
        model,
        
        /// <remarks/>
        plan,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class timestampedTimeZone {
        
        private System.DateTime dTimField;
        
        private bool dTimFieldSpecified;
        
        private string valueField;
        
        /// <remarks/>
        /// <summary>The date and time when this local time zone became active. This value must be defined on the second and subsequent occurrences.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute("The date and time when this local time zone became active. This value must be def" +
            "ined on the second and subsequent occurrences.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public System.DateTime dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimSpecified {
            get {
                return this.dTimFieldSpecified;
            }
            set {
                this.dTimFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[Z]|([\\-+](([01][0-9])|(2[0-3])):[0-5][0-9])")]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_extensionAny {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_customData {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wellTestInjectionTestResults {
        
        private cs_wellTestTestVolume oilVolumeField;
        
        private cs_wellTestFluidRate oilRateField;
        
        private cs_wellTestTestVolume gasVolumeField;
        
        private cs_wellTestFluidRate gasRateField;
        
        private cs_wellTestTestVolume waterVolumeField;
        
        private cs_wellTestFluidRate waterRateField;
        
        /// <remarks/>
        /// <summary>Oil volumes measured during the well test.</summary>
        [System.ComponentModel.DescriptionAttribute("Oil volumes measured during the well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilVolume", DataType="cs_wellTestTestVolume")]
        public cs_wellTestTestVolume oilVolume {
            get {
                return this.oilVolumeField;
            }
            set {
                this.oilVolumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Oil rates measured during the well test.</summary>
        [System.ComponentModel.DescriptionAttribute("Oil rates measured during the well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilRate", DataType="cs_wellTestFluidRate")]
        public cs_wellTestFluidRate oilRate {
            get {
                return this.oilRateField;
            }
            set {
                this.oilRateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gas volumes measured during the well test.</summary>
        [System.ComponentModel.DescriptionAttribute("Gas volumes measured during the well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasVolume", DataType="cs_wellTestTestVolume")]
        public cs_wellTestTestVolume gasVolume {
            get {
                return this.gasVolumeField;
            }
            set {
                this.gasVolumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gas rates measured during the well test.</summary>
        [System.ComponentModel.DescriptionAttribute("Gas rates measured during the well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasRate", DataType="cs_wellTestFluidRate")]
        public cs_wellTestFluidRate gasRate {
            get {
                return this.gasRateField;
            }
            set {
                this.gasRateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Water volumes measured during the well test.</summary>
        [System.ComponentModel.DescriptionAttribute("Water volumes measured during the well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("waterVolume", DataType="cs_wellTestTestVolume")]
        public cs_wellTestTestVolume waterVolume {
            get {
                return this.waterVolumeField;
            }
            set {
                this.waterVolumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Water rates measured during the well test.</summary>
        [System.ComponentModel.DescriptionAttribute("Water rates measured during the well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("waterRate", DataType="cs_wellTestFluidRate")]
        public cs_wellTestFluidRate waterRate {
            get {
                return this.waterRateField;
            }
            set {
                this.waterRateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wellTestTestVolume {
        
        private volumeMeasure volumeStdTempPresField;
        
        private volumeMeasure volumeField;
        
        private densityMeasure densityStdTempPresField;
        
        private densityMeasure densityField;
        
        private string gasClassField;
        
        /// <remarks/>
        /// <summary>The volume is the fluid, corrected to standard conditions of temperature and pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("The volume is the fluid, corrected to standard conditions of temperature and pres" +
            "sure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volumeStdTempPres", DataType="volumeMeasure")]
        public volumeMeasure volumeStdTempPres {
            get {
                return this.volumeStdTempPresField;
            }
            set {
                this.volumeStdTempPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The volume, uncorrected. This volume is generally reported at reservoir conditions.</summary>
        [System.ComponentModel.DescriptionAttribute("The volume, uncorrected. This volume is generally reported at reservoir condition" +
            "s.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volume", DataType="volumeMeasure")]
        public volumeMeasure volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The density of the fluid,  corrected to standard conditions of temperature and pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("The density of the fluid,  corrected to standard conditions of temperature and pr" +
            "essure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densityStdTempPres", DataType="densityMeasure")]
        public densityMeasure densityStdTempPres {
            get {
                return this.densityStdTempPresField;
            }
            set {
                this.densityStdTempPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The density of the fluid, uncorrected.</summary>
        [System.ComponentModel.DescriptionAttribute("The density of the fluid, uncorrected.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("density", DataType="densityMeasure")]
        public densityMeasure density {
            get {
                return this.densityField;
            }
            set {
                this.densityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Class for Natural Gas. This is not valid for oil or water.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("Class for Natural Gas. This is not valid for oil or water.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasClass", DataType="kindString")]
        public string gasClass {
            get {
                return this.gasClassField;
            }
            set {
                this.gasClassField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wellTestFluidRate {
        
        private volumeFlowRateMeasure fluidRateField;
        
        private volumeFlowRateMeasure fluidRateStdTempPresField;
        
        private string gasClassField;
        
        /// <remarks/>
        /// <summary>The fluid flow rate.</summary>
        [System.ComponentModel.DescriptionAttribute("The fluid flow rate.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fluidRate", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure fluidRate {
            get {
                return this.fluidRateField;
            }
            set {
                this.fluidRateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The fluid flow rate that has been corrected to standard temperature and pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("The fluid flow rate that has been corrected to standard temperature and pressure." +
            "")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fluidRateStdTempPres", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure fluidRateStdTempPres {
            get {
                return this.fluidRateStdTempPresField;
            }
            set {
                this.fluidRateStdTempPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Class for Natural Gas. This is not valid for oil or water.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("Class for Natural Gas. This is not valid for oil or water.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasClass", DataType="kindString")]
        public string gasClass {
            get {
                return this.gasClassField;
            }
            set {
                this.gasClassField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wellTestInjectionTestData {
        
        private timeMeasure testDurationField;
        
        private cs_wellTestInterval testIntervalField;
        
        private InjectionFluid injectedFluidField;
        
        private bool injectedFluidFieldSpecified;
        
        private cs_wellTestCumulative wellTestCumulativeField;
        
        private lengthMeasure chokeOrificeSizeField;
        
        private pressureMeasure minimumAnnularPressureField;
        
        private pressureMeasure maximumAnnularPressureField;
        
        private pressureMeasure wellheadFlowingPressureField;
        
        private pressureMeasure wellheadMaximumPressureField;
        
        private cs_wellTestInjectionTestResults injectionTestResultsField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The time length (with uom) of the well test.</summary>
        [System.ComponentModel.DescriptionAttribute("The time length (with uom) of the well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testDuration", DataType="timeMeasure")]
        public timeMeasure testDuration {
            get {
                return this.testDurationField;
            }
            set {
                this.testDurationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The interval tested. This element includes a top and base  depth, and the formation tested.</summary>
        [System.ComponentModel.DescriptionAttribute("The interval tested. This element includes a top and base  depth, and the formati" +
            "on tested.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testInterval", DataType="cs_wellTestInterval")]
        public cs_wellTestInterval testInterval {
            get {
                return this.testIntervalField;
            }
            set {
                this.testIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The fluid that is being injected.</summary>
        [System.ComponentModel.DescriptionAttribute("The fluid that is being injected.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("InjectedFluid", DataType="InjectionFluid")]
        public InjectionFluid InjectedFluid {
            get {
                return this.injectedFluidField;
            }
            set {
                this.injectedFluidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InjectedFluidSpecified {
            get {
                return this.injectedFluidFieldSpecified;
            }
            set {
                this.injectedFluidFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The cumulative volumes of fluids at the time of the  well test. The fluids are oil, gas, and water.</summary>
        [System.ComponentModel.DescriptionAttribute("The cumulative volumes of fluids at the time of the  well test. The fluids are oi" +
            "l, gas, and water.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellTestCumulative", DataType="cs_wellTestCumulative")]
        public cs_wellTestCumulative wellTestCumulative {
            get {
                return this.wellTestCumulativeField;
            }
            set {
                this.wellTestCumulativeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The size of the opening in the flow choke at the wellhead.</summary>
        [System.ComponentModel.DescriptionAttribute("The size of the opening in the flow choke at the wellhead.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("chokeOrificeSize", DataType="lengthMeasure")]
        public lengthMeasure chokeOrificeSize {
            get {
                return this.chokeOrificeSizeField;
            }
            set {
                this.chokeOrificeSizeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The minimum pressure measured at the annulus.</summary>
        [System.ComponentModel.DescriptionAttribute("The minimum pressure measured at the annulus.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("minimumAnnularPressure", DataType="pressureMeasure")]
        public pressureMeasure minimumAnnularPressure {
            get {
                return this.minimumAnnularPressureField;
            }
            set {
                this.minimumAnnularPressureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum pressure measured at the annulus.</summary>
        [System.ComponentModel.DescriptionAttribute("The maximum pressure measured at the annulus.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("maximumAnnularPressure", DataType="pressureMeasure")]
        public pressureMeasure maximumAnnularPressure {
            get {
                return this.maximumAnnularPressureField;
            }
            set {
                this.maximumAnnularPressureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The flowing pressure measured at the wellhead during the test.</summary>
        [System.ComponentModel.DescriptionAttribute("The flowing pressure measured at the wellhead during the test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellheadFlowingPressure", DataType="pressureMeasure")]
        public pressureMeasure wellheadFlowingPressure {
            get {
                return this.wellheadFlowingPressureField;
            }
            set {
                this.wellheadFlowingPressureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum pressure measured at the wellhead during the well test.</summary>
        [System.ComponentModel.DescriptionAttribute("The maximum pressure measured at the wellhead during the well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellheadMaximumPressure", DataType="pressureMeasure")]
        public pressureMeasure wellheadMaximumPressure {
            get {
                return this.wellheadMaximumPressureField;
            }
            set {
                this.wellheadMaximumPressureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The production results of the test.</summary>
        [System.ComponentModel.DescriptionAttribute("The production results of the test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("injectionTestResults", DataType="cs_wellTestInjectionTestResults")]
        public cs_wellTestInjectionTestResults injectionTestResults {
            get {
                return this.injectionTestResultsField;
            }
            set {
                this.injectionTestResultsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wellTestInterval {
        
        private measuredDepthCoord mdTopField;
        
        private measuredDepthCoord mdBaseField;
        
        private refNameString wellboreField;
        
        private string[] testedFormationField;
        
        private lengthPerLengthMeasure valvePositionField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The measured depth to the top of the interval.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The measured depth to the top of the interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdTop", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdTop {
            get {
                return this.mdTopField;
            }
            set {
                this.mdTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth to the bottom of the interval.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The measured depth to the bottom of the interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdBase", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdBase {
            get {
                return this.mdBaseField;
            }
            set {
                this.mdBaseField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines the wellbore (sidetract) represented by the measured depth. This must be given when the well has multiple wellbores and the measured depth  value is deeper than the first kickoff point. It is recommended that it always be given.</summary>
        [System.ComponentModel.DescriptionAttribute("Defines the wellbore (sidetract) represented by the measured depth. This must be " +
            "given when the well has multiple wellbores and the measured depth  value is deep" +
            "er than the first kickoff point. It is recommended that it always be given.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellbore", DataType="refNameString")]
        public refNameString wellbore {
            get {
                return this.wellboreField;
            }
            set {
                this.wellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A formation that was tested.</summary>
        [System.Xml.Serialization.XmlElementAttribute("testedFormation")]
        [System.ComponentModel.DescriptionAttribute("A formation that was tested.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testedFormation", DataType="kindString")]
        public string[] testedFormation {
            get {
                return this.testedFormationField;
            }
            set {
                this.testedFormationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The relative opening of the downhole control valve for the tested zone. This is for surface controllable valves.</summary>
        [System.ComponentModel.DescriptionAttribute("The relative opening of the downhole control valve for the tested zone. This is f" +
            "or surface controllable valves.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("valvePosition", DataType="lengthPerLengthMeasure")]
        public lengthPerLengthMeasure valvePosition {
            get {
                return this.valvePositionField;
            }
            set {
                this.valvePositionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum InjectionFluid {
        
        /// <remarks/>
        oil,
        
        /// <remarks/>
        gas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("non HC gas")]
        nonHCgas,
        
        /// <remarks/>
        CO2,
        
        /// <remarks/>
        water,
        
        /// <remarks/>
        brine,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fresh water")]
        freshwater,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oil-gas")]
        oilgas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oil-water")]
        oilwater,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas-water")]
        gaswater,
        
        /// <remarks/>
        condensate,
        
        /// <remarks/>
        steam,
        
        /// <remarks/>
        air,
        
        /// <remarks/>
        dry,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wellTestCumulative {
        
        private volumeMeasure cumulativeOilField;
        
        private volumeMeasure cumulativeGasField;
        
        private volumeMeasure cumulativeWaterField;
        
        /// <remarks/>
        /// <summary>The cumulative amount of oil.</summary>
        [System.ComponentModel.DescriptionAttribute("The cumulative amount of oil.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cumulativeOil", DataType="volumeMeasure")]
        public volumeMeasure cumulativeOil {
            get {
                return this.cumulativeOilField;
            }
            set {
                this.cumulativeOilField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The cumulative amount of gas.</summary>
        [System.ComponentModel.DescriptionAttribute("The cumulative amount of gas.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cumulativeGas", DataType="volumeMeasure")]
        public volumeMeasure cumulativeGas {
            get {
                return this.cumulativeGasField;
            }
            set {
                this.cumulativeGasField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The cumulative amount of water.</summary>
        [System.ComponentModel.DescriptionAttribute("The cumulative amount of water.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cumulativeWater", DataType="volumeMeasure")]
        public volumeMeasure cumulativeWater {
            get {
                return this.cumulativeWaterField;
            }
            set {
                this.cumulativeWaterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wellTestProductionTestResults {
        
        private cs_wellTestTestVolume oilVolumeField;
        
        private cs_wellTestFluidRate oilRateField;
        
        private cs_wellTestTestVolume gasVolumeField;
        
        private cs_wellTestFluidRate gasRateField;
        
        private cs_wellTestTestVolume waterVolumeField;
        
        private cs_wellTestFluidRate waterRateField;
        
        private cs_wellTestTestVolume condensateVolumeField;
        
        private cs_wellTestFluidRate condensateRateField;
        
        private volumePerVolumeMeasure gasOilRatioField;
        
        private volumePerVolumeMeasure waterCutField;
        
        private densityMeasure densityField;
        
        private velocityMeasure fluidVelocityField;
        
        private volumePerVolumeMeasure condensateYieldField;
        
        private volumePerVolumeMeasure basicSedimentAndWaterField;
        
        private volumeFlowRateMeasure oilPotentialField;
        
        private volumeFlowRateMeasure gasPotentialField;
        
        private volumeMeasure sandVolumeField;
        
        private bool allocatedSplitField;
        
        private bool allocatedSplitFieldSpecified;
        
        private volumePerVolumeMeasure oilSplitFactorField;
        
        private volumePerVolumeMeasure gasSplitFactorField;
        
        private volumePerVolumeMeasure waterSplitFactorField;
        
        private volumePerVolumeMeasure condensateSplitFactorField;
        
        private productivityIndexMeasure productivityIndexField;
        
        private productivityIndexMeasure productivityIndexStdTempPresField;
        
        /// <remarks/>
        /// <summary>Oil volumes measured during the well test.</summary>
        [System.ComponentModel.DescriptionAttribute("Oil volumes measured during the well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilVolume", DataType="cs_wellTestTestVolume")]
        public cs_wellTestTestVolume oilVolume {
            get {
                return this.oilVolumeField;
            }
            set {
                this.oilVolumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Oil rates measured during the well test.</summary>
        [System.ComponentModel.DescriptionAttribute("Oil rates measured during the well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilRate", DataType="cs_wellTestFluidRate")]
        public cs_wellTestFluidRate oilRate {
            get {
                return this.oilRateField;
            }
            set {
                this.oilRateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gas volumes measured during the well test.</summary>
        [System.ComponentModel.DescriptionAttribute("Gas volumes measured during the well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasVolume", DataType="cs_wellTestTestVolume")]
        public cs_wellTestTestVolume gasVolume {
            get {
                return this.gasVolumeField;
            }
            set {
                this.gasVolumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gas rates measured during the well test.</summary>
        [System.ComponentModel.DescriptionAttribute("Gas rates measured during the well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasRate", DataType="cs_wellTestFluidRate")]
        public cs_wellTestFluidRate gasRate {
            get {
                return this.gasRateField;
            }
            set {
                this.gasRateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Water volumes measured during the well test.</summary>
        [System.ComponentModel.DescriptionAttribute("Water volumes measured during the well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("waterVolume", DataType="cs_wellTestTestVolume")]
        public cs_wellTestTestVolume waterVolume {
            get {
                return this.waterVolumeField;
            }
            set {
                this.waterVolumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Water rates measured during the well test.</summary>
        [System.ComponentModel.DescriptionAttribute("Water rates measured during the well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("waterRate", DataType="cs_wellTestFluidRate")]
        public cs_wellTestFluidRate waterRate {
            get {
                return this.waterRateField;
            }
            set {
                this.waterRateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>condensate volumes measured during the well test.</summary>
        [System.ComponentModel.DescriptionAttribute("condensate volumes measured during the well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condensateVolume", DataType="cs_wellTestTestVolume")]
        public cs_wellTestTestVolume condensateVolume {
            get {
                return this.condensateVolumeField;
            }
            set {
                this.condensateVolumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Condensate rates measured during the well test.</summary>
        [System.ComponentModel.DescriptionAttribute("Condensate rates measured during the well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condensateRate", DataType="cs_wellTestFluidRate")]
        public cs_wellTestFluidRate condensateRate {
            get {
                return this.condensateRateField;
            }
            set {
                this.condensateRateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The ratio of the volume of gas and the volume of oil that was produced.</summary>
        [System.ComponentModel.DescriptionAttribute("The ratio of the volume of gas and the volume of oil that was produced.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasOilRatio", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure gasOilRatio {
            get {
                return this.gasOilRatioField;
            }
            set {
                this.gasOilRatioField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The ratio of water produced compared to the volume of total liquids produced.</summary>
        [System.ComponentModel.DescriptionAttribute("The ratio of water produced compared to the volume of total liquids produced.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("waterCut", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure waterCut {
            get {
                return this.waterCutField;
            }
            set {
                this.waterCutField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The density of the fluid mixture.</summary>
        [System.ComponentModel.DescriptionAttribute("The density of the fluid mixture.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("density", DataType="densityMeasure")]
        public densityMeasure density {
            get {
                return this.densityField;
            }
            set {
                this.densityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The velocity of the overall fluid mixture.</summary>
        [System.ComponentModel.DescriptionAttribute("The velocity of the overall fluid mixture.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fluidVelocity", DataType="velocityMeasure")]
        public velocityMeasure fluidVelocity {
            get {
                return this.fluidVelocityField;
            }
            set {
                this.fluidVelocityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>This is the condensate yield, which describes the amount  of condensate per unit of natural gas produced</summary>
        [System.ComponentModel.DescriptionAttribute("This is the condensate yield, which describes the amount  of condensate per unit " +
            "of natural gas produced")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condensateYield", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure condensateYield {
            get {
                return this.condensateYieldField;
            }
            set {
                this.condensateYieldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>This is the measured of impurities present in crude oil  as it comes from the well. BSandW content is commonly used as a measure for  treating performance of hydrocarbon liquids</summary>
        [System.ComponentModel.DescriptionAttribute("This is the measured of impurities present in crude oil  as it comes from the wel" +
            "l. BSandW content is commonly used as a measure for  treating performance of hyd" +
            "rocarbon liquids")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("basicSedimentAndWater", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure basicSedimentAndWater {
            get {
                return this.basicSedimentAndWaterField;
            }
            set {
                this.basicSedimentAndWaterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>This is the the potential of the well to produce crude oil.  This represents the flow rate that could be achieved under maximum drawdown.</summary>
        [System.ComponentModel.DescriptionAttribute("This is the the potential of the well to produce crude oil.  This represents the " +
            "flow rate that could be achieved under maximum drawdown.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilPotential", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure oilPotential {
            get {
                return this.oilPotentialField;
            }
            set {
                this.oilPotentialField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>This is the potential of the well to produce natural gas.  This represents the flow rate that could be achieved under maximum drawdown.</summary>
        [System.ComponentModel.DescriptionAttribute("This is the potential of the well to produce natural gas.  This represents the fl" +
            "ow rate that could be achieved under maximum drawdown.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasPotential", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure gasPotential {
            get {
                return this.gasPotentialField;
            }
            set {
                this.gasPotentialField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The volume of sand that was produced.</summary>
        [System.ComponentModel.DescriptionAttribute("The volume of sand that was produced.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sandVolume", DataType="volumeMeasure")]
        public volumeMeasure sandVolume {
            get {
                return this.sandVolumeField;
            }
            set {
                this.sandVolumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True ("true" or "1") indicates that the the split factors  are allocated as opposed to measured.  False ("false" or "0") or not given indicates otherwise.</summary>
        [System.ComponentModel.DescriptionAttribute("True (\"true\" or \"1\") indicates that the the split factors  are allocated as oppos" +
            "ed to measured.  False (\"false\" or \"0\") or not given indicates otherwise.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("allocatedSplit", DataType="logicalBoolean")]
        public bool allocatedSplit {
            get {
                return this.allocatedSplitField;
            }
            set {
                this.allocatedSplitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool allocatedSplitSpecified {
            get {
                return this.allocatedSplitFieldSpecified;
            }
            set {
                this.allocatedSplitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The split factor for Oil relative to the overall volume of the test.</summary>
        [System.ComponentModel.DescriptionAttribute("The split factor for Oil relative to the overall volume of the test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilSplitFactor", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure oilSplitFactor {
            get {
                return this.oilSplitFactorField;
            }
            set {
                this.oilSplitFactorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The split factor for Gas relative to the overall volume of the test.</summary>
        [System.ComponentModel.DescriptionAttribute("The split factor for Gas relative to the overall volume of the test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasSplitFactor", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure gasSplitFactor {
            get {
                return this.gasSplitFactorField;
            }
            set {
                this.gasSplitFactorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The split factor for Water relative to the overall volume of the test.</summary>
        [System.ComponentModel.DescriptionAttribute("The split factor for Water relative to the overall volume of the test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("waterSplitFactor", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure waterSplitFactor {
            get {
                return this.waterSplitFactorField;
            }
            set {
                this.waterSplitFactorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The split factor for Condensate relative to the overall volume of the test.</summary>
        [System.ComponentModel.DescriptionAttribute("The split factor for Condensate relative to the overall volume of the test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condensateSplitFactor", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure condensateSplitFactor {
            get {
                return this.condensateSplitFactorField;
            }
            set {
                this.condensateSplitFactorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Productivity Index (PI) is an expression which defines the pressure drop in  the reservoir to produce a unit of oil per day. That is, the energy to produce a unit of oil. The value was defined at ambient temperature and pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Productivity Index (PI) is an expression which defines the pressure drop in  the " +
            "reservoir to produce a unit of oil per day. That is, the energy to produce a uni" +
            "t of oil. The value was defined at ambient temperature and pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("productivityIndex", DataType="productivityIndexMeasure")]
        public productivityIndexMeasure productivityIndex {
            get {
                return this.productivityIndexField;
            }
            set {
                this.productivityIndexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Productivity Index (PI) is an expression which defines the pressure drop in  the reservoir to produce a unit of oil per day. That is, the energy to produce a unit of oil. The value has been converted to the declared conditions of standard temperature and pressure.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Productivity Index (PI) is an expression which defines the pressure drop in  the reservoir to produce a unit of oil per day. That is, the energy to produce a unit of oil. The value has been converted to the declared conditions of standard temperature and pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("productivityIndexStdTempPres", DataType="productivityIndexMeasure")]
        public productivityIndexMeasure productivityIndexStdTempPres {
            get {
                return this.productivityIndexStdTempPresField;
            }
            set {
                this.productivityIndexStdTempPresField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wellTestSeparatorData {
        
        private pressureMeasure separatorPressureField;
        
        private thermodynamicTemperatureMeasure separatorTemperatureField;
        
        /// <remarks/>
        /// <summary>The pressure measured at the separator during the well test.</summary>
        [System.ComponentModel.DescriptionAttribute("The pressure measured at the separator during the well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("separatorPressure", DataType="pressureMeasure")]
        public pressureMeasure separatorPressure {
            get {
                return this.separatorPressureField;
            }
            set {
                this.separatorPressureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The temperature measured at the separator during the well test.</summary>
        [System.ComponentModel.DescriptionAttribute("The temperature measured at the separator during the well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("separatorTemperature", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure separatorTemperature {
            get {
                return this.separatorTemperatureField;
            }
            set {
                this.separatorTemperatureField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wellTestPointData {
        
        private pressureMeasure presField;
        
        private thermodynamicTemperatureMeasure tempField;
        
        private pressureMeasure pOverZField;
        
        private measuredDepthCoord mdField;
        
        private refNameString wellboreField;
        
        private bool bottomholeField;
        
        private bool bottomholeFieldSpecified;
        
        private bool staticField;
        
        private bool staticFieldSpecified;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The pressure at the point.</summary>
        [System.ComponentModel.DescriptionAttribute("The pressure at the point.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pres", DataType="pressureMeasure")]
        public pressureMeasure pres {
            get {
                return this.presField;
            }
            set {
                this.presField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The temperature at the point.</summary>
        [System.ComponentModel.DescriptionAttribute("The temperature at the point.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("temp", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure temp {
            get {
                return this.tempField;
            }
            set {
                this.tempField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The P/Z value at the point. This is P/Z, pressure  over gas compressibility factor (z).  Note that the uom is units of pressure., since Z is dimensionless.</summary>
        [System.ComponentModel.DescriptionAttribute("The P/Z value at the point. This is P/Z, pressure  over gas compressibility facto" +
            "r (z).  Note that the uom is units of pressure., since Z is dimensionless.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pOverZ", DataType="pressureMeasure")]
        public pressureMeasure pOverZ {
            get {
                return this.pOverZField;
            }
            set {
                this.pOverZField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth of the bottomhole.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth of the bottomhole.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("md", DataType="measuredDepthCoord")]
        public measuredDepthCoord md {
            get {
                return this.mdField;
            }
            set {
                this.mdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines the wellbore (sidetract) represented by the measured depth. This must be given when the well has multiple wellbores and the measured depth  value is deeper than the first kickoff point. It is recommended that it always be given.</summary>
        [System.ComponentModel.DescriptionAttribute("Defines the wellbore (sidetract) represented by the measured depth. This must be " +
            "given when the well has multiple wellbores and the measured depth  value is deep" +
            "er than the first kickoff point. It is recommended that it always be given.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellbore", DataType="refNameString")]
        public refNameString wellbore {
            get {
                return this.wellboreField;
            }
            set {
                this.wellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A value of true (1 or "true") indicates that the point is at the bottomhole. A value of false (0 or "false") or not given indicates otherwise.</summary>
        [System.ComponentModel.DescriptionAttribute("A value of true (1 or \"true\") indicates that the point is at the bottomhole. A va" +
            "lue of false (0 or \"false\") or not given indicates otherwise.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bottomhole", DataType="logicalBoolean")]
        public bool bottomhole {
            get {
                return this.bottomholeField;
            }
            set {
                this.bottomholeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bottomholeSpecified {
            get {
                return this.bottomholeFieldSpecified;
            }
            set {
                this.bottomholeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A value of true (1 or "true") indicates a static (non-flowing) pressure. A value of false (0 or "false") or not given indicates otherwise. The pressure may be measured (e.g., shut-in well) or calculated.</summary>
        [System.ComponentModel.DescriptionAttribute("A value of true (1 or \"true\") indicates a static (non-flowing) pressure. A value " +
            "of false (0 or \"false\") or not given indicates otherwise. The pressure may be me" +
            "asured (e.g., shut-in well) or calculated.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("static", DataType="logicalBoolean")]
        public bool @static {
            get {
                return this.staticField;
            }
            set {
                this.staticField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool staticSpecified {
            get {
                return this.staticFieldSpecified;
            }
            set {
                this.staticFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wellTestElectricSubmersiblePumpData {
        
        private electricCurrentMeasure electricCurrentField;
        
        private frequencyMeasure frequencyField;
        
        /// <remarks/>
        /// <summary>The average electric current of the electric submersible pump (ESP) during the test. The presumption is that only one pump per well is operational during each test.</summary>
        [System.ComponentModel.DescriptionAttribute("The average electric current of the electric submersible pump (ESP) during the te" +
            "st. The presumption is that only one pump per well is operational during each te" +
            "st.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("electricCurrent", DataType="electricCurrentMeasure")]
        public electricCurrentMeasure electricCurrent {
            get {
                return this.electricCurrentField;
            }
            set {
                this.electricCurrentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The average frequency of the electric submersible pump (ESP) during the test. The presumption is that only one pump per well is operational during each test.</summary>
        [System.ComponentModel.DescriptionAttribute("The average frequency of the electric submersible pump (ESP) during the test. The" +
            " presumption is that only one pump per well is operational during each test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("frequency", DataType="frequencyMeasure")]
        public frequencyMeasure frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wellTestBottomholeData {
        
        private pressureMeasure bottomholePresField;
        
        private thermodynamicTemperatureMeasure bottomholeTempField;
        
        private pressureMeasure bottomholePOverZField;
        
        private measuredDepthCoord bottomholeMDField;
        
        private refNameString wellboreField;
        
        /// <remarks/>
        /// <summary>The pressure at the bottomhole of the well.</summary>
        [System.ComponentModel.DescriptionAttribute("The pressure at the bottomhole of the well.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bottomholePres", DataType="pressureMeasure")]
        public pressureMeasure bottomholePres {
            get {
                return this.bottomholePresField;
            }
            set {
                this.bottomholePresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The temperature at the bottomhole of the well.</summary>
        [System.ComponentModel.DescriptionAttribute("The temperature at the bottomhole of the well.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bottomholeTemp", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure bottomholeTemp {
            get {
                return this.bottomholeTempField;
            }
            set {
                this.bottomholeTempField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The P/Z value at the bottomhole. This is P/Z, pressure  over gas compressibility factor (z), at the bottomhole of the well.  Note that the uom is units of pressure., since Z is dimensionless.</summary>
        [System.ComponentModel.DescriptionAttribute("The P/Z value at the bottomhole. This is P/Z, pressure  over gas compressibility " +
            "factor (z), at the bottomhole of the well.  Note that the uom is units of pressu" +
            "re., since Z is dimensionless.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bottomholePOverZ", DataType="pressureMeasure")]
        public pressureMeasure bottomholePOverZ {
            get {
                return this.bottomholePOverZField;
            }
            set {
                this.bottomholePOverZField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth of the bottomhole.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth of the bottomhole.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bottomholeMD", DataType="measuredDepthCoord")]
        public measuredDepthCoord bottomholeMD {
            get {
                return this.bottomholeMDField;
            }
            set {
                this.bottomholeMDField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines the wellbore (sidetract) represented by the measured depth. This must be given when the well has multiple wellbores and the measured depth  value is deeper than the first kickoff point. It is recommended that it always be given.</summary>
        [System.ComponentModel.DescriptionAttribute("Defines the wellbore (sidetract) represented by the measured depth. This must be " +
            "given when the well has multiple wellbores and the measured depth  value is deep" +
            "er than the first kickoff point. It is recommended that it always be given.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellbore", DataType="refNameString")]
        public refNameString wellbore {
            get {
                return this.wellboreField;
            }
            set {
                this.wellboreField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wellTestWellheadData {
        
        private thermodynamicTemperatureMeasure temperatureField;
        
        private pressureMeasure flowingPressureField;
        
        private pressureMeasure shutInPressureField;
        
        private pressureMeasure flowLinePressureField;
        
        private lengthMeasure chokeOrificeSizeField;
        
        private pressureMeasure gasLiftPresField;
        
        private thermodynamicTemperatureMeasure gasLiftTempField;
        
        private cs_wellTestTestVolume gasLiftVolumeField;
        
        private cs_wellTestFluidRate gasLiftRateField;
        
        private lengthMeasure gasLiftchokeOrificeSizeField;
        
        /// <remarks/>
        /// <summary>The temperature measured at the wellhead during the  well test.</summary>
        [System.ComponentModel.DescriptionAttribute("The temperature measured at the wellhead during the  well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("temperature", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure temperature {
            get {
                return this.temperatureField;
            }
            set {
                this.temperatureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The flowing pressure measured at the wellhead during the  well test.</summary>
        [System.ComponentModel.DescriptionAttribute("The flowing pressure measured at the wellhead during the  well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowingPressure", DataType="pressureMeasure")]
        public pressureMeasure flowingPressure {
            get {
                return this.flowingPressureField;
            }
            set {
                this.flowingPressureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The shut-in pressure measured at the wellhead during the  well test.</summary>
        [System.ComponentModel.DescriptionAttribute("The shut-in pressure measured at the wellhead during the  well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("shutInPressure", DataType="pressureMeasure")]
        public pressureMeasure shutInPressure {
            get {
                return this.shutInPressureField;
            }
            set {
                this.shutInPressureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The pressure measured at the flow line connected to the  wellhead during this well test.</summary>
        [System.ComponentModel.DescriptionAttribute("The pressure measured at the flow line connected to the  wellhead during this wel" +
            "l test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowLinePressure", DataType="pressureMeasure")]
        public pressureMeasure flowLinePressure {
            get {
                return this.flowLinePressureField;
            }
            set {
                this.flowLinePressureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The size of the choke opening at the wellhead.</summary>
        [System.ComponentModel.DescriptionAttribute("The size of the choke opening at the wellhead.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("chokeOrificeSize", DataType="lengthMeasure")]
        public lengthMeasure chokeOrificeSize {
            get {
                return this.chokeOrificeSizeField;
            }
            set {
                this.chokeOrificeSizeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The pressure of the lift gas at the wellhead.</summary>
        [System.ComponentModel.DescriptionAttribute("The pressure of the lift gas at the wellhead.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasLiftPres", DataType="pressureMeasure")]
        public pressureMeasure gasLiftPres {
            get {
                return this.gasLiftPresField;
            }
            set {
                this.gasLiftPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The temperature of the lift gas at the wellhead.</summary>
        [System.ComponentModel.DescriptionAttribute("The temperature of the lift gas at the wellhead.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasLiftTemp", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure gasLiftTemp {
            get {
                return this.gasLiftTempField;
            }
            set {
                this.gasLiftTempField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Lift gas volumes injected during the well test at the wellhead.</summary>
        [System.ComponentModel.DescriptionAttribute("Lift gas volumes injected during the well test at the wellhead.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasLiftVolume", DataType="cs_wellTestTestVolume")]
        public cs_wellTestTestVolume gasLiftVolume {
            get {
                return this.gasLiftVolumeField;
            }
            set {
                this.gasLiftVolumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Lift gas rates injected during the well test at the wellhead.</summary>
        [System.ComponentModel.DescriptionAttribute("Lift gas rates injected during the well test at the wellhead.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasLiftRate", DataType="cs_wellTestFluidRate")]
        public cs_wellTestFluidRate gasLiftRate {
            get {
                return this.gasLiftRateField;
            }
            set {
                this.gasLiftRateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The size of the gas lift choke opening.</summary>
        [System.ComponentModel.DescriptionAttribute("The size of the gas lift choke opening.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasLiftchokeOrificeSize", DataType="lengthMeasure")]
        public lengthMeasure gasLiftchokeOrificeSize {
            get {
                return this.gasLiftchokeOrificeSizeField;
            }
            set {
                this.gasLiftchokeOrificeSizeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wellTestProductionTestData {
        
        private timeMeasure testDurationField;
        
        private cs_wellTestInterval[] testIntervalField;
        
        private cs_wellTestWellheadData wellheadDataField;
        
        private cs_wellTestBottomholeData bottomholeDataField;
        
        private cs_wellTestElectricSubmersiblePumpData espDataField;
        
        private cs_wellTestPointData[] pointDataField;
        
        private cs_wellTestSeparatorData separatorDataField;
        
        private string operatingMethodField;
        
        private cs_wellTestCumulative wellTestCumulativeField;
        
        private cs_wellTestProductionTestResults productionTestResultsField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The time length (with uom) of the well test.</summary>
        [System.ComponentModel.DescriptionAttribute("The time length (with uom) of the well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testDuration", DataType="timeMeasure")]
        public timeMeasure testDuration {
            get {
                return this.testDurationField;
            }
            set {
                this.testDurationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The interval tested. This element includes a top and base depth,  and the formation(s) tested. It also includes control data for the tested interval.</summary>
        [System.Xml.Serialization.XmlElementAttribute("testInterval")]
        [System.ComponentModel.DescriptionAttribute("The interval tested. This element includes a top and base depth,  and the formati" +
            "on(s) tested. It also includes control data for the tested interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testInterval", DataType="cs_wellTestInterval")]
        public cs_wellTestInterval[] testInterval {
            get {
                return this.testIntervalField;
            }
            set {
                this.testIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>This element records measurements made and settings made at the wellhead.</summary>
        [System.ComponentModel.DescriptionAttribute("This element records measurements made and settings made at the wellhead.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellheadData", DataType="cs_wellTestWellheadData")]
        public cs_wellTestWellheadData wellheadData {
            get {
                return this.wellheadDataField;
            }
            set {
                this.wellheadDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>DEPRECATED - Use pointData instead. This element records measurements made at the bottomhole.</summary>
        [System.ComponentModel.DescriptionAttribute("DEPRECATED - Use pointData instead. This element records measurements made at the" +
            " bottomhole.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bottomholeData", DataType="cs_wellTestBottomholeData")]
        public cs_wellTestBottomholeData bottomholeData {
            get {
                return this.bottomholeDataField;
            }
            set {
                this.bottomholeDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Frequency and electric current measured during the  well test for electric submersible pump (ESP) wells. The presumption is that only one pump per well is operational during each test.</summary>
        [System.ComponentModel.DescriptionAttribute("Frequency and electric current measured during the  well test for electric submer" +
            "sible pump (ESP) wells. The presumption is that only one pump per well is operat" +
            "ional during each test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("espData", DataType="cs_wellTestElectricSubmersiblePumpData")]
        public cs_wellTestElectricSubmersiblePumpData espData {
            get {
                return this.espDataField;
            }
            set {
                this.espDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>This element records temperature and pressure at points in the wellbore.</summary>
        [System.Xml.Serialization.XmlElementAttribute("pointData")]
        [System.ComponentModel.DescriptionAttribute("This element records temperature and pressure at points in the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pointData", DataType="cs_wellTestPointData")]
        public cs_wellTestPointData[] pointData {
            get {
                return this.pointDataField;
            }
            set {
                this.pointDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>This element records the measurements (pressure and temperature) at the separator.</summary>
        [System.ComponentModel.DescriptionAttribute("This element records the measurements (pressure and temperature) at the separator" +
            ".")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("separatorData", DataType="cs_wellTestSeparatorData")]
        public cs_wellTestSeparatorData separatorData {
            get {
                return this.separatorDataField;
            }
            set {
                this.separatorDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The method being used to operate the well. Examples are 'flowing', 'pumping', 'gas lifted'.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The method being used to operate the well. Examples are \'flowing\', \'pumping\', \'ga" +
            "s lifted\'.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("operatingMethod", DataType="kindString")]
        public string operatingMethod {
            get {
                return this.operatingMethodField;
            }
            set {
                this.operatingMethodField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The cumulative volumes of fluids at the time of the well test. The fluids are oil, gas, and water.</summary>
        [System.ComponentModel.DescriptionAttribute("The cumulative volumes of fluids at the time of the well test. The fluids are oil" +
            ", gas, and water.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellTestCumulative", DataType="cs_wellTestCumulative")]
        public cs_wellTestCumulative wellTestCumulative {
            get {
                return this.wellTestCumulativeField;
            }
            set {
                this.wellTestCumulativeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The production results of the test.</summary>
        [System.ComponentModel.DescriptionAttribute("The production results of the test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("productionTestResults", DataType="cs_wellTestProductionTestResults")]
        public cs_wellTestProductionTestResults productionTestResults {
            get {
                return this.productionTestResultsField;
            }
            set {
                this.productionTestResultsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wellTestFluidLevelTest {
        
        private lengthMeasure fluidLevelField;
        
        private lengthMeasure baseUsableWaterField;
        
        private string testedByField;
        
        /// <remarks/>
        /// <summary>The fluid level achieved in the well.  The value is given as length units from the top of the well.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The fluid level achieved in the well.  The value is given as length units from th" +
            "e top of the well.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fluidLevel", DataType="lengthMeasure")]
        public lengthMeasure fluidLevel {
            get {
                return this.fluidLevelField;
            }
            set {
                this.fluidLevelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The lowest usable water depth as measured from the  surface. See TxRRC H-15.</summary>
        [System.ComponentModel.DescriptionAttribute("The lowest usable water depth as measured from the  surface. See TxRRC H-15.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("baseUsableWater", DataType="lengthMeasure")]
        public lengthMeasure baseUsableWater {
            get {
                return this.baseUsableWaterField;
            }
            set {
                this.baseUsableWaterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The business associate that conducted the test. This is generally a person.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The business associate that conducted the test. This is generally a person.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testedBy", DataType="nameString")]
        public string testedBy {
            get {
                return this.testedByField;
            }
            set {
                this.testedByField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wellTestValidationOperation {
        
        private ValidationOperation kindField;
        
        private ValidationResult resultField;
        
        private System.DateTime dateField;
        
        private bool dateFieldSpecified;
        
        private string toolField;
        
        private string methodField;
        
        private string commentField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The kind of validation operation.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The kind of validation operation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("kind", DataType="ValidationOperation")]
        public ValidationOperation kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The result of the validation operation.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The result of the validation operation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("result", DataType="ValidationResult")]
        public ValidationResult result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date of the validation operation.</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DescriptionAttribute("The date of the validation operation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("date", DataType="date")]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateSpecified {
            get {
                return this.dateFieldSpecified;
            }
            set {
                this.dateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The tool used for the validation operation.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The tool used for the validation operation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tool", DataType="nameString")]
        public string tool {
            get {
                return this.toolField;
            }
            set {
                this.toolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The method used for the validation operation..</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The method used for the validation operation..")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("method", DataType="nameString")]
        public string method {
            get {
                return this.methodField;
            }
            set {
                this.methodField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A comment about the operation.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A comment about the operation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ValidationOperation {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("acquisition validation")]
        acquisitionvalidation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("site validation")]
        sitevalidation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("allocation validation")]
        allocationvalidation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("external quality assurance")]
        externalqualityassurance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("validation result")]
        validationresult,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well model validation")]
        wellmodelvalidation,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ValidationResult {
        
        /// <remarks/>
        passed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("passed with changes")]
        passedwithchanges,
        
        /// <remarks/>
        failed,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_location {
        
        private refNameString wellCRSField;
        
        private abstractMeasure[] itemsField;
        
        private ItemsChoiceType8[] itemsElementNameField;
        
        private bool originalField;
        
        private bool originalFieldSpecified;
        
        private string descriptionField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>A pointer to the wellCRS that defines the CRS for the coordinates.  While optional, it is strongly recommended that this be specified.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the wellCRS that defines the CRS for the coordinates.  While optiona" +
            "l, it is strongly recommended that this be specified.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellCRS", DataType="refNameString")]
        public refNameString wellCRS {
            get {
                return this.wellCRSField;
            }
            set {
                this.wellCRSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("easting", typeof(lengthMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("latitude", typeof(planeAngleMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("localX", typeof(lengthMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("localY", typeof(lengthMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("longitude", typeof(planeAngleMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("northing", typeof(lengthMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("projectedX", typeof(lengthMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("projectedY", typeof(lengthMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("southing", typeof(lengthMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("westing", typeof(lengthMeasure))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("latitude", DataType="planeAngleMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("longitude", DataType="planeAngleMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("easting", DataType="lengthMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("northing", DataType="lengthMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("westing", DataType="lengthMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("southing", DataType="lengthMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("projectedX", DataType="lengthMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("projectedY", DataType="lengthMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("localX", DataType="lengthMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("localY", DataType="lengthMeasure")]
        public abstractMeasure[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType8[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Flag indicating (if "true" or "1") that this pair of values was  the original data given for the location. If the pair of values was  calculated from an original pair of values, this flag should be "false" (or "0"),  or not present.</summary>
        [System.ComponentModel.DescriptionAttribute("Flag indicating (if \"true\" or \"1\") that this pair of values was  the original dat" +
            "a given for the location. If the pair of values was  calculated from an original" +
            " pair of values, this flag should be \"false\" (or \"0\"),  or not present.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("original", DataType="logicalBoolean")]
        public bool original {
            get {
                return this.originalField;
            }
            set {
                this.originalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool originalSpecified {
            get {
                return this.originalFieldSpecified;
            }
            set {
                this.originalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A Comment, generally given to help the reader  interpret the coordinates if the CRS and the chosen pair do not make them clear.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("A Comment, generally given to help the reader  interpret the coordinates if the C" +
            "RS and the chosen pair do not make them clear.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="descriptionString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series", IncludeInSchema=false)]
    public enum ItemsChoiceType8 {
        
        /// <remarks/>
        easting,
        
        /// <remarks/>
        latitude,
        
        /// <remarks/>
        localX,
        
        /// <remarks/>
        localY,
        
        /// <remarks/>
        longitude,
        
        /// <remarks/>
        northing,
        
        /// <remarks/>
        projectedX,
        
        /// <remarks/>
        projectedY,
        
        /// <remarks/>
        southing,
        
        /// <remarks/>
        westing,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_refWellWellboreRig {
        
        private refNameString rigReferenceField;
        
        private refNameString wellboreParentField;
        
        private refNameString wellParentField;
        
        /// <remarks/>
        /// <summary>A pointer to the rig with which there is a relationship.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A pointer to the rig with which there is a relationship.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rigReference", DataType="refNameString")]
        public refNameString rigReference {
            get {
                return this.rigReferenceField;
            }
            set {
                this.rigReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the wellbore that contains the rigReference. This is not needed unless the referenced rig is outside the  context of a common parent wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the wellbore that contains the rigReference. This is not needed unle" +
            "ss the referenced rig is outside the  context of a common parent wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellboreParent", DataType="refNameString")]
        public refNameString wellboreParent {
            get {
                return this.wellboreParentField;
            }
            set {
                this.wellboreParentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the well that contains the wellboreParent. This is not needed unless the referenced wellbore is outside the  context of a common parent well.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the well that contains the wellboreParent. This is not needed unless" +
            " the referenced wellbore is outside the  context of a common parent well.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellParent", DataType="refNameString")]
        public refNameString wellParent {
            get {
                return this.wellParentField;
            }
            set {
                this.wellParentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_refWellWellbore {
        
        private refNameString wellboreReferenceField;
        
        private refNameString wellParentField;
        
        /// <remarks/>
        /// <summary>A pointer the wellbore with which there is a relationship.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A pointer the wellbore with which there is a relationship.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellboreReference", DataType="refNameString")]
        public refNameString wellboreReference {
            get {
                return this.wellboreReferenceField;
            }
            set {
                this.wellboreReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the well that contains the wellboreReference. This is not needed unless the referenced wellbore is outside the  context of a common parent well.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the well that contains the wellboreReference. This is not needed unl" +
            "ess the referenced wellbore is outside the  context of a common parent well.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellParent", DataType="refNameString")]
        public refNameString wellParent {
            get {
                return this.wellParentField;
            }
            set {
                this.wellParentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class wellKnownNameStruct {
        
        private string namingSystemField;
        
        private string codeField;
        
        private string valueField;
        
        /// <remarks/>
        /// <summary>The naming system within the name is unique.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The naming system within the name is unique.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("namingSystem", DataType="nameString")]
        public string namingSystem {
            get {
                return this.namingSystemField;
            }
            set {
                this.namingSystemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A unique (short) code associated with the name.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("A unique (short) code associated with the name.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("code", DataType="kindString")]
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wellDatum {
        
        private string nameField;
        
        private ElevCodeEnum codeField;
        
        private bool codeFieldSpecified;
        
        private object itemField;
        
        private string[] kindField;
        
        private cs_refWellWellbore wellboreField;
        
        private cs_refWellWellboreRig rigField;
        
        private wellElevationCoord elevationField;
        
        private measuredDepthCoord measuredDepthField;
        
        private cs_location horizontalLocationField;
        
        private string commentField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private bool defaultMeasuredDepthField;
        
        private bool defaultMeasuredDepthFieldSpecified;
        
        private bool defaultVerticalDepthField;
        
        private bool defaultVerticalDepthFieldSpecified;
        
        private bool defaultElevationField;
        
        private bool defaultElevationFieldSpecified;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The human understandable contextual name of the reference datum.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The human understandable contextual name of the reference datum.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The code value that represents the type of reference datum.  This may represent a point on a device (e.g., kelly bushing) or it may represent  a vertical reference datum (e.g., mean sea level).</summary>
        [System.ComponentModel.DescriptionAttribute("The code value that represents the type of reference datum.  This may represent a" +
            " point on a device (e.g., kelly bushing) or it may represent  a vertical referen" +
            "ce datum (e.g., mean sea level).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("code", DataType="ElevCodeEnum")]
        public ElevCodeEnum code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool codeSpecified {
            get {
                return this.codeFieldSpecified;
            }
            set {
                this.codeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("datumCRS", typeof(refNameString))]
        [System.Xml.Serialization.XmlElementAttribute("datumName", typeof(wellKnownNameStruct))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("datumName", DataType="wellKnownNameStruct")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("datumCRS", DataType="refNameString")]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Since various activities may use different points as  measurement datums, it is useful to characterize the point based on its usage.  A well reference datum may have more than one such characterization.  For example, it may be the datum used by the driller and logger for measuring  their depths. Example usage values would be 'permanent','driller', 'logger' 'WRP' (well reference point) and 'SRP' (site reference point).</summary>
        [System.Xml.Serialization.XmlElementAttribute("kind")]
        [System.ComponentModel.DescriptionAttribute(@"Since various activities may use different points as  measurement datums, it is useful to characterize the point based on its usage.  A well reference datum may have more than one such characterization.  For example, it may be the datum used by the driller and logger for measuring  their depths. Example usage values would be 'permanent','driller', 'logger' 'WRP' (well reference point) and 'SRP' (site reference point).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("kind", DataType="kindString")]
        public string[] kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the wellbore that contains the reference datum. This should be specified if a measured depth is given.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the wellbore that contains the reference datum. This should be speci" +
            "fied if a measured depth is given.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellbore", DataType="cs_refWellWellbore")]
        public cs_refWellWellbore wellbore {
            get {
                return this.wellboreField;
            }
            set {
                this.wellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the rig that contains the device used  as a reference datum. The rig may be associated with a wellbore in another well (e.g., pattern drilling using a rig on a track).</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the rig that contains the device used  as a reference datum. The rig" +
            " may be associated with a wellbore in another well (e.g., pattern drilling using" +
            " a rig on a track).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rig", DataType="cs_refWellWellboreRig")]
        public cs_refWellWellboreRig rig {
            get {
                return this.rigField;
            }
            set {
                this.rigField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The gravity based elevation coordinate of this reference datum  as measured from another datum. Positive moving upward from the elevation datum. An elevation should be given unless this is a vertical reference datum (e.g., sea level).</summary>
        [System.ComponentModel.DescriptionAttribute("The gravity based elevation coordinate of this reference datum  as measured from " +
            "another datum. Positive moving upward from the elevation datum. An elevation sho" +
            "uld be given unless this is a vertical reference datum (e.g., sea level).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("elevation", DataType="wellElevationCoord")]
        public wellElevationCoord elevation {
            get {
                return this.elevationField;
            }
            set {
                this.elevationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth coordinate of this reference datum as measured from another datum. The measured depth datum should either be the same as the elevation datum or it should be relatable to the elevation datum through other datums. Positive moving toward the bottomhole from the measured depth datum. This should be given when a local reference is "downhole",  such as a kickoff point or ocean bottom template, and the borehole may not be vertical. If a Depth is given then an Elevation should also be given.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The measured depth coordinate of this reference datum as measured from another datum. The measured depth datum should either be the same as the elevation datum or it should be relatable to the elevation datum through other datums. Positive moving toward the bottomhole from the measured depth datum. This should be given when a local reference is ""downhole"",  such as a kickoff point or ocean bottom template, and the borehole may not be vertical. If a Depth is given then an Elevation should also be given.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("measuredDepth", DataType="measuredDepthCoord")]
        public measuredDepthCoord measuredDepth {
            get {
                return this.measuredDepthField;
            }
            set {
                this.measuredDepthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The horizontal location of the point being used as a well datum.  This may be used when the point is not directly above or below the well point location.  For example, a well being drilled from a platform may have its location at the entrance  into the sea floor, while the well datum may be located on the drilling rig.  Or the well datum may be a kickoff point, that is not directly under the well surface point.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The horizontal location of the point being used as a well datum.  This may be used when the point is not directly above or below the well point location.  For example, a well being drilled from a platform may have its location at the entrance  into the sea floor, while the well datum may be located on the drilling rig.  Or the well datum may be a kickoff point, that is not directly under the well surface point.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("horizontalLocation", DataType="cs_location")]
        public cs_location horizontalLocation {
            get {
                return this.horizontalLocationField;
            }
            set {
                this.horizontalLocationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A contextual description of the well reference datum.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A contextual description of the well reference datum.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True indicates that this is the default reference datum for measured depth coordinates.  False or not given indicates that this is not the default reference datum. Measured depth coordinates that do not specify a datum reference should be  assumed to be measured relative to this default reference datum. Only one reference datum may be designated as the default measured depth datum for each well. Values are "true" (or "1") and "false" ( or "0").</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"True indicates that this is the default reference datum for measured depth coordinates.  False or not given indicates that this is not the default reference datum. Measured depth coordinates that do not specify a datum reference should be  assumed to be measured relative to this default reference datum. Only one reference datum may be designated as the default measured depth datum for each well. Values are ""true"" (or ""1"") and ""false"" ( or ""0"").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("defaultMeasuredDepth", DataType="logicalBoolean")]
        public bool defaultMeasuredDepth {
            get {
                return this.defaultMeasuredDepthField;
            }
            set {
                this.defaultMeasuredDepthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool defaultMeasuredDepthSpecified {
            get {
                return this.defaultMeasuredDepthFieldSpecified;
            }
            set {
                this.defaultMeasuredDepthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True indicates that this is the default reference datum for vertical depth coordinates.  False or not given indicates that this is not the default reference datum. Vertical depth coordinates that do not specify a datum reference should be  assumed to be measured relative to the default reference datum. Only one reference datum may be designated as the default vertical depth datum for each well. Values are "true" (or "1") and "false" ( or "0").</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"True indicates that this is the default reference datum for vertical depth coordinates.  False or not given indicates that this is not the default reference datum. Vertical depth coordinates that do not specify a datum reference should be  assumed to be measured relative to the default reference datum. Only one reference datum may be designated as the default vertical depth datum for each well. Values are ""true"" (or ""1"") and ""false"" ( or ""0"").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("defaultVerticalDepth", DataType="logicalBoolean")]
        public bool defaultVerticalDepth {
            get {
                return this.defaultVerticalDepthField;
            }
            set {
                this.defaultVerticalDepthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool defaultVerticalDepthSpecified {
            get {
                return this.defaultVerticalDepthFieldSpecified;
            }
            set {
                this.defaultVerticalDepthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True indicates that this is the default reference datum for elevation coordinates.   False or not given indicates that this is not the default reference datum. Elevation coordinates that do not specify a datum reference should be assumed to be measured relative to the default reference datum. Only one reference datum may be designated as the default elevation datum for each well. Values are "true" (or "1") and "false" ( or "0").</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"True indicates that this is the default reference datum for elevation coordinates.   False or not given indicates that this is not the default reference datum. Elevation coordinates that do not specify a datum reference should be assumed to be measured relative to the default reference datum. Only one reference datum may be designated as the default elevation datum for each well. Values are ""true"" (or ""1"") and ""false"" ( or ""0"").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("defaultElevation", DataType="logicalBoolean")]
        public bool defaultElevation {
            get {
                return this.defaultElevationField;
            }
            set {
                this.defaultElevationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool defaultElevationSpecified {
            get {
                return this.defaultElevationFieldSpecified;
            }
            set {
                this.defaultElevationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ElevCodeEnum {
        
        /// <remarks/>
        CF,
        
        /// <remarks/>
        CV,
        
        /// <remarks/>
        DF,
        
        /// <remarks/>
        GL,
        
        /// <remarks/>
        KB,
        
        /// <remarks/>
        RB,
        
        /// <remarks/>
        RT,
        
        /// <remarks/>
        SF,
        
        /// <remarks/>
        LAT,
        
        /// <remarks/>
        SL,
        
        /// <remarks/>
        MHHW,
        
        /// <remarks/>
        MHW,
        
        /// <remarks/>
        MLLW,
        
        /// <remarks/>
        MLW,
        
        /// <remarks/>
        MTL,
        
        /// <remarks/>
        KO,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_wellContext {
        
        private nameStruct fieldField;
        
        private nameStruct[] wellAliasField;
        
        private cs_wellDatum[] wellDatumField;
        
        private WellFluid fluidWellField;
        
        private bool fluidWellFieldSpecified;
        
        private WellDirection directionWellField;
        
        private bool directionWellFieldSpecified;
        
        /// <remarks/>
        /// <summary>Name of the field in which the well is located.</summary>
        [System.ComponentModel.DescriptionAttribute("Name of the field in which the well is located.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("field", DataType="nameStruct")]
        public nameStruct field {
            get {
                return this.fieldField;
            }
            set {
                this.fieldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An alias name associated with the well. If the wellName is associated with a naming system then it should be included in this list.</summary>
        [System.Xml.Serialization.XmlElementAttribute("wellAlias")]
        [System.ComponentModel.DescriptionAttribute("An alias name associated with the well. If the wellName is associated with a nami" +
            "ng system then it should be included in this list.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellAlias", DataType="nameStruct")]
        public nameStruct[] wellAlias {
            get {
                return this.wellAliasField;
            }
            set {
                this.wellAliasField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A datum to which elevations and depths are referenced.</summary>
        [System.Xml.Serialization.XmlElementAttribute("wellDatum")]
        [System.ComponentModel.DescriptionAttribute("A datum to which elevations and depths are referenced.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellDatum", DataType="cs_wellDatum")]
        public cs_wellDatum[] wellDatum {
            get {
                return this.wellDatumField;
            }
            set {
                this.wellDatumField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>POSC well fluid. The type of fluid being produced from or injected  into a well facility.</summary>
        [System.ComponentModel.DescriptionAttribute("POSC well fluid. The type of fluid being produced from or injected  into a well f" +
            "acility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fluidWell", DataType="WellFluid")]
        public WellFluid fluidWell {
            get {
                return this.fluidWellField;
            }
            set {
                this.fluidWellField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fluidWellSpecified {
            get {
                return this.fluidWellFieldSpecified;
            }
            set {
                this.fluidWellFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>POSC well direction. The direction of flow of the fluids in a well facility (generally, injected or produced, or some combination).</summary>
        [System.ComponentModel.DescriptionAttribute("POSC well direction. The direction of flow of the fluids in a well facility (gene" +
            "rally, injected or produced, or some combination).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("directionWell", DataType="WellDirection")]
        public WellDirection directionWell {
            get {
                return this.directionWellField;
            }
            set {
                this.directionWellField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool directionWellSpecified {
            get {
                return this.directionWellFieldSpecified;
            }
            set {
                this.directionWellFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class nameStruct {
        
        private string namingSystemField;
        
        private string valueField;
        
        /// <remarks/>
        /// <summary>The naming system within the name is (hopefully) unique.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The naming system within the name is (hopefully) unique.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("namingSystem", DataType="nameString")]
        public string namingSystem {
            get {
                return this.namingSystemField;
            }
            set {
                this.namingSystemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum WellFluid {
        
        /// <remarks/>
        air,
        
        /// <remarks/>
        condensate,
        
        /// <remarks/>
        dry,
        
        /// <remarks/>
        gas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas-water")]
        gaswater,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("non HC gas")]
        nonHCgas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("non HC gas -- CO2")]
        nonHCgasCO2,
        
        /// <remarks/>
        oil,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oil-gas")]
        oilgas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oil-water")]
        oilwater,
        
        /// <remarks/>
        steam,
        
        /// <remarks/>
        water,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("water -- brine")]
        waterbrine,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("water -- fresh water")]
        waterfreshwater,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum WellDirection {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("huff-n-puff")]
        huffnpuff,
        
        /// <remarks/>
        injector,
        
        /// <remarks/>
        producer,
        
        /// <remarks/>
        uncertain,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("PRODML", "1.3.1.1")]
    public partial class obj_wellTest {
        
        private string nameWellField;
        
        private string nameField;
        
        private endpointQualifiedDateTime dTimMinField;
        
        private endpointQualifiedDateTime dTimMaxField;
        
        private Energistics.DataAccess.Timestamp dTimCurrentField;
        
        private bool dTimCurrentFieldSpecified;
        
        private cs_wellContext wellContextField;
        
        private Energistics.DataAccess.Timestamp testDateField;
        
        private bool testDateFieldSpecified;
        
        private Energistics.DataAccess.Timestamp previousTestDateField;
        
        private bool previousTestDateFieldSpecified;
        
        private Energistics.DataAccess.Timestamp lastValidTestField;
        
        private bool lastValidTestFieldSpecified;
        
        private TestReason testReasonField;
        
        private bool testReasonFieldSpecified;
        
        private string testTypeField;
        
        private lengthMeasure chokeOrificeSizeField;
        
        private refNameString productFlowPortField;
        
        private refNameString productFlowUnitField;
        
        private refNameString productFlowModelField;
        
        private StandardTempPress standardTempPresField;
        
        private bool standardTempPresFieldSpecified;
        
        private ValidationState validationStateField;
        
        private bool validationStateFieldSpecified;
        
        private cs_wellTestValidationOperation[] validationOperationField;
        
        private object[] itemsField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the well test.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well test.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The minimum time index contained within the object. The minimum and maximum indexes are server query parameters and will be  populated with valid values in a "get" result. That is, all wellTest for a well in the specified period defined by the min/max. See the WITSML API Specification appendix on "Special Handling" of growing objects  for a description of the behavior related to this parameter.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The minimum time index contained within the object. The minimum and maximum indexes are server query parameters and will be  populated with valid values in a ""get"" result. That is, all wellTest for a well in the specified period defined by the min/max. See the WITSML API Specification appendix on ""Special Handling"" of growing objects  for a description of the behavior related to this parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimMin", DataType="endpointQualifiedDateTime")]
        public endpointQualifiedDateTime dTimMin {
            get {
                return this.dTimMinField;
            }
            set {
                this.dTimMinField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum time index contained within the object. The minimum and maximum indexes are server query parameters and will be  populated with valid values in a "get" result. See the WITSML API Specification appendix on "Special Handling" of growing objects  for a description of the behavior related to this parameter.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The maximum time index contained within the object. The minimum and maximum indexes are server query parameters and will be  populated with valid values in a ""get"" result. See the WITSML API Specification appendix on ""Special Handling"" of growing objects  for a description of the behavior related to this parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimMax", DataType="endpointQualifiedDateTime")]
        public endpointQualifiedDateTime dTimMax {
            get {
                return this.dTimMaxField;
            }
            set {
                this.dTimMaxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The definition of the "current time" index for this object. The current time index is a server query parameter which requests the  selection of a single node from a recurring set  (e.g., the data related to one point in a time series). That is, the "most recent" (at or before the specified time) wellTest for a well. See the WITSML API Specification appendix on "Special Handling" of growing objects  for a description of the behavior related to this parameter.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The definition of the ""current time"" index for this object. The current time index is a server query parameter which requests the  selection of a single node from a recurring set  (e.g., the data related to one point in a time series). That is, the ""most recent"" (at or before the specified time) wellTest for a well. See the WITSML API Specification appendix on ""Special Handling"" of growing objects  for a description of the behavior related to this parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimCurrent", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimCurrent {
            get {
                return this.dTimCurrentField;
            }
            set {
                this.dTimCurrentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimCurrentSpecified {
            get {
                return this.dTimCurrentFieldSpecified;
            }
            set {
                this.dTimCurrentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Contextual data about the well that was tested.</summary>
        [System.ComponentModel.DescriptionAttribute("Contextual data about the well that was tested.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellContext", DataType="cs_wellContext")]
        public cs_wellContext wellContext {
            get {
                return this.wellContextField;
            }
            set {
                this.wellContextField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date-time of well test.</summary>
        [System.ComponentModel.DescriptionAttribute("The date-time of well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testDate", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp testDate {
            get {
                return this.testDateField;
            }
            set {
                this.testDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool testDateSpecified {
            get {
                return this.testDateFieldSpecified;
            }
            set {
                this.testDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date-time of the previous well test.</summary>
        [System.ComponentModel.DescriptionAttribute("The date-time of the previous well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("previousTestDate", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp previousTestDate {
            get {
                return this.previousTestDateField;
            }
            set {
                this.previousTestDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool previousTestDateSpecified {
            get {
                return this.previousTestDateFieldSpecified;
            }
            set {
                this.previousTestDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date-time of the last valid well test.</summary>
        [System.ComponentModel.DescriptionAttribute("The date-time of the last valid well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lastValidTest", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp lastValidTest {
            get {
                return this.lastValidTestField;
            }
            set {
                this.lastValidTestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastValidTestSpecified {
            get {
                return this.lastValidTestFieldSpecified;
            }
            set {
                this.lastValidTestFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The reason for the well test: initial, periodic, revision.</summary>
        [System.ComponentModel.DescriptionAttribute("The reason for the well test: initial, periodic, revision.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testReason", DataType="TestReason")]
        public TestReason testReason {
            get {
                return this.testReasonField;
            }
            set {
                this.testReasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool testReasonSpecified {
            get {
                return this.testReasonFieldSpecified;
            }
            set {
                this.testReasonFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of well production test.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The type of well production test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testType", DataType="kindString")]
        public string testType {
            get {
                return this.testTypeField;
            }
            set {
                this.testTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>DEPRECATED: use productionTest/wellheadData/chokeOrificeSize or injectionTest/chokeOrificeSize. The size of the opening in the flow choke at the wellhead.</summary>
        [System.ComponentModel.DescriptionAttribute("DEPRECATED: use productionTest/wellheadData/chokeOrificeSize or injectionTest/cho" +
            "keOrificeSize. The size of the opening in the flow choke at the wellhead.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("chokeOrificeSize", DataType="lengthMeasure")]
        public lengthMeasure chokeOrificeSize {
            get {
                return this.chokeOrificeSizeField;
            }
            set {
                this.chokeOrificeSizeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A port on a Product Flow Unit that is represented by this test.</summary>
        [System.ComponentModel.DescriptionAttribute("A port on a Product Flow Unit that is represented by this test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("productFlowPort", DataType="refNameString")]
        public refNameString productFlowPort {
            get {
                return this.productFlowPortField;
            }
            set {
                this.productFlowPortField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The Product Flow Unit represented by the port. This is defined within the Product Flow Model</summary>
        [System.ComponentModel.DescriptionAttribute("The Product Flow Unit represented by the port. This is defined within the Product" +
            " Flow Model")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("productFlowUnit", DataType="refNameString")]
        public refNameString productFlowUnit {
            get {
                return this.productFlowUnitField;
            }
            set {
                this.productFlowUnitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The Product Flow Model that represents the above Product Flow Unit.</summary>
        [System.ComponentModel.DescriptionAttribute("The Product Flow Model that represents the above Product Flow Unit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("productFlowModel", DataType="refNameString")]
        public refNameString productFlowModel {
            get {
                return this.productFlowModelField;
            }
            set {
                this.productFlowModelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines the standard temperature and pressure to which all standard volumes in this report have been corrected. This applies to all elements whose name is suffixed by StdTempPres.</summary>
        [System.ComponentModel.DescriptionAttribute("Defines the standard temperature and pressure to which all standard volumes in th" +
            "is report have been corrected. This applies to all elements whose name is suffix" +
            "ed by StdTempPres.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("standardTempPres", DataType="StandardTempPress")]
        public StandardTempPress standardTempPres {
            get {
                return this.standardTempPresField;
            }
            set {
                this.standardTempPresField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool standardTempPresSpecified {
            get {
                return this.standardTempPresFieldSpecified;
            }
            set {
                this.standardTempPresFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The overall state of the test with respect to validation operations.</summary>
        [System.ComponentModel.DescriptionAttribute("The overall state of the test with respect to validation operations.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("validationState", DataType="ValidationState")]
        public ValidationState validationState {
            get {
                return this.validationStateField;
            }
            set {
                this.validationStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool validationStateSpecified {
            get {
                return this.validationStateFieldSpecified;
            }
            set {
                this.validationStateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines the results of one validation operation.</summary>
        [System.Xml.Serialization.XmlElementAttribute("validationOperation")]
        [System.ComponentModel.DescriptionAttribute("Defines the results of one validation operation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("validationOperation", DataType="cs_wellTestValidationOperation")]
        public cs_wellTestValidationOperation[] validationOperation {
            get {
                return this.validationOperationField;
            }
            set {
                this.validationOperationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("fluidLevelTest", typeof(cs_wellTestFluidLevelTest))]
        [System.Xml.Serialization.XmlElementAttribute("injectionTest", typeof(cs_wellTestInjectionTestData))]
        [System.Xml.Serialization.XmlElementAttribute("productionTest", typeof(cs_wellTestProductionTestData))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fluidLevelTest", DataType="cs_wellTestFluidLevelTest")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("productionTest", DataType="cs_wellTestProductionTestData")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("injectionTest", DataType="cs_wellTestInjectionTestData")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidParentString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of an object. This should not be used for child nodes within an object. For an independent object, the value may be globally unique. For a dependent object, the value must be unique (for the same object type) within the context of the parent object. There should be no assumption as to the semantic content of this attribute. The purpose of this type is to facilitate modifying the optionality in derived schemas.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of an object. This should not be used for child nodes within an object. For an independent object, the value may be globally unique. For a dependent object, the value must be unique (for the same object type) within the context of the parent object. There should be no assumption as to the semantic content of this attribute. The purpose of this type is to facilitate modifying the optionality in derived schemas.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class endpointQualifiedDateTime {
        
        private EndpointQualifier endpointField;
        
        private bool endpointFieldSpecified;
        
        private System.DateTime valueField;
        
        /// <remarks/>
        /// <summary>The default is "inclusive".</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute("The default is \"inclusive\".")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("endpoint", DataType="EndpointQualifier")]
        public EndpointQualifier endpoint {
            get {
                return this.endpointField;
            }
            set {
                this.endpointField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endpointSpecified {
            get {
                return this.endpointFieldSpecified;
            }
            set {
                this.endpointFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public System.DateTime Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum EndpointQualifier {
        
        /// <remarks/>
        inclusive,
        
        /// <remarks/>
        exclusive,
        
        /// <remarks/>
        extensive,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("overlap extensive")]
        overlapextensive,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum TestReason {
        
        /// <remarks/>
        initial,
        
        /// <remarks/>
        periodic,
        
        /// <remarks/>
        revision,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum StandardTempPress {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0 degC 1 atm")]
        Item0degC1atm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("15 degC 1 atm")]
        Item15degC1atm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("60 degF 1 atm")]
        Item60degF1atm,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ValidationState {
        
        /// <remarks/>
        unvalidated,
        
        /// <remarks/>
        validating,
        
        /// <remarks/>
        validated,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class endpointQuantity {
        
        private EndpointQualifierInterval endpointField;
        
        private double valueField;
        
        /// <remarks/>
        /// <summary>Defines the semantics (inclusive or exclusive) of the endpoint  within the context of the interval.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Defines the semantics (inclusive or exclusive) of the endpoint  within the contex" +
            "t of the interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("endpoint", DataType="EndpointQualifierInterval")]
        public EndpointQualifierInterval endpoint {
            get {
                return this.endpointField;
            }
            set {
                this.endpointField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum EndpointQualifierInterval {
        
        /// <remarks/>
        inclusive,
        
        /// <remarks/>
        exclusive,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_timeSeriesThreshold {
        
        private endpointQuantity thresholdMinimumField;
        
        private endpointQuantity thresholdMaximumField;
        
        private timeMeasure durationField;
        
        /// <remarks/>
        /// <summary>The lower bound of the threshold for testing whether values are within a specific range. Element "unit" defines the unit of measure of this value. At least one of minimumValue and maximumValue must be specified. The thresholdMinimum must be less than thresholdMaximum. If thresholdMinimum is not specified then the minimum shall be  assumed to be minus infinity.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The lower bound of the threshold for testing whether values are within a specific range. Element ""unit"" defines the unit of measure of this value. At least one of minimumValue and maximumValue must be specified. The thresholdMinimum must be less than thresholdMaximum. If thresholdMinimum is not specified then the minimum shall be  assumed to be minus infinity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("thresholdMinimum", DataType="endpointQuantity")]
        public endpointQuantity thresholdMinimum {
            get {
                return this.thresholdMinimumField;
            }
            set {
                this.thresholdMinimumField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The upper bound of the threshold for testing whether values are within a specific range. Element "unit" defines the unit of measure of this value. At least one of minimumValue and maximumValue must be specified. The thresholdMaximum must be greater than thresholdMinimum. If thresholdMaximum is not specified then the maximum shall be  assumed to be plus infinity.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The upper bound of the threshold for testing whether values are within a specific range. Element ""unit"" defines the unit of measure of this value. At least one of minimumValue and maximumValue must be specified. The thresholdMaximum must be greater than thresholdMinimum. If thresholdMaximum is not specified then the maximum shall be  assumed to be plus infinity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("thresholdMaximum", DataType="endpointQuantity")]
        public endpointQuantity thresholdMaximum {
            get {
                return this.thresholdMaximumField;
            }
            set {
                this.thresholdMaximumField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The sum of the time intervals over the range of dTimMin to dTimMax  during which the values were within the specified threshold range.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The sum of the time intervals over the range of dTimMin to dTimMax  during which " +
            "the values were within the specified threshold range.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("duration", DataType="timeMeasure")]
        public timeMeasure duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class endpointDateTime {
        
        private EndpointQualifierInterval endpointField;
        
        private System.DateTime valueField;
        
        /// <remarks/>
        /// <summary>Defines the semantics (inclusive or exclusive) of the endpoint  within the context of the interval.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Defines the semantics (inclusive or exclusive) of the endpoint  within the contex" +
            "t of the interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("endpoint", DataType="EndpointQualifierInterval")]
        public EndpointQualifierInterval endpoint {
            get {
                return this.endpointField;
            }
            set {
                this.endpointField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public System.DateTime Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("PRODML", "1.3.1.1")]
    public partial class obj_timeSeriesStatistic {
        
        private string nameField;
        
        private keywordValueStruct[] keyField;
        
        private string unitField;
        
        private MeasureClass measureClassField;
        
        private bool measureClassFieldSpecified;
        
        private string commentField;
        
        private endpointDateTime dTimMinField;
        
        private endpointDateTime dTimMaxField;
        
        private double minimumField;
        
        private bool minimumFieldSpecified;
        
        private double maximumField;
        
        private bool maximumFieldSpecified;
        
        private double sumField;
        
        private bool sumFieldSpecified;
        
        private double meanField;
        
        private bool meanFieldSpecified;
        
        private double medianField;
        
        private bool medianFieldSpecified;
        
        private double standardDeviationField;
        
        private bool standardDeviationFieldSpecified;
        
        private cs_timeSeriesThreshold timeAtThresholdField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the time series.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the time series.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A keyword value pair which characterizes the underlying nature of this value.  The key value may provide part of the unique identity of an instance of a concept or  it may characterize the underlying concept. The key value will be defined within the specified keyword naming system. This is essentially a classification of the data in the specified system (keyword).</summary>
        [System.Xml.Serialization.XmlElementAttribute("key")]
        [System.ComponentModel.DescriptionAttribute(@"A keyword value pair which characterizes the underlying nature of this value.  The key value may provide part of the unique identity of an instance of a concept or  it may characterize the underlying concept. The key value will be defined within the specified keyword naming system. This is essentially a classification of the data in the specified system (keyword).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("key", DataType="keywordValueStruct")]
        public keywordValueStruct[] key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>If the time series is a measure then this specifies the unit of measure. The unit acronym must be chosen from the list that is valid for the measure class. If this is specified then the measure class must be specified.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(24)]
        [System.ComponentModel.DescriptionAttribute("If the time series is a measure then this specifies the unit of measure. The unit" +
            " acronym must be chosen from the list that is valid for the measure class. If th" +
            "is is specified then the measure class must be specified.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("unit", DataType="uomString")]
        public string unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines the type of measure that the time series represents. If this is specified then unit must be specified. This may be redundant to some information in the keys but it is important for allowing an application to understand the nature of a measure value even if it does not understand all of the underlying nature.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Defines the type of measure that the time series represents. If this is specified then unit must be specified. This may be redundant to some information in the keys but it is important for allowing an application to understand the nature of a measure value even if it does not understand all of the underlying nature.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("measureClass", DataType="MeasureClass")]
        public MeasureClass measureClass {
            get {
                return this.measureClassField;
            }
            set {
                this.measureClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool measureClassSpecified {
            get {
                return this.measureClassFieldSpecified;
            }
            set {
                this.measureClassFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A comment about the time series.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A comment about the time series.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The lower bound of the analyzed time range. Only data within the range was included in the analysis. The endpoint attribute specifies whether the data was inclusive or exclusive of this point.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The lower bound of the analyzed time range. Only data within the range was includ" +
            "ed in the analysis. The endpoint attribute specifies whether the data was inclus" +
            "ive or exclusive of this point.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimMin", DataType="endpointDateTime")]
        public endpointDateTime dTimMin {
            get {
                return this.dTimMinField;
            }
            set {
                this.dTimMinField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The upper bound of the analyzed time range. Only data within the range was included in the analysis. The endpoint attribute specifies whether the data was inclusive or exclusive of this point.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The upper bound of the analyzed time range. Only data within the range was includ" +
            "ed in the analysis. The endpoint attribute specifies whether the data was inclus" +
            "ive or exclusive of this point.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimMax", DataType="endpointDateTime")]
        public endpointDateTime dTimMax {
            get {
                return this.dTimMaxField;
            }
            set {
                this.dTimMaxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The minimum value within the time range of dTimMin to dTimMax. Element "unit" defines the unit of measure of this value.</summary>
        [System.ComponentModel.DescriptionAttribute("The minimum value within the time range of dTimMin to dTimMax. Element \"unit\" def" +
            "ines the unit of measure of this value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("minimum", DataType="unitlessQuantity")]
        public double minimum {
            get {
                return this.minimumField;
            }
            set {
                this.minimumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool minimumSpecified {
            get {
                return this.minimumFieldSpecified;
            }
            set {
                this.minimumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum value within the time range of dTimMin to dTimMax. Element "unit" defines the unit of measure of this value.</summary>
        [System.ComponentModel.DescriptionAttribute("The maximum value within the time range of dTimMin to dTimMax. Element \"unit\" def" +
            "ines the unit of measure of this value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("maximum", DataType="unitlessQuantity")]
        public double maximum {
            get {
                return this.maximumField;
            }
            set {
                this.maximumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maximumSpecified {
            get {
                return this.maximumFieldSpecified;
            }
            set {
                this.maximumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The sum of all values within the time range of dTimMin to dTimMax. Element "unit" defines the unit of measure of this value.</summary>
        [System.ComponentModel.DescriptionAttribute("The sum of all values within the time range of dTimMin to dTimMax. Element \"unit\"" +
            " defines the unit of measure of this value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sum", DataType="unitlessQuantity")]
        public double sum {
            get {
                return this.sumField;
            }
            set {
                this.sumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sumSpecified {
            get {
                return this.sumFieldSpecified;
            }
            set {
                this.sumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The arithmetic mean (sum divided by count) of all values within the time range of dTimMin to dTimMax. Element "unit" defines the unit of measure of this value.</summary>
        [System.ComponentModel.DescriptionAttribute("The arithmetic mean (sum divided by count) of all values within the time range of" +
            " dTimMin to dTimMax. Element \"unit\" defines the unit of measure of this value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mean", DataType="unitlessQuantity")]
        public double mean {
            get {
                return this.meanField;
            }
            set {
                this.meanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool meanSpecified {
            get {
                return this.meanFieldSpecified;
            }
            set {
                this.meanFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The median value of all values within the time range of dTimMin to dTimMax. Element "unit" defines the unit of measure of this value.</summary>
        [System.ComponentModel.DescriptionAttribute("The median value of all values within the time range of dTimMin to dTimMax. Eleme" +
            "nt \"unit\" defines the unit of measure of this value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("median", DataType="unitlessQuantity")]
        public double median {
            get {
                return this.medianField;
            }
            set {
                this.medianField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool medianSpecified {
            get {
                return this.medianFieldSpecified;
            }
            set {
                this.medianFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The standard deviation of all values within the time range of dTimMin to dTimMax. Element "unit" defines the unit of measure of this value.</summary>
        [System.ComponentModel.DescriptionAttribute("The standard deviation of all values within the time range of dTimMin to dTimMax." +
            " Element \"unit\" defines the unit of measure of this value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("standardDeviation", DataType="unitlessQuantity")]
        public double standardDeviation {
            get {
                return this.standardDeviationField;
            }
            set {
                this.standardDeviationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool standardDeviationSpecified {
            get {
                return this.standardDeviationFieldSpecified;
            }
            set {
                this.standardDeviationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines a value threshold window and the time duration where values  (within the time range of dTimMin to dTimMax) were within that window.</summary>
        [System.ComponentModel.DescriptionAttribute("Defines a value threshold window and the time duration where values  (within the " +
            "time range of dTimMin to dTimMax) were within that window.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("timeAtThreshold", DataType="cs_timeSeriesThreshold")]
        public cs_timeSeriesThreshold timeAtThreshold {
            get {
                return this.timeAtThresholdField;
            }
            set {
                this.timeAtThresholdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of an object. This should not be used for child nodes within an object. For an independent object, the value may be globally unique. For a dependent object, the value must be unique (for the same object type) within the context of the parent object. There should be no assumption as to the semantic content of this attribute. The purpose of this type is to facilitate modifying the optionality in derived schemas.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of an object. This should not be used for child nodes within an object. For an independent object, the value may be globally unique. For a dependent object, the value must be unique (for the same object type) within the context of the parent object. There should be no assumption as to the semantic content of this attribute. The purpose of this type is to facilitate modifying the optionality in derived schemas.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class keywordValueStruct {
        
        private TimeSeriesKeyword keywordField;
        
        private string valueField;
        
        /// <remarks/>
        /// <summary>The keyword within which the value is unique. The concept of a keyword is very close to the concept of a classification system.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The keyword within which the value is unique. The concept of a keyword is very cl" +
            "ose to the concept of a classification system.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("keyword", DataType="TimeSeriesKeyword")]
        public TimeSeriesKeyword keyword {
            get {
                return this.keywordField;
            }
            set {
                this.keywordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum TimeSeriesKeyword {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("asset identifier")]
        assetidentifier,
        
        /// <remarks/>
        qualifier,
        
        /// <remarks/>
        subqualifier,
        
        /// <remarks/>
        product,
        
        /// <remarks/>
        flow,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class timeSeriesStringSample {
        
        private System.DateTime dTimField;
        
        private bool dTimFieldSpecified;
        
        private ValueStatus statusField;
        
        private bool statusFieldSpecified;
        
        private string valueField;
        
        /// <remarks/>
        /// <summary>The date and time at which the value applies. If no time is specified then the value is static and only one sample can be defined. Either dTime or value or both must be specified. If the 'status' attribute is absent and the value is not "NaN", the data value can be assumed to be good with no restrictions.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"The date and time at which the value applies. If no time is specified then the value is static and only one sample can be defined. Either dTime or value or both must be specified. If the 'status' attribute is absent and the value is not ""NaN"", the data value can be assumed to be good with no restrictions.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public System.DateTime dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimSpecified {
            get {
                return this.dTimFieldSpecified;
            }
            set {
                this.dTimFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An indicator of the quality of the value.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute("An indicator of the quality of the value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("status", DataType="ValueStatus")]
        public ValueStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class timeSeriesDoubleSample {
        
        private System.DateTime dTimField;
        
        private bool dTimFieldSpecified;
        
        private ValueStatus statusField;
        
        private bool statusFieldSpecified;
        
        private double valueField;
        
        /// <remarks/>
        /// <summary>The date and time at which the value applies. If no time is specified then the value is static and only one sample can be defined. Either dTime or value or both must be specified. If the 'status' attribute is absent and the value is not "NaN", the data value can be assumed to be good with no restrictions.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"The date and time at which the value applies. If no time is specified then the value is static and only one sample can be defined. Either dTime or value or both must be specified. If the 'status' attribute is absent and the value is not ""NaN"", the data value can be assumed to be good with no restrictions.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public System.DateTime dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimSpecified {
            get {
                return this.dTimFieldSpecified;
            }
            set {
                this.dTimFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An indicator of the quality of the value.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute("An indicator of the quality of the value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("status", DataType="ValueStatus")]
        public ValueStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("PRODML", "1.3.1.1")]
    public partial class obj_timeSeriesData {
        
        private string nameField;
        
        private keywordValueStruct[] keyField;
        
        private string unitField;
        
        private MeasureClass measureClassField;
        
        private bool measureClassFieldSpecified;
        
        private string commentField;
        
        private object[] itemsField;
        
        private cs_customData customDataField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the time series.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the time series.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A keyword value pair which characterizes the underlying nature of this value.  The key value may provide part of the unique identity of an instance of a concept or  it may characterize the underlying concept. The key value will be defined within the specified keyword naming system. This is essentially a classification of the data in the specified system (keyword).</summary>
        [System.Xml.Serialization.XmlElementAttribute("key")]
        [System.ComponentModel.DescriptionAttribute(@"A keyword value pair which characterizes the underlying nature of this value.  The key value may provide part of the unique identity of an instance of a concept or  it may characterize the underlying concept. The key value will be defined within the specified keyword naming system. This is essentially a classification of the data in the specified system (keyword).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("key", DataType="keywordValueStruct")]
        public keywordValueStruct[] key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>If the time series is a measure then this specifies the unit of measure. The unit acronym must be chosen from the list that is valid for the measure class. If this is specified then the measure class must be specified.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(24)]
        [System.ComponentModel.DescriptionAttribute("If the time series is a measure then this specifies the unit of measure. The unit" +
            " acronym must be chosen from the list that is valid for the measure class. If th" +
            "is is specified then the measure class must be specified.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("unit", DataType="uomString")]
        public string unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines the type of measure that the time series represents. If this is specified then unit must be specified. This may be redundant to some information in the keys but it is important for allowing an application to understand the nature of a measure value even if it does not understand all of the underlying nature.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Defines the type of measure that the time series represents. If this is specified then unit must be specified. This may be redundant to some information in the keys but it is important for allowing an application to understand the nature of a measure value even if it does not understand all of the underlying nature.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("measureClass", DataType="MeasureClass")]
        public MeasureClass measureClass {
            get {
                return this.measureClassField;
            }
            set {
                this.measureClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool measureClassSpecified {
            get {
                return this.measureClassFieldSpecified;
            }
            set {
                this.measureClassFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A comment about the time series.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A comment about the time series.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("doubleValue", typeof(timeSeriesDoubleSample))]
        [System.Xml.Serialization.XmlElementAttribute("stringValue", typeof(timeSeriesStringSample))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("doubleValue", DataType="timeSeriesDoubleSample")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stringValue", DataType="timeSeriesStringSample")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of an object. This should not be used for child nodes within an object. For an independent object, the value may be globally unique. For a dependent object, the value must be unique (for the same object type) within the context of the parent object. There should be no assumption as to the semantic content of this attribute. The purpose of this type is to facilitate modifying the optionality in derived schemas.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of an object. This should not be used for child nodes within an object. For an independent object, the value may be globally unique. For a dependent object, the value must be unique (for the same object type) within the context of the parent object. There should be no assumption as to the semantic content of this attribute. The purpose of this type is to facilitate modifying the optionality in derived schemas.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productVolumeBalanceEvent {
        
        private System.DateTime dateField;
        
        private BalanceEventKind kindField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The date of the event.</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The date of the event.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("date", DataType="date")]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The kind of event.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The kind of event.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("kind", DataType="BalanceEventKind")]
        public BalanceEventKind kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum BalanceEventKind {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bill of lading")]
        billoflading,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("transaction date")]
        transactiondate,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productVolumeBalanceDetail {
        
        private refNameString ownerField;
        
        private refNameString sourceUnitField;
        
        private volumePerVolumeMeasurePercent shareField;
        
        private string accountNumberField;
        
        private cs_productVolumeBalanceEvent[] eventField;
        
        private cs_volumeValue[] volumeValueField;
        
        private refNameString[] sampleAnalysisResultField;
        
        private cs_productVolumeComponentContent[] componentContentField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>A pointer to the business unit which owns the product.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A pointer to the business unit which owns the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("owner", DataType="refNameString")]
        public refNameString owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Points to the business unit from which the product originated.</summary>
        [System.ComponentModel.DescriptionAttribute("Points to the business unit from which the product originated.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sourceUnit", DataType="refNameString")]
        public refNameString sourceUnit {
            get {
                return this.sourceUnitField;
            }
            set {
                this.sourceUnitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The owner's share of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The owner\'s share of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("share", DataType="volumePerVolumeMeasurePercent")]
        public volumePerVolumeMeasurePercent share {
            get {
                return this.shareField;
            }
            set {
                this.shareField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An account identifier for the balance.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("An account identifier for the balance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("accountNumber", DataType="kindString")]
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A dated event related to the balance.</summary>
        [System.Xml.Serialization.XmlElementAttribute("event")]
        [System.ComponentModel.DescriptionAttribute("A dated event related to the balance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("event", DataType="cs_productVolumeBalanceEvent")]
        public cs_productVolumeBalanceEvent[] @event {
            get {
                return this.eventField;
            }
            set {
                this.eventField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The volume of the fluid, possibly corrected to specific  conditions of temperature and pressure. Different volumes may be defined at different conditions but they should all represent the same mass of material.</summary>
        [System.Xml.Serialization.XmlElementAttribute("volumeValue")]
        [System.ComponentModel.DescriptionAttribute("The volume of the fluid, possibly corrected to specific  conditions of temperatur" +
            "e and pressure. Different volumes may be defined at different conditions but the" +
            "y should all represent the same mass of material.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volumeValue", DataType="cs_volumeValue")]
        public cs_volumeValue[] volumeValue {
            get {
                return this.volumeValueField;
            }
            set {
                this.volumeValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to a fluid sample analysis result object that is relevant to the balance.  This sample may have been acquired previous to or after this period and is  used for determining the allocated characteristics.</summary>
        [System.Xml.Serialization.XmlElementAttribute("sampleAnalysisResult")]
        [System.ComponentModel.DescriptionAttribute("A pointer to a fluid sample analysis result object that is relevant to the balanc" +
            "e.  This sample may have been acquired previous to or after this period and is  " +
            "used for determining the allocated characteristics.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sampleAnalysisResult", DataType="refNameString")]
        public refNameString[] sampleAnalysisResult {
            get {
                return this.sampleAnalysisResultField;
            }
            set {
                this.sampleAnalysisResultField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The relative amount of a component product in the product.</summary>
        [System.Xml.Serialization.XmlElementAttribute("componentContent")]
        [System.ComponentModel.DescriptionAttribute("The relative amount of a component product in the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("componentContent", DataType="cs_productVolumeComponentContent")]
        public cs_productVolumeComponentContent[] componentContent {
            get {
                return this.componentContentField;
            }
            set {
                this.componentContentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_volumeValue {
        
        private volumeQualifiedMeasure volumeField;
        
        private modulusOfCompressionMeasure grossCalorificValueField;
        
        private object[] itemsField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The volume of the product. If the 'status' attribute is absent and the value is not "NaN",  the data value can be assumed to be good with no restrictions. A value of "NaN" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"The volume of the product. If the 'status' attribute is absent and the value is not ""NaN"",  the data value can be assumed to be good with no restrictions. A value of ""NaN"" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volume", DataType="volumeQualifiedMeasure")]
        public volumeQualifiedMeasure volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The amount of heat which would be released by the complete combustion in air of the above volume of product.  This is considered to be a condition of measurement (i.e., the volume may have been converted to this condition).</summary>
        [System.ComponentModel.DescriptionAttribute("The amount of heat which would be released by the complete combustion in air of t" +
            "he above volume of product.  This is considered to be a condition of measurement" +
            " (i.e., the volume may have been converted to this condition).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("grossCalorificValue", DataType="modulusOfCompressionMeasure")]
        public modulusOfCompressionMeasure grossCalorificValue {
            get {
                return this.grossCalorificValueField;
            }
            set {
                this.grossCalorificValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("pres", typeof(pressureMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("standardTempPres", typeof(StandardCondition))]
        [System.Xml.Serialization.XmlElementAttribute("temp", typeof(thermodynamicTemperatureMeasure))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("standardTempPres", DataType="StandardCondition")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("temp", DataType="thermodynamicTemperatureMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pres", DataType="pressureMeasure")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum StandardCondition {
        
        /// <remarks/>
        ambient,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0 degC 1 atm")]
        Item0degC1atm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("15 degC 1 atm")]
        Item15degC1atm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("60 degF 1 atm")]
        Item60degF1atm,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productVolumeComponentContent {
        
        private ReportingProduct kindField;
        
        private ReportingProduct referenceKindField;
        
        private bool referenceKindFieldSpecified;
        
        private volumePerVolumeMeasure gorField;
        
        private volumePerVolumeMeasure gorMTDField;
        
        private volumePerVolumeMeasure gasLiquidRatioField;
        
        private massConcentrationMeasure waterConcMassField;
        
        private volumePerVolumeMeasure waterConcVolField;
        
        private pressureMeasure atmosphereField;
        
        private cs_volumeValue[] volumeValueField;
        
        private volumeQualifiedMeasure volumeField;
        
        private volumeQualifiedMeasure volumeStdField;
        
        private cs_flowRateValue[] flowRateValueField;
        
        private volumeFlowRateQualifiedMeasure flowRateField;
        
        private thermodynamicTemperatureMeasure tempField;
        
        private pressureMeasure presField;
        
        private pressureMeasure absoluteMinPresField;
        
        private cs_productVolumePortDifference[] portDiffField;
        
        private massMeasure massField;
        
        private workMeasure workField;
        
        private volumePerVolumeMeasure efficiencyField;
        
        private pressureMeasure rvpField;
        
        private pressureMeasure tvpField;
        
        private volumePerVolumeMeasure bswField;
        
        private volumePerVolumeMeasure bswPreviousField;
        
        private cs_densityValue[] densityValueField;
        
        private densityMeasure densityField;
        
        private massFlowRateMeasure densityFlowRateField;
        
        private densityMeasure densityStdField;
        
        private volumePerVolumeMeasure concentrationField;
        
        private double molecularWeightField;
        
        private bool molecularWeightFieldSpecified;
        
        private massConcentrationMeasurePercent weightPercentField;
        
        private molarFractionMeasurePercent molePercentField;
        
        private amountOfSubstanceMeasure moleAmtField;
        
        private dimensionlessMeasure sgField;
        
        private thermodynamicTemperatureMeasure hcDewpointField;
        
        private thermodynamicTemperatureMeasure waterDewpointField;
        
        private modulusOfCompressionMeasure wobbeIndexField;
        
        private modulusOfCompressionMeasure grossCalorificValueStdField;
        
        private pressureMeasure rvpStabilizedCrudeField;
        
        private volumePerVolumeMeasure bswStabilizedCrudeField;
        
        private densityMeasure densityStabilizedCrudeField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The type of product whose relative content is being described. This should be a specific component (e.g., water) rather than a phase (e.g., aqueous).</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The type of product whose relative content is being described. This should be a s" +
            "pecific component (e.g., water) rather than a phase (e.g., aqueous).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("kind", DataType="ReportingProduct")]
        public ReportingProduct kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of product to which the product is being compared. If not given then the product is being compared against the overall flow stream.</summary>
        [System.ComponentModel.DescriptionAttribute("The type of product to which the product is being compared. If not given then the" +
            " product is being compared against the overall flow stream.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("referenceKind", DataType="ReportingProduct")]
        public ReportingProduct referenceKind {
            get {
                return this.referenceKindField;
            }
            set {
                this.referenceKindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool referenceKindSpecified {
            get {
                return this.referenceKindFieldSpecified;
            }
            set {
                this.referenceKindFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gas oil ratio. The ratio between the total produced gas volume and the total produced oil volume including oil and gas volumes used on the installation.</summary>
        [System.ComponentModel.DescriptionAttribute("Gas oil ratio. The ratio between the total produced gas volume and the total prod" +
            "uced oil volume including oil and gas volumes used on the installation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gor", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure gor {
            get {
                return this.gorField;
            }
            set {
                this.gorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gas oil ratio month to date. The gas oil ratio from the beginning of the month  to the end of the reporting priod.</summary>
        [System.ComponentModel.DescriptionAttribute("Gas oil ratio month to date. The gas oil ratio from the beginning of the month  t" +
            "o the end of the reporting priod.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gorMTD", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure gorMTD {
            get {
                return this.gorMTDField;
            }
            set {
                this.gorMTDField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The volumetric ratio of gas to liquid for all products in the whole flow.</summary>
        [System.ComponentModel.DescriptionAttribute("The volumetric ratio of gas to liquid for all products in the whole flow.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasLiquidRatio", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure gasLiquidRatio {
            get {
                return this.gasLiquidRatioField;
            }
            set {
                this.gasLiquidRatioField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Water concentration mass basis.  The ratio of water produced compared to the mass of total liquids produced.</summary>
        [System.ComponentModel.DescriptionAttribute("Water concentration mass basis.  The ratio of water produced compared to the mass" +
            " of total liquids produced.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("waterConcMass", DataType="massConcentrationMeasure")]
        public massConcentrationMeasure waterConcMass {
            get {
                return this.waterConcMassField;
            }
            set {
                this.waterConcMassField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Water concentration volume basis. The ratio of water produced compared to the mass of total liquids produced.</summary>
        [System.ComponentModel.DescriptionAttribute("Water concentration volume basis. The ratio of water produced compared to the mas" +
            "s of total liquids produced.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("waterConcVol", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure waterConcVol {
            get {
                return this.waterConcVolField;
            }
            set {
                this.waterConcVolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The average atmospheric pressure during the reporting period.</summary>
        [System.ComponentModel.DescriptionAttribute("The average atmospheric pressure during the reporting period.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("atmosphere", DataType="pressureMeasure")]
        public pressureMeasure atmosphere {
            get {
                return this.atmosphereField;
            }
            set {
                this.atmosphereField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The volume of the fluid, possibly corrected to specific  conditions of temperature and pressure. A positive value for an inlet port indicates flow into the port. A negative value for an inlet port indicates flow out of the port. A positive value for an outlet port indicates flow out of the port. A negative value for an outlet port indicates flow into of the port. This convention is designed such that a positive sign indicates an expected condition based on the intended port direction while a negative sign indicates an anomolous condition. If more than one value is specified then all values must represent the same  opinion of the volume (at different conditions).</summary>
        [System.Xml.Serialization.XmlElementAttribute("volumeValue")]
        [System.ComponentModel.DescriptionAttribute(@"The volume of the fluid, possibly corrected to specific  conditions of temperature and pressure. A positive value for an inlet port indicates flow into the port. A negative value for an inlet port indicates flow out of the port. A positive value for an outlet port indicates flow out of the port. A negative value for an outlet port indicates flow into of the port. This convention is designed such that a positive sign indicates an expected condition based on the intended port direction while a negative sign indicates an anomolous condition. If more than one value is specified then all values must represent the same  opinion of the volume (at different conditions).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volumeValue", DataType="cs_volumeValue")]
        public cs_volumeValue[] volumeValue {
            get {
                return this.volumeValueField;
            }
            set {
                this.volumeValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>DEPRECATED. Use volumeValue for new work. The uncorrected volume of the product. The sign of the value should conform to the above description of volumeValue. If the 'status' attribute is absent and the value is not "NaN",  the data value can be assumed to be good with no restrictions. A value of "NaN" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.</summary>
        [System.ComponentModel.DescriptionAttribute(@"DEPRECATED. Use volumeValue for new work. The uncorrected volume of the product. The sign of the value should conform to the above description of volumeValue. If the 'status' attribute is absent and the value is not ""NaN"",  the data value can be assumed to be good with no restrictions. A value of ""NaN"" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volume", DataType="volumeQualifiedMeasure")]
        public volumeQualifiedMeasure volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>DEPRECATED. Use volumeValue for new work. The volume of the fluid, corrected to standard  conditions of temperature and pressure.  The sign of the value should conform to the above description of volumeValue. If the 'status' attribute is absent and the value is not "NaN",  the data value can be assumed to be good with no restrictions. A value of "NaN" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.</summary>
        [System.ComponentModel.DescriptionAttribute(@"DEPRECATED. Use volumeValue for new work. The volume of the fluid, corrected to standard  conditions of temperature and pressure.  The sign of the value should conform to the above description of volumeValue. If the 'status' attribute is absent and the value is not ""NaN"",  the data value can be assumed to be good with no restrictions. A value of ""NaN"" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volumeStd", DataType="volumeQualifiedMeasure")]
        public volumeQualifiedMeasure volumeStd {
            get {
                return this.volumeStdField;
            }
            set {
                this.volumeStdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The flow rate of the product, possibly corrected to specific  conditions of temperature and pressure. The sign of the value should conform to the above description of volumeValue. If more than one value is specified then all values must represent the same  opinion of the flow rate (at different conditions).</summary>
        [System.Xml.Serialization.XmlElementAttribute("flowRateValue")]
        [System.ComponentModel.DescriptionAttribute(@"The flow rate of the product, possibly corrected to specific  conditions of temperature and pressure. The sign of the value should conform to the above description of volumeValue. If more than one value is specified then all values must represent the same  opinion of the flow rate (at different conditions).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowRateValue", DataType="cs_flowRateValue")]
        public cs_flowRateValue[] flowRateValue {
            get {
                return this.flowRateValueField;
            }
            set {
                this.flowRateValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>DEPRECATED. Use flowRateValue for new work. The flow rate of the product. The sign of the value should conform to the above description of volume. If the 'status' attribute is absent and the value is not "NaN",  the data value can be assumed to be good with no restrictions. A value of "NaN" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.</summary>
        [System.ComponentModel.DescriptionAttribute(@"DEPRECATED. Use flowRateValue for new work. The flow rate of the product. The sign of the value should conform to the above description of volume. If the 'status' attribute is absent and the value is not ""NaN"",  the data value can be assumed to be good with no restrictions. A value of ""NaN"" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowRate", DataType="volumeFlowRateQualifiedMeasure")]
        public volumeFlowRateQualifiedMeasure flowRate {
            get {
                return this.flowRateField;
            }
            set {
                this.flowRateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Temperature of the port. Specifying the temperature here (as opposed to in Period) implies that the temperature is constant for all periods of the flow.</summary>
        [System.ComponentModel.DescriptionAttribute("Temperature of the port. Specifying the temperature here (as opposed to in Period" +
            ") implies that the temperature is constant for all periods of the flow.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("temp", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure temp {
            get {
                return this.tempField;
            }
            set {
                this.tempField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pressure of the port. Specifying the pressure here (as opposed to in Period) implies that the pressure is constant for all periods of the flow.</summary>
        [System.ComponentModel.DescriptionAttribute("Pressure of the port. Specifying the pressure here (as opposed to in Period) impl" +
            "ies that the pressure is constant for all periods of the flow.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pres", DataType="pressureMeasure")]
        public pressureMeasure pres {
            get {
                return this.presField;
            }
            set {
                this.presField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Absolute minimum pressure before the system will give an alarm.</summary>
        [System.ComponentModel.DescriptionAttribute("Absolute minimum pressure before the system will give an alarm.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("absoluteMinPres", DataType="pressureMeasure")]
        public pressureMeasure absoluteMinPres {
            get {
                return this.absoluteMinPresField;
            }
            set {
                this.absoluteMinPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The internal differences between this port and one other port on this unit.</summary>
        [System.Xml.Serialization.XmlElementAttribute("portDiff")]
        [System.ComponentModel.DescriptionAttribute("The internal differences between this port and one other port on this unit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("portDiff", DataType="cs_productVolumePortDifference")]
        public cs_productVolumePortDifference[] portDiff {
            get {
                return this.portDiffField;
            }
            set {
                this.portDiffField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The mass of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The mass of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mass", DataType="massMeasure")]
        public massMeasure mass {
            get {
                return this.massField;
            }
            set {
                this.massField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The electrical energy represented by the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The electrical energy represented by the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("work", DataType="workMeasure")]
        public workMeasure work {
            get {
                return this.workField;
            }
            set {
                this.workField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The actual volume divided by the potential volume.</summary>
        [System.ComponentModel.DescriptionAttribute("The actual volume divided by the potential volume.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("efficiency", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure efficiency {
            get {
                return this.efficiencyField;
            }
            set {
                this.efficiencyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reid vapor pressure of the product. The absolute vapor pressure of volatile crude oil and  volatile petroleum liquids, except liquefied petroleum gases, as  determined in  accordance with American Society for Testing and Materials under the designation ASTM D323-56.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Reid vapor pressure of the product. The absolute vapor pressure of volatile crude oil and  volatile petroleum liquids, except liquefied petroleum gases, as  determined in  accordance with American Society for Testing and Materials under the designation ASTM D323-56.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rvp", DataType="pressureMeasure")]
        public pressureMeasure rvp {
            get {
                return this.rvpField;
            }
            set {
                this.rvpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vapor pressure of the product. The equilibrium partial pressure exerted by a petroleum liquid  as determined in accordance with standard methods.</summary>
        [System.ComponentModel.DescriptionAttribute("True vapor pressure of the product. The equilibrium partial pressure exerted by a" +
            " petroleum liquid  as determined in accordance with standard methods.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvp", DataType="pressureMeasure")]
        public pressureMeasure tvp {
            get {
                return this.tvpField;
            }
            set {
                this.tvpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Basic sediment and water is measured from a liquid sample  of the production stream. It includes free water, sediment and emulsion and  is measured as a volume percentage of the production stream.</summary>
        [System.ComponentModel.DescriptionAttribute("Basic sediment and water is measured from a liquid sample  of the production stre" +
            "am. It includes free water, sediment and emulsion and  is measured as a volume p" +
            "ercentage of the production stream.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bsw", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure bsw {
            get {
                return this.bswField;
            }
            set {
                this.bswField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The basic sediment and water as measured on the  previous reporting period (e.g., day).</summary>
        [System.ComponentModel.DescriptionAttribute("The basic sediment and water as measured on the  previous reporting period (e.g.," +
            " day).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bswPrevious", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure bswPrevious {
            get {
                return this.bswPreviousField;
            }
            set {
                this.bswPreviousField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The density of the fluid, possibly corrected to specific  conditions of temperature and pressure. If more than one value is specified then all values must represent the same  opinion of the density (at different conditions).</summary>
        [System.Xml.Serialization.XmlElementAttribute("densityValue")]
        [System.ComponentModel.DescriptionAttribute("The density of the fluid, possibly corrected to specific  conditions of temperatu" +
            "re and pressure. If more than one value is specified then all values must repres" +
            "ent the same  opinion of the density (at different conditions).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densityValue", DataType="cs_densityValue")]
        public cs_densityValue[] densityValue {
            get {
                return this.densityValueField;
            }
            set {
                this.densityValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>DEPRECATED. Use densityValue for new work. The density of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("DEPRECATED. Use densityValue for new work. The density of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("density", DataType="densityMeasure")]
        public densityMeasure density {
            get {
                return this.densityField;
            }
            set {
                this.densityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The mass basis flow rate of the product. This is used for things like a sand component.</summary>
        [System.ComponentModel.DescriptionAttribute("The mass basis flow rate of the product. This is used for things like a sand comp" +
            "onent.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densityFlowRate", DataType="massFlowRateMeasure")]
        public massFlowRateMeasure densityFlowRate {
            get {
                return this.densityFlowRateField;
            }
            set {
                this.densityFlowRateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>DEPRECATED. Use densityValue for new work. The density of the product after it has been  corrected to standard temperature and pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("DEPRECATED. Use densityValue for new work. The density of the product after it ha" +
            "s been  corrected to standard temperature and pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densityStd", DataType="densityMeasure")]
        public densityMeasure densityStd {
            get {
                return this.densityStdField;
            }
            set {
                this.densityStdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The concentration of the product as a volume  percentage of the product stream.</summary>
        [System.ComponentModel.DescriptionAttribute("The concentration of the product as a volume  percentage of the product stream.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("concentration", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure concentration {
            get {
                return this.concentrationField;
            }
            set {
                this.concentrationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The molecular weight of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The molecular weight of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("molecularWeight", DataType="unitlessQuantity")]
        public double molecularWeight {
            get {
                return this.molecularWeightField;
            }
            set {
                this.molecularWeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool molecularWeightSpecified {
            get {
                return this.molecularWeightFieldSpecified;
            }
            set {
                this.molecularWeightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The weight fraction of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The weight fraction of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("weightPercent", DataType="massConcentrationMeasurePercent")]
        public massConcentrationMeasurePercent weightPercent {
            get {
                return this.weightPercentField;
            }
            set {
                this.weightPercentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The mole fraction of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The mole fraction of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("molePercent", DataType="molarFractionMeasurePercent")]
        public molarFractionMeasurePercent molePercent {
            get {
                return this.molePercentField;
            }
            set {
                this.molePercentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The molar amount.</summary>
        [System.ComponentModel.DescriptionAttribute("The molar amount.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("moleAmt", DataType="amountOfSubstanceMeasure")]
        public amountOfSubstanceMeasure moleAmt {
            get {
                return this.moleAmtField;
            }
            set {
                this.moleAmtField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The specific gravity of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The specific gravity of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sg", DataType="dimensionlessMeasure")]
        public dimensionlessMeasure sg {
            get {
                return this.sgField;
            }
            set {
                this.sgField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The temperature at which the heavier hydrocarbons come out of solution.</summary>
        [System.ComponentModel.DescriptionAttribute("The temperature at which the heavier hydrocarbons come out of solution.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("hcDewpoint", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure hcDewpoint {
            get {
                return this.hcDewpointField;
            }
            set {
                this.hcDewpointField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The temperature at which the first water comes out of solution.</summary>
        [System.ComponentModel.DescriptionAttribute("The temperature at which the first water comes out of solution.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("waterDewpoint", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure waterDewpoint {
            get {
                return this.waterDewpointField;
            }
            set {
                this.waterDewpointField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Wobbe Index. A number which indicates interchangeability of fuel gasses and is obtained by dividing the heating value of a gas by the  square root of its specific gravity.</summary>
        [System.ComponentModel.DescriptionAttribute("Wobbe Index. A number which indicates interchangeability of fuel gasses and is ob" +
            "tained by dividing the heating value of a gas by the  square root of its specifi" +
            "c gravity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wobbeIndex", DataType="modulusOfCompressionMeasure")]
        public modulusOfCompressionMeasure wobbeIndex {
            get {
                return this.wobbeIndexField;
            }
            set {
                this.wobbeIndexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The amount of heat which would be released by the complete combustion in air of a specific quantity of product at standard temperature and pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("The amount of heat which would be released by the complete combustion in air of a" +
            " specific quantity of product at standard temperature and pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("grossCalorificValueStd", DataType="modulusOfCompressionMeasure")]
        public modulusOfCompressionMeasure grossCalorificValueStd {
            get {
                return this.grossCalorificValueStdField;
            }
            set {
                this.grossCalorificValueStdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reid vapor pressure of stabilized crude.</summary>
        [System.ComponentModel.DescriptionAttribute("Reid vapor pressure of stabilized crude.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rvpStabilizedCrude", DataType="pressureMeasure")]
        public pressureMeasure rvpStabilizedCrude {
            get {
                return this.rvpStabilizedCrudeField;
            }
            set {
                this.rvpStabilizedCrudeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Basic sediment and water content in stabilized crude.</summary>
        [System.ComponentModel.DescriptionAttribute("Basic sediment and water content in stabilized crude.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bswStabilizedCrude", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure bswStabilizedCrude {
            get {
                return this.bswStabilizedCrudeField;
            }
            set {
                this.bswStabilizedCrudeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The density of stabilized crude.</summary>
        [System.ComponentModel.DescriptionAttribute("The density of stabilized crude.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densityStabilizedCrude", DataType="densityMeasure")]
        public densityMeasure densityStabilizedCrude {
            get {
                return this.densityStabilizedCrudeField;
            }
            set {
                this.densityStabilizedCrudeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ReportingProduct {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C2+")]
        C2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C3+")]
        C3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C4+")]
        C4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C5+")]
        C5,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C6+")]
        C6,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C7+")]
        C7,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C8+")]
        C8,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C9+")]
        C9,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C10+")]
        C10,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C2-")]
        C21,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C3-")]
        C31,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C4-")]
        C41,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C5-")]
        C51,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C6-")]
        C61,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C7-")]
        C71,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C8-")]
        C81,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C9-")]
        C91,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C10-")]
        C101,
        
        /// <remarks/>
        oleic,
        
        /// <remarks/>
        aqueous,
        
        /// <remarks/>
        vapor,
        
        /// <remarks/>
        liquid,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C7")]
        C72,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C8")]
        C82,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C9")]
        C92,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C10")]
        C102,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("carbon monoxide gas")]
        carbonmonoxidegas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("carbon dioxide gas")]
        carbondioxidegas,
        
        /// <remarks/>
        chemical,
        
        /// <remarks/>
        condensate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("condensate - gross")]
        condensategross,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("condensate - net")]
        condensatenet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crude - stabilized")]
        crudestabilized,
        
        /// <remarks/>
        cuttings,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("diethylene glycol")]
        diethyleneglycol,
        
        /// <remarks/>
        diesel,
        
        /// <remarks/>
        dioxygen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electric power")]
        electricpower,
        
        /// <remarks/>
        ethane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ethane - component")]
        ethanecomponent,
        
        /// <remarks/>
        gas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas - dry")]
        gasdry,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas - rich")]
        gasrich,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas - wet")]
        gaswet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas - component in oil")]
        gascomponentinoil,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("helium gas")]
        heliumgas,
        
        /// <remarks/>
        heptane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydraulic control fluid")]
        hydrauliccontrolfluid,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydrogen gas")]
        hydrogengas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydrogen sulfide")]
        hydrogensulfide,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("i-butane - component")]
        ibutanecomponent,
        
        /// <remarks/>
        isobutane,
        
        /// <remarks/>
        isopentane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("liquefied natural gas")]
        liquefiednaturalgas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("liquefied petroleum gas")]
        liquefiedpetroleumgas,
        
        /// <remarks/>
        methane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("methane - component")]
        methanecomponent,
        
        /// <remarks/>
        methanol,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mixed butane")]
        mixedbutane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("monoethylene glycol")]
        monoethyleneglycol,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("n-butane - component")]
        nbutanecomponent,
        
        /// <remarks/>
        naphta,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("natural gas liquid")]
        naturalgasliquid,
        
        /// <remarks/>
        neopentane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nitrogen gas")]
        nitrogengas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nitrogen oxide gas")]
        nitrogenoxidegas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NGL - component in gas")]
        NGLcomponentingas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("normal butane")]
        normalbutane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("normal pentane")]
        normalpentane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oil and gas")]
        oilandgas,
        
        /// <remarks/>
        oil,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oil - gross")]
        oilgross,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oil - net")]
        oilnet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oil - component in water")]
        oilcomponentinwater,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pentane - component")]
        pentanecomponent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("petroleum gas liquid")]
        petroleumgasliquid,
        
        /// <remarks/>
        propane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("propane - component")]
        propanecomponent,
        
        /// <remarks/>
        salt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sand - component")]
        sandcomponent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("triethylene glycol")]
        triethyleneglycol,
        
        /// <remarks/>
        water,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("water - discharge")]
        waterdischarge,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("water - processed")]
        waterprocessed,
        
        /// <remarks/>
        unknown,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("unknown")]
        unknown1,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_flowRateValue {
        
        private volumeFlowRateQualifiedMeasure flowRateField;
        
        private object[] itemsField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The flow rate of the product. If the 'status' attribute is absent and the value is not "NaN",  the data value can be assumed to be good with no restrictions. A value of "NaN" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"The flow rate of the product. If the 'status' attribute is absent and the value is not ""NaN"",  the data value can be assumed to be good with no restrictions. A value of ""NaN"" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowRate", DataType="volumeFlowRateQualifiedMeasure")]
        public volumeFlowRateQualifiedMeasure flowRate {
            get {
                return this.flowRateField;
            }
            set {
                this.flowRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("pres", typeof(pressureMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("standardTempPres", typeof(StandardCondition))]
        [System.Xml.Serialization.XmlElementAttribute("temp", typeof(thermodynamicTemperatureMeasure))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("standardTempPres", DataType="StandardCondition")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("temp", DataType="thermodynamicTemperatureMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pres", DataType="pressureMeasure")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productVolumePortDifference {
        
        private refNameString portField;
        
        private pressureMeasure presDiffField;
        
        private thermodynamicTemperatureMeasure tempDiffField;
        
        private lengthMeasure chokeSizeField;
        
        private lengthPerLengthMeasure chokeRelativeField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>A port on the other end of an internal connection. This should always be specified if a Product Flow Network is being referenced by this report. If this is not specified then there is an assumption that there is only one other port for the unit. For example, if this end of the connection represents an inlet port then the implied other end is the outlet port for the unit.</summary>
        [System.ComponentModel.DescriptionAttribute(@"A port on the other end of an internal connection. This should always be specified if a Product Flow Network is being referenced by this report. If this is not specified then there is an assumption that there is only one other port for the unit. For example, if this end of the connection represents an inlet port then the implied other end is the outlet port for the unit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("port", DataType="refNameString")]
        public refNameString port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The differential pressure between the ports.</summary>
        [System.ComponentModel.DescriptionAttribute("The differential pressure between the ports.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presDiff", DataType="pressureMeasure")]
        public pressureMeasure presDiff {
            get {
                return this.presDiffField;
            }
            set {
                this.presDiffField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The differential temperature between the ports.</summary>
        [System.ComponentModel.DescriptionAttribute("The differential temperature between the ports.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempDiff", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempDiff {
            get {
                return this.tempDiffField;
            }
            set {
                this.tempDiffField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The size of the choke. This characterizes the overall unit with respect to the flow restriction between the ports. The restriction might be implemented using a valve or an actual choke.</summary>
        [System.ComponentModel.DescriptionAttribute("The size of the choke. This characterizes the overall unit with respect to the fl" +
            "ow restriction between the ports. The restriction might be implemented using a v" +
            "alve or an actual choke.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("chokeSize", DataType="lengthMeasure")]
        public lengthMeasure chokeSize {
            get {
                return this.chokeSizeField;
            }
            set {
                this.chokeSizeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The relative size of the choke restriction. This characterizes the overall unit with respect to the flow restriction between the ports. The restriction might be implemented using a valve or an actual choke.</summary>
        [System.ComponentModel.DescriptionAttribute("The relative size of the choke restriction. This characterizes the overall unit w" +
            "ith respect to the flow restriction between the ports. The restriction might be " +
            "implemented using a valve or an actual choke.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("chokeRelative", DataType="lengthPerLengthMeasure")]
        public lengthPerLengthMeasure chokeRelative {
            get {
                return this.chokeRelativeField;
            }
            set {
                this.chokeRelativeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_densityValue {
        
        private densityMeasure densityField;
        
        private object[] itemsField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The density of the product.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The density of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("density", DataType="densityMeasure")]
        public densityMeasure density {
            get {
                return this.densityField;
            }
            set {
                this.densityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("pres", typeof(pressureMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("standardTempPres", typeof(StandardCondition))]
        [System.Xml.Serialization.XmlElementAttribute("temp", typeof(thermodynamicTemperatureMeasure))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("standardTempPres", DataType="StandardCondition")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("temp", DataType="thermodynamicTemperatureMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pres", DataType="pressureMeasure")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productVolumeDestination {
        
        private string nameField;
        
        private BalanceDestinationType typeField;
        
        private bool typeFieldSpecified;
        
        private string countryField;
        
        /// <remarks/>
        /// <summary>The name of the destination.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the destination.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of destination.</summary>
        [System.ComponentModel.DescriptionAttribute("The type of destination.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("type", DataType="BalanceDestinationType")]
        public BalanceDestinationType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The country of the destination.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The country of the destination.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("country", DataType="nameString")]
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum BalanceDestinationType {
        
        /// <remarks/>
        harbor,
        
        /// <remarks/>
        terminal,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productVolumeBalanceSet {
        
        private BalanceFlowPart kindField;
        
        private bool kindFieldSpecified;
        
        private string cargoNumberField;
        
        private short cargoBatchNumberField;
        
        private bool cargoBatchNumberFieldSpecified;
        
        private string shipperField;
        
        private cs_productVolumeDestination destinationField;
        
        private cs_productVolumeBalanceDetail[] balanceDetailField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Defines the aspect being described.</summary>
        [System.ComponentModel.DescriptionAttribute("Defines the aspect being described.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("kind", DataType="BalanceFlowPart")]
        public BalanceFlowPart kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kindSpecified {
            get {
                return this.kindFieldSpecified;
            }
            set {
                this.kindFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A cargo identifier for the product.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("A cargo identifier for the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cargoNumber", DataType="kindString")]
        public string cargoNumber {
            get {
                return this.cargoNumberField;
            }
            set {
                this.cargoNumberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A cargo batch number. Used if the vessel needs to temporarily  disconnect for some reason (e.g., weather).</summary>
        [System.ComponentModel.DescriptionAttribute("A cargo batch number. Used if the vessel needs to temporarily  disconnect for som" +
            "e reason (e.g., weather).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cargoBatchNumber", DataType="nonNegativeCount")]
        public short cargoBatchNumber {
            get {
                return this.cargoBatchNumberField;
            }
            set {
                this.cargoBatchNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cargoBatchNumberSpecified {
            get {
                return this.cargoBatchNumberFieldSpecified;
            }
            set {
                this.cargoBatchNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the shipper</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the shipper")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("shipper", DataType="nameString")]
        public string shipper {
            get {
                return this.shipperField;
            }
            set {
                this.shipperField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines the destination of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("Defines the destination of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("destination", DataType="cs_productVolumeDestination")]
        public cs_productVolumeDestination destination {
            get {
                return this.destinationField;
            }
            set {
                this.destinationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Provides details on the product.</summary>
        [System.Xml.Serialization.XmlElementAttribute("balanceDetail")]
        [System.ComponentModel.DescriptionAttribute("Provides details on the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("balanceDetail", DataType="cs_productVolumeBalanceDetail")]
        public cs_productVolumeBalanceDetail[] balanceDetail {
            get {
                return this.balanceDetailField;
            }
            set {
                this.balanceDetailField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum BalanceFlowPart {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("opening balance")]
        openingbalance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("closing balance")]
        closingbalance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("input to storage")]
        inputtostorage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lifting entitlement")]
        liftingentitlement,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lifting entitlement remaining")]
        liftingentitlementremaining,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gain/loss")]
        gainloss,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("adjusted closing")]
        adjustedclosing,
        
        /// <remarks/>
        lifted,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("production -- value adjustment")]
        productionvalueadjustment,
        
        /// <remarks/>
        transaction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("completed lifting")]
        completedlifting,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("production imbalance")]
        productionimbalance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("partial lifting")]
        partiallifting,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("closing storage inventory")]
        closingstorageinventory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tanker lifting")]
        tankerlifting,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pipeline lifting")]
        pipelinelifting,
        
        /// <remarks/>
        opflex,
        
        /// <remarks/>
        linepack,
        
        /// <remarks/>
        transfer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("production - mass adjustment")]
        productionmassadjustment,
        
        /// <remarks/>
        swap,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productVolumePeriod {
        
        private ReportingPeriod kindField;
        
        private bool kindFieldSpecified;
        
        private System.DateTime[] itemsField;
        
        private ItemsChoiceType7[] itemsElementNameField;
        
        private volumePerVolumeMeasure gorField;
        
        private volumePerVolumeMeasure gorMTDField;
        
        private volumePerVolumeMeasure gasLiquidRatioField;
        
        private massConcentrationMeasure waterConcMassField;
        
        private volumePerVolumeMeasure waterConcVolField;
        
        private pressureMeasure atmosphereField;
        
        private cs_volumeValue[] volumeValueField;
        
        private volumeQualifiedMeasure volumeField;
        
        private volumeQualifiedMeasure volumeStdField;
        
        private cs_flowRateValue[] flowRateValueField;
        
        private volumeFlowRateQualifiedMeasure flowRateField;
        
        private thermodynamicTemperatureMeasure tempField;
        
        private pressureMeasure presField;
        
        private pressureMeasure absoluteMinPresField;
        
        private cs_productVolumePortDifference[] portDiffField;
        
        private massMeasure massField;
        
        private workMeasure workField;
        
        private volumePerVolumeMeasure efficiencyField;
        
        private pressureMeasure rvpField;
        
        private pressureMeasure tvpField;
        
        private volumePerVolumeMeasure bswField;
        
        private volumePerVolumeMeasure bswPreviousField;
        
        private cs_densityValue[] densityValueField;
        
        private densityMeasure densityField;
        
        private massFlowRateMeasure densityFlowRateField;
        
        private densityMeasure densityStdField;
        
        private volumePerVolumeMeasure concentrationField;
        
        private double molecularWeightField;
        
        private bool molecularWeightFieldSpecified;
        
        private massConcentrationMeasurePercent weightPercentField;
        
        private molarFractionMeasurePercent molePercentField;
        
        private amountOfSubstanceMeasure moleAmtField;
        
        private dimensionlessMeasure sgField;
        
        private thermodynamicTemperatureMeasure hcDewpointField;
        
        private thermodynamicTemperatureMeasure waterDewpointField;
        
        private modulusOfCompressionMeasure wobbeIndexField;
        
        private modulusOfCompressionMeasure grossCalorificValueStdField;
        
        private pressureMeasure rvpStabilizedCrudeField;
        
        private volumePerVolumeMeasure bswStabilizedCrudeField;
        
        private densityMeasure densityStabilizedCrudeField;
        
        private cs_productVolumeComponentContent[] componentContentField;
        
        private cs_productVolumeBalanceSet[] balanceSetField;
        
        private cs_productVolumeAlert alertField;
        
        private cs_datedComment[] commentField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The type of period that is being reported. If not  specified and a time is not given then the period is defined by the reporting period.</summary>
        [System.ComponentModel.DescriptionAttribute("The type of period that is being reported. If not  specified and a time is not gi" +
            "ven then the period is defined by the reporting period.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("kind", DataType="ReportingPeriod")]
        public ReportingPeriod kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kindSpecified {
            get {
                return this.kindFieldSpecified;
            }
            set {
                this.kindFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dTim", typeof(System.DateTime))]
        [System.Xml.Serialization.XmlElementAttribute("dTimEnd", typeof(System.DateTime))]
        [System.Xml.Serialization.XmlElementAttribute("dTimStart", typeof(System.DateTime))]
        [System.Xml.Serialization.XmlElementAttribute("date", typeof(System.DateTime), DataType="date")]
        [System.Xml.Serialization.XmlElementAttribute("dateEnd", typeof(System.DateTime), DataType="date")]
        [System.Xml.Serialization.XmlElementAttribute("dateStart", typeof(System.DateTime), DataType="date")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("date", DataType="date")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStart", DataType="timestamp")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimEnd", DataType="timestamp")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dateStart", DataType="date")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dateEnd", DataType="date")]
        public System.DateTime[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType7[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gas oil ratio. The ratio between the total produced gas volume and the total produced oil volume including oil and gas volumes used on the installation.</summary>
        [System.ComponentModel.DescriptionAttribute("Gas oil ratio. The ratio between the total produced gas volume and the total prod" +
            "uced oil volume including oil and gas volumes used on the installation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gor", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure gor {
            get {
                return this.gorField;
            }
            set {
                this.gorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gas oil ratio month to date. The gas oil ratio from the beginning of the month  to the end of the reporting priod.</summary>
        [System.ComponentModel.DescriptionAttribute("Gas oil ratio month to date. The gas oil ratio from the beginning of the month  t" +
            "o the end of the reporting priod.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gorMTD", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure gorMTD {
            get {
                return this.gorMTDField;
            }
            set {
                this.gorMTDField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The volumetric ratio of gas to liquid for all products in the whole flow.</summary>
        [System.ComponentModel.DescriptionAttribute("The volumetric ratio of gas to liquid for all products in the whole flow.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasLiquidRatio", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure gasLiquidRatio {
            get {
                return this.gasLiquidRatioField;
            }
            set {
                this.gasLiquidRatioField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Water concentration mass basis.  The ratio of water produced compared to the mass of total liquids produced.</summary>
        [System.ComponentModel.DescriptionAttribute("Water concentration mass basis.  The ratio of water produced compared to the mass" +
            " of total liquids produced.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("waterConcMass", DataType="massConcentrationMeasure")]
        public massConcentrationMeasure waterConcMass {
            get {
                return this.waterConcMassField;
            }
            set {
                this.waterConcMassField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Water concentration volume basis. The ratio of water produced compared to the mass of total liquids produced.</summary>
        [System.ComponentModel.DescriptionAttribute("Water concentration volume basis. The ratio of water produced compared to the mas" +
            "s of total liquids produced.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("waterConcVol", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure waterConcVol {
            get {
                return this.waterConcVolField;
            }
            set {
                this.waterConcVolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The average atmospheric pressure during the reporting period.</summary>
        [System.ComponentModel.DescriptionAttribute("The average atmospheric pressure during the reporting period.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("atmosphere", DataType="pressureMeasure")]
        public pressureMeasure atmosphere {
            get {
                return this.atmosphereField;
            }
            set {
                this.atmosphereField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The volume of the fluid, possibly corrected to specific  conditions of temperature and pressure. A positive value for an inlet port indicates flow into the port. A negative value for an inlet port indicates flow out of the port. A positive value for an outlet port indicates flow out of the port. A negative value for an outlet port indicates flow into of the port. This convention is designed such that a positive sign indicates an expected condition based on the intended port direction while a negative sign indicates an anomolous condition. If more than one value is specified then all values must represent the same  opinion of the volume (at different conditions).</summary>
        [System.Xml.Serialization.XmlElementAttribute("volumeValue")]
        [System.ComponentModel.DescriptionAttribute(@"The volume of the fluid, possibly corrected to specific  conditions of temperature and pressure. A positive value for an inlet port indicates flow into the port. A negative value for an inlet port indicates flow out of the port. A positive value for an outlet port indicates flow out of the port. A negative value for an outlet port indicates flow into of the port. This convention is designed such that a positive sign indicates an expected condition based on the intended port direction while a negative sign indicates an anomolous condition. If more than one value is specified then all values must represent the same  opinion of the volume (at different conditions).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volumeValue", DataType="cs_volumeValue")]
        public cs_volumeValue[] volumeValue {
            get {
                return this.volumeValueField;
            }
            set {
                this.volumeValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>DEPRECATED. Use volumeValue for new work. The uncorrected volume of the product. The sign of the value should conform to the above description of volumeValue. If the 'status' attribute is absent and the value is not "NaN",  the data value can be assumed to be good with no restrictions. A value of "NaN" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.</summary>
        [System.ComponentModel.DescriptionAttribute(@"DEPRECATED. Use volumeValue for new work. The uncorrected volume of the product. The sign of the value should conform to the above description of volumeValue. If the 'status' attribute is absent and the value is not ""NaN"",  the data value can be assumed to be good with no restrictions. A value of ""NaN"" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volume", DataType="volumeQualifiedMeasure")]
        public volumeQualifiedMeasure volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>DEPRECATED. Use volumeValue for new work. The volume of the fluid, corrected to standard  conditions of temperature and pressure.  The sign of the value should conform to the above description of volumeValue. If the 'status' attribute is absent and the value is not "NaN",  the data value can be assumed to be good with no restrictions. A value of "NaN" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.</summary>
        [System.ComponentModel.DescriptionAttribute(@"DEPRECATED. Use volumeValue for new work. The volume of the fluid, corrected to standard  conditions of temperature and pressure.  The sign of the value should conform to the above description of volumeValue. If the 'status' attribute is absent and the value is not ""NaN"",  the data value can be assumed to be good with no restrictions. A value of ""NaN"" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volumeStd", DataType="volumeQualifiedMeasure")]
        public volumeQualifiedMeasure volumeStd {
            get {
                return this.volumeStdField;
            }
            set {
                this.volumeStdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The flow rate of the product, possibly corrected to specific  conditions of temperature and pressure. The sign of the value should conform to the above description of volumeValue. If more than one value is specified then all values must represent the same  opinion of the flow rate (at different conditions).</summary>
        [System.Xml.Serialization.XmlElementAttribute("flowRateValue")]
        [System.ComponentModel.DescriptionAttribute(@"The flow rate of the product, possibly corrected to specific  conditions of temperature and pressure. The sign of the value should conform to the above description of volumeValue. If more than one value is specified then all values must represent the same  opinion of the flow rate (at different conditions).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowRateValue", DataType="cs_flowRateValue")]
        public cs_flowRateValue[] flowRateValue {
            get {
                return this.flowRateValueField;
            }
            set {
                this.flowRateValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>DEPRECATED. Use flowRateValue for new work. The flow rate of the product. The sign of the value should conform to the above description of volume. If the 'status' attribute is absent and the value is not "NaN",  the data value can be assumed to be good with no restrictions. A value of "NaN" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.</summary>
        [System.ComponentModel.DescriptionAttribute(@"DEPRECATED. Use flowRateValue for new work. The flow rate of the product. The sign of the value should conform to the above description of volume. If the 'status' attribute is absent and the value is not ""NaN"",  the data value can be assumed to be good with no restrictions. A value of ""NaN"" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowRate", DataType="volumeFlowRateQualifiedMeasure")]
        public volumeFlowRateQualifiedMeasure flowRate {
            get {
                return this.flowRateField;
            }
            set {
                this.flowRateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Temperature of the port. Specifying the temperature here (as opposed to in Period) implies that the temperature is constant for all periods of the flow.</summary>
        [System.ComponentModel.DescriptionAttribute("Temperature of the port. Specifying the temperature here (as opposed to in Period" +
            ") implies that the temperature is constant for all periods of the flow.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("temp", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure temp {
            get {
                return this.tempField;
            }
            set {
                this.tempField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pressure of the port. Specifying the pressure here (as opposed to in Period) implies that the pressure is constant for all periods of the flow.</summary>
        [System.ComponentModel.DescriptionAttribute("Pressure of the port. Specifying the pressure here (as opposed to in Period) impl" +
            "ies that the pressure is constant for all periods of the flow.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pres", DataType="pressureMeasure")]
        public pressureMeasure pres {
            get {
                return this.presField;
            }
            set {
                this.presField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Absolute minimum pressure before the system will give an alarm.</summary>
        [System.ComponentModel.DescriptionAttribute("Absolute minimum pressure before the system will give an alarm.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("absoluteMinPres", DataType="pressureMeasure")]
        public pressureMeasure absoluteMinPres {
            get {
                return this.absoluteMinPresField;
            }
            set {
                this.absoluteMinPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The internal differences between this port and one other port on this unit.</summary>
        [System.Xml.Serialization.XmlElementAttribute("portDiff")]
        [System.ComponentModel.DescriptionAttribute("The internal differences between this port and one other port on this unit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("portDiff", DataType="cs_productVolumePortDifference")]
        public cs_productVolumePortDifference[] portDiff {
            get {
                return this.portDiffField;
            }
            set {
                this.portDiffField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The mass of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The mass of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mass", DataType="massMeasure")]
        public massMeasure mass {
            get {
                return this.massField;
            }
            set {
                this.massField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The electrical energy represented by the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The electrical energy represented by the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("work", DataType="workMeasure")]
        public workMeasure work {
            get {
                return this.workField;
            }
            set {
                this.workField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The actual volume divided by the potential volume.</summary>
        [System.ComponentModel.DescriptionAttribute("The actual volume divided by the potential volume.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("efficiency", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure efficiency {
            get {
                return this.efficiencyField;
            }
            set {
                this.efficiencyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reid vapor pressure of the product. The absolute vapor pressure of volatile crude oil and  volatile petroleum liquids, except liquefied petroleum gases, as  determined in  accordance with American Society for Testing and Materials under the designation ASTM D323-56.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Reid vapor pressure of the product. The absolute vapor pressure of volatile crude oil and  volatile petroleum liquids, except liquefied petroleum gases, as  determined in  accordance with American Society for Testing and Materials under the designation ASTM D323-56.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rvp", DataType="pressureMeasure")]
        public pressureMeasure rvp {
            get {
                return this.rvpField;
            }
            set {
                this.rvpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vapor pressure of the product. The equilibrium partial pressure exerted by a petroleum liquid  as determined in accordance with standard methods.</summary>
        [System.ComponentModel.DescriptionAttribute("True vapor pressure of the product. The equilibrium partial pressure exerted by a" +
            " petroleum liquid  as determined in accordance with standard methods.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvp", DataType="pressureMeasure")]
        public pressureMeasure tvp {
            get {
                return this.tvpField;
            }
            set {
                this.tvpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Basic sediment and water is measured from a liquid sample  of the production stream. It includes free water, sediment and emulsion and  is measured as a volume percentage of the production stream.</summary>
        [System.ComponentModel.DescriptionAttribute("Basic sediment and water is measured from a liquid sample  of the production stre" +
            "am. It includes free water, sediment and emulsion and  is measured as a volume p" +
            "ercentage of the production stream.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bsw", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure bsw {
            get {
                return this.bswField;
            }
            set {
                this.bswField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The basic sediment and water as measured on the  previous reporting period (e.g., day).</summary>
        [System.ComponentModel.DescriptionAttribute("The basic sediment and water as measured on the  previous reporting period (e.g.," +
            " day).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bswPrevious", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure bswPrevious {
            get {
                return this.bswPreviousField;
            }
            set {
                this.bswPreviousField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The density of the fluid, possibly corrected to specific  conditions of temperature and pressure. If more than one value is specified then all values must represent the same  opinion of the density (at different conditions).</summary>
        [System.Xml.Serialization.XmlElementAttribute("densityValue")]
        [System.ComponentModel.DescriptionAttribute("The density of the fluid, possibly corrected to specific  conditions of temperatu" +
            "re and pressure. If more than one value is specified then all values must repres" +
            "ent the same  opinion of the density (at different conditions).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densityValue", DataType="cs_densityValue")]
        public cs_densityValue[] densityValue {
            get {
                return this.densityValueField;
            }
            set {
                this.densityValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>DEPRECATED. Use densityValue for new work. The density of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("DEPRECATED. Use densityValue for new work. The density of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("density", DataType="densityMeasure")]
        public densityMeasure density {
            get {
                return this.densityField;
            }
            set {
                this.densityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The mass basis flow rate of the product. This is used for things like a sand component.</summary>
        [System.ComponentModel.DescriptionAttribute("The mass basis flow rate of the product. This is used for things like a sand comp" +
            "onent.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densityFlowRate", DataType="massFlowRateMeasure")]
        public massFlowRateMeasure densityFlowRate {
            get {
                return this.densityFlowRateField;
            }
            set {
                this.densityFlowRateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>DEPRECATED. Use densityValue for new work. The density of the product after it has been  corrected to standard temperature and pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("DEPRECATED. Use densityValue for new work. The density of the product after it ha" +
            "s been  corrected to standard temperature and pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densityStd", DataType="densityMeasure")]
        public densityMeasure densityStd {
            get {
                return this.densityStdField;
            }
            set {
                this.densityStdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The concentration of the product as a volume  percentage of the product stream.</summary>
        [System.ComponentModel.DescriptionAttribute("The concentration of the product as a volume  percentage of the product stream.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("concentration", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure concentration {
            get {
                return this.concentrationField;
            }
            set {
                this.concentrationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The molecular weight of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The molecular weight of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("molecularWeight", DataType="unitlessQuantity")]
        public double molecularWeight {
            get {
                return this.molecularWeightField;
            }
            set {
                this.molecularWeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool molecularWeightSpecified {
            get {
                return this.molecularWeightFieldSpecified;
            }
            set {
                this.molecularWeightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The weight fraction of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The weight fraction of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("weightPercent", DataType="massConcentrationMeasurePercent")]
        public massConcentrationMeasurePercent weightPercent {
            get {
                return this.weightPercentField;
            }
            set {
                this.weightPercentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The mole fraction of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The mole fraction of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("molePercent", DataType="molarFractionMeasurePercent")]
        public molarFractionMeasurePercent molePercent {
            get {
                return this.molePercentField;
            }
            set {
                this.molePercentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The molar amount.</summary>
        [System.ComponentModel.DescriptionAttribute("The molar amount.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("moleAmt", DataType="amountOfSubstanceMeasure")]
        public amountOfSubstanceMeasure moleAmt {
            get {
                return this.moleAmtField;
            }
            set {
                this.moleAmtField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The specific gravity of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The specific gravity of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sg", DataType="dimensionlessMeasure")]
        public dimensionlessMeasure sg {
            get {
                return this.sgField;
            }
            set {
                this.sgField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The temperature at which the heavier hydrocarbons come out of solution.</summary>
        [System.ComponentModel.DescriptionAttribute("The temperature at which the heavier hydrocarbons come out of solution.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("hcDewpoint", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure hcDewpoint {
            get {
                return this.hcDewpointField;
            }
            set {
                this.hcDewpointField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The temperature at which the first water comes out of solution.</summary>
        [System.ComponentModel.DescriptionAttribute("The temperature at which the first water comes out of solution.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("waterDewpoint", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure waterDewpoint {
            get {
                return this.waterDewpointField;
            }
            set {
                this.waterDewpointField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Wobbe Index. A number which indicates interchangeability of fuel gasses and is obtained by dividing the heating value of a gas by the  square root of its specific gravity.</summary>
        [System.ComponentModel.DescriptionAttribute("Wobbe Index. A number which indicates interchangeability of fuel gasses and is ob" +
            "tained by dividing the heating value of a gas by the  square root of its specifi" +
            "c gravity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wobbeIndex", DataType="modulusOfCompressionMeasure")]
        public modulusOfCompressionMeasure wobbeIndex {
            get {
                return this.wobbeIndexField;
            }
            set {
                this.wobbeIndexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The amount of heat which would be released by the complete combustion in air of a specific quantity of product at standard temperature and pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("The amount of heat which would be released by the complete combustion in air of a" +
            " specific quantity of product at standard temperature and pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("grossCalorificValueStd", DataType="modulusOfCompressionMeasure")]
        public modulusOfCompressionMeasure grossCalorificValueStd {
            get {
                return this.grossCalorificValueStdField;
            }
            set {
                this.grossCalorificValueStdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reid vapor pressure of stabilized crude.</summary>
        [System.ComponentModel.DescriptionAttribute("Reid vapor pressure of stabilized crude.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rvpStabilizedCrude", DataType="pressureMeasure")]
        public pressureMeasure rvpStabilizedCrude {
            get {
                return this.rvpStabilizedCrudeField;
            }
            set {
                this.rvpStabilizedCrudeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Basic sediment and water content in stabilized crude.</summary>
        [System.ComponentModel.DescriptionAttribute("Basic sediment and water content in stabilized crude.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bswStabilizedCrude", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure bswStabilizedCrude {
            get {
                return this.bswStabilizedCrudeField;
            }
            set {
                this.bswStabilizedCrudeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The density of stabilized crude.</summary>
        [System.ComponentModel.DescriptionAttribute("The density of stabilized crude.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densityStabilizedCrude", DataType="densityMeasure")]
        public densityMeasure densityStabilizedCrude {
            get {
                return this.densityStabilizedCrudeField;
            }
            set {
                this.densityStabilizedCrudeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The relative amount of a component product in the product stream.</summary>
        [System.Xml.Serialization.XmlElementAttribute("componentContent")]
        [System.ComponentModel.DescriptionAttribute("The relative amount of a component product in the product stream.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("componentContent", DataType="cs_productVolumeComponentContent")]
        public cs_productVolumeComponentContent[] componentContent {
            get {
                return this.componentContentField;
            }
            set {
                this.componentContentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Provides the sales context for this period.</summary>
        [System.Xml.Serialization.XmlElementAttribute("balanceSet")]
        [System.ComponentModel.DescriptionAttribute("Provides the sales context for this period.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("balanceSet", DataType="cs_productVolumeBalanceSet")]
        public cs_productVolumeBalanceSet[] balanceSet {
            get {
                return this.balanceSetField;
            }
            set {
                this.balanceSetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An indication of some sort of abnormal condition relative the values in this period.</summary>
        [System.ComponentModel.DescriptionAttribute("An indication of some sort of abnormal condition relative the values in this peri" +
            "od.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("alert", DataType="cs_productVolumeAlert")]
        public cs_productVolumeAlert alert {
            get {
                return this.alertField;
            }
            set {
                this.alertField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A timestamped remark about the amounts.</summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        [System.ComponentModel.DescriptionAttribute("A timestamped remark about the amounts.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="cs_datedComment")]
        public cs_datedComment[] comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ReportingPeriod {
        
        /// <remarks/>
        day,
        
        /// <remarks/>
        week,
        
        /// <remarks/>
        month,
        
        /// <remarks/>
        year,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("year to date")]
        yeartodate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("month to date")]
        monthtodate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("daily year to date")]
        dailyyeartodate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("daily month to date")]
        dailymonthtodate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("total cumulative")]
        totalcumulative,
        
        /// <remarks/>
        report,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("report start")]
        reportstart,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("report end")]
        reportend,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("previous period")]
        previousperiod,
        
        /// <remarks/>
        midnight,
        
        /// <remarks/>
        noon,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("06:00")]
        Item0600,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas day")]
        gasday,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas month")]
        gasmonth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas year")]
        gasyear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas year to date")]
        gasyeartodate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("life to date")]
        lifetodate,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series", IncludeInSchema=false)]
    public enum ItemsChoiceType7 {
        
        /// <remarks/>
        dTim,
        
        /// <remarks/>
        dTimEnd,
        
        /// <remarks/>
        dTimStart,
        
        /// <remarks/>
        date,
        
        /// <remarks/>
        dateEnd,
        
        /// <remarks/>
        dateStart,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productVolumeAlert {
        
        private string targetField;
        
        private string levelField;
        
        private string typeField;
        
        private string descriptionField;
        
        /// <remarks/>
        /// <summary>An XPATH to the target value within the message  containing this XPATH value.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("An XPATH to the target value within the message  containing this XPATH value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("target", DataType="commentString")]
        public string target {
            get {
                return this.targetField;
            }
            set {
                this.targetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The level of the alert.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The level of the alert.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("level", DataType="kindString")]
        public string level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of alert. For example "off specification".</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The type of alert. For example \"off specification\".")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("type", DataType="kindString")]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A textual decription of the alert.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A textual decription of the alert.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="commentString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_datedComment {
        
        private string whoField;
        
        private string roleField;
        
        private Energistics.DataAccess.Timestamp dTimStartField;
        
        private bool dTimStartFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimEndField;
        
        private bool dTimEndFieldSpecified;
        
        private string remarkField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The name of the person providing the comment.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the person providing the comment.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("who", DataType="nameString")]
        public string who {
            get {
                return this.whoField;
            }
            set {
                this.whoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The role of the person providing the comment. This is the role of the person within the context of comment.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The role of the person providing the comment. This is the role of the person with" +
            "in the context of comment.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("role", DataType="kindString")]
        public string role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time where the comment begins to be valid.</summary>
        [System.ComponentModel.DescriptionAttribute("The date and time where the comment begins to be valid.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimStartSpecified {
            get {
                return this.dTimStartFieldSpecified;
            }
            set {
                this.dTimStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time where the comment is no longer valid.</summary>
        [System.ComponentModel.DescriptionAttribute("The date and time where the comment is no longer valid.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimEndSpecified {
            get {
                return this.dTimEndFieldSpecified;
            }
            set {
                this.dTimEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The relevant comment.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("The relevant comment.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("remark", DataType="commentString")]
        public string remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_refProductFlow {
        
        private refNameString referencedFlowField;
        
        private refNameString parentfacilityField;
        
        /// <remarks/>
        /// <summary>A pointer to the flow within the facility.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A pointer to the flow within the facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("referencedFlow", DataType="refNameString")]
        public refNameString referencedFlow {
            get {
                return this.referencedFlowField;
            }
            set {
                this.referencedFlowField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the facility that contains the flow.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A pointer to the facility that contains the flow.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("parentfacility", DataType="refNameString")]
        public refNameString parentfacility {
            get {
                return this.parentfacilityField;
            }
            set {
                this.parentfacilityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productVolumeProduct {
        
        private ReportingProduct kindField;
        
        private nameStruct nameField;
        
        private double splitFactorField;
        
        private bool splitFactorFieldSpecified;
        
        private cs_refProductFlow sourceFlowField;
        
        private volumePerVolumeMeasure gorField;
        
        private volumePerVolumeMeasure gorMTDField;
        
        private volumePerVolumeMeasure gasLiquidRatioField;
        
        private massConcentrationMeasure waterConcMassField;
        
        private volumePerVolumeMeasure waterConcVolField;
        
        private pressureMeasure atmosphereField;
        
        private cs_volumeValue[] volumeValueField;
        
        private volumeQualifiedMeasure volumeField;
        
        private volumeQualifiedMeasure volumeStdField;
        
        private cs_flowRateValue[] flowRateValueField;
        
        private volumeFlowRateQualifiedMeasure flowRateField;
        
        private thermodynamicTemperatureMeasure tempField;
        
        private pressureMeasure presField;
        
        private pressureMeasure absoluteMinPresField;
        
        private cs_productVolumePortDifference[] portDiffField;
        
        private massMeasure massField;
        
        private workMeasure workField;
        
        private volumePerVolumeMeasure efficiencyField;
        
        private pressureMeasure rvpField;
        
        private pressureMeasure tvpField;
        
        private volumePerVolumeMeasure bswField;
        
        private volumePerVolumeMeasure bswPreviousField;
        
        private cs_densityValue[] densityValueField;
        
        private densityMeasure densityField;
        
        private massFlowRateMeasure densityFlowRateField;
        
        private densityMeasure densityStdField;
        
        private volumePerVolumeMeasure concentrationField;
        
        private double molecularWeightField;
        
        private bool molecularWeightFieldSpecified;
        
        private massConcentrationMeasurePercent weightPercentField;
        
        private molarFractionMeasurePercent molePercentField;
        
        private amountOfSubstanceMeasure moleAmtField;
        
        private dimensionlessMeasure sgField;
        
        private thermodynamicTemperatureMeasure hcDewpointField;
        
        private thermodynamicTemperatureMeasure waterDewpointField;
        
        private modulusOfCompressionMeasure wobbeIndexField;
        
        private modulusOfCompressionMeasure grossCalorificValueStdField;
        
        private pressureMeasure rvpStabilizedCrudeField;
        
        private volumePerVolumeMeasure bswStabilizedCrudeField;
        
        private densityMeasure densityStabilizedCrudeField;
        
        private cs_productVolumeComponentContent[] componentContentField;
        
        private cs_productVolumePeriod[] periodField;
        
        private cs_datedComment[] commentField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The type of product that is being reported.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The type of product that is being reported.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("kind", DataType="ReportingProduct")]
        public ReportingProduct kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of product that is being reported. This is reserved for generic kinds like chemical.</summary>
        [System.ComponentModel.DescriptionAttribute("The name of product that is being reported. This is reserved for generic kinds li" +
            "ke chemical.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameStruct")]
        public nameStruct name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>This factor describes the fraction of fluid in the source flow  that is allocated to this product stream. The volumes reported here are derived from the  source flow based on this split factor. This should be an allocation flow.</summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(0D, 1D)]
        [System.ComponentModel.DescriptionAttribute("This factor describes the fraction of fluid in the source flow  that is allocated" +
            " to this product stream. The volumes reported here are derived from the  source " +
            "flow based on this split factor. This should be an allocation flow.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("splitFactor", DataType="nonNegativeFraction")]
        public double splitFactor {
            get {
                return this.splitFactorField;
            }
            set {
                this.splitFactorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool splitFactorSpecified {
            get {
                return this.splitFactorFieldSpecified;
            }
            set {
                this.splitFactorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A reference to the source flow whose volumes are used to determine the volumes within this target product stream based on the split factor.</summary>
        [System.ComponentModel.DescriptionAttribute("A reference to the source flow whose volumes are used to determine the volumes wi" +
            "thin this target product stream based on the split factor.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sourceFlow", DataType="cs_refProductFlow")]
        public cs_refProductFlow sourceFlow {
            get {
                return this.sourceFlowField;
            }
            set {
                this.sourceFlowField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gas oil ratio. The ratio between the total produced gas volume and the total produced oil volume including oil and gas volumes used on the installation.</summary>
        [System.ComponentModel.DescriptionAttribute("Gas oil ratio. The ratio between the total produced gas volume and the total prod" +
            "uced oil volume including oil and gas volumes used on the installation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gor", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure gor {
            get {
                return this.gorField;
            }
            set {
                this.gorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gas oil ratio month to date. The gas oil ratio from the beginning of the month  to the end of the reporting priod.</summary>
        [System.ComponentModel.DescriptionAttribute("Gas oil ratio month to date. The gas oil ratio from the beginning of the month  t" +
            "o the end of the reporting priod.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gorMTD", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure gorMTD {
            get {
                return this.gorMTDField;
            }
            set {
                this.gorMTDField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The volumetric ratio of gas to liquid for all products in the whole flow.</summary>
        [System.ComponentModel.DescriptionAttribute("The volumetric ratio of gas to liquid for all products in the whole flow.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasLiquidRatio", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure gasLiquidRatio {
            get {
                return this.gasLiquidRatioField;
            }
            set {
                this.gasLiquidRatioField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Water concentration mass basis.  The ratio of water produced compared to the mass of total liquids produced.</summary>
        [System.ComponentModel.DescriptionAttribute("Water concentration mass basis.  The ratio of water produced compared to the mass" +
            " of total liquids produced.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("waterConcMass", DataType="massConcentrationMeasure")]
        public massConcentrationMeasure waterConcMass {
            get {
                return this.waterConcMassField;
            }
            set {
                this.waterConcMassField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Water concentration volume basis. The ratio of water produced compared to the mass of total liquids produced.</summary>
        [System.ComponentModel.DescriptionAttribute("Water concentration volume basis. The ratio of water produced compared to the mas" +
            "s of total liquids produced.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("waterConcVol", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure waterConcVol {
            get {
                return this.waterConcVolField;
            }
            set {
                this.waterConcVolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The average atmospheric pressure during the reporting period.</summary>
        [System.ComponentModel.DescriptionAttribute("The average atmospheric pressure during the reporting period.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("atmosphere", DataType="pressureMeasure")]
        public pressureMeasure atmosphere {
            get {
                return this.atmosphereField;
            }
            set {
                this.atmosphereField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The volume of the fluid, possibly corrected to specific  conditions of temperature and pressure. A positive value for an inlet port indicates flow into the port. A negative value for an inlet port indicates flow out of the port. A positive value for an outlet port indicates flow out of the port. A negative value for an outlet port indicates flow into of the port. This convention is designed such that a positive sign indicates an expected condition based on the intended port direction while a negative sign indicates an anomolous condition. If more than one value is specified then all values must represent the same  opinion of the volume (at different conditions).</summary>
        [System.Xml.Serialization.XmlElementAttribute("volumeValue")]
        [System.ComponentModel.DescriptionAttribute(@"The volume of the fluid, possibly corrected to specific  conditions of temperature and pressure. A positive value for an inlet port indicates flow into the port. A negative value for an inlet port indicates flow out of the port. A positive value for an outlet port indicates flow out of the port. A negative value for an outlet port indicates flow into of the port. This convention is designed such that a positive sign indicates an expected condition based on the intended port direction while a negative sign indicates an anomolous condition. If more than one value is specified then all values must represent the same  opinion of the volume (at different conditions).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volumeValue", DataType="cs_volumeValue")]
        public cs_volumeValue[] volumeValue {
            get {
                return this.volumeValueField;
            }
            set {
                this.volumeValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>DEPRECATED. Use volumeValue for new work. The uncorrected volume of the product. The sign of the value should conform to the above description of volumeValue. If the 'status' attribute is absent and the value is not "NaN",  the data value can be assumed to be good with no restrictions. A value of "NaN" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.</summary>
        [System.ComponentModel.DescriptionAttribute(@"DEPRECATED. Use volumeValue for new work. The uncorrected volume of the product. The sign of the value should conform to the above description of volumeValue. If the 'status' attribute is absent and the value is not ""NaN"",  the data value can be assumed to be good with no restrictions. A value of ""NaN"" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volume", DataType="volumeQualifiedMeasure")]
        public volumeQualifiedMeasure volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>DEPRECATED. Use volumeValue for new work. The volume of the fluid, corrected to standard  conditions of temperature and pressure.  The sign of the value should conform to the above description of volumeValue. If the 'status' attribute is absent and the value is not "NaN",  the data value can be assumed to be good with no restrictions. A value of "NaN" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.</summary>
        [System.ComponentModel.DescriptionAttribute(@"DEPRECATED. Use volumeValue for new work. The volume of the fluid, corrected to standard  conditions of temperature and pressure.  The sign of the value should conform to the above description of volumeValue. If the 'status' attribute is absent and the value is not ""NaN"",  the data value can be assumed to be good with no restrictions. A value of ""NaN"" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volumeStd", DataType="volumeQualifiedMeasure")]
        public volumeQualifiedMeasure volumeStd {
            get {
                return this.volumeStdField;
            }
            set {
                this.volumeStdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The flow rate of the product, possibly corrected to specific  conditions of temperature and pressure. The sign of the value should conform to the above description of volumeValue. If more than one value is specified then all values must represent the same  opinion of the flow rate (at different conditions).</summary>
        [System.Xml.Serialization.XmlElementAttribute("flowRateValue")]
        [System.ComponentModel.DescriptionAttribute(@"The flow rate of the product, possibly corrected to specific  conditions of temperature and pressure. The sign of the value should conform to the above description of volumeValue. If more than one value is specified then all values must represent the same  opinion of the flow rate (at different conditions).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowRateValue", DataType="cs_flowRateValue")]
        public cs_flowRateValue[] flowRateValue {
            get {
                return this.flowRateValueField;
            }
            set {
                this.flowRateValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>DEPRECATED. Use flowRateValue for new work. The flow rate of the product. The sign of the value should conform to the above description of volume. If the 'status' attribute is absent and the value is not "NaN",  the data value can be assumed to be good with no restrictions. A value of "NaN" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.</summary>
        [System.ComponentModel.DescriptionAttribute(@"DEPRECATED. Use flowRateValue for new work. The flow rate of the product. The sign of the value should conform to the above description of volume. If the 'status' attribute is absent and the value is not ""NaN"",  the data value can be assumed to be good with no restrictions. A value of ""NaN"" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowRate", DataType="volumeFlowRateQualifiedMeasure")]
        public volumeFlowRateQualifiedMeasure flowRate {
            get {
                return this.flowRateField;
            }
            set {
                this.flowRateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Temperature of the port. Specifying the temperature here (as opposed to in Period) implies that the temperature is constant for all periods of the flow.</summary>
        [System.ComponentModel.DescriptionAttribute("Temperature of the port. Specifying the temperature here (as opposed to in Period" +
            ") implies that the temperature is constant for all periods of the flow.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("temp", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure temp {
            get {
                return this.tempField;
            }
            set {
                this.tempField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pressure of the port. Specifying the pressure here (as opposed to in Period) implies that the pressure is constant for all periods of the flow.</summary>
        [System.ComponentModel.DescriptionAttribute("Pressure of the port. Specifying the pressure here (as opposed to in Period) impl" +
            "ies that the pressure is constant for all periods of the flow.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pres", DataType="pressureMeasure")]
        public pressureMeasure pres {
            get {
                return this.presField;
            }
            set {
                this.presField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Absolute minimum pressure before the system will give an alarm.</summary>
        [System.ComponentModel.DescriptionAttribute("Absolute minimum pressure before the system will give an alarm.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("absoluteMinPres", DataType="pressureMeasure")]
        public pressureMeasure absoluteMinPres {
            get {
                return this.absoluteMinPresField;
            }
            set {
                this.absoluteMinPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The internal differences between this port and one other port on this unit.</summary>
        [System.Xml.Serialization.XmlElementAttribute("portDiff")]
        [System.ComponentModel.DescriptionAttribute("The internal differences between this port and one other port on this unit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("portDiff", DataType="cs_productVolumePortDifference")]
        public cs_productVolumePortDifference[] portDiff {
            get {
                return this.portDiffField;
            }
            set {
                this.portDiffField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The mass of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The mass of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mass", DataType="massMeasure")]
        public massMeasure mass {
            get {
                return this.massField;
            }
            set {
                this.massField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The electrical energy represented by the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The electrical energy represented by the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("work", DataType="workMeasure")]
        public workMeasure work {
            get {
                return this.workField;
            }
            set {
                this.workField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The actual volume divided by the potential volume.</summary>
        [System.ComponentModel.DescriptionAttribute("The actual volume divided by the potential volume.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("efficiency", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure efficiency {
            get {
                return this.efficiencyField;
            }
            set {
                this.efficiencyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reid vapor pressure of the product. The absolute vapor pressure of volatile crude oil and  volatile petroleum liquids, except liquefied petroleum gases, as  determined in  accordance with American Society for Testing and Materials under the designation ASTM D323-56.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Reid vapor pressure of the product. The absolute vapor pressure of volatile crude oil and  volatile petroleum liquids, except liquefied petroleum gases, as  determined in  accordance with American Society for Testing and Materials under the designation ASTM D323-56.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rvp", DataType="pressureMeasure")]
        public pressureMeasure rvp {
            get {
                return this.rvpField;
            }
            set {
                this.rvpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vapor pressure of the product. The equilibrium partial pressure exerted by a petroleum liquid  as determined in accordance with standard methods.</summary>
        [System.ComponentModel.DescriptionAttribute("True vapor pressure of the product. The equilibrium partial pressure exerted by a" +
            " petroleum liquid  as determined in accordance with standard methods.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvp", DataType="pressureMeasure")]
        public pressureMeasure tvp {
            get {
                return this.tvpField;
            }
            set {
                this.tvpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Basic sediment and water is measured from a liquid sample  of the production stream. It includes free water, sediment and emulsion and  is measured as a volume percentage of the production stream.</summary>
        [System.ComponentModel.DescriptionAttribute("Basic sediment and water is measured from a liquid sample  of the production stre" +
            "am. It includes free water, sediment and emulsion and  is measured as a volume p" +
            "ercentage of the production stream.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bsw", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure bsw {
            get {
                return this.bswField;
            }
            set {
                this.bswField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The basic sediment and water as measured on the  previous reporting period (e.g., day).</summary>
        [System.ComponentModel.DescriptionAttribute("The basic sediment and water as measured on the  previous reporting period (e.g.," +
            " day).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bswPrevious", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure bswPrevious {
            get {
                return this.bswPreviousField;
            }
            set {
                this.bswPreviousField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The density of the fluid, possibly corrected to specific  conditions of temperature and pressure. If more than one value is specified then all values must represent the same  opinion of the density (at different conditions).</summary>
        [System.Xml.Serialization.XmlElementAttribute("densityValue")]
        [System.ComponentModel.DescriptionAttribute("The density of the fluid, possibly corrected to specific  conditions of temperatu" +
            "re and pressure. If more than one value is specified then all values must repres" +
            "ent the same  opinion of the density (at different conditions).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densityValue", DataType="cs_densityValue")]
        public cs_densityValue[] densityValue {
            get {
                return this.densityValueField;
            }
            set {
                this.densityValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>DEPRECATED. Use densityValue for new work. The density of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("DEPRECATED. Use densityValue for new work. The density of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("density", DataType="densityMeasure")]
        public densityMeasure density {
            get {
                return this.densityField;
            }
            set {
                this.densityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The mass basis flow rate of the product. This is used for things like a sand component.</summary>
        [System.ComponentModel.DescriptionAttribute("The mass basis flow rate of the product. This is used for things like a sand comp" +
            "onent.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densityFlowRate", DataType="massFlowRateMeasure")]
        public massFlowRateMeasure densityFlowRate {
            get {
                return this.densityFlowRateField;
            }
            set {
                this.densityFlowRateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>DEPRECATED. Use densityValue for new work. The density of the product after it has been  corrected to standard temperature and pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("DEPRECATED. Use densityValue for new work. The density of the product after it ha" +
            "s been  corrected to standard temperature and pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densityStd", DataType="densityMeasure")]
        public densityMeasure densityStd {
            get {
                return this.densityStdField;
            }
            set {
                this.densityStdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The concentration of the product as a volume  percentage of the product stream.</summary>
        [System.ComponentModel.DescriptionAttribute("The concentration of the product as a volume  percentage of the product stream.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("concentration", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure concentration {
            get {
                return this.concentrationField;
            }
            set {
                this.concentrationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The molecular weight of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The molecular weight of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("molecularWeight", DataType="unitlessQuantity")]
        public double molecularWeight {
            get {
                return this.molecularWeightField;
            }
            set {
                this.molecularWeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool molecularWeightSpecified {
            get {
                return this.molecularWeightFieldSpecified;
            }
            set {
                this.molecularWeightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The weight fraction of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The weight fraction of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("weightPercent", DataType="massConcentrationMeasurePercent")]
        public massConcentrationMeasurePercent weightPercent {
            get {
                return this.weightPercentField;
            }
            set {
                this.weightPercentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The mole fraction of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The mole fraction of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("molePercent", DataType="molarFractionMeasurePercent")]
        public molarFractionMeasurePercent molePercent {
            get {
                return this.molePercentField;
            }
            set {
                this.molePercentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The molar amount.</summary>
        [System.ComponentModel.DescriptionAttribute("The molar amount.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("moleAmt", DataType="amountOfSubstanceMeasure")]
        public amountOfSubstanceMeasure moleAmt {
            get {
                return this.moleAmtField;
            }
            set {
                this.moleAmtField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The specific gravity of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The specific gravity of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sg", DataType="dimensionlessMeasure")]
        public dimensionlessMeasure sg {
            get {
                return this.sgField;
            }
            set {
                this.sgField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The temperature at which the heavier hydrocarbons come out of solution.</summary>
        [System.ComponentModel.DescriptionAttribute("The temperature at which the heavier hydrocarbons come out of solution.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("hcDewpoint", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure hcDewpoint {
            get {
                return this.hcDewpointField;
            }
            set {
                this.hcDewpointField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The temperature at which the first water comes out of solution.</summary>
        [System.ComponentModel.DescriptionAttribute("The temperature at which the first water comes out of solution.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("waterDewpoint", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure waterDewpoint {
            get {
                return this.waterDewpointField;
            }
            set {
                this.waterDewpointField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Wobbe Index. A number which indicates interchangeability of fuel gasses and is obtained by dividing the heating value of a gas by the  square root of its specific gravity.</summary>
        [System.ComponentModel.DescriptionAttribute("Wobbe Index. A number which indicates interchangeability of fuel gasses and is ob" +
            "tained by dividing the heating value of a gas by the  square root of its specifi" +
            "c gravity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wobbeIndex", DataType="modulusOfCompressionMeasure")]
        public modulusOfCompressionMeasure wobbeIndex {
            get {
                return this.wobbeIndexField;
            }
            set {
                this.wobbeIndexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The amount of heat which would be released by the complete combustion in air of a specific quantity of product at standard temperature and pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("The amount of heat which would be released by the complete combustion in air of a" +
            " specific quantity of product at standard temperature and pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("grossCalorificValueStd", DataType="modulusOfCompressionMeasure")]
        public modulusOfCompressionMeasure grossCalorificValueStd {
            get {
                return this.grossCalorificValueStdField;
            }
            set {
                this.grossCalorificValueStdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reid vapor pressure of stabilized crude.</summary>
        [System.ComponentModel.DescriptionAttribute("Reid vapor pressure of stabilized crude.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rvpStabilizedCrude", DataType="pressureMeasure")]
        public pressureMeasure rvpStabilizedCrude {
            get {
                return this.rvpStabilizedCrudeField;
            }
            set {
                this.rvpStabilizedCrudeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Basic sediment and water content in stabilized crude.</summary>
        [System.ComponentModel.DescriptionAttribute("Basic sediment and water content in stabilized crude.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bswStabilizedCrude", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure bswStabilizedCrude {
            get {
                return this.bswStabilizedCrudeField;
            }
            set {
                this.bswStabilizedCrudeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The density of stabilized crude.</summary>
        [System.ComponentModel.DescriptionAttribute("The density of stabilized crude.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densityStabilizedCrude", DataType="densityMeasure")]
        public densityMeasure densityStabilizedCrude {
            get {
                return this.densityStabilizedCrudeField;
            }
            set {
                this.densityStabilizedCrudeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The relative amount of a component product in the product stream.</summary>
        [System.Xml.Serialization.XmlElementAttribute("componentContent")]
        [System.ComponentModel.DescriptionAttribute("The relative amount of a component product in the product stream.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("componentContent", DataType="cs_productVolumeComponentContent")]
        public cs_productVolumeComponentContent[] componentContent {
            get {
                return this.componentContentField;
            }
            set {
                this.componentContentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Product amounts for a specific period.</summary>
        [System.Xml.Serialization.XmlElementAttribute("period")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Product amounts for a specific period.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("period", DataType="cs_productVolumePeriod")]
        public cs_productVolumePeriod[] period {
            get {
                return this.periodField;
            }
            set {
                this.periodField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A (possibly timstamped) remark about the product.</summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        [System.ComponentModel.DescriptionAttribute("A (possibly timstamped) remark about the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="cs_datedComment")]
        public cs_datedComment[] comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productVolumeRelatedFacility {
        
        private facilityIdentifierStruct nameField;
        
        private facilityIdentifierStruct facilityParent1Field;
        
        private facilityIdentifierStruct facilityParent2Field;
        
        private ReportingFacility kindField;
        
        private bool kindFieldSpecified;
        
        private refNameString portField;
        
        private refNameString unitField;
        
        private refNameString networkField;
        
        /// <remarks/>
        /// <summary>The name of the facility. The name can be qualified by a naming system.  This can also define the kind of facility.</summary>
        [System.ComponentModel.DescriptionAttribute("The name of the facility. The name can be qualified by a naming system.  This can" +
            " also define the kind of facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>For facilities whose name is unique within the context of another  facility, the name of the parent facility.  The name can be qualified by a naming system. This also defines the kind of facility.</summary>
        [System.ComponentModel.DescriptionAttribute("For facilities whose name is unique within the context of another  facility, the " +
            "name of the parent facility.  The name can be qualified by a naming system. This" +
            " also defines the kind of facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facilityParent1", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct facilityParent1 {
            get {
                return this.facilityParent1Field;
            }
            set {
                this.facilityParent1Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>For facilities whose name is unique within the context of another  facility, the name of the parent facility of parent1.  The name can be qualified by a naming system. This also defines the kind of facility.</summary>
        [System.ComponentModel.DescriptionAttribute("For facilities whose name is unique within the context of another  facility, the " +
            "name of the parent facility of parent1.  The name can be qualified by a naming s" +
            "ystem. This also defines the kind of facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facilityParent2", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct facilityParent2 {
            get {
                return this.facilityParent2Field;
            }
            set {
                this.facilityParent2Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A kind of facility where the specific name is not relevant.</summary>
        [System.ComponentModel.DescriptionAttribute("A kind of facility where the specific name is not relevant.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("kind", DataType="ReportingFacility")]
        public ReportingFacility kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kindSpecified {
            get {
                return this.kindFieldSpecified;
            }
            set {
                this.kindFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The Product Flow Port associated with the Product Flow Unit.</summary>
        [System.ComponentModel.DescriptionAttribute("The Product Flow Port associated with the Product Flow Unit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("port", DataType="refNameString")]
        public refNameString port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The Product Flow Unit representing the facility.</summary>
        [System.ComponentModel.DescriptionAttribute("The Product Flow Unit representing the facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("unit", DataType="refNameString")]
        public refNameString unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The Product Flow Network representing the facility. This is only required if the network is not the same as the primary network that represents the Product Flow Model. This must be unique within the context of the Product Flow Model represented  by this report.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The Product Flow Network representing the facility. This is only required if the network is not the same as the primary network that represents the Product Flow Model. This must be unique within the context of the Product Flow Model represented  by this report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("network", DataType="refNameString")]
        public refNameString network {
            get {
                return this.networkField;
            }
            set {
                this.networkField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class facilityIdentifierStruct {
        
        private ReportingFacility kindField;
        
        private bool kindFieldSpecified;
        
        private string siteKindField;
        
        private string namingSystemField;
        
        private string uidRefField;
        
        private string valueField;
        
        /// <remarks/>
        /// <summary>The kind of facility.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute("The kind of facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("kind", DataType="ReportingFacility")]
        public ReportingFacility kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kindSpecified {
            get {
                return this.kindFieldSpecified;
            }
            set {
                this.kindFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A custom sub-categorization of facility kind. This attribute is free-form text and allows  implementers to provide a more specific or specialized description of the facility kind.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A custom sub-categorization of facility kind. This attribute is free-form text an" +
            "d allows  implementers to provide a more specific or specialized description of " +
            "the facility kind.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("siteKind", DataType="nameString")]
        public string siteKind {
            get {
                return this.siteKindField;
            }
            set {
                this.siteKindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The naming system within which the name is unique. For example, API or NPD.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The naming system within which the name is unique. For example, API or NPD.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("namingSystem", DataType="nameString")]
        public string namingSystem {
            get {
                return this.namingSystemField;
            }
            set {
                this.namingSystemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>If the facility is defined and instantiated within the context of a WITSML server, this is a pointer to the uid value of that object instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("If the facility is defined and instantiated within the context of a WITSML server" +
            ", this is a pointer to the uid value of that object instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidRef", DataType="uidString")]
        public string uidRef {
            get {
                return this.uidRefField;
            }
            set {
                this.uidRefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ReportingFacility {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("block valve")]
        blockvalve,
        
        /// <remarks/>
        bottomhole,
        
        /// <remarks/>
        casing,
        
        /// <remarks/>
        choke,
        
        /// <remarks/>
        cluster,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("commercial entity")]
        commercialentity,
        
        /// <remarks/>
        company,
        
        /// <remarks/>
        completion,
        
        /// <remarks/>
        compressor,
        
        /// <remarks/>
        controller,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("controller -- lift")]
        controllerlift,
        
        /// <remarks/>
        country,
        
        /// <remarks/>
        county,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("downhole monitoring system")]
        downholemonitoringsystem,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electric submersible pump")]
        electricsubmersiblepump,
        
        /// <remarks/>
        field,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("field - area")]
        fieldarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("field - group")]
        fieldgroup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("field - part")]
        fieldpart,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("flow meter")]
        flowmeter,
        
        /// <remarks/>
        flowline,
        
        /// <remarks/>
        formation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas lift valve mandrel")]
        gasliftvalvemandrel,
        
        /// <remarks/>
        generator,
        
        /// <remarks/>
        installation,
        
        /// <remarks/>
        lease,
        
        /// <remarks/>
        license,
        
        /// <remarks/>
        manifold,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("organizational unit")]
        organizationalunit,
        
        /// <remarks/>
        packer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("perforated interval")]
        perforatedinterval,
        
        /// <remarks/>
        pipeline,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("plant - processing")]
        plantprocessing,
        
        /// <remarks/>
        platform,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure meter")]
        pressuremeter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("processing facility")]
        processingfacility,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("production tubing")]
        productiontubing,
        
        /// <remarks/>
        pump,
        
        /// <remarks/>
        rectifier,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("regulating valve")]
        regulatingvalve,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("remote terminal unit")]
        remoteterminalunit,
        
        /// <remarks/>
        reservoir,
        
        /// <remarks/>
        separator,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sleeve valve")]
        sleevevalve,
        
        /// <remarks/>
        state,
        
        /// <remarks/>
        storage,
        
        /// <remarks/>
        tank,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("temperature meter")]
        temperaturemeter,
        
        /// <remarks/>
        template,
        
        /// <remarks/>
        terminal,
        
        /// <remarks/>
        trap,
        
        /// <remarks/>
        trunkline,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tubing head")]
        tubinghead,
        
        /// <remarks/>
        turbine,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well group")]
        wellgroup,
        
        /// <remarks/>
        well,
        
        /// <remarks/>
        wellbore,
        
        /// <remarks/>
        wellhead,
        
        /// <remarks/>
        zone,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productVolumeFlow {
        
        private string nameField;
        
        private ReportingFlow kindField;
        
        private refNameString portField;
        
        private ProductFlowPortType directionField;
        
        private bool directionFieldSpecified;
        
        private facilityIdentifierStruct facilityField;
        
        private nameStruct[] facilityAliasField;
        
        private FlowQualifier qualifierField;
        
        private bool qualifierFieldSpecified;
        
        private FlowSubQualifier subQualifierField;
        
        private bool subQualifierFieldSpecified;
        
        private cs_productVolumeRelatedFacility relatedFacilityField;
        
        private Energistics.DataAccess.Timestamp versionField;
        
        private bool versionFieldSpecified;
        
        private string versionSourceField;
        
        private refNameString sourceFlowField;
        
        private volumePerVolumeMeasure gorField;
        
        private volumePerVolumeMeasure gorMTDField;
        
        private volumePerVolumeMeasure gasLiquidRatioField;
        
        private massConcentrationMeasure waterConcMassField;
        
        private volumePerVolumeMeasure waterConcVolField;
        
        private pressureMeasure atmosphereField;
        
        private cs_volumeValue[] volumeValueField;
        
        private volumeQualifiedMeasure volumeField;
        
        private volumeQualifiedMeasure volumeStdField;
        
        private cs_flowRateValue[] flowRateValueField;
        
        private volumeFlowRateQualifiedMeasure flowRateField;
        
        private thermodynamicTemperatureMeasure tempField;
        
        private pressureMeasure presField;
        
        private pressureMeasure absoluteMinPresField;
        
        private cs_productVolumePortDifference[] portDiffField;
        
        private massMeasure massField;
        
        private workMeasure workField;
        
        private volumePerVolumeMeasure efficiencyField;
        
        private pressureMeasure rvpField;
        
        private pressureMeasure tvpField;
        
        private volumePerVolumeMeasure bswField;
        
        private volumePerVolumeMeasure bswPreviousField;
        
        private cs_densityValue[] densityValueField;
        
        private densityMeasure densityField;
        
        private massFlowRateMeasure densityFlowRateField;
        
        private densityMeasure densityStdField;
        
        private volumePerVolumeMeasure concentrationField;
        
        private double molecularWeightField;
        
        private bool molecularWeightFieldSpecified;
        
        private massConcentrationMeasurePercent weightPercentField;
        
        private molarFractionMeasurePercent molePercentField;
        
        private amountOfSubstanceMeasure moleAmtField;
        
        private dimensionlessMeasure sgField;
        
        private thermodynamicTemperatureMeasure hcDewpointField;
        
        private thermodynamicTemperatureMeasure waterDewpointField;
        
        private modulusOfCompressionMeasure wobbeIndexField;
        
        private modulusOfCompressionMeasure grossCalorificValueStdField;
        
        private pressureMeasure rvpStabilizedCrudeField;
        
        private volumePerVolumeMeasure bswStabilizedCrudeField;
        
        private densityMeasure densityStabilizedCrudeField;
        
        private cs_productVolumeProduct[] productField;
        
        private cs_datedComment[] commentField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The name of this flow within the context of this report. This might reflect some combination of the kind of flow, port, qualifier and related facility.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of this flow within the context of this report. This might reflect some " +
            "combination of the kind of flow, port, qualifier and related facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Indicates the type of flow that is being reported. The type of flow is an indication of the overall source or target of the flow. A production flow has one or more wells as the originating source. An injection flow has one or more wells as the ultimate target. An import flow has an offsite source. An export flow has an offiste target. A consumption flow generally has a kind of equipment as a target.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"Indicates the type of flow that is being reported. The type of flow is an indication of the overall source or target of the flow. A production flow has one or more wells as the originating source. An injection flow has one or more wells as the ultimate target. An import flow has an offsite source. An export flow has an offiste target. A consumption flow generally has a kind of equipment as a target.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("kind", DataType="ReportingFlow")]
        public ReportingFlow kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The Product Flow Port to which the flow is assigned. This is the port on the Product Flow Unit that represents the facility.</summary>
        [System.ComponentModel.DescriptionAttribute("The Product Flow Port to which the flow is assigned. This is the port on the Prod" +
            "uct Flow Unit that represents the facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("port", DataType="refNameString")]
        public refNameString port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The kind of port that this flow represents: inlet or outlet.</summary>
        [System.ComponentModel.DescriptionAttribute("The kind of port that this flow represents: inlet or outlet.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("direction", DataType="ProductFlowPortType")]
        public ProductFlowPortType direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool directionSpecified {
            get {
                return this.directionFieldSpecified;
            }
            set {
                this.directionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the facility represented by the port  where the measurements were taken.  The name can be qualified by a naming system.  This also defines the kind of facility.</summary>
        [System.ComponentModel.DescriptionAttribute("The name of the facility represented by the port  where the measurements were tak" +
            "en.  The name can be qualified by a naming system.  This also defines the kind o" +
            "f facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facility", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An alternatative name of a facility represented by the port. This is generally unique within a naming system. The above contextually unique name (that is, within  the context of a parent) should also be listed as an alias.</summary>
        [System.Xml.Serialization.XmlElementAttribute("facilityAlias")]
        [System.ComponentModel.DescriptionAttribute("An alternatative name of a facility represented by the port. This is generally un" +
            "ique within a naming system. The above contextually unique name (that is, within" +
            "  the context of a parent) should also be listed as an alias.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facilityAlias", DataType="nameStruct")]
        public nameStruct[] facilityAlias {
            get {
                return this.facilityAliasField;
            }
            set {
                this.facilityAliasField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Qualifies the type of flow that is being reported.</summary>
        [System.ComponentModel.DescriptionAttribute("Qualifies the type of flow that is being reported.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("qualifier", DataType="FlowQualifier")]
        public FlowQualifier qualifier {
            get {
                return this.qualifierField;
            }
            set {
                this.qualifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qualifierSpecified {
            get {
                return this.qualifierFieldSpecified;
            }
            set {
                this.qualifierFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines a specialization of the qualifier value. This should only be given if a qualifier is given.</summary>
        [System.ComponentModel.DescriptionAttribute("Defines a specialization of the qualifier value. This should only be given if a q" +
            "ualifier is given.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("subQualifier", DataType="FlowSubQualifier")]
        public FlowSubQualifier subQualifier {
            get {
                return this.subQualifierField;
            }
            set {
                this.subQualifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool subQualifierSpecified {
            get {
                return this.subQualifierFieldSpecified;
            }
            set {
                this.subQualifierFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A second facility related to this flow.  For a production flow, this would represent a role of 'produced for'. For an import flow, this would represent a role of 'inport from'. For an export flow, this would represent a role of 'export to'.</summary>
        [System.ComponentModel.DescriptionAttribute("A second facility related to this flow.  For a production flow, this would repres" +
            "ent a role of \'produced for\'. For an import flow, this would represent a role of" +
            " \'inport from\'. For an export flow, this would represent a role of \'export to\'.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("relatedFacility", DataType="cs_productVolumeRelatedFacility")]
        public cs_productVolumeRelatedFacility relatedFacility {
            get {
                return this.relatedFacilityField;
            }
            set {
                this.relatedFacilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A timestamp representing the version of this data.  A flow (same port and products) with a more recent timestamp will represent  the "current" version.</summary>
        [System.ComponentModel.DescriptionAttribute("A timestamp representing the version of this data.  A flow (same port and product" +
            "s) with a more recent timestamp will represent  the \"current\" version.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool versionSpecified {
            get {
                return this.versionFieldSpecified;
            }
            set {
                this.versionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Identifies the source of the version.  This will commonly be the name of the software which created the version.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Identifies the source of the version.  This will commonly be the name of the soft" +
            "ware which created the version.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("versionSource", DataType="nameString")]
        public string versionSource {
            get {
                return this.versionSourceField;
            }
            set {
                this.versionSourceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>This is a pointer to the flow from which this flow was derived.</summary>
        [System.ComponentModel.DescriptionAttribute("This is a pointer to the flow from which this flow was derived.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sourceFlow", DataType="refNameString")]
        public refNameString sourceFlow {
            get {
                return this.sourceFlowField;
            }
            set {
                this.sourceFlowField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gas oil ratio. The ratio between the total produced gas volume and the total produced oil volume including oil and gas volumes used on the installation.</summary>
        [System.ComponentModel.DescriptionAttribute("Gas oil ratio. The ratio between the total produced gas volume and the total prod" +
            "uced oil volume including oil and gas volumes used on the installation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gor", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure gor {
            get {
                return this.gorField;
            }
            set {
                this.gorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gas oil ratio month to date. The gas oil ratio from the beginning of the month  to the end of the reporting priod.</summary>
        [System.ComponentModel.DescriptionAttribute("Gas oil ratio month to date. The gas oil ratio from the beginning of the month  t" +
            "o the end of the reporting priod.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gorMTD", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure gorMTD {
            get {
                return this.gorMTDField;
            }
            set {
                this.gorMTDField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The volumetric ratio of gas to liquid for all products in the whole flow.</summary>
        [System.ComponentModel.DescriptionAttribute("The volumetric ratio of gas to liquid for all products in the whole flow.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasLiquidRatio", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure gasLiquidRatio {
            get {
                return this.gasLiquidRatioField;
            }
            set {
                this.gasLiquidRatioField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Water concentration mass basis.  The ratio of water produced compared to the mass of total liquids produced.</summary>
        [System.ComponentModel.DescriptionAttribute("Water concentration mass basis.  The ratio of water produced compared to the mass" +
            " of total liquids produced.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("waterConcMass", DataType="massConcentrationMeasure")]
        public massConcentrationMeasure waterConcMass {
            get {
                return this.waterConcMassField;
            }
            set {
                this.waterConcMassField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Water concentration volume basis. The ratio of water produced compared to the mass of total liquids produced.</summary>
        [System.ComponentModel.DescriptionAttribute("Water concentration volume basis. The ratio of water produced compared to the mas" +
            "s of total liquids produced.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("waterConcVol", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure waterConcVol {
            get {
                return this.waterConcVolField;
            }
            set {
                this.waterConcVolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The average atmospheric pressure during the reporting period.</summary>
        [System.ComponentModel.DescriptionAttribute("The average atmospheric pressure during the reporting period.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("atmosphere", DataType="pressureMeasure")]
        public pressureMeasure atmosphere {
            get {
                return this.atmosphereField;
            }
            set {
                this.atmosphereField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The volume of the fluid, possibly corrected to specific  conditions of temperature and pressure. A positive value for an inlet port indicates flow into the port. A negative value for an inlet port indicates flow out of the port. A positive value for an outlet port indicates flow out of the port. A negative value for an outlet port indicates flow into of the port. This convention is designed such that a positive sign indicates an expected condition based on the intended port direction while a negative sign indicates an anomolous condition. If more than one value is specified then all values must represent the same  opinion of the volume (at different conditions).</summary>
        [System.Xml.Serialization.XmlElementAttribute("volumeValue")]
        [System.ComponentModel.DescriptionAttribute(@"The volume of the fluid, possibly corrected to specific  conditions of temperature and pressure. A positive value for an inlet port indicates flow into the port. A negative value for an inlet port indicates flow out of the port. A positive value for an outlet port indicates flow out of the port. A negative value for an outlet port indicates flow into of the port. This convention is designed such that a positive sign indicates an expected condition based on the intended port direction while a negative sign indicates an anomolous condition. If more than one value is specified then all values must represent the same  opinion of the volume (at different conditions).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volumeValue", DataType="cs_volumeValue")]
        public cs_volumeValue[] volumeValue {
            get {
                return this.volumeValueField;
            }
            set {
                this.volumeValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>DEPRECATED. Use volumeValue for new work. The uncorrected volume of the product. The sign of the value should conform to the above description of volumeValue. If the 'status' attribute is absent and the value is not "NaN",  the data value can be assumed to be good with no restrictions. A value of "NaN" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.</summary>
        [System.ComponentModel.DescriptionAttribute(@"DEPRECATED. Use volumeValue for new work. The uncorrected volume of the product. The sign of the value should conform to the above description of volumeValue. If the 'status' attribute is absent and the value is not ""NaN"",  the data value can be assumed to be good with no restrictions. A value of ""NaN"" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volume", DataType="volumeQualifiedMeasure")]
        public volumeQualifiedMeasure volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>DEPRECATED. Use volumeValue for new work. The volume of the fluid, corrected to standard  conditions of temperature and pressure.  The sign of the value should conform to the above description of volumeValue. If the 'status' attribute is absent and the value is not "NaN",  the data value can be assumed to be good with no restrictions. A value of "NaN" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.</summary>
        [System.ComponentModel.DescriptionAttribute(@"DEPRECATED. Use volumeValue for new work. The volume of the fluid, corrected to standard  conditions of temperature and pressure.  The sign of the value should conform to the above description of volumeValue. If the 'status' attribute is absent and the value is not ""NaN"",  the data value can be assumed to be good with no restrictions. A value of ""NaN"" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volumeStd", DataType="volumeQualifiedMeasure")]
        public volumeQualifiedMeasure volumeStd {
            get {
                return this.volumeStdField;
            }
            set {
                this.volumeStdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The flow rate of the product, possibly corrected to specific  conditions of temperature and pressure. The sign of the value should conform to the above description of volumeValue. If more than one value is specified then all values must represent the same  opinion of the flow rate (at different conditions).</summary>
        [System.Xml.Serialization.XmlElementAttribute("flowRateValue")]
        [System.ComponentModel.DescriptionAttribute(@"The flow rate of the product, possibly corrected to specific  conditions of temperature and pressure. The sign of the value should conform to the above description of volumeValue. If more than one value is specified then all values must represent the same  opinion of the flow rate (at different conditions).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowRateValue", DataType="cs_flowRateValue")]
        public cs_flowRateValue[] flowRateValue {
            get {
                return this.flowRateValueField;
            }
            set {
                this.flowRateValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>DEPRECATED. Use flowRateValue for new work. The flow rate of the product. The sign of the value should conform to the above description of volume. If the 'status' attribute is absent and the value is not "NaN",  the data value can be assumed to be good with no restrictions. A value of "NaN" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.</summary>
        [System.ComponentModel.DescriptionAttribute(@"DEPRECATED. Use flowRateValue for new work. The flow rate of the product. The sign of the value should conform to the above description of volume. If the 'status' attribute is absent and the value is not ""NaN"",  the data value can be assumed to be good with no restrictions. A value of ""NaN"" should be interpreted as null and should be not be given unless  a status is also specified to explain why it is null.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowRate", DataType="volumeFlowRateQualifiedMeasure")]
        public volumeFlowRateQualifiedMeasure flowRate {
            get {
                return this.flowRateField;
            }
            set {
                this.flowRateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Temperature of the port. Specifying the temperature here (as opposed to in Period) implies that the temperature is constant for all periods of the flow.</summary>
        [System.ComponentModel.DescriptionAttribute("Temperature of the port. Specifying the temperature here (as opposed to in Period" +
            ") implies that the temperature is constant for all periods of the flow.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("temp", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure temp {
            get {
                return this.tempField;
            }
            set {
                this.tempField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pressure of the port. Specifying the pressure here (as opposed to in Period) implies that the pressure is constant for all periods of the flow.</summary>
        [System.ComponentModel.DescriptionAttribute("Pressure of the port. Specifying the pressure here (as opposed to in Period) impl" +
            "ies that the pressure is constant for all periods of the flow.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pres", DataType="pressureMeasure")]
        public pressureMeasure pres {
            get {
                return this.presField;
            }
            set {
                this.presField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Absolute minimum pressure before the system will give an alarm.</summary>
        [System.ComponentModel.DescriptionAttribute("Absolute minimum pressure before the system will give an alarm.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("absoluteMinPres", DataType="pressureMeasure")]
        public pressureMeasure absoluteMinPres {
            get {
                return this.absoluteMinPresField;
            }
            set {
                this.absoluteMinPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The internal differences between this port and one other port on this unit.</summary>
        [System.Xml.Serialization.XmlElementAttribute("portDiff")]
        [System.ComponentModel.DescriptionAttribute("The internal differences between this port and one other port on this unit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("portDiff", DataType="cs_productVolumePortDifference")]
        public cs_productVolumePortDifference[] portDiff {
            get {
                return this.portDiffField;
            }
            set {
                this.portDiffField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The mass of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The mass of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mass", DataType="massMeasure")]
        public massMeasure mass {
            get {
                return this.massField;
            }
            set {
                this.massField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The electrical energy represented by the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The electrical energy represented by the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("work", DataType="workMeasure")]
        public workMeasure work {
            get {
                return this.workField;
            }
            set {
                this.workField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The actual volume divided by the potential volume.</summary>
        [System.ComponentModel.DescriptionAttribute("The actual volume divided by the potential volume.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("efficiency", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure efficiency {
            get {
                return this.efficiencyField;
            }
            set {
                this.efficiencyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reid vapor pressure of the product. The absolute vapor pressure of volatile crude oil and  volatile petroleum liquids, except liquefied petroleum gases, as  determined in  accordance with American Society for Testing and Materials under the designation ASTM D323-56.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Reid vapor pressure of the product. The absolute vapor pressure of volatile crude oil and  volatile petroleum liquids, except liquefied petroleum gases, as  determined in  accordance with American Society for Testing and Materials under the designation ASTM D323-56.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rvp", DataType="pressureMeasure")]
        public pressureMeasure rvp {
            get {
                return this.rvpField;
            }
            set {
                this.rvpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vapor pressure of the product. The equilibrium partial pressure exerted by a petroleum liquid  as determined in accordance with standard methods.</summary>
        [System.ComponentModel.DescriptionAttribute("True vapor pressure of the product. The equilibrium partial pressure exerted by a" +
            " petroleum liquid  as determined in accordance with standard methods.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvp", DataType="pressureMeasure")]
        public pressureMeasure tvp {
            get {
                return this.tvpField;
            }
            set {
                this.tvpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Basic sediment and water is measured from a liquid sample  of the production stream. It includes free water, sediment and emulsion and  is measured as a volume percentage of the production stream.</summary>
        [System.ComponentModel.DescriptionAttribute("Basic sediment and water is measured from a liquid sample  of the production stre" +
            "am. It includes free water, sediment and emulsion and  is measured as a volume p" +
            "ercentage of the production stream.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bsw", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure bsw {
            get {
                return this.bswField;
            }
            set {
                this.bswField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The basic sediment and water as measured on the  previous reporting period (e.g., day).</summary>
        [System.ComponentModel.DescriptionAttribute("The basic sediment and water as measured on the  previous reporting period (e.g.," +
            " day).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bswPrevious", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure bswPrevious {
            get {
                return this.bswPreviousField;
            }
            set {
                this.bswPreviousField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The density of the fluid, possibly corrected to specific  conditions of temperature and pressure. If more than one value is specified then all values must represent the same  opinion of the density (at different conditions).</summary>
        [System.Xml.Serialization.XmlElementAttribute("densityValue")]
        [System.ComponentModel.DescriptionAttribute("The density of the fluid, possibly corrected to specific  conditions of temperatu" +
            "re and pressure. If more than one value is specified then all values must repres" +
            "ent the same  opinion of the density (at different conditions).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densityValue", DataType="cs_densityValue")]
        public cs_densityValue[] densityValue {
            get {
                return this.densityValueField;
            }
            set {
                this.densityValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>DEPRECATED. Use densityValue for new work. The density of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("DEPRECATED. Use densityValue for new work. The density of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("density", DataType="densityMeasure")]
        public densityMeasure density {
            get {
                return this.densityField;
            }
            set {
                this.densityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The mass basis flow rate of the product. This is used for things like a sand component.</summary>
        [System.ComponentModel.DescriptionAttribute("The mass basis flow rate of the product. This is used for things like a sand comp" +
            "onent.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densityFlowRate", DataType="massFlowRateMeasure")]
        public massFlowRateMeasure densityFlowRate {
            get {
                return this.densityFlowRateField;
            }
            set {
                this.densityFlowRateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>DEPRECATED. Use densityValue for new work. The density of the product after it has been  corrected to standard temperature and pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("DEPRECATED. Use densityValue for new work. The density of the product after it ha" +
            "s been  corrected to standard temperature and pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densityStd", DataType="densityMeasure")]
        public densityMeasure densityStd {
            get {
                return this.densityStdField;
            }
            set {
                this.densityStdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The concentration of the product as a volume  percentage of the product stream.</summary>
        [System.ComponentModel.DescriptionAttribute("The concentration of the product as a volume  percentage of the product stream.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("concentration", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure concentration {
            get {
                return this.concentrationField;
            }
            set {
                this.concentrationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The molecular weight of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The molecular weight of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("molecularWeight", DataType="unitlessQuantity")]
        public double molecularWeight {
            get {
                return this.molecularWeightField;
            }
            set {
                this.molecularWeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool molecularWeightSpecified {
            get {
                return this.molecularWeightFieldSpecified;
            }
            set {
                this.molecularWeightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The weight fraction of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The weight fraction of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("weightPercent", DataType="massConcentrationMeasurePercent")]
        public massConcentrationMeasurePercent weightPercent {
            get {
                return this.weightPercentField;
            }
            set {
                this.weightPercentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The mole fraction of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The mole fraction of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("molePercent", DataType="molarFractionMeasurePercent")]
        public molarFractionMeasurePercent molePercent {
            get {
                return this.molePercentField;
            }
            set {
                this.molePercentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The molar amount.</summary>
        [System.ComponentModel.DescriptionAttribute("The molar amount.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("moleAmt", DataType="amountOfSubstanceMeasure")]
        public amountOfSubstanceMeasure moleAmt {
            get {
                return this.moleAmtField;
            }
            set {
                this.moleAmtField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The specific gravity of the product.</summary>
        [System.ComponentModel.DescriptionAttribute("The specific gravity of the product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sg", DataType="dimensionlessMeasure")]
        public dimensionlessMeasure sg {
            get {
                return this.sgField;
            }
            set {
                this.sgField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The temperature at which the heavier hydrocarbons come out of solution.</summary>
        [System.ComponentModel.DescriptionAttribute("The temperature at which the heavier hydrocarbons come out of solution.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("hcDewpoint", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure hcDewpoint {
            get {
                return this.hcDewpointField;
            }
            set {
                this.hcDewpointField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The temperature at which the first water comes out of solution.</summary>
        [System.ComponentModel.DescriptionAttribute("The temperature at which the first water comes out of solution.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("waterDewpoint", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure waterDewpoint {
            get {
                return this.waterDewpointField;
            }
            set {
                this.waterDewpointField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Wobbe Index. A number which indicates interchangeability of fuel gasses and is obtained by dividing the heating value of a gas by the  square root of its specific gravity.</summary>
        [System.ComponentModel.DescriptionAttribute("Wobbe Index. A number which indicates interchangeability of fuel gasses and is ob" +
            "tained by dividing the heating value of a gas by the  square root of its specifi" +
            "c gravity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wobbeIndex", DataType="modulusOfCompressionMeasure")]
        public modulusOfCompressionMeasure wobbeIndex {
            get {
                return this.wobbeIndexField;
            }
            set {
                this.wobbeIndexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The amount of heat which would be released by the complete combustion in air of a specific quantity of product at standard temperature and pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("The amount of heat which would be released by the complete combustion in air of a" +
            " specific quantity of product at standard temperature and pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("grossCalorificValueStd", DataType="modulusOfCompressionMeasure")]
        public modulusOfCompressionMeasure grossCalorificValueStd {
            get {
                return this.grossCalorificValueStdField;
            }
            set {
                this.grossCalorificValueStdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reid vapor pressure of stabilized crude.</summary>
        [System.ComponentModel.DescriptionAttribute("Reid vapor pressure of stabilized crude.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rvpStabilizedCrude", DataType="pressureMeasure")]
        public pressureMeasure rvpStabilizedCrude {
            get {
                return this.rvpStabilizedCrudeField;
            }
            set {
                this.rvpStabilizedCrudeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Basic sediment and water content in stabilized crude.</summary>
        [System.ComponentModel.DescriptionAttribute("Basic sediment and water content in stabilized crude.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bswStabilizedCrude", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure bswStabilizedCrude {
            get {
                return this.bswStabilizedCrudeField;
            }
            set {
                this.bswStabilizedCrudeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The density of stabilized crude.</summary>
        [System.ComponentModel.DescriptionAttribute("The density of stabilized crude.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densityStabilizedCrude", DataType="densityMeasure")]
        public densityMeasure densityStabilizedCrude {
            get {
                return this.densityStabilizedCrudeField;
            }
            set {
                this.densityStabilizedCrudeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reports a product flow stream.</summary>
        [System.Xml.Serialization.XmlElementAttribute("product")]
        [System.ComponentModel.DescriptionAttribute("Reports a product flow stream.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("product", DataType="cs_productVolumeProduct")]
        public cs_productVolumeProduct[] product {
            get {
                return this.productField;
            }
            set {
                this.productField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A timestamped remark about the flow.</summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        [System.ComponentModel.DescriptionAttribute("A timestamped remark about the flow.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="cs_datedComment")]
        public cs_datedComment[] comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ReportingFlow {
        
        /// <remarks/>
        consume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("consume - black start")]
        consumeblackstart,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("consume - compressor")]
        consumecompressor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("consume - non compressor")]
        consumenoncompressor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("consume - emitted")]
        consumeemitted,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("consume - flare")]
        consumeflare,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("consume - HP flare")]
        consumeHPflare,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("consume - LP flare")]
        consumeLPflare,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("consume - fuel")]
        consumefuel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("consume - venting")]
        consumeventing,
        
        /// <remarks/>
        disposal,
        
        /// <remarks/>
        export,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("export - requested")]
        exportrequested,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("export - nominated")]
        exportnominated,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("export - shortfall")]
        exportshortfall,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas lift")]
        gaslift,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydrocarbon accounting")]
        hydrocarbonaccounting,
        
        /// <remarks/>
        import,
        
        /// <remarks/>
        injection,
        
        /// <remarks/>
        inventory,
        
        /// <remarks/>
        overboard,
        
        /// <remarks/>
        production,
        
        /// <remarks/>
        sale,
        
        /// <remarks/>
        storage,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ProductFlowPortType {
        
        /// <remarks/>
        inlet,
        
        /// <remarks/>
        outlet,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum FlowQualifier {
        
        /// <remarks/>
        allocated,
        
        /// <remarks/>
        budget,
        
        /// <remarks/>
        constraint,
        
        /// <remarks/>
        difference,
        
        /// <remarks/>
        forecast,
        
        /// <remarks/>
        derived,
        
        /// <remarks/>
        estimate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mass adjusted")]
        massadjusted,
        
        /// <remarks/>
        measured,
        
        /// <remarks/>
        metered,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("metered - fiscal")]
        meteredfiscal,
        
        /// <remarks/>
        nominated,
        
        /// <remarks/>
        potential,
        
        /// <remarks/>
        processed,
        
        /// <remarks/>
        quota,
        
        /// <remarks/>
        recommended,
        
        /// <remarks/>
        simulated,
        
        /// <remarks/>
        target,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tariff basis")]
        tariffbasis,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("value adjusted")]
        valueadjusted,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum FlowSubQualifier {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("decline curve")]
        declinecurve,
        
        /// <remarks/>
        difference,
        
        /// <remarks/>
        fiscal,
        
        /// <remarks/>
        @fixed,
        
        /// <remarks/>
        minimum,
        
        /// <remarks/>
        maximum,
        
        /// <remarks/>
        raw,
        
        /// <remarks/>
        recalibrated,
        
        /// <remarks/>
        standard,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class integerQualifiedCount {
        
        private ValueStatus statusField;
        
        private bool statusFieldSpecified;
        
        private int valueField;
        
        /// <remarks/>
        /// <summary>An indicator of the quality of the value.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute("An indicator of the quality of the value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("status", DataType="ValueStatus")]
        public ValueStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public int Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class kindQualifiedString {
        
        private ValueStatus statusField;
        
        private bool statusFieldSpecified;
        
        private string valueField;
        
        /// <remarks/>
        /// <summary>An indicator of the quality of the value.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute("An indicator of the quality of the value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("status", DataType="ValueStatus")]
        public ValueStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_curveData {
        
        private double[] indexField;
        
        private double[] valueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The value of an independent (index) variable in a row of the curve table. The units of measure are specified in the curve definition. The first value corresponds to order=1 for colums where isIndex is true.  The second to order=2. And so on. The number of index and data values must match the number of columns in the table.</summary>
        [System.Xml.Serialization.XmlElementAttribute("index")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"The value of an independent (index) variable in a row of the curve table. The units of measure are specified in the curve definition. The first value corresponds to order=1 for colums where isIndex is true.  The second to order=2. And so on. The number of index and data values must match the number of columns in the table.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("index", DataType="unitlessQuantity")]
        public double[] index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The value of a dependent (data) variable in a row of the curve table. The units of measure are specified in the curve definition. The first value corresponds to order=1 for columns where isIndex is false.  The second to order=2. And so on. The number of index and data values must match the number of columns in the table.</summary>
        [System.Xml.Serialization.XmlElementAttribute("value")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"The value of a dependent (data) variable in a row of the curve table. The units of measure are specified in the curve definition. The first value corresponds to order=1 for columns where isIndex is false.  The second to order=2. And so on. The number of index and data values must match the number of columns in the table.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("value", DataType="unitlessQuantity")]
        public double[] value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productVolumeParameterValue {
        
        private Energistics.DataAccess.Timestamp dTimField;
        
        private bool dTimFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimEndField;
        
        private bool dTimEndFieldSpecified;
        
        private object[] itemsField;
        
        private refNameString portField;
        
        private refNameString unitField;
        
        private cs_productVolumeAlert alertField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The date and time at which the parameter applies. If no time is specified then the value is static.</summary>
        [System.ComponentModel.DescriptionAttribute("The date and time at which the parameter applies. If no time is specified then th" +
            "e value is static.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimSpecified {
            get {
                return this.dTimFieldSpecified;
            }
            set {
                this.dTimFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time at which the parameter no longer applies. The "active" time interval is inclusive of this point. If dTimEnd is given then dTim shall also be given.</summary>
        [System.ComponentModel.DescriptionAttribute("The date and time at which the parameter no longer applies. The \"active\" time int" +
            "erval is inclusive of this point. If dTimEnd is given then dTim shall also be gi" +
            "ven.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimEndSpecified {
            get {
                return this.dTimEndFieldSpecified;
            }
            set {
                this.dTimEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("curveValue", typeof(cs_curveData))]
        [System.Xml.Serialization.XmlElementAttribute("integerValue", typeof(integerQualifiedCount))]
        [System.Xml.Serialization.XmlElementAttribute("measureValue", typeof(generalQualifiedMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("stringValue", typeof(kindQualifiedString))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("measureValue", DataType="generalQualifiedMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("curveValue", DataType="cs_curveData")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stringValue", DataType="kindQualifiedString")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("integerValue", DataType="integerQualifiedCount")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A port related to the parameter. If a port is given then the corresponding unit usually must be given. For example, an "offset along network" parameter must specify a port from which the offset was measured.</summary>
        [System.ComponentModel.DescriptionAttribute("A port related to the parameter. If a port is given then the corresponding unit u" +
            "sually must be given. For example, an \"offset along network\" parameter must spec" +
            "ify a port from which the offset was measured.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("port", DataType="refNameString")]
        public refNameString port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A unit related to the parameter. For example, an "offset along network" parameter must specify a port (on a unit) from which the offset was measured.</summary>
        [System.ComponentModel.DescriptionAttribute("A unit related to the parameter. For example, an \"offset along network\" parameter" +
            " must specify a port (on a unit) from which the offset was measured.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("unit", DataType="refNameString")]
        public refNameString unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An indication of some sort of abnormal condition relative this parameter.</summary>
        [System.ComponentModel.DescriptionAttribute("An indication of some sort of abnormal condition relative this parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("alert", DataType="cs_productVolumeAlert")]
        public cs_productVolumeAlert alert {
            get {
                return this.alertField;
            }
            set {
                this.alertField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_curveDefinition {
        
        private short orderField;
        
        private string parameterField;
        
        private bool isIndexField;
        
        private bool isIndexFieldSpecified;
        
        private MeasureClass measureClassField;
        
        private string unitField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The order of the value in the index or data tuple. If isIndex is true this is the order of the (independent) index element. If isIndex is false, this is the order of the (dependent) value element.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The order of the value in the index or data tuple. If isIndex is true this is the" +
            " order of the (independent) index element. If isIndex is false, this is the orde" +
            "r of the (dependent) value element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("order", DataType="positiveCount")]
        public short order {
            get {
                return this.orderField;
            }
            set {
                this.orderField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the variable in this curve.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The name of the variable in this curve.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("parameter", DataType="kindString")]
        public string parameter {
            get {
                return this.parameterField;
            }
            set {
                this.parameterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True (equal "1" or "true") indicates that this is an independent variable in this curve.  At least one column column should be flagged as independent.</summary>
        [System.ComponentModel.DescriptionAttribute("True (equal \"1\" or \"true\") indicates that this is an independent variable in this" +
            " curve.  At least one column column should be flagged as independent.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("isIndex", DataType="logicalBoolean")]
        public bool isIndex {
            get {
                return this.isIndexField;
            }
            set {
                this.isIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isIndexSpecified {
            get {
                return this.isIndexFieldSpecified;
            }
            set {
                this.isIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measure class of the variable. This defines which units of measure are valid for the value.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The measure class of the variable. This defines which units of measure are valid " +
            "for the value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("measureClass", DataType="MeasureClass")]
        public MeasureClass measureClass {
            get {
                return this.measureClassField;
            }
            set {
                this.measureClassField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unit of measure of the variable. The unit of measure must match a unit allowed by the measure class.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(24)]
        [System.ComponentModel.DescriptionAttribute("The unit of measure of the variable. The unit of measure must match a unit allowe" +
            "d by the measure class.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("unit", DataType="uomString")]
        public string unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productVolumeParameterSet {
        
        private FacilityParameter nameField;
        
        private string childFacilityIdentifierField;
        
        private refNameString portField;
        
        private MeasureClass measureClassField;
        
        private bool measureClassFieldSpecified;
        
        private refNameString coordinateReferenceSystemField;
        
        private cs_curveDefinition[] curveDefinitionField;
        
        private FlowQualifier qualifierField;
        
        private bool qualifierFieldSpecified;
        
        private FlowSubQualifier subQualifierField;
        
        private bool subQualifierFieldSpecified;
        
        private Energistics.DataAccess.Timestamp versionField;
        
        private bool versionFieldSpecified;
        
        private string versionSourceField;
        
        private ReportingProduct productField;
        
        private bool productFieldSpecified;
        
        private ReportingPeriod periodKindField;
        
        private bool periodKindFieldSpecified;
        
        private cs_productVolumeParameterValue[] parameterField;
        
        private string commentField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The name of the facility parameter. This should reflect the business semantics of all values in the set and not   the underlying kind. For example, specify "diameter" rather than "length" or "distance".</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The name of the facility parameter. This should reflect the business semantics of" +
            " all values in the set and not   the underlying kind. For example, specify \"diam" +
            "eter\" rather than \"length\" or \"distance\".")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="FacilityParameter")]
        public FacilityParameter name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The "PRODML Relative Identifier" of a child of the parent facility. The idenfifier path is presumed to begin with the identity of the parent facility. This identifies a sub-facility which is identified within the context of the  parent facilityParent2/facilityParent1/name identification hierarchy.</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        [System.ComponentModel.DescriptionAttribute(@"The ""PRODML Relative Identifier"" of a child of the parent facility. The idenfifier path is presumed to begin with the identity of the parent facility. This identifies a sub-facility which is identified within the context of the  parent facilityParent2/facilityParent1/name identification hierarchy.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("childFacilityIdentifier", DataType="prodmlRelativeIdentifier")]
        public string childFacilityIdentifier {
            get {
                return this.childFacilityIdentifierField;
            }
            set {
                this.childFacilityIdentifierField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The port to which this parameter is assigned. This must be a port on the unit representing the parent facility of this parameter. If not specified then the parameter represents the unit.</summary>
        [System.ComponentModel.DescriptionAttribute("The port to which this parameter is assigned. This must be a port on the unit rep" +
            "resenting the parent facility of this parameter. If not specified then the param" +
            "eter represents the unit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("port", DataType="refNameString")]
        public refNameString port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>If the value is a measure (value with unit of measure), this defines the  measurement class of the value. The units of measure for the value must conform to the  list allowed by the measurement class in the unit dictionary file. Mutually exclusive with curveDefinition.</summary>
        [System.ComponentModel.DescriptionAttribute(@"If the value is a measure (value with unit of measure), this defines the  measurement class of the value. The units of measure for the value must conform to the  list allowed by the measurement class in the unit dictionary file. Mutually exclusive with curveDefinition.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("measureClass", DataType="MeasureClass")]
        public MeasureClass measureClass {
            get {
                return this.measureClassField;
            }
            set {
                this.measureClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool measureClassSpecified {
            get {
                return this.measureClassFieldSpecified;
            }
            set {
                this.measureClassFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The pointer to the coordinate reference system. This is needed for coordinates such as measure depth to specify the reference datum.</summary>
        [System.ComponentModel.DescriptionAttribute("The pointer to the coordinate reference system. This is needed for coordinates su" +
            "ch as measure depth to specify the reference datum.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("coordinateReferenceSystem", DataType="refNameString")]
        public refNameString coordinateReferenceSystem {
            get {
                return this.coordinateReferenceSystemField;
            }
            set {
                this.coordinateReferenceSystemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>If the value is a curve, this defines the meaning of the one column  in the table representing the curve. Mutually exclusive with measureClass.</summary>
        [System.Xml.Serialization.XmlElementAttribute("curveDefinition")]
        [System.ComponentModel.DescriptionAttribute("If the value is a curve, this defines the meaning of the one column  in the table" +
            " representing the curve. Mutually exclusive with measureClass.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("curveDefinition", DataType="cs_curveDefinition")]
        public cs_curveDefinition[] curveDefinition {
            get {
                return this.curveDefinitionField;
            }
            set {
                this.curveDefinitionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Qualifies the type of parameter that is being reported.</summary>
        [System.ComponentModel.DescriptionAttribute("Qualifies the type of parameter that is being reported.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("qualifier", DataType="FlowQualifier")]
        public FlowQualifier qualifier {
            get {
                return this.qualifierField;
            }
            set {
                this.qualifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qualifierSpecified {
            get {
                return this.qualifierFieldSpecified;
            }
            set {
                this.qualifierFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines a specialization of the qualifier value. This should only be given if a qualifier is given.</summary>
        [System.ComponentModel.DescriptionAttribute("Defines a specialization of the qualifier value. This should only be given if a q" +
            "ualifier is given.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("subQualifier", DataType="FlowSubQualifier")]
        public FlowSubQualifier subQualifier {
            get {
                return this.subQualifierField;
            }
            set {
                this.subQualifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool subQualifierSpecified {
            get {
                return this.subQualifierFieldSpecified;
            }
            set {
                this.subQualifierFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A timestamp representing the version of this data.  A parameter set with a more recent timestamp will represent  the "current" version.</summary>
        [System.ComponentModel.DescriptionAttribute("A timestamp representing the version of this data.  A parameter set with a more r" +
            "ecent timestamp will represent  the \"current\" version.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool versionSpecified {
            get {
                return this.versionFieldSpecified;
            }
            set {
                this.versionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Identifies the source of the version.  This will commonly be the name of the software which created the version.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Identifies the source of the version.  This will commonly be the name of the soft" +
            "ware which created the version.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("versionSource", DataType="nameString")]
        public string versionSource {
            get {
                return this.versionSourceField;
            }
            set {
                this.versionSourceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of product that is being reported. This would be useful for something like specifying a tank procuct volume or level.</summary>
        [System.ComponentModel.DescriptionAttribute("The type of product that is being reported. This would be useful for something li" +
            "ke specifying a tank procuct volume or level.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("product", DataType="ReportingProduct")]
        public ReportingProduct product {
            get {
                return this.productField;
            }
            set {
                this.productField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool productSpecified {
            get {
                return this.productFieldSpecified;
            }
            set {
                this.productFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of period that is being reported.</summary>
        [System.ComponentModel.DescriptionAttribute("The type of period that is being reported.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("periodKind", DataType="ReportingPeriod")]
        public ReportingPeriod periodKind {
            get {
                return this.periodKindField;
            }
            set {
                this.periodKindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool periodKindSpecified {
            get {
                return this.periodKindFieldSpecified;
            }
            set {
                this.periodKindFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A parameter value, possibly at a time. If a time is not given then only one parameter should be given. If a time is specified with one value then time should be specified for all values. Each value in a time series should be of the same  underling kind of value (for example, a length measure).</summary>
        [System.Xml.Serialization.XmlElementAttribute("parameter")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"A parameter value, possibly at a time. If a time is not given then only one parameter should be given. If a time is specified with one value then time should be specified for all values. Each value in a time series should be of the same  underling kind of value (for example, a length measure).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("parameter", DataType="cs_productVolumeParameterValue")]
        public cs_productVolumeParameterValue[] parameter {
            get {
                return this.parameterField;
            }
            set {
                this.parameterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A comment about the parameter.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A comment about the parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum FacilityParameter {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("absorbed dose class")]
        absorbeddoseclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("acceleration linear class")]
        accelerationlinearclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("activity (of radioactivity) class")]
        activityofradioactivityclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("alarm absolute pressure")]
        alarmabsolutepressure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("amount of substance class")]
        amountofsubstanceclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("angle per length")]
        angleperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("angle per time")]
        anglepertime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("angle per volume")]
        anglepervolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("angular acceleration class")]
        angularaccelerationclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("annulus inner diameter")]
        annulusinnerdiameter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("annulus outer diameter")]
        annulusouterdiameter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("area class")]
        areaclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("area per area")]
        areaperarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("area per volume")]
        areapervolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("atmospheric pressure")]
        atmosphericpressure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("attenuation class")]
        attenuationclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("attenuation per length")]
        attenuationperlength,
        
        /// <remarks/>
        available,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("available room")]
        availableroom,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("block valve status")]
        blockvalvestatus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("capacitance class")]
        capacitanceclass,
        
        /// <remarks/>
        categorical,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cathodic protection output current")]
        cathodicprotectionoutputcurrent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cathodic protection output voltage")]
        cathodicprotectionoutputvoltage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("charge density class")]
        chargedensityclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("chemical potential class")]
        chemicalpotentialclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("choke position")]
        chokeposition,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("choke setting")]
        chokesetting,
        
        /// <remarks/>
        code,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("compressibility class")]
        compressibilityclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("concentration of B class")]
        concentrationofBclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("conductivity class")]
        conductivityclass,
        
        /// <remarks/>
        continuous,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cross section absorption class")]
        crosssectionabsorptionclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("current density class")]
        currentdensityclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Darcy flow coefficient class")]
        Darcyflowcoefficientclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("data transmission speed class")]
        datatransmissionspeedclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("delta temperature class")]
        deltatemperatureclass,
        
        /// <remarks/>
        density,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("density class")]
        densityclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("density flow rate")]
        densityflowrate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("density standard")]
        densitystandard,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dewpoint temperature")]
        dewpointtemperature,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("differential pressure")]
        differentialpressure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("differential temperature")]
        differentialtemperature,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("diffusion coefficient class")]
        diffusioncoefficientclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("digital storage class")]
        digitalstorageclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dimensionless class")]
        dimensionlessclass,
        
        /// <remarks/>
        discrete,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dose equivalent class")]
        doseequivalentclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dose equivalent rate class")]
        doseequivalentrateclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dynamic viscosity class")]
        dynamicviscosityclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electric charge class")]
        electricchargeclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electric conductance class")]
        electricconductanceclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electric current class")]
        electriccurrentclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electric dipole moment class")]
        electricdipolemomentclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electric field strength class")]
        electricfieldstrengthclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electric polarization class")]
        electricpolarizationclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electric potential class")]
        electricpotentialclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electrical resistivity class")]
        electricalresistivityclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electrochemical equivalent class")]
        electrochemicalequivalentclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electromagnetic moment class")]
        electromagneticmomentclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("energy length per area")]
        energylengthperarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("energy length per time area temperature")]
        energylengthpertimeareatemperature,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("energy per area")]
        energyperarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("energy per length")]
        energyperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("equivalent per mass")]
        equivalentpermass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("equivalent per volume")]
        equivalentpervolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("exposure (radioactivity) class")]
        exposureradioactivityclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("facility uptime")]
        facilityuptime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("flow rate")]
        flowrate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("flow rate standard")]
        flowratestandard,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("force area class")]
        forceareaclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("force class")]
        forceclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("force length per length")]
        forcelengthperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("force per force")]
        forceperforce,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("force per length")]
        forceperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("force per volume")]
        forcepervolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("frequency class")]
        frequencyclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("frequency interval class")]
        frequencyintervalclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gamma ray API unit class")]
        gammarayAPIunitclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas liquid ratio")]
        gasliquidratio,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas oil ratio")]
        gasoilratio,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gross calorific value standard")]
        grosscalorificvaluestandard,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("heat capacity class")]
        heatcapacityclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("heat flow rate class")]
        heatflowrateclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("heat transfer coefficient class")]
        heattransfercoefficientclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("illuminance class")]
        illuminanceclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("internal control valve status")]
        internalcontrolvalvestatus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("irradiance class")]
        irradianceclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("isothermal compressibility class")]
        isothermalcompressibilityclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kinematic viscosity class")]
        kinematicviscosityclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("length class")]
        lengthclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("length per length")]
        lengthperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("length per temperature")]
        lengthpertemperature,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("length per volume")]
        lengthpervolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("level of power intensity class")]
        levelofpowerintensityclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("light exposure class")]
        lightexposureclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("linear thermal expansion class")]
        linearthermalexpansionclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("luminance class")]
        luminanceclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("luminous efficacy class")]
        luminousefficacyclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("luminous flux class")]
        luminousfluxclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("luminous intensity class")]
        luminousintensityclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("magnetic dipole moment class")]
        magneticdipolemomentclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("magnetic field strength class")]
        magneticfieldstrengthclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("magnetic flux class")]
        magneticfluxclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("magnetic induction class")]
        magneticinductionclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("magnetic permeability class")]
        magneticpermeabilityclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("magnetic vector potential class")]
        magneticvectorpotentialclass,
        
        /// <remarks/>
        mass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mass attenuation coefficient class")]
        massattenuationcoefficientclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mass class")]
        massclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mass concentration")]
        massconcentration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mass concentration class")]
        massconcentrationclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mass flow rate class")]
        massflowrateclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mass length class")]
        masslengthclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mass per energy")]
        massperenergy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mass per length")]
        massperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mass per time per area")]
        masspertimeperarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mass per time per length")]
        masspertimeperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mass per volume per length")]
        masspervolumeperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("measured depth")]
        measureddepth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mobility class")]
        mobilityclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("modulus of compression class")]
        modulusofcompressionclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("molar concentration")]
        molarconcentration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("molar fraction")]
        molarfraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("molar heat capacity class")]
        molarheatcapacityclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("molar volume class")]
        molarvolumeclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mole per area")]
        moleperarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mole per time")]
        molepertime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mole per time per area")]
        molepertimeperarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("molecular weight")]
        molecularweight,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("moment of force class")]
        momentofforceclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("moment of inertia class")]
        momentofinertiaclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("moment of section class")]
        momentofsectionclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("momentum class")]
        momentumclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("motor current")]
        motorcurrent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("motor current leakage")]
        motorcurrentleakage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("motor speed")]
        motorspeed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("motor temperature")]
        motortemperature,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("motor vibration")]
        motorvibration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("motor voltage")]
        motorvoltage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("neutron API unit class")]
        neutronAPIunitclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nonDarcy flow coefficient class")]
        nonDarcyflowcoefficientclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("opening size")]
        openingsize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("operations per time")]
        operationspertime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("parachor class")]
        parachorclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("per area")]
        perarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("per electric potential")]
        perelectricpotential,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("per force")]
        perforce,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("per length")]
        perlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("per mass")]
        permass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("per volume")]
        pervolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("permeability length class")]
        permeabilitylengthclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("permeability rock class")]
        permeabilityrockclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("permeance class")]
        permeanceclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("permittivity class")]
        permittivityclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pH class")]
        pHclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("plane angle class")]
        planeangleclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("potential difference per power drop")]
        potentialdifferenceperpowerdrop,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("power class")]
        powerclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("power per volume")]
        powerpervolume,
        
        /// <remarks/>
        pressure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure class")]
        pressureclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure per time")]
        pressurepertime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure squared class")]
        pressuresquaredclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure squared per force time per area")]
        pressuresquaredperforcetimeperarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure time per volume")]
        pressuretimepervolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("productivity index class")]
        productivityindexclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pump count online")]
        pumpcountonline,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pump status")]
        pumpstatus,
        
        /// <remarks/>
        quantity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("quantity of light class")]
        quantityoflightclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("radiance class")]
        radianceclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("radiant intensity class")]
        radiantintensityclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("reciprocating speed")]
        reciprocatingspeed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rectifier structure potential")]
        rectifierstructurepotential,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("reid vapor pressure")]
        reidvaporpressure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("relative opening size")]
        relativeopeningsize,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("relative power class")]
        relativepowerclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("relative tank level")]
        relativetanklevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("relative time class")]
        relativetimeclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("relative valve opening")]
        relativevalveopening,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("reluctance class")]
        reluctanceclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("resistance class")]
        resistanceclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("resistivity per length")]
        resistivityperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("root property")]
        rootproperty,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("scheduled downtime")]
        scheduleddowntime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("second moment of area class")]
        secondmomentofareaclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shutdown order")]
        shutdownorder,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shutin pressure")]
        shutinpressure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shutin temperature")]
        shutintemperature,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("solid angle class")]
        solidangleclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("specific activity (of radioactivity)")]
        specificactivityofradioactivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("specific energy class")]
        specificenergyclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("specific gravity")]
        specificgravity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("specific heat capacity class")]
        specificheatcapacityclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("specific productivity index class")]
        specificproductivityindexclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("specific volume class")]
        specificvolumeclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub surface safety valve status")]
        subsurfacesafetyvalvestatus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("surface density class")]
        surfacedensityclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("surface safety valve status")]
        surfacesafetyvalvestatus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tank fluid level")]
        tankfluidlevel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tank product standard volume")]
        tankproductstandardvolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tank product volume")]
        tankproductvolume,
        
        /// <remarks/>
        temperature,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("temperature per length")]
        temperatureperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("temperature per time")]
        temperaturepertime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("thermal conductance class")]
        thermalconductanceclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("thermal conductivity class")]
        thermalconductivityclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("thermal diffusivity class")]
        thermaldiffusivityclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("thermal insulance class")]
        thermalinsulanceclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("thermal resistance class")]
        thermalresistanceclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("thermodynamic temperature class")]
        thermodynamictemperatureclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("time class")]
        timeclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("time per length")]
        timeperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("time per volume")]
        timepervolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("true vapor pressure")]
        truevaporpressure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("unit productivity index class")]
        unitproductivityindexclass,
        
        /// <remarks/>
        unitless,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("valve opening")]
        valveopening,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("valve status")]
        valvestatus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("velocity class")]
        velocityclass,
        
        /// <remarks/>
        volume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volume class")]
        volumeclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volume concentration")]
        volumeconcentration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volume flow rate class")]
        volumeflowrateclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volume length per time")]
        volumelengthpertime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volume per area")]
        volumeperarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volume per length")]
        volumeperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volume per time per area")]
        volumepertimeperarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volume per time per length")]
        volumepertimeperlength,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volume per time per time")]
        volumepertimepertime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volume per time per volume")]
        volumepertimepervolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volume per volume")]
        volumepervolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volume standard")]
        volumestandard,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volumetric efficiency")]
        volumetricefficiency,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volumetric heat transfer coefficient")]
        volumetricheattransfercoefficient,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volumetric thermal expansion class")]
        volumetricthermalexpansionclass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well operating status")]
        welloperatingstatus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well operation type")]
        welloperationtype,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wobbe index")]
        wobbeindex,
        
        /// <remarks/>
        work,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("work class")]
        workclass,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productVolumeFacility {
        
        private facilityIdentifierStruct nameField;
        
        private facilityIdentifierStruct facilityParent1Field;
        
        private facilityIdentifierStruct facilityParent2Field;
        
        private nameStruct[] facilityAliasField;
        
        private refNameString unitField;
        
        private refNameString networkField;
        
        private facilityIdentifierStruct[] contextFacilityField;
        
        private WellStatus statusWellField;
        
        private bool statusWellFieldSpecified;
        
        private WellFluid fluidWellField;
        
        private bool fluidWellFieldSpecified;
        
        private WellOperationMethod operatingMethodField;
        
        private bool operatingMethodFieldSpecified;
        
        private bool wellProducingField;
        
        private bool wellProducingFieldSpecified;
        
        private bool wellInjectingField;
        
        private bool wellInjectingFieldSpecified;
        
        private volumeMeasure capacityField;
        
        private timeMeasure operationTimeField;
        
        private cs_datedComment[] downtimeReasonField;
        
        private cs_productVolumeParameterSet[] parameterSetField;
        
        private cs_productVolumeFlow[] flowField;
        
        private cs_datedComment[] commentField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The name of the facility. The name can be qualified by a naming system.  This also defines the kind of facility.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The name of the facility. The name can be qualified by a naming system.  This als" +
            "o defines the kind of facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>For facilities whose name is unique within the context of another  facility, the name of the parent facility. For example, if name represents a completion, then facilityParent1 would represent the name of the well within which name was unique. The name can be qualified by a naming system. This also defines the kind of facility.</summary>
        [System.ComponentModel.DescriptionAttribute(@"For facilities whose name is unique within the context of another  facility, the name of the parent facility. For example, if name represents a completion, then facilityParent1 would represent the name of the well within which name was unique. The name can be qualified by a naming system. This also defines the kind of facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facilityParent1", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct facilityParent1 {
            get {
                return this.facilityParent1Field;
            }
            set {
                this.facilityParent1Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>For facilities whose name is unique within the context of another  facility, the name of the parent facility of parent1.  The name can be qualified by a naming system. This also defines the kind of facility.</summary>
        [System.ComponentModel.DescriptionAttribute("For facilities whose name is unique within the context of another  facility, the " +
            "name of the parent facility of parent1.  The name can be qualified by a naming s" +
            "ystem. This also defines the kind of facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facilityParent2", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct facilityParent2 {
            get {
                return this.facilityParent2Field;
            }
            set {
                this.facilityParent2Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An alternatative name of a facility. This is generally unique within a naming system. The above contextually unique name (that is, within  the context of a parent) should also be listed as an alias.</summary>
        [System.Xml.Serialization.XmlElementAttribute("facilityAlias")]
        [System.ComponentModel.DescriptionAttribute("An alternatative name of a facility. This is generally unique within a naming sys" +
            "tem. The above contextually unique name (that is, within  the context of a paren" +
            "t) should also be listed as an alias.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facilityAlias", DataType="nameStruct")]
        public nameStruct[] facilityAlias {
            get {
                return this.facilityAliasField;
            }
            set {
                this.facilityAliasField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The Product Flow Unit representing the facility. This must be unique within the context of the Product Flow Network.</summary>
        [System.ComponentModel.DescriptionAttribute("The Product Flow Unit representing the facility. This must be unique within the c" +
            "ontext of the Product Flow Network.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("unit", DataType="refNameString")]
        public refNameString unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The Product Flow Network representing the facility. This can only be given if unit is given. This is only required if the network is not the same as the primary network that represents the Product Flow Model. This must be unique within the context of the Product Flow Model represented  by this report.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The Product Flow Network representing the facility. This can only be given if unit is given. This is only required if the network is not the same as the primary network that represents the Product Flow Model. This must be unique within the context of the Product Flow Model represented  by this report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("network", DataType="refNameString")]
        public refNameString network {
            get {
                return this.networkField;
            }
            set {
                this.networkField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name and type of a facility whose context is relevant to this facility.</summary>
        [System.Xml.Serialization.XmlElementAttribute("contextFacility")]
        [System.ComponentModel.DescriptionAttribute("The name and type of a facility whose context is relevant to this facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("contextFacility", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct[] contextFacility {
            get {
                return this.contextFacilityField;
            }
            set {
                this.contextFacilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The status of the well. In PRODML, the value of "active -- injecting" has been DEPRECATED. Instead, use "active" with wellProducing=true. In PRODML, the value of "active -- producing" has been DEPRECATED. Instead, use "active" with wellInjecting=true.</summary>
        [System.ComponentModel.DescriptionAttribute("The status of the well. In PRODML, the value of \"active -- injecting\" has been DE" +
            "PRECATED. Instead, use \"active\" with wellProducing=true. In PRODML, the value of" +
            " \"active -- producing\" has been DEPRECATED. Instead, use \"active\" with wellInjec" +
            "ting=true.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("statusWell", DataType="WellStatus")]
        public WellStatus statusWell {
            get {
                return this.statusWellField;
            }
            set {
                this.statusWellField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusWellSpecified {
            get {
                return this.statusWellFieldSpecified;
            }
            set {
                this.statusWellFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>POSC well fluid. The type of fluid being produced from or injected  into a well facility.</summary>
        [System.ComponentModel.DescriptionAttribute("POSC well fluid. The type of fluid being produced from or injected  into a well f" +
            "acility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fluidWell", DataType="WellFluid")]
        public WellFluid fluidWell {
            get {
                return this.fluidWellField;
            }
            set {
                this.fluidWellField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fluidWellSpecified {
            get {
                return this.fluidWellFieldSpecified;
            }
            set {
                this.fluidWellFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The lift method being used to operate the well.</summary>
        [System.ComponentModel.DescriptionAttribute("The lift method being used to operate the well.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("operatingMethod", DataType="WellOperationMethod")]
        public WellOperationMethod operatingMethod {
            get {
                return this.operatingMethodField;
            }
            set {
                this.operatingMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool operatingMethodSpecified {
            get {
                return this.operatingMethodFieldSpecified;
            }
            set {
                this.operatingMethodFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True (or 1) indicates that the well is producing. False (or 0) or not given indicates that the well is not producing. This only applies if the facility is a well or wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("True (or 1) indicates that the well is producing. False (or 0) or not given indic" +
            "ates that the well is not producing. This only applies if the facility is a well" +
            " or wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellProducing", DataType="logicalBoolean")]
        public bool wellProducing {
            get {
                return this.wellProducingField;
            }
            set {
                this.wellProducingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool wellProducingSpecified {
            get {
                return this.wellProducingFieldSpecified;
            }
            set {
                this.wellProducingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True (or 1) indicates that the well is injecting. False (or 0) or not given indicates that the well is not injecting. This only applies if the facility is a well or wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("True (or 1) indicates that the well is injecting. False (or 0) or not given indic" +
            "ates that the well is not injecting. This only applies if the facility is a well" +
            " or wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellInjecting", DataType="logicalBoolean")]
        public bool wellInjecting {
            get {
                return this.wellInjectingField;
            }
            set {
                this.wellInjectingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool wellInjectingSpecified {
            get {
                return this.wellInjectingFieldSpecified;
            }
            set {
                this.wellInjectingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The storage capacity of the facility (e.g., a tank).</summary>
        [System.ComponentModel.DescriptionAttribute("The storage capacity of the facility (e.g., a tank).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("capacity", DataType="volumeMeasure")]
        public volumeMeasure capacity {
            get {
                return this.capacityField;
            }
            set {
                this.capacityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The amount of time that the facility was active during the  reporting period.</summary>
        [System.ComponentModel.DescriptionAttribute("The amount of time that the facility was active during the  reporting period.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("operationTime", DataType="timeMeasure")]
        public timeMeasure operationTime {
            get {
                return this.operationTimeField;
            }
            set {
                this.operationTimeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The reason for any down time during the reporting period.</summary>
        [System.Xml.Serialization.XmlElementAttribute("downtimeReason")]
        [System.ComponentModel.DescriptionAttribute("The reason for any down time during the reporting period.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("downtimeReason", DataType="cs_datedComment")]
        public cs_datedComment[] downtimeReason {
            get {
                return this.downtimeReasonField;
            }
            set {
                this.downtimeReasonField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Usage values for one parameter associated with the facility.</summary>
        [System.Xml.Serialization.XmlElementAttribute("parameterSet")]
        [System.ComponentModel.DescriptionAttribute("Usage values for one parameter associated with the facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("parameterSet", DataType="cs_productVolumeParameterSet")]
        public cs_productVolumeParameterSet[] parameterSet {
            get {
                return this.parameterSetField;
            }
            set {
                this.parameterSetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reports a flow of a product.</summary>
        [System.Xml.Serialization.XmlElementAttribute("flow")]
        [System.ComponentModel.DescriptionAttribute("Reports a flow of a product.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flow", DataType="cs_productVolumeFlow")]
        public cs_productVolumeFlow[] flow {
            get {
                return this.flowField;
            }
            set {
                this.flowField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A timestamped remark about the facility.</summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        [System.ComponentModel.DescriptionAttribute("A timestamped remark about the facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="cs_datedComment")]
        public cs_datedComment[] comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum WellStatus {
        
        /// <remarks/>
        abandoned,
        
        /// <remarks/>
        active,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("active -- injecting")]
        activeinjecting,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("active -- producing")]
        activeproducing,
        
        /// <remarks/>
        completed,
        
        /// <remarks/>
        drilling,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("partially plugged")]
        partiallyplugged,
        
        /// <remarks/>
        permitted,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("plugged and abandoned")]
        pluggedandabandoned,
        
        /// <remarks/>
        proposed,
        
        /// <remarks/>
        sold,
        
        /// <remarks/>
        suspended,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("temporarily abandoned")]
        temporarilyabandoned,
        
        /// <remarks/>
        testing,
        
        /// <remarks/>
        tight,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("working over")]
        workingover,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum WellOperationMethod {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("natural flow")]
        naturalflow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("continuous gas lift")]
        continuousgaslift,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("intermittent gas lift")]
        intermittentgaslift,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("plunger gas lift")]
        plungergaslift,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electric submersible pump lift")]
        electricsubmersiblepumplift,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("progressive cavity pump lift")]
        progressivecavitypumplift,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydraulic pump lift")]
        hydraulicpumplift,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sucker rod pump lift")]
        suckerrodpumplift,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("jet pump lift")]
        jetpumplift,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("foam lift")]
        foamlift,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("PRODML", "1.3.1.1")]
    public partial class obj_productVolume {
        
        private nameStruct nameField;
        
        private facilityIdentifierStruct installationField;
        
        private facilityIdentifierStruct[] contextFacilityField;
        
        private string kindField;
        
        private ReportingPeriod periodKindField;
        
        private bool periodKindFieldSpecified;
        
        private object[] itemsField;
        
        private ItemsChoiceType6[] itemsElementNameField;
        
        private endpointQualifiedDateTime dTimMinField;
        
        private endpointQualifiedDateTime dTimMaxField;
        
        private Energistics.DataAccess.Timestamp dTimCurrentField;
        
        private bool dTimCurrentFieldSpecified;
        
        private CalculationMethod calculationMethodField;
        
        private bool calculationMethodFieldSpecified;
        
        private cs_businessAssociate operatorField;
        
        private nameStruct titleField;
        
        private cs_geographicContext geographicContextField;
        
        private System.DateTime issueDateField;
        
        private bool issueDateFieldSpecified;
        
        private cs_businessAssociate issuedByField;
        
        private System.DateTime approvalDateField;
        
        private bool approvalDateFieldSpecified;
        
        private cs_businessAssociate approverField;
        
        private refNameString productFlowModelField;
        
        private StandardCondition standardTempPresField;
        
        private bool standardTempPresFieldSpecified;
        
        private cs_productVolumeBusinessUnit[] businessUnitField;
        
        private cs_productVolumeFacility[] facilityField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the Product Volume Report.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the Product Volume Report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameStruct")]
        public nameStruct name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the facility which is represented by this report.  The name can be qualified by a naming system.  This also defines the kind of facility.</summary>
        [System.ComponentModel.DescriptionAttribute("The name of the facility which is represented by this report.  The name can be qu" +
            "alified by a naming system.  This also defines the kind of facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("installation", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct installation {
            get {
                return this.installationField;
            }
            set {
                this.installationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name and type of a facility whose context is relevant to the represented installation.</summary>
        [System.Xml.Serialization.XmlElementAttribute("contextFacility")]
        [System.ComponentModel.DescriptionAttribute("The name and type of a facility whose context is relevant to the represented inst" +
            "allation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("contextFacility", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct[] contextFacility {
            get {
                return this.contextFacilityField;
            }
            set {
                this.contextFacilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of report.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The type of report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("kind", DataType="kindString")]
        public string kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of period that is being reported. This value must be consistent with the reporting start and end values.</summary>
        [System.ComponentModel.DescriptionAttribute("The type of period that is being reported. This value must be consistent with the" +
            " reporting start and end values.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("periodKind", DataType="ReportingPeriod")]
        public ReportingPeriod periodKind {
            get {
                return this.periodKindField;
            }
            set {
                this.periodKindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool periodKindSpecified {
            get {
                return this.periodKindFieldSpecified;
            }
            set {
                this.periodKindFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dTimEnd", typeof(System.DateTime))]
        [System.Xml.Serialization.XmlElementAttribute("dTimStart", typeof(System.DateTime))]
        [System.Xml.Serialization.XmlElementAttribute("dateEnd", typeof(System.DateTime), DataType="date")]
        [System.Xml.Serialization.XmlElementAttribute("dateStart", typeof(System.DateTime), DataType="date")]
        [System.Xml.Serialization.XmlElementAttribute("month", typeof(string))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("month", DataType="calendarMonth")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStart", DataType="timestamp")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimEnd", DataType="timestamp")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dateStart", DataType="date")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dateEnd", DataType="date")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType6[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The minimum time index contained within the report. For the purposes of this parameter, a "period" or "facility parameter" without any time data should be assumed to have the time associated with the overall report. The minimum and maximum indexes are server query parameters and will be  populated with valid values in a "get" result. See the WITSML API Specification appendix on "Special Handling" of growing objects  for a description of the behavior related to this parameter.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The minimum time index contained within the report. For the purposes of this parameter, a ""period"" or ""facility parameter"" without any time data should be assumed to have the time associated with the overall report. The minimum and maximum indexes are server query parameters and will be  populated with valid values in a ""get"" result. See the WITSML API Specification appendix on ""Special Handling"" of growing objects  for a description of the behavior related to this parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimMin", DataType="endpointQualifiedDateTime")]
        public endpointQualifiedDateTime dTimMin {
            get {
                return this.dTimMinField;
            }
            set {
                this.dTimMinField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum time index contained within the report. For the purposes of this parameter, a "period" or "facility parameter" without any time data should be assumed to have the time associated with the overall report. The minimum and maximum indexes are server query parameters and will be  populated with valid values in a "get" result. See the WITSML API Specification appendix on "Special Handling" of growing objects  for a description of the behavior related to this parameter.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The maximum time index contained within the report. For the purposes of this parameter, a ""period"" or ""facility parameter"" without any time data should be assumed to have the time associated with the overall report. The minimum and maximum indexes are server query parameters and will be  populated with valid values in a ""get"" result. See the WITSML API Specification appendix on ""Special Handling"" of growing objects  for a description of the behavior related to this parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimMax", DataType="endpointQualifiedDateTime")]
        public endpointQualifiedDateTime dTimMax {
            get {
                return this.dTimMaxField;
            }
            set {
                this.dTimMaxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The definition of the "current time" index for this report. The current time index is a server query parameter which requests the  selection of a single node from a recurring "period" set  (e.g., the data related to one point in a time series). For the purposes of this parameter, a "period" without any time data should be assumed to have the time associated with the overall report. See the WITSML API Specification appendix on "Special Handling" of growing objects  for a description of the behavior related to this parameter.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The definition of the ""current time"" index for this report. The current time index is a server query parameter which requests the  selection of a single node from a recurring ""period"" set  (e.g., the data related to one point in a time series). For the purposes of this parameter, a ""period"" without any time data should be assumed to have the time associated with the overall report. See the WITSML API Specification appendix on ""Special Handling"" of growing objects  for a description of the behavior related to this parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimCurrent", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimCurrent {
            get {
                return this.dTimCurrentField;
            }
            set {
                this.dTimCurrentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimCurrentSpecified {
            get {
                return this.dTimCurrentFieldSpecified;
            }
            set {
                this.dTimCurrentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The calculation method for for "filling in" values in an indexed set. If not given, the default is that no calculations are performed to create data where none exists within an existing set.  This is not to be construed as to prevent concepts such as simulation  and forcasting from being applied in order to create a new set. This is a server query parameter.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The calculation method for for ""filling in"" values in an indexed set. If not given, the default is that no calculations are performed to create data where none exists within an existing set.  This is not to be construed as to prevent concepts such as simulation  and forcasting from being applied in order to create a new set. This is a server query parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("calculationMethod", DataType="CalculationMethod")]
        public CalculationMethod calculationMethod {
            get {
                return this.calculationMethodField;
            }
            set {
                this.calculationMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool calculationMethodSpecified {
            get {
                return this.calculationMethodFieldSpecified;
            }
            set {
                this.calculationMethodFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The operator of the facilities in the report.</summary>
        [System.ComponentModel.DescriptionAttribute("The operator of the facilities in the report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("operator", DataType="cs_businessAssociate")]
        public cs_businessAssociate @operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The tile of the report if different from the name of the report.</summary>
        [System.ComponentModel.DescriptionAttribute("The tile of the report if different from the name of the report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("title", DataType="nameStruct")]
        public nameStruct title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The geographic context of the report.</summary>
        [System.ComponentModel.DescriptionAttribute("The geographic context of the report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("geographicContext", DataType="cs_geographicContext")]
        public cs_geographicContext geographicContext {
            get {
                return this.geographicContextField;
            }
            set {
                this.geographicContextField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date that the report was issued.</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DescriptionAttribute("The date that the report was issued.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("issueDate", DataType="date")]
        public System.DateTime issueDate {
            get {
                return this.issueDateField;
            }
            set {
                this.issueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool issueDateSpecified {
            get {
                return this.issueDateFieldSpecified;
            }
            set {
                this.issueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The person or company that issued the report. This may contain the role of the person or company within the context of the report.</summary>
        [System.ComponentModel.DescriptionAttribute("The person or company that issued the report. This may contain the role of the pe" +
            "rson or company within the context of the report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("issuedBy", DataType="cs_businessAssociate")]
        public cs_businessAssociate issuedBy {
            get {
                return this.issuedByField;
            }
            set {
                this.issuedByField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date that the report was approved.</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DescriptionAttribute("The date that the report was approved.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("approvalDate", DataType="date")]
        public System.DateTime approvalDate {
            get {
                return this.approvalDateField;
            }
            set {
                this.approvalDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool approvalDateSpecified {
            get {
                return this.approvalDateFieldSpecified;
            }
            set {
                this.approvalDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The person or company that approved the report. This may contain the role of the person or company within the context of the report.</summary>
        [System.ComponentModel.DescriptionAttribute("The person or company that approved the report. This may contain the role of the " +
            "person or company within the context of the report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("approver", DataType="cs_businessAssociate")]
        public cs_businessAssociate approver {
            get {
                return this.approverField;
            }
            set {
                this.approverField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The Product Flow Model for the overall installation. This model represents all Product Flow Units referenced within this report.</summary>
        [System.ComponentModel.DescriptionAttribute("The Product Flow Model for the overall installation. This model represents all Pr" +
            "oduct Flow Units referenced within this report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("productFlowModel", DataType="refNameString")]
        public refNameString productFlowModel {
            get {
                return this.productFlowModelField;
            }
            set {
                this.productFlowModelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines the default standard temperature and pressure to which all volumes, densities and flow rates in this report have been corrected. The default may be locally overridden for an individual value. If not specified, then the conditions must be presumed to be ambient conditions  (i.e., uncorrected) unless otherwise specified at a local level.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Defines the default standard temperature and pressure to which all volumes, densities and flow rates in this report have been corrected. The default may be locally overridden for an individual value. If not specified, then the conditions must be presumed to be ambient conditions  (i.e., uncorrected) unless otherwise specified at a local level.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("standardTempPres", DataType="StandardCondition")]
        public StandardCondition standardTempPres {
            get {
                return this.standardTempPresField;
            }
            set {
                this.standardTempPresField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool standardTempPresSpecified {
            get {
                return this.standardTempPresFieldSpecified;
            }
            set {
                this.standardTempPresFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A business unit and related account or ownership share information.</summary>
        [System.Xml.Serialization.XmlElementAttribute("businessUnit")]
        [System.ComponentModel.DescriptionAttribute("A business unit and related account or ownership share information.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("businessUnit", DataType="cs_productVolumeBusinessUnit")]
        public cs_productVolumeBusinessUnit[] businessUnit {
            get {
                return this.businessUnitField;
            }
            set {
                this.businessUnitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A facility for which product information is being reported.</summary>
        [System.Xml.Serialization.XmlElementAttribute("facility")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A facility for which product information is being reported.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facility", DataType="cs_productVolumeFacility")]
        public cs_productVolumeFacility[] facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of an object. This should not be used for child nodes within an object. For an independent object, the value may be globally unique. For a dependent object, the value must be unique (for the same object type) within the context of the parent object. There should be no assumption as to the semantic content of this attribute. The purpose of this type is to facilitate modifying the optionality in derived schemas.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of an object. This should not be used for child nodes within an object. For an independent object, the value may be globally unique. For a dependent object, the value must be unique (for the same object type) within the context of the parent object. There should be no assumption as to the semantic content of this attribute. The purpose of this type is to facilitate modifying the optionality in derived schemas.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series", IncludeInSchema=false)]
    public enum ItemsChoiceType6 {
        
        /// <remarks/>
        dTimEnd,
        
        /// <remarks/>
        dTimStart,
        
        /// <remarks/>
        dateEnd,
        
        /// <remarks/>
        dateStart,
        
        /// <remarks/>
        month,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum CalculationMethod {
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("step wise constant")]
        stepwiseconstant,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_businessAssociate {
        
        private string nameField;
        
        private nameStruct[] roleField;
        
        private cs_personName personNameField;
        
        private nameStruct[] aliasField;
        
        private cs_generalAddress[] addressField;
        
        private phoneNumberStruct[] phoneNumberField;
        
        private emailQualifierStruct[] emailField;
        
        private ContactPreference[] contactPreferenceField;
        
        private refNameString associatedWithField;
        
        private refNameString[] contactField;
        
        private short personnelCountField;
        
        private bool personnelCountFieldSpecified;
        
        private string commentField;
        
        /// <remarks/>
        /// <summary>The name of the business associate.  This can be the name of a person, business, group, etc.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the business associate.  This can be the name of a person, business, " +
            "group, etc.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The role of the business associate within the  context. For example, "driller" or "operator",  "lead agency - CEQA compliance" "regulatory contact", "safety contact".  A business associate will generally have one role but the role may be called different things in different naming systems.</summary>
        [System.Xml.Serialization.XmlElementAttribute("role")]
        [System.ComponentModel.DescriptionAttribute(@"The role of the business associate within the  context. For example, ""driller"" or ""operator"",  ""lead agency - CEQA compliance"" ""regulatory contact"", ""safety contact"".  A business associate will generally have one role but the role may be called different things in different naming systems.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("role", DataType="nameStruct")]
        public nameStruct[] role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>If the business associate is a person, this specifies the component names of the person.</summary>
        [System.ComponentModel.DescriptionAttribute("If the business associate is a person, this specifies the component names of the " +
            "person.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("personName", DataType="cs_personName")]
        public cs_personName personName {
            get {
                return this.personNameField;
            }
            set {
                this.personNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The alias is an alternate name of a  business associate. It is generally associated with a  naming system. An alias is not necessarily unique  within the naming system.</summary>
        [System.Xml.Serialization.XmlElementAttribute("alias")]
        [System.ComponentModel.DescriptionAttribute("The alias is an alternate name of a  business associate. It is generally associat" +
            "ed with a  naming system. An alias is not necessarily unique  within the naming " +
            "system.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("alias", DataType="nameStruct")]
        public nameStruct[] alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Note that address may occur more than  once, because it may be necessary to give a physical  address, a mailing address, or both.</summary>
        [System.Xml.Serialization.XmlElementAttribute("address")]
        [System.ComponentModel.DescriptionAttribute("Note that address may occur more than  once, because it may be necessary to give " +
            "a physical  address, a mailing address, or both.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("address", DataType="cs_generalAddress")]
        public cs_generalAddress[] address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The various types of phone numbers may  be given. The may be office or home, they may be a  number for a cell phone, or for a fax, etc. Attributes  of PhoneNumber declare the type of phone number that is  being given.</summary>
        [System.Xml.Serialization.XmlElementAttribute("phoneNumber")]
        [System.ComponentModel.DescriptionAttribute("The various types of phone numbers may  be given. The may be office or home, they" +
            " may be a  number for a cell phone, or for a fax, etc. Attributes  of PhoneNumbe" +
            "r declare the type of phone number that is  being given.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("phoneNumber", DataType="phoneNumberStruct")]
        public phoneNumberStruct[] phoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The email address may be home, office,  or permanent. More than one may be given.</summary>
        [System.Xml.Serialization.XmlElementAttribute("email")]
        [System.ComponentModel.DescriptionAttribute("The email address may be home, office,  or permanent. More than one may be given." +
            "")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("email", DataType="emailQualifierStruct")]
        public emailQualifierStruct[] email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The preferred method of being contacted within the context of this role.</summary>
        [System.Xml.Serialization.XmlElementAttribute("contactPreference")]
        [System.ComponentModel.DescriptionAttribute("The preferred method of being contacted within the context of this role.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("contactPreference", DataType="ContactPreference")]
        public ContactPreference[] contactPreference {
            get {
                return this.contactPreferenceField;
            }
            set {
                this.contactPreferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to another business associate that this  business associate is associated with. The most common situation is that  of an employee being associated with a company. But it may also be, for  example, a work group associated with a university.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to another business associate that this  business associate is associat" +
            "ed with. The most common situation is that  of an employee being associated with" +
            " a company. But it may also be, for  example, a work group associated with a uni" +
            "versity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("associatedWith", DataType="refNameString")]
        public refNameString associatedWith {
            get {
                return this.associatedWithField;
            }
            set {
                this.associatedWithField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to a business associate  (generally a person) who serves as a contact for this  business associate.</summary>
        [System.Xml.Serialization.XmlElementAttribute("contact")]
        [System.ComponentModel.DescriptionAttribute("A pointer to a business associate  (generally a person) who serves as a contact f" +
            "or this  business associate.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("contact", DataType="refNameString")]
        public refNameString[] contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The count of the number of personnel in a group.</summary>
        [System.ComponentModel.DescriptionAttribute("The count of the number of personnel in a group.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("personnelCount", DataType="nonNegativeCount")]
        public short personnelCount {
            get {
                return this.personnelCountField;
            }
            set {
                this.personnelCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool personnelCountSpecified {
            get {
                return this.personnelCountFieldSpecified;
            }
            set {
                this.personnelCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A general comment. This should not  be used to carry semantic information. This is not  intended to be machine interpretable.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A general comment. This should not  be used to carry semantic information. This i" +
            "s not  intended to be machine interpretable.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_personName {
        
        private string prefixField;
        
        private string firstField;
        
        private string middleField;
        
        private string lastField;
        
        private string[] suffixField;
        
        /// <remarks/>
        /// <summary>A name prefix. Such as, Dr, Ms, Miss, Mr, etc.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A name prefix. Such as, Dr, Ms, Miss, Mr, etc.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("prefix", DataType="nameString")]
        public string prefix {
            get {
                return this.prefixField;
            }
            set {
                this.prefixField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The persons first name.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The persons first name.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("first", DataType="nameString")]
        public string first {
            get {
                return this.firstField;
            }
            set {
                this.firstField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The persons middle name or initial name.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The persons middle name or initial name.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("middle", DataType="nameString")]
        public string middle {
            get {
                return this.middleField;
            }
            set {
                this.middleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The persons last or given name.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The persons last or given name.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("last", DataType="nameString")]
        public string last {
            get {
                return this.lastField;
            }
            set {
                this.lastField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A name suffix. Such as Esq, Phd, etc.</summary>
        [System.Xml.Serialization.XmlElementAttribute("suffix")]
        [System.ComponentModel.DescriptionAttribute("A name suffix. Such as Esq, Phd, etc.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("suffix", DataType="nameString")]
        public string[] suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_generalAddress {
        
        private string nameField;
        
        private string[] streetField;
        
        private string cityField;
        
        private string itemField;
        
        private ItemChoiceType itemElementNameField;
        
        private string countryField;
        
        private string postalCodeField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private AddressKindEnum kindField;
        
        private bool kindFieldSpecified;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The Name line of an address.  If missing, use the Name of the business associate.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The Name line of an address.  If missing, use the Name of the business associate." +
            "")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The Street is a generic term for the  middle lines of an address. They may be a street address, PO Box, Suite number, or any lines that come  between the "name" and "city" lines. This may be repeated  for up to four, ordered lines.</summary>
        [System.Xml.Serialization.XmlElementAttribute("street")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The Street is a generic term for the  middle lines of an address. They may be a s" +
            "treet address, PO Box, Suite number, or any lines that come  between the \"name\" " +
            "and \"city\" lines. This may be repeated  for up to four, ordered lines.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("street", DataType="nameString")]
        public string[] street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The City for the business associate's  address</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The City for the business associate\'s  address")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("city", DataType="nameString")]
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("county", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("province", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("state", typeof(string))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("state", DataType="nameString")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("province", DataType="nameString")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("county", DataType="nameString")]
        public string Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The Country may be included. Although  this is optional, it is probably required for most uses.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The Country may be included. Although  this is optional, it is probably required " +
            "for most uses.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("country", DataType="nameString")]
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A postal code, if appropriate for the country.  In the USA this would be the five or nine digit zip code.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("A postal code, if appropriate for the country.  In the USA this would be the five" +
            " or nine digit zip code.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("postalCode", DataType="kindString")]
        public string postalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of address: mailing, physical, or both.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute("The type of address: mailing, physical, or both.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("kind", DataType="AddressKindEnum")]
        public AddressKindEnum kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kindSpecified {
            get {
                return this.kindFieldSpecified;
            }
            set {
                this.kindFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series", IncludeInSchema=false)]
    public enum ItemChoiceType {
        
        /// <remarks/>
        county,
        
        /// <remarks/>
        province,
        
        /// <remarks/>
        state,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum AddressKindEnum {
        
        /// <remarks/>
        mailing,
        
        /// <remarks/>
        physical,
        
        /// <remarks/>
        both,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class phoneNumberStruct {
        
        private PhoneType typeField;
        
        private AddressQualifier qualifierField;
        
        private bool qualifierFieldSpecified;
        
        private string extensionField;
        
        private string valueField;
        
        /// <remarks/>
        /// <summary>The kind of phone such as voice or fax.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The kind of phone such as voice or fax.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("type", DataType="PhoneType")]
        public PhoneType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Indicates whether the number  is personal, business or both.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute("Indicates whether the number  is personal, business or both.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("qualifier", DataType="AddressQualifier")]
        public AddressQualifier qualifier {
            get {
                return this.qualifierField;
            }
            set {
                this.qualifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qualifierSpecified {
            get {
                return this.qualifierFieldSpecified;
            }
            set {
                this.qualifierFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The phone number extension.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The phone number extension.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extension", DataType="kindString")]
        public string extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum PhoneType {
        
        /// <remarks/>
        voice,
        
        /// <remarks/>
        fax,
        
        /// <remarks/>
        mobile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("voice/fax")]
        voicefax,
        
        /// <remarks/>
        voicemail,
        
        /// <remarks/>
        pager,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum AddressQualifier {
        
        /// <remarks/>
        personal,
        
        /// <remarks/>
        work,
        
        /// <remarks/>
        permanent,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class emailQualifierStruct {
        
        private AddressQualifier qualifierField;
        
        private bool qualifierFieldSpecified;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("qualifier", DataType="AddressQualifier")]
        public AddressQualifier qualifier {
            get {
                return this.qualifierField;
            }
            set {
                this.qualifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qualifierSpecified {
            get {
                return this.qualifierFieldSpecified;
            }
            set {
                this.qualifierFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ContactPreference {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("business mail")]
        businessmail,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("business fax")]
        businessfax,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("business email")]
        businessemail,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("business mail")]
        businessmail1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("business phone")]
        businessphone,
        
        /// <remarks/>
        mobile,
        
        /// <remarks/>
        pager,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("personal fax")]
        personalfax,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("personal email")]
        personalemail,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("personal mail")]
        personalmail,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("personal phone")]
        personalphone,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_geographicContext {
        
        private string countryField;
        
        private string stateField;
        
        private nameStruct fieldField;
        
        private cs_offshoreLocation offshoreLocationField;
        
        private string commentField;
        
        /// <remarks/>
        /// <summary>The name of the country.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the country.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("country", DataType="nameString")]
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The state of province within the country.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The state of province within the country.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("state", DataType="nameString")]
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the field within whose context the report exists.</summary>
        [System.ComponentModel.DescriptionAttribute("The name of the field within whose context the report exists.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("field", DataType="nameStruct")]
        public nameStruct field {
            get {
                return this.fieldField;
            }
            set {
                this.fieldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An offshore context.</summary>
        [System.ComponentModel.DescriptionAttribute("An offshore context.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("offshoreLocation", DataType="cs_offshoreLocation")]
        public cs_offshoreLocation offshoreLocation {
            get {
                return this.offshoreLocationField;
            }
            set {
                this.offshoreLocationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An general comment that further explains the  offshore location.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("An general comment that further explains the  offshore location.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_offshoreLocation {
        
        private string areaNameField;
        
        private string[] blockIDField;
        
        private cs_northSeaOffshore northSeaOffshoreField;
        
        private string commentField;
        
        /// <remarks/>
        /// <summary>A general meaning of Area. It may be as  general as 'UK North Sea' or 'Viosca Knoll'. The user community must agree on the meaning of this element.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A general meaning of Area. It may be as  general as \'UK North Sea\' or \'Viosca Kno" +
            "ll\'. The user community must agree on the meaning of this element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("areaName", DataType="nameString")]
        public string areaName {
            get {
                return this.areaNameField;
            }
            set {
                this.areaNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A block ID that can more tightly locate the object.  The BlockID should be an identifying name or code.  The user community for an area must agree on the exact meaning of this element. An aggregate of increasingly specialized block IDs are sometimes necessary to define the location.</summary>
        [System.Xml.Serialization.XmlElementAttribute("blockID")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"A block ID that can more tightly locate the object.  The BlockID should be an identifying name or code.  The user community for an area must agree on the exact meaning of this element. An aggregate of increasingly specialized block IDs are sometimes necessary to define the location.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("blockID", DataType="nameString")]
        public string[] blockID {
            get {
                return this.blockIDField;
            }
            set {
                this.blockIDField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An offshore location using the North Sea Offshore  terminology.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("An offshore location using the North Sea Offshore  terminology.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("northSeaOffshore", DataType="cs_northSeaOffshore")]
        public cs_northSeaOffshore northSeaOffshore {
            get {
                return this.northSeaOffshoreField;
            }
            set {
                this.northSeaOffshoreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An general comment that further explains the  offshore location.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("An general comment that further explains the  offshore location.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_northSeaOffshore {
        
        private string areaNameField;
        
        private string quadrantField;
        
        private string blockSuffixField;
        
        /// <remarks/>
        /// <summary>An optional, uncontrolled value, which may be  used to describe the general area of offshore North Sea in which the  point is located.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("An optional, uncontrolled value, which may be  used to describe the general area " +
            "of offshore North Sea in which the  point is located.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("areaName", DataType="nameString")]
        public string areaName {
            get {
                return this.areaNameField;
            }
            set {
                this.areaNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The number or letter of the quadrant in  the North Sea.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The number or letter of the quadrant in  the North Sea.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("quadrant", DataType="nameString")]
        public string quadrant {
            get {
                return this.quadrantField;
            }
            set {
                this.quadrantField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A lower case letter assigned if a block is subdivided.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2)]
        [System.ComponentModel.DescriptionAttribute("A lower case letter assigned if a block is subdivided.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("blockSuffix", DataType="str2")]
        public string blockSuffix {
            get {
                return this.blockSuffixField;
            }
            set {
                this.blockSuffixField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productVolumeBusinessUnit {
        
        private BusinessUnitKind kindField;
        
        private string nameField;
        
        private string descriptionField;
        
        private cs_productVolumeBusinessSubUnit[] subUnitField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The type of business unit.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The type of business unit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("kind", DataType="BusinessUnitKind")]
        public BusinessUnitKind kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The human contextual name of the business unit.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The human contextual name of the business unit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A textual description of the business unit.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("A textual description of the business unit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="descriptionString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A component part of the unit.  The composition of a unit may vary with time. This defines the ownership share or account information for a sub unit within the context of the whole unit. For ownership shares, at any one point in time the sum of the shares should be 100%.</summary>
        [System.Xml.Serialization.XmlElementAttribute("subUnit")]
        [System.ComponentModel.DescriptionAttribute(@"A component part of the unit.  The composition of a unit may vary with time. This defines the ownership share or account information for a sub unit within the context of the whole unit. For ownership shares, at any one point in time the sum of the shares should be 100%.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("subUnit", DataType="cs_productVolumeBusinessSubUnit")]
        public cs_productVolumeBusinessSubUnit[] subUnit {
            get {
                return this.subUnitField;
            }
            set {
                this.subUnitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum BusinessUnitKind {
        
        /// <remarks/>
        company,
        
        /// <remarks/>
        field,
        
        /// <remarks/>
        license,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("business area")]
        businessarea,
        
        /// <remarks/>
        platform,
        
        /// <remarks/>
        terminal,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productVolumeBusinessSubUnit {
        
        private refNameString kindField;
        
        private object[] itemsField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Points to business unit which is part of another business unit.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Points to business unit which is part of another business unit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("kind", DataType="refNameString")]
        public refNameString kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("accountInformation", typeof(cs_productVolumeBusinessAccountInfo))]
        [System.Xml.Serialization.XmlElementAttribute("ownershipShare", typeof(cs_productVolumeBusinessOwnershipShare))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ownershipShare", DataType="cs_productVolumeBusinessOwnershipShare")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("accountInformation", DataType="cs_productVolumeBusinessAccountInfo")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productVolumeBusinessAccountInfo {
        
        private string accountIdField;
        
        private ReportingProduct productField;
        
        private bool productFieldSpecified;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The identifier of the account of the sub-unit within the whole business unit.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The identifier of the account of the sub-unit within the whole business unit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("accountId", DataType="nameString")]
        public string accountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The product associated with the account identifier.</summary>
        [System.ComponentModel.DescriptionAttribute("The product associated with the account identifier.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("product", DataType="ReportingProduct")]
        public ReportingProduct product {
            get {
                return this.productField;
            }
            set {
                this.productField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool productSpecified {
            get {
                return this.productFieldSpecified;
            }
            set {
                this.productFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productVolumeBusinessOwnershipShare {
        
        private volumePerVolumeMeasurePercent shareField;
        
        private System.DateTime startDateField;
        
        private bool startDateFieldSpecified;
        
        private System.DateTime endDateField;
        
        private bool endDateFieldSpecified;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The percent ownership of the sub-unit in the unit during the specified time.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The percent ownership of the sub-unit in the unit during the specified time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("share", DataType="volumePerVolumeMeasurePercent")]
        public volumePerVolumeMeasurePercent share {
            get {
                return this.shareField;
            }
            set {
                this.shareField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date on which the ownership became valid.</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DescriptionAttribute("The date on which the ownership became valid.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("startDate", DataType="date")]
        public System.DateTime startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startDateSpecified {
            get {
                return this.startDateFieldSpecified;
            }
            set {
                this.startDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The final date on which the ownership was valid. If no end date is specified, the share is considered to still be valid.</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DescriptionAttribute("The final date on which the ownership was valid. If no end date is specified, the" +
            " share is considered to still be valid.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("endDate", DataType="date")]
        public System.DateTime endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endDateSpecified {
            get {
                return this.endDateFieldSpecified;
            }
            set {
                this.endDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productionOperationOperationalComment {
        
        private OperationKind typeField;
        
        private bool typeFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimStartField;
        
        private bool dTimStartFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimEndField;
        
        private bool dTimEndFieldSpecified;
        
        private string[] commentField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The kind of operation</summary>
        [System.ComponentModel.DescriptionAttribute("The kind of operation")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("type", DataType="OperationKind")]
        public OperationKind type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The beginning date and time that the comment represents.</summary>
        [System.ComponentModel.DescriptionAttribute("The beginning date and time that the comment represents.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimStartSpecified {
            get {
                return this.dTimStartFieldSpecified;
            }
            set {
                this.dTimStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The ending date and time that the comment represents.</summary>
        [System.ComponentModel.DescriptionAttribute("The ending date and time that the comment represents.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimEndSpecified {
            get {
                return this.dTimEndFieldSpecified;
            }
            set {
                this.dTimEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A comment about the operation and/or the activities  within the operation.</summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        [System.ComponentModel.DescriptionAttribute("A comment about the operation and/or the activities  within the operation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string[] comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum OperationKind {
        
        /// <remarks/>
        production,
        
        /// <remarks/>
        well,
        
        /// <remarks/>
        deviations,
        
        /// <remarks/>
        maintenance,
        
        /// <remarks/>
        construction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("power station failure")]
        powerstationfailure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("air traffic")]
        airtraffic,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productionOperationCargoShipOperation {
        
        private string vesselNameField;
        
        private Energistics.DataAccess.Timestamp dTimStartField;
        
        private bool dTimStartFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimEndField;
        
        private bool dTimEndFieldSpecified;
        
        private string captainField;
        
        private string cargoNumberField;
        
        private short cargoBatchNumberField;
        
        private bool cargoBatchNumberFieldSpecified;
        
        private string cargoField;
        
        private volumeMeasure oilGrossStdTempPresField;
        
        private volumeMeasure oilGrossTotalStdTempPresField;
        
        private volumeMeasure oilNetStdTempPresField;
        
        private volumeMeasure oilNetMonthToDateStdTempPresField;
        
        private densityMeasure densityStdTempPresField;
        
        private densityMeasure densityField;
        
        private pressureMeasure rvpField;
        
        private volumePerVolumeMeasure bswField;
        
        private densityMeasure saltField;
        
        private cs_datedComment[] commentField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Name of the cargo vessel for the installation.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of the cargo vessel for the installation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("vesselName", DataType="nameString")]
        public string vesselName {
            get {
                return this.vesselNameField;
            }
            set {
                this.vesselNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time that the vessel arrived.</summary>
        [System.ComponentModel.DescriptionAttribute("The date and time that the vessel arrived.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimStartSpecified {
            get {
                return this.dTimStartFieldSpecified;
            }
            set {
                this.dTimStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time that the vessel left.</summary>
        [System.ComponentModel.DescriptionAttribute("The date and time that the vessel left.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimEndSpecified {
            get {
                return this.dTimEndFieldSpecified;
            }
            set {
                this.dTimEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of the captain of the vessel.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of the captain of the vessel.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("captain", DataType="nameString")]
        public string captain {
            get {
                return this.captainField;
            }
            set {
                this.captainField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>the cargo identifier.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("the cargo identifier.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cargoNumber", DataType="kindString")]
        public string cargoNumber {
            get {
                return this.cargoNumberField;
            }
            set {
                this.cargoNumberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The cargo batch number. Used if the vessel needs to temporarily  disconnect for some reason (e.g., weather).</summary>
        [System.ComponentModel.DescriptionAttribute("The cargo batch number. Used if the vessel needs to temporarily  disconnect for s" +
            "ome reason (e.g., weather).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cargoBatchNumber", DataType="nonNegativeCount")]
        public short cargoBatchNumber {
            get {
                return this.cargoBatchNumberField;
            }
            set {
                this.cargoBatchNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cargoBatchNumberSpecified {
            get {
                return this.cargoBatchNumberFieldSpecified;
            }
            set {
                this.cargoBatchNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of cargo on the vessel.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("Description of cargo on the vessel.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cargo", DataType="descriptionString")]
        public string cargo {
            get {
                return this.cargoField;
            }
            set {
                this.cargoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gross oil loaded to the ship during the report period. Gross oil includes BS and W. This volume has been corrected to standard conditions of temperature and pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Gross oil loaded to the ship during the report period. Gross oil includes BS and " +
            "W. This volume has been corrected to standard conditions of temperature and pres" +
            "sure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilGrossStdTempPres", DataType="volumeMeasure")]
        public volumeMeasure oilGrossStdTempPres {
            get {
                return this.oilGrossStdTempPresField;
            }
            set {
                this.oilGrossStdTempPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gross oil loaded to the ship in total during the operation. Gross oil includes BS and W. This volume has been corrected to standard conditions of temperature and pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Gross oil loaded to the ship in total during the operation. Gross oil includes BS" +
            " and W. This volume has been corrected to standard conditions of temperature and" +
            " pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilGrossTotalStdTempPres", DataType="volumeMeasure")]
        public volumeMeasure oilGrossTotalStdTempPres {
            get {
                return this.oilGrossTotalStdTempPresField;
            }
            set {
                this.oilGrossTotalStdTempPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Net oil loaded to the ship during the report period. Net oil excludes BS and W, fuel, spill and leaks. This volume has been corrected to standard conditions of temperature and pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Net oil loaded to the ship during the report period. Net oil excludes BS and W, f" +
            "uel, spill and leaks. This volume has been corrected to standard conditions of t" +
            "emperature and pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilNetStdTempPres", DataType="volumeMeasure")]
        public volumeMeasure oilNetStdTempPres {
            get {
                return this.oilNetStdTempPresField;
            }
            set {
                this.oilNetStdTempPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Net oil loaded to the ship from the beginning of the  month to the end of the reporting period. Net oil excludes BS and W, fuel, spill and leaks. This volume has been corrected to standard conditions of temperature and pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Net oil loaded to the ship from the beginning of the  month to the end of the rep" +
            "orting period. Net oil excludes BS and W, fuel, spill and leaks. This volume has" +
            " been corrected to standard conditions of temperature and pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilNetMonthToDateStdTempPres", DataType="volumeMeasure")]
        public volumeMeasure oilNetMonthToDateStdTempPres {
            get {
                return this.oilNetMonthToDateStdTempPresField;
            }
            set {
                this.oilNetMonthToDateStdTempPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Density of the liquid loaded to the tanker. This density has been corrected to standard conditions of temperature and pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Density of the liquid loaded to the tanker. This density has been corrected to st" +
            "andard conditions of temperature and pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densityStdTempPres", DataType="densityMeasure")]
        public densityMeasure densityStdTempPres {
            get {
                return this.densityStdTempPresField;
            }
            set {
                this.densityStdTempPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Density of the liquid loaded to the tanker.</summary>
        [System.ComponentModel.DescriptionAttribute("Density of the liquid loaded to the tanker.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("density", DataType="densityMeasure")]
        public densityMeasure density {
            get {
                return this.densityField;
            }
            set {
                this.densityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reid vapor pressure of the liquid.</summary>
        [System.ComponentModel.DescriptionAttribute("Reid vapor pressure of the liquid.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rvp", DataType="pressureMeasure")]
        public pressureMeasure rvp {
            get {
                return this.rvpField;
            }
            set {
                this.rvpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Basic sediment and water is measured from a liquid sample  of the production stream. It includes free water, sediment and emulsion and  is measured as a volume percentage of the liquid.</summary>
        [System.ComponentModel.DescriptionAttribute("Basic sediment and water is measured from a liquid sample  of the production stre" +
            "am. It includes free water, sediment and emulsion and  is measured as a volume p" +
            "ercentage of the liquid.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bsw", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure bsw {
            get {
                return this.bswField;
            }
            set {
                this.bswField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Salt content. The product formed by neutralization of an acid  and a base. The term is more specifically applied to sodium chloride.</summary>
        [System.ComponentModel.DescriptionAttribute("Salt content. The product formed by neutralization of an acid  and a base. The te" +
            "rm is more specifically applied to sodium chloride.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("salt", DataType="densityMeasure")]
        public densityMeasure salt {
            get {
                return this.saltField;
            }
            set {
                this.saltField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A commnet about the operation.</summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        [System.ComponentModel.DescriptionAttribute("A commnet about the operation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="cs_datedComment")]
        public cs_datedComment[] comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productionOperationMarineOperation {
        
        private Energistics.DataAccess.Timestamp dTimStartField;
        
        private bool dTimStartFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimEndField;
        
        private bool dTimEndFieldSpecified;
        
        private string generalCommentField;
        
        private string supplyShipField;
        
        private string standbyVesselField;
        
        private cs_datedComment[] supplyShipCommentField;
        
        private cs_datedComment[] standbyVesselCommentField;
        
        private cs_datedComment[] basketMovementField;
        
        private cs_datedComment[] activityField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The beginning date and time that the information represents.</summary>
        [System.ComponentModel.DescriptionAttribute("The beginning date and time that the information represents.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimStartSpecified {
            get {
                return this.dTimStartFieldSpecified;
            }
            set {
                this.dTimStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The ending date and time that the comment represents.</summary>
        [System.ComponentModel.DescriptionAttribute("The ending date and time that the comment represents.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimEndSpecified {
            get {
                return this.dTimEndFieldSpecified;
            }
            set {
                this.dTimEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A general comment on marine activity in the area</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A general comment on marine activity in the area")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("generalComment", DataType="commentString")]
        public string generalComment {
            get {
                return this.generalCommentField;
            }
            set {
                this.generalCommentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of supply vessel for the installation.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of supply vessel for the installation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("supplyShip", DataType="nameString")]
        public string supplyShip {
            get {
                return this.supplyShipField;
            }
            set {
                this.supplyShipField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of standby vessel for the installation.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of standby vessel for the installation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("standbyVessel", DataType="nameString")]
        public string standbyVessel {
            get {
                return this.standbyVesselField;
            }
            set {
                this.standbyVesselField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comment regarding the supply ship.</summary>
        [System.Xml.Serialization.XmlElementAttribute("supplyShipComment")]
        [System.ComponentModel.DescriptionAttribute("Comment regarding the supply ship.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("supplyShipComment", DataType="cs_datedComment")]
        public cs_datedComment[] supplyShipComment {
            get {
                return this.supplyShipCommentField;
            }
            set {
                this.supplyShipCommentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comment regarding the standby vessel.</summary>
        [System.Xml.Serialization.XmlElementAttribute("standbyVesselComment")]
        [System.ComponentModel.DescriptionAttribute("Comment regarding the standby vessel.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("standbyVesselComment", DataType="cs_datedComment")]
        public cs_datedComment[] standbyVesselComment {
            get {
                return this.standbyVesselCommentField;
            }
            set {
                this.standbyVesselCommentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Report of any basket movement to and from the installation.</summary>
        [System.Xml.Serialization.XmlElementAttribute("basketMovement")]
        [System.ComponentModel.DescriptionAttribute("Report of any basket movement to and from the installation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("basketMovement", DataType="cs_datedComment")]
        public cs_datedComment[] basketMovement {
            get {
                return this.basketMovementField;
            }
            set {
                this.basketMovementField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A comment on a special event in the marine area.</summary>
        [System.Xml.Serialization.XmlElementAttribute("activity")]
        [System.ComponentModel.DescriptionAttribute("A comment on a special event in the marine area.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("activity", DataType="cs_datedComment")]
        public cs_datedComment[] activity {
            get {
                return this.activityField;
            }
            set {
                this.activityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productionOperationAlarm {
        
        private Energistics.DataAccess.Timestamp dTimField;
        
        private bool dTimFieldSpecified;
        
        private string areaField;
        
        private string typeField;
        
        private string reasonField;
        
        private string commentField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The date and time when the alarms went off.</summary>
        [System.ComponentModel.DescriptionAttribute("The date and time when the alarms went off.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimSpecified {
            get {
                return this.dTimFieldSpecified;
            }
            set {
                this.dTimFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The area where the alarm went off.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The area where the alarm went off.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("area", DataType="nameString")]
        public string area {
            get {
                return this.areaField;
            }
            set {
                this.areaField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of alarm that went off.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The type of alarm that went off.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("type", DataType="kindString")]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The reason for the alarm going off.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("The reason for the alarm going off.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reason", DataType="descriptionString")]
        public string reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A general comment relevant for the alarm.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A general comment relevant for the alarm.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productionOperationShutdown {
        
        private facilityIdentifierStruct installationField;
        
        private string descriptionField;
        
        private Energistics.DataAccess.Timestamp dTimStartField;
        
        private bool dTimStartFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimEndField;
        
        private bool dTimEndFieldSpecified;
        
        private timeMeasure volumetricDownTimeField;
        
        private volumeMeasure lossOilStdTempPresField;
        
        private volumeMeasure lossGasStdTempPresField;
        
        private cs_datedComment[] activityField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The name of the installation which was shut down.  The name can be qualified by a naming system.  This also defines the kind of facility.</summary>
        [System.ComponentModel.DescriptionAttribute("The name of the installation which was shut down.  The name can be qualified by a" +
            " naming system.  This also defines the kind of facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("installation", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct installation {
            get {
                return this.installationField;
            }
            set {
                this.installationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A general description of the shutdown with reason and  other relevant information.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("A general description of the shutdown with reason and  other relevant information" +
            ".")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="descriptionString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The time the shutdown started.</summary>
        [System.ComponentModel.DescriptionAttribute("The time the shutdown started.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimStartSpecified {
            get {
                return this.dTimStartFieldSpecified;
            }
            set {
                this.dTimStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The time the shutdown ended.</summary>
        [System.ComponentModel.DescriptionAttribute("The time the shutdown ended.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimEndSpecified {
            get {
                return this.dTimEndFieldSpecified;
            }
            set {
                this.dTimEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Downtime when the installation is unable to produce 100% of its capability.</summary>
        [System.ComponentModel.DescriptionAttribute("Downtime when the installation is unable to produce 100% of its capability.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volumetricDownTime", DataType="timeMeasure")]
        public timeMeasure volumetricDownTime {
            get {
                return this.volumetricDownTimeField;
            }
            set {
                this.volumetricDownTimeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Estimated loss of oil deliveries because of the shutdown. This volume has been corrected to standard conditions of temperature and pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Estimated loss of oil deliveries because of the shutdown. This volume has been co" +
            "rrected to standard conditions of temperature and pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lossOilStdTempPres", DataType="volumeMeasure")]
        public volumeMeasure lossOilStdTempPres {
            get {
                return this.lossOilStdTempPresField;
            }
            set {
                this.lossOilStdTempPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Estimated loss of gas deliveries because of the shutdown. This volume has been corrected to standard conditions of temperature and pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Estimated loss of gas deliveries because of the shutdown. This volume has been co" +
            "rrected to standard conditions of temperature and pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lossGasStdTempPres", DataType="volumeMeasure")]
        public volumeMeasure lossGasStdTempPres {
            get {
                return this.lossGasStdTempPresField;
            }
            set {
                this.lossGasStdTempPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A description of main activities from time to time during the shutdown period.</summary>
        [System.Xml.Serialization.XmlElementAttribute("activity")]
        [System.ComponentModel.DescriptionAttribute("A description of main activities from time to time during the shutdown period.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("activity", DataType="cs_datedComment")]
        public cs_datedComment[] activity {
            get {
                return this.activityField;
            }
            set {
                this.activityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productionOperationWaterCleaningQuality {
        
        private string samplePointField;
        
        private massConcentrationMeasure oilInWaterProducedField;
        
        private massMeasure amountOfOilField;
        
        private densityMeasure ammoniumField;
        
        private massConcentrationMeasure totalOrganicCarbonField;
        
        private densityMeasure phenolField;
        
        private densityMeasure glycolField;
        
        private double phValueField;
        
        private bool phValueFieldSpecified;
        
        private thermodynamicTemperatureMeasure waterTemperatureField;
        
        private massConcentrationMeasure residualChlorideField;
        
        private massConcentrationMeasure oxygenField;
        
        private double turbidityField;
        
        private bool turbidityFieldSpecified;
        
        private massConcentrationMeasure coulterCounterField;
        
        private cs_datedComment[] commentField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>An identifier of the point from which the sample was taken.  This is an uncontrolled string value, which should be as descriptive as possible.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("An identifier of the point from which the sample was taken.  This is an uncontrol" +
            "led string value, which should be as descriptive as possible.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("samplePoint", DataType="nameString")]
        public string samplePoint {
            get {
                return this.samplePointField;
            }
            set {
                this.samplePointField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total measured oil in the water after the water cleaning process,  but before it is discharged from the installation.</summary>
        [System.ComponentModel.DescriptionAttribute("Total measured oil in the water after the water cleaning process,  but before it " +
            "is discharged from the installation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilInWaterProduced", DataType="massConcentrationMeasure")]
        public massConcentrationMeasure oilInWaterProduced {
            get {
                return this.oilInWaterProducedField;
            }
            set {
                this.oilInWaterProducedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total measured oil in the water after the water cleaning process,  but before it is discharged from the installation</summary>
        [System.ComponentModel.DescriptionAttribute("Total measured oil in the water after the water cleaning process,  but before it " +
            "is discharged from the installation")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("amountOfOil", DataType="massMeasure")]
        public massMeasure amountOfOil {
            get {
                return this.amountOfOilField;
            }
            set {
                this.amountOfOilField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The amount of ammonium found in the water sample.</summary>
        [System.ComponentModel.DescriptionAttribute("The amount of ammonium found in the water sample.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ammonium", DataType="densityMeasure")]
        public densityMeasure ammonium {
            get {
                return this.ammoniumField;
            }
            set {
                this.ammoniumField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The amount of total organic carbon found in the water.  The water is under high temperature and the carbon left is measured</summary>
        [System.ComponentModel.DescriptionAttribute("The amount of total organic carbon found in the water.  The water is under high t" +
            "emperature and the carbon left is measured")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("totalOrganicCarbon", DataType="massConcentrationMeasure")]
        public massConcentrationMeasure totalOrganicCarbon {
            get {
                return this.totalOrganicCarbonField;
            }
            set {
                this.totalOrganicCarbonField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The amount of Fenol found in the water sample.</summary>
        [System.ComponentModel.DescriptionAttribute("The amount of Fenol found in the water sample.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("phenol", DataType="densityMeasure")]
        public densityMeasure phenol {
            get {
                return this.phenolField;
            }
            set {
                this.phenolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The amount of Glycol found in the water sample.</summary>
        [System.ComponentModel.DescriptionAttribute("The amount of Glycol found in the water sample.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("glycol", DataType="densityMeasure")]
        public densityMeasure glycol {
            get {
                return this.glycolField;
            }
            set {
                this.glycolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The pH value of the treated water.  The pH value is best given as a value, with no unit of measure,  since there are no variations from the pH.</summary>
        [System.ComponentModel.DescriptionAttribute("The pH value of the treated water.  The pH value is best given as a value, with n" +
            "o unit of measure,  since there are no variations from the pH.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("phValue", DataType="unitlessQuantity")]
        public double phValue {
            get {
                return this.phValueField;
            }
            set {
                this.phValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phValueSpecified {
            get {
                return this.phValueFieldSpecified;
            }
            set {
                this.phValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The temperature of the water before it is discharged.</summary>
        [System.ComponentModel.DescriptionAttribute("The temperature of the water before it is discharged.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("waterTemperature", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure waterTemperature {
            get {
                return this.waterTemperatureField;
            }
            set {
                this.waterTemperatureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total measured residual clorines in the water after the  water cleaning process, but before it is discharged from the installation.</summary>
        [System.ComponentModel.DescriptionAttribute("Total measured residual clorines in the water after the  water cleaning process, " +
            "but before it is discharged from the installation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("residualChloride", DataType="massConcentrationMeasure")]
        public massConcentrationMeasure residualChloride {
            get {
                return this.residualChlorideField;
            }
            set {
                this.residualChlorideField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total measured Oxygen in the water after the water cleaning  process, but before it is discharged from the installation.</summary>
        [System.ComponentModel.DescriptionAttribute("Total measured Oxygen in the water after the water cleaning  process, but before " +
            "it is discharged from the installation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oxygen", DataType="massConcentrationMeasure")]
        public massConcentrationMeasure oxygen {
            get {
                return this.oxygenField;
            }
            set {
                this.oxygenField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A measure of the cloudiness of water caused by suspended particles.</summary>
        [System.ComponentModel.DescriptionAttribute("A measure of the cloudiness of water caused by suspended particles.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("turbidity", DataType="unitlessQuantity")]
        public double turbidity {
            get {
                return this.turbidityField;
            }
            set {
                this.turbidityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool turbiditySpecified {
            get {
                return this.turbidityFieldSpecified;
            }
            set {
                this.turbidityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A measure of the number of particles in water as measured by a coulter counter.</summary>
        [System.ComponentModel.DescriptionAttribute("A measure of the number of particles in water as measured by a coulter counter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("coulterCounter", DataType="massConcentrationMeasure")]
        public massConcentrationMeasure coulterCounter {
            get {
                return this.coulterCounterField;
            }
            set {
                this.coulterCounterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Any comment that may be useful in describing the water quality.  There can be multiple comments.</summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        [System.ComponentModel.DescriptionAttribute("Any comment that may be useful in describing the water quality.  There can be mul" +
            "tiple comments.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="cs_datedComment")]
        public cs_datedComment[] comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productionOperationThirdPartyProcessing {
        
        private facilityIdentifierStruct installationField;
        
        private volumeMeasure oilStdTempPresField;
        
        private volumeMeasure gasStdTempPresField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The name of the installation which performed the processing.  The name can be qualified by a naming system.  This also defines the kind of facility.</summary>
        [System.ComponentModel.DescriptionAttribute("The name of the installation which performed the processing.  The name can be qua" +
            "lified by a naming system.  This also defines the kind of facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("installation", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct installation {
            get {
                return this.installationField;
            }
            set {
                this.installationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The estimated amount of oil lost. This volume has been corrected to standard conditions of temperature and pressure</summary>
        [System.ComponentModel.DescriptionAttribute("The estimated amount of oil lost. This volume has been corrected to standard cond" +
            "itions of temperature and pressure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilStdTempPres", DataType="volumeMeasure")]
        public volumeMeasure oilStdTempPres {
            get {
                return this.oilStdTempPresField;
            }
            set {
                this.oilStdTempPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The estimated amount of gas lost. This volume has been corrected to standard conditions of temperature and pressure</summary>
        [System.ComponentModel.DescriptionAttribute("The estimated amount of gas lost. This volume has been corrected to standard cond" +
            "itions of temperature and pressure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasStdTempPres", DataType="volumeMeasure")]
        public volumeMeasure gasStdTempPres {
            get {
                return this.gasStdTempPresField;
            }
            set {
                this.gasStdTempPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productionOperationLostProduction {
        
        private lostVolumeAndReason[] volumeAndReasonField;
        
        private cs_productionOperationThirdPartyProcessing[] thirdPartyProcessingField;
        
        /// <remarks/>
        /// <summary>A estimated lost volume and the reason for the loss.</summary>
        [System.Xml.Serialization.XmlElementAttribute("volumeAndReason")]
        [System.ComponentModel.DescriptionAttribute("A estimated lost volume and the reason for the loss.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volumeAndReason", DataType="lostVolumeAndReason")]
        public lostVolumeAndReason[] volumeAndReason {
            get {
                return this.volumeAndReasonField;
            }
            set {
                this.volumeAndReasonField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The estimated amount of oil and gas lost due to  third party processing at an installation.</summary>
        [System.Xml.Serialization.XmlElementAttribute("thirdPartyProcessing")]
        [System.ComponentModel.DescriptionAttribute("The estimated amount of oil and gas lost due to  third party processing at an ins" +
            "tallation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("thirdPartyProcessing", DataType="cs_productionOperationThirdPartyProcessing")]
        public cs_productionOperationThirdPartyProcessing[] thirdPartyProcessing {
            get {
                return this.thirdPartyProcessingField;
            }
            set {
                this.thirdPartyProcessingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productionOperationActivity {
        
        private cs_productionOperationLostProduction lostProductionField;
        
        private cs_productionOperationLostProduction lostInjectionField;
        
        private cs_productionOperationWaterCleaningQuality[] waterCleaningQualityField;
        
        private cs_productionOperationShutdown[] shutdownField;
        
        private cs_productionOperationAlarm[] alarmField;
        
        private cs_productionOperationMarineOperation[] marineOperationField;
        
        private cs_productionOperationCargoShipOperation[] cargoShipOperationField;
        
        private cs_productionOperationOperationalComment[] operationalCommentField;
        
        /// <remarks/>
        /// <summary>Infomation about a lost production.</summary>
        [System.ComponentModel.DescriptionAttribute("Infomation about a lost production.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lostProduction", DataType="cs_productionOperationLostProduction")]
        public cs_productionOperationLostProduction lostProduction {
            get {
                return this.lostProductionField;
            }
            set {
                this.lostProductionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Infomation about a lost injection.</summary>
        [System.ComponentModel.DescriptionAttribute("Infomation about a lost injection.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lostInjection", DataType="cs_productionOperationLostProduction")]
        public cs_productionOperationLostProduction lostInjection {
            get {
                return this.lostInjectionField;
            }
            set {
                this.lostInjectionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information about the contaminants in water, and the general water quality.</summary>
        [System.Xml.Serialization.XmlElementAttribute("waterCleaningQuality")]
        [System.ComponentModel.DescriptionAttribute("Information about the contaminants in water, and the general water quality.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("waterCleaningQuality", DataType="cs_productionOperationWaterCleaningQuality")]
        public cs_productionOperationWaterCleaningQuality[] waterCleaningQuality {
            get {
                return this.waterCleaningQualityField;
            }
            set {
                this.waterCleaningQualityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Infomation about a shutdown event.</summary>
        [System.Xml.Serialization.XmlElementAttribute("shutdown")]
        [System.ComponentModel.DescriptionAttribute("Infomation about a shutdown event.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("shutdown", DataType="cs_productionOperationShutdown")]
        public cs_productionOperationShutdown[] shutdown {
            get {
                return this.shutdownField;
            }
            set {
                this.shutdownField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Infomation about an alarm.</summary>
        [System.Xml.Serialization.XmlElementAttribute("alarm")]
        [System.ComponentModel.DescriptionAttribute("Infomation about an alarm.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("alarm", DataType="cs_productionOperationAlarm")]
        public cs_productionOperationAlarm[] alarm {
            get {
                return this.alarmField;
            }
            set {
                this.alarmField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information about a marine operation.</summary>
        [System.Xml.Serialization.XmlElementAttribute("marineOperation")]
        [System.ComponentModel.DescriptionAttribute("Information about a marine operation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("marineOperation", DataType="cs_productionOperationMarineOperation")]
        public cs_productionOperationMarineOperation[] marineOperation {
            get {
                return this.marineOperationField;
            }
            set {
                this.marineOperationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information about a cargo operation.</summary>
        [System.Xml.Serialization.XmlElementAttribute("cargoShipOperation")]
        [System.ComponentModel.DescriptionAttribute("Information about a cargo operation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cargoShipOperation", DataType="cs_productionOperationCargoShipOperation")]
        public cs_productionOperationCargoShipOperation[] cargoShipOperation {
            get {
                return this.cargoShipOperationField;
            }
            set {
                this.cargoShipOperationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A comment about a kind of operation. The time of the operation can be specified.</summary>
        [System.Xml.Serialization.XmlElementAttribute("operationalComment")]
        [System.ComponentModel.DescriptionAttribute("A comment about a kind of operation. The time of the operation can be specified.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("operationalComment", DataType="cs_productionOperationOperationalComment")]
        public cs_productionOperationOperationalComment[] operationalComment {
            get {
                return this.operationalCommentField;
            }
            set {
                this.operationalCommentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productionOperationWeather {
        
        private Energistics.DataAccess.Timestamp dTimField;
        
        private string agencyField;
        
        private pressureMeasure barometricPressureField;
        
        private short beaufortScaleNumberField;
        
        private bool beaufortScaleNumberFieldSpecified;
        
        private thermodynamicTemperatureMeasure tempSurfaceField;
        
        private thermodynamicTemperatureMeasure tempSurfaceMnField;
        
        private thermodynamicTemperatureMeasure tempSurfaceMxField;
        
        private thermodynamicTemperatureMeasure tempWindChillField;
        
        private thermodynamicTemperatureMeasure tempseaField;
        
        private lengthMeasure visibilityField;
        
        private planeAngleMeasure aziWaveField;
        
        private lengthMeasure htWaveField;
        
        private lengthMeasure significantWaveField;
        
        private lengthMeasure maxWaveField;
        
        private timeMeasure periodWaveField;
        
        private planeAngleMeasure aziWindField;
        
        private velocityMeasure velWindField;
        
        private string typePrecipField;
        
        private lengthMeasure amtPrecipField;
        
        private string coverCloudField;
        
        private lengthMeasure ceilingCloudField;
        
        private velocityMeasure currentSeaField;
        
        private planeAngleMeasure aziCurrentSeaField;
        
        private string commentsField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Date and time the information is related to.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Date and time the information is related to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of company that supplied the data.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Name of company that supplied the data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("agency", DataType="str32")]
        public string agency {
            get {
                return this.agencyField;
            }
            set {
                this.agencyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Atmospheric pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Atmospheric pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("barometricPressure", DataType="pressureMeasure")]
        public pressureMeasure barometricPressure {
            get {
                return this.barometricPressureField;
            }
            set {
                this.barometricPressureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The Beaufort wind scale is a system used to estimate and report wind speeds  when no measuring apparatus is available. It was invented in the early 19th Century by Admiral  Sir Francis Beaufort of the British Navy as a way to interpret winds from conditions.</summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(0D, 12D)]
        [System.ComponentModel.DescriptionAttribute(@"The Beaufort wind scale is a system used to estimate and report wind speeds  when no measuring apparatus is available. It was invented in the early 19th Century by Admiral  Sir Francis Beaufort of the British Navy as a way to interpret winds from conditions.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("beaufortScaleNumber", DataType="beaufortScaleIntegerCode")]
        public short beaufortScaleNumber {
            get {
                return this.beaufortScaleNumberField;
            }
            set {
                this.beaufortScaleNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool beaufortScaleNumberSpecified {
            get {
                return this.beaufortScaleNumberFieldSpecified;
            }
            set {
                this.beaufortScaleNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average temperature above ground for the period. Temperature of the atmosphere.</summary>
        [System.ComponentModel.DescriptionAttribute("Average temperature above ground for the period. Temperature of the atmosphere.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempSurface", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempSurface {
            get {
                return this.tempSurfaceField;
            }
            set {
                this.tempSurfaceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum temperature above ground. Temperature of the atmosphere.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum temperature above ground. Temperature of the atmosphere.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempSurfaceMn", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempSurfaceMn {
            get {
                return this.tempSurfaceMnField;
            }
            set {
                this.tempSurfaceMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum temperature above ground.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum temperature above ground.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempSurfaceMx", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempSurfaceMx {
            get {
                return this.tempSurfaceMxField;
            }
            set {
                this.tempSurfaceMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A measure of the combined chilling effect of wind and low temperature on  living things, also named chill factor, e.g., according to US weather service table, an air  temperature of 30 degF with a 10 mi/h corresponds to a windchill of 22 degF.</summary>
        [System.ComponentModel.DescriptionAttribute("A measure of the combined chilling effect of wind and low temperature on  living " +
            "things, also named chill factor, e.g., according to US weather service table, an" +
            " air  temperature of 30 degF with a 10 mi/h corresponds to a windchill of 22 deg" +
            "F.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempWindChill", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempWindChill {
            get {
                return this.tempWindChillField;
            }
            set {
                this.tempWindChillField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Sea temperature.</summary>
        [System.ComponentModel.DescriptionAttribute("Sea temperature.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempsea", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempsea {
            get {
                return this.tempseaField;
            }
            set {
                this.tempseaField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Horizontal visibility.</summary>
        [System.ComponentModel.DescriptionAttribute("Horizontal visibility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("visibility", DataType="lengthMeasure")]
        public lengthMeasure visibility {
            get {
                return this.visibilityField;
            }
            set {
                this.visibilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The direction from which the waves are coming, measured from true north.</summary>
        [System.ComponentModel.DescriptionAttribute("The direction from which the waves are coming, measured from true north.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("aziWave", DataType="planeAngleMeasure")]
        public planeAngleMeasure aziWave {
            get {
                return this.aziWaveField;
            }
            set {
                this.aziWaveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average height of the waves.</summary>
        [System.ComponentModel.DescriptionAttribute("Average height of the waves.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("htWave", DataType="lengthMeasure")]
        public lengthMeasure htWave {
            get {
                return this.htWaveField;
            }
            set {
                this.htWaveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An average of the higher 1/3 of the wave heights passing during a   sample period (typically 20 to 30 minutes).</summary>
        [System.ComponentModel.DescriptionAttribute("An average of the higher 1/3 of the wave heights passing during a   sample period" +
            " (typically 20 to 30 minutes).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("significantWave", DataType="lengthMeasure")]
        public lengthMeasure significantWave {
            get {
                return this.significantWaveField;
            }
            set {
                this.significantWaveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum wave height.</summary>
        [System.ComponentModel.DescriptionAttribute("The maximum wave height.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("maxWave", DataType="lengthMeasure")]
        public lengthMeasure maxWave {
            get {
                return this.maxWaveField;
            }
            set {
                this.maxWaveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The elapsed time between the passing of two wave tops.</summary>
        [System.ComponentModel.DescriptionAttribute("The elapsed time between the passing of two wave tops.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("periodWave", DataType="timeMeasure")]
        public timeMeasure periodWave {
            get {
                return this.periodWaveField;
            }
            set {
                this.periodWaveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The direction from which the wind is blowing, measured from true north.</summary>
        [System.ComponentModel.DescriptionAttribute("The direction from which the wind is blowing, measured from true north.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("aziWind", DataType="planeAngleMeasure")]
        public planeAngleMeasure aziWind {
            get {
                return this.aziWindField;
            }
            set {
                this.aziWindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Wind speed.</summary>
        [System.ComponentModel.DescriptionAttribute("Wind speed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("velWind", DataType="velocityMeasure")]
        public velocityMeasure velWind {
            get {
                return this.velWindField;
            }
            set {
                this.velWindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of precipitation.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Type of precipitation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typePrecip", DataType="str32")]
        public string typePrecip {
            get {
                return this.typePrecipField;
            }
            set {
                this.typePrecipField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Amount of precipitation.</summary>
        [System.ComponentModel.DescriptionAttribute("Amount of precipitation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("amtPrecip", DataType="lengthMeasure")]
        public lengthMeasure amtPrecip {
            get {
                return this.amtPrecipField;
            }
            set {
                this.amtPrecipField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of cloud cover.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Description of cloud cover.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("coverCloud", DataType="str32")]
        public string coverCloud {
            get {
                return this.coverCloudField;
            }
            set {
                this.coverCloudField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Height of cloud cover.</summary>
        [System.ComponentModel.DescriptionAttribute("Height of cloud cover.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ceilingCloud", DataType="lengthMeasure")]
        public lengthMeasure ceilingCloud {
            get {
                return this.ceilingCloudField;
            }
            set {
                this.ceilingCloudField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Current speed.</summary>
        [System.ComponentModel.DescriptionAttribute("Current speed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("currentSea", DataType="velocityMeasure")]
        public velocityMeasure currentSea {
            get {
                return this.currentSeaField;
            }
            set {
                this.currentSeaField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Azimuth of current.</summary>
        [System.ComponentModel.DescriptionAttribute("Azimuth of current.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("aziCurrentSea", DataType="planeAngleMeasure")]
        public planeAngleMeasure aziCurrentSea {
            get {
                return this.aziCurrentSeaField;
            }
            set {
                this.aziCurrentSeaField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comments and remarks.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Comments and remarks.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comments", DataType="commentString")]
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class safetyCount {
        
        private SafetyType typeField;
        
        private bool typeFieldSpecified;
        
        private ReportingPeriod periodField;
        
        private bool periodFieldSpecified;
        
        private short valueField;
        
        /// <remarks/>
        /// <summary>The type of safety issue for which a count is being defined.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute("The type of safety issue for which a count is being defined.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("type", DataType="SafetyType")]
        public SafetyType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of period being reported by this count.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute("The type of period being reported by this count.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("period", DataType="ReportingPeriod")]
        public ReportingPeriod period {
            get {
                return this.periodField;
            }
            set {
                this.periodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool periodSpecified {
            get {
                return this.periodFieldSpecified;
            }
            set {
                this.periodFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public short Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum SafetyType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drill or exercise")]
        drillorexercise,
        
        /// <remarks/>
        fire,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("first aid")]
        firstaid,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hazard report card")]
        hazardreportcard,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("job observation")]
        jobobservation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lost time incident")]
        losttimeincident,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lost time accident")]
        losttimeaccident,
        
        /// <remarks/>
        miscellaneous,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("near miss")]
        nearmiss,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("permit with SJA")]
        permitwithSJA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("released to air")]
        releasedtoair,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("released to water")]
        releasedtowater,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("restricted work")]
        restrictedwork,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("safety meeting")]
        safetymeeting,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sent ashore")]
        sentashore,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("severe accident")]
        severeaccident,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sick on board")]
        sickonboard,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("spill or leak")]
        spillorleak,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("traffic accident")]
        trafficaccident,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("total permits")]
        totalpermits,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("year-to-date incidents")]
        yeartodateincidents,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productionOperationSafety {
        
        private timeMeasure meantimeIncidentField;
        
        private safetyCount[] safetyCountField;
        
        private cs_datedComment[] commentField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The mean time between safety incidents.</summary>
        [System.ComponentModel.DescriptionAttribute("The mean time between safety incidents.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("meantimeIncident", DataType="timeMeasure")]
        public timeMeasure meantimeIncident {
            get {
                return this.meantimeIncidentField;
            }
            set {
                this.meantimeIncidentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The count of a type of safety issue.</summary>
        [System.Xml.Serialization.XmlElementAttribute("safetyCount")]
        [System.ComponentModel.DescriptionAttribute("The count of a type of safety issue.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("safetyCount", DataType="safetyCount")]
        public safetyCount[] safetyCount {
            get {
                return this.safetyCountField;
            }
            set {
                this.safetyCountField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Safety related comment.</summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        [System.ComponentModel.DescriptionAttribute("Safety related comment.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="cs_datedComment")]
        public cs_datedComment[] comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productionOperationHSE {
        
        private short incidentCountField;
        
        private bool incidentCountFieldSpecified;
        
        private timeMeasure sinceLostTimeField;
        
        private timeMeasure sincePreventionExerciseField;
        
        private timeMeasure sinceDefinedSituationField;
        
        private short medicalTreatmentCountField;
        
        private bool medicalTreatmentCountFieldSpecified;
        
        private short alarmCountField;
        
        private bool alarmCountFieldSpecified;
        
        private short safetyIntroCountField;
        
        private bool safetyIntroCountFieldSpecified;
        
        private string safetyDescriptionField;
        
        private cs_productionOperationSafety[] safetyField;
        
        private cs_productionOperationWeather[] weatherField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>the number of incidents of accidents and injuries that were reported.</summary>
        [System.ComponentModel.DescriptionAttribute("the number of incidents of accidents and injuries that were reported.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("IncidentCount", DataType="nonNegativeCount")]
        public short IncidentCount {
            get {
                return this.incidentCountField;
            }
            set {
                this.incidentCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncidentCountSpecified {
            get {
                return this.incidentCountFieldSpecified;
            }
            set {
                this.incidentCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The amount of time since the most recent Lost Time Accident.</summary>
        [System.ComponentModel.DescriptionAttribute("The amount of time since the most recent Lost Time Accident.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sinceLostTime", DataType="timeMeasure")]
        public timeMeasure sinceLostTime {
            get {
                return this.sinceLostTimeField;
            }
            set {
                this.sinceLostTimeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The amount of time since the most recent accident prevention exercise.</summary>
        [System.ComponentModel.DescriptionAttribute("The amount of time since the most recent accident prevention exercise.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sincePreventionExercise", DataType="timeMeasure")]
        public timeMeasure sincePreventionExercise {
            get {
                return this.sincePreventionExerciseField;
            }
            set {
                this.sincePreventionExerciseField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The amount of time since the most recent defined hazard and accident situation (Norwegian DFU).</summary>
        [System.ComponentModel.DescriptionAttribute("The amount of time since the most recent defined hazard and accident situation (N" +
            "orwegian DFU).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sinceDefinedSituation", DataType="timeMeasure")]
        public timeMeasure sinceDefinedSituation {
            get {
                return this.sinceDefinedSituationField;
            }
            set {
                this.sinceDefinedSituationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The number of medical treatments that have occurred.</summary>
        [System.ComponentModel.DescriptionAttribute("The number of medical treatments that have occurred.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("medicalTreatmentCount", DataType="nonNegativeCount")]
        public short medicalTreatmentCount {
            get {
                return this.medicalTreatmentCountField;
            }
            set {
                this.medicalTreatmentCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool medicalTreatmentCountSpecified {
            get {
                return this.medicalTreatmentCountFieldSpecified;
            }
            set {
                this.medicalTreatmentCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The number of system alarms that have occurred.</summary>
        [System.ComponentModel.DescriptionAttribute("The number of system alarms that have occurred.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("alarmCount", DataType="nonNegativeCount")]
        public short alarmCount {
            get {
                return this.alarmCountField;
            }
            set {
                this.alarmCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool alarmCountSpecified {
            get {
                return this.alarmCountFieldSpecified;
            }
            set {
                this.alarmCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The number of personnel safety introductions that have occurred.</summary>
        [System.ComponentModel.DescriptionAttribute("The number of personnel safety introductions that have occurred.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("safetyIntroCount", DataType="nonNegativeCount")]
        public short safetyIntroCount {
            get {
                return this.safetyIntroCountField;
            }
            set {
                this.safetyIntroCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool safetyIntroCountSpecified {
            get {
                return this.safetyIntroCountFieldSpecified;
            }
            set {
                this.safetyIntroCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A textual description of safety considerations.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A textual description of safety considerations.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("safetyDescription", DataType="commentString")]
        public string safetyDescription {
            get {
                return this.safetyDescriptionField;
            }
            set {
                this.safetyDescriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Safety information at a specific installatino.</summary>
        [System.Xml.Serialization.XmlElementAttribute("safety")]
        [System.ComponentModel.DescriptionAttribute("Safety information at a specific installatino.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("safety", DataType="cs_productionOperationSafety")]
        public cs_productionOperationSafety[] safety {
            get {
                return this.safetyField;
            }
            set {
                this.safetyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information about the weather at a point in time.</summary>
        [System.Xml.Serialization.XmlElementAttribute("weather")]
        [System.ComponentModel.DescriptionAttribute("Information about the weather at a point in time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("weather", DataType="cs_productionOperationWeather")]
        public cs_productionOperationWeather[] weather {
            get {
                return this.weatherField;
            }
            set {
                this.weatherField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class crewCount {
        
        private CrewType typeField;
        
        private bool typeFieldSpecified;
        
        private short valueField;
        
        /// <remarks/>
        /// <summary>The type of crew for which a count is being defined.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute("The type of crew for which a count is being defined.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("type", DataType="CrewType")]
        public CrewType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public short Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum CrewType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("catering crew")]
        cateringcrew,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("contractor crew")]
        contractorcrew,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("day visitors")]
        dayvisitors,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling contract crew")]
        drillingcontractcrew,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("own crew")]
        owncrew,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("own other crew")]
        ownothercrew,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("other crew")]
        othercrew,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("personnel on board")]
        personnelonboard,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productionOperationInstallationReport {
        
        private facilityIdentifierStruct installationField;
        
        private short bedsAvailableField;
        
        private bool bedsAvailableFieldSpecified;
        
        private crewCount[] crewCountField;
        
        private timeMeasure workField;
        
        private timeMeasure workMonthToDateField;
        
        private timeMeasure workYearToDateField;
        
        private cs_productionOperationHSE[] operationalHSEField;
        
        private cs_productionOperationActivity productionActivityField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The installation represented by this report.</summary>
        [System.ComponentModel.DescriptionAttribute("The installation represented by this report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("installation", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct installation {
            get {
                return this.installationField;
            }
            set {
                this.installationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total count of beds available on the installation.</summary>
        [System.ComponentModel.DescriptionAttribute("Total count of beds available on the installation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bedsAvailable", DataType="nonNegativeCount")]
        public short bedsAvailable {
            get {
                return this.bedsAvailableField;
            }
            set {
                this.bedsAvailableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bedsAvailableSpecified {
            get {
                return this.bedsAvailableFieldSpecified;
            }
            set {
                this.bedsAvailableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The count of personnel on a type of crew. One of the types is all personnel on board.</summary>
        [System.Xml.Serialization.XmlElementAttribute("crewCount")]
        [System.ComponentModel.DescriptionAttribute("The count of personnel on a type of crew. One of the types is all personnel on bo" +
            "ard.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("crewCount", DataType="crewCount")]
        public crewCount[] crewCount {
            get {
                return this.crewCountField;
            }
            set {
                this.crewCountField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The total cumulative amount of time worked during the  reporting period.  Commonly specified in units of hours.  Note that a day unit translates to 24 hours worked.</summary>
        [System.ComponentModel.DescriptionAttribute("The total cumulative amount of time worked during the  reporting period.  Commonl" +
            "y specified in units of hours.  Note that a day unit translates to 24 hours work" +
            "ed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("work", DataType="timeMeasure")]
        public timeMeasure work {
            get {
                return this.workField;
            }
            set {
                this.workField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The total cumulative amount of time worked from the beginning of  the month to the end of reporting period.  Commonly specified in units of hours.  Note that a day unit translates to 24 hours worked.</summary>
        [System.ComponentModel.DescriptionAttribute("The total cumulative amount of time worked from the beginning of  the month to th" +
            "e end of reporting period.  Commonly specified in units of hours.  Note that a d" +
            "ay unit translates to 24 hours worked.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("workMonthToDate", DataType="timeMeasure")]
        public timeMeasure workMonthToDate {
            get {
                return this.workMonthToDateField;
            }
            set {
                this.workMonthToDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The total cumulative amount of time worked from the beginning of  the year to the end of reporting period.  Commonly specified in units of hours.  Note that a day unit translates to 24 hours worked.</summary>
        [System.ComponentModel.DescriptionAttribute("The total cumulative amount of time worked from the beginning of  the year to the" +
            " end of reporting period.  Commonly specified in units of hours.  Note that a da" +
            "y unit translates to 24 hours worked.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("workYearToDate", DataType="timeMeasure")]
        public timeMeasure workYearToDate {
            get {
                return this.workYearToDateField;
            }
            set {
                this.workYearToDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Health, Safety and Environmenal information.</summary>
        [System.Xml.Serialization.XmlElementAttribute("operationalHSE")]
        [System.ComponentModel.DescriptionAttribute("Health, Safety and Environmenal information.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("operationalHSE", DataType="cs_productionOperationHSE")]
        public cs_productionOperationHSE[] operationalHSE {
            get {
                return this.operationalHSEField;
            }
            set {
                this.operationalHSEField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Production activities.</summary>
        [System.ComponentModel.DescriptionAttribute("Production activities.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("productionActivity", DataType="cs_productionOperationActivity")]
        public cs_productionOperationActivity productionActivity {
            get {
                return this.productionActivityField;
            }
            set {
                this.productionActivityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("PRODML", "1.3.1.1")]
    public partial class obj_productionOperation {
        
        private nameStruct nameField;
        
        private facilityIdentifierStruct installationField;
        
        private facilityIdentifierStruct[] contextFacilityField;
        
        private string kindField;
        
        private ReportingPeriod periodKindField;
        
        private bool periodKindFieldSpecified;
        
        private System.DateTime[] itemsField;
        
        private ItemsChoiceType5[] itemsElementNameField;
        
        private cs_businessAssociate operatorField;
        
        private nameStruct titleField;
        
        private cs_geographicContext geographicContextField;
        
        private System.DateTime issueDateField;
        
        private bool issueDateFieldSpecified;
        
        private cs_businessAssociate issuedByField;
        
        private System.DateTime approvalDateField;
        
        private bool approvalDateFieldSpecified;
        
        private cs_businessAssociate approverField;
        
        private cs_productionOperationInstallationReport[] installationReportField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the Production Operation Report.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the Production Operation Report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameStruct")]
        public nameStruct name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the facility which is represented by this report.  The name can be qualified by a naming system.  This also defines the kind of facility.</summary>
        [System.ComponentModel.DescriptionAttribute("The name of the facility which is represented by this report.  The name can be qu" +
            "alified by a naming system.  This also defines the kind of facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("installation", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct installation {
            get {
                return this.installationField;
            }
            set {
                this.installationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name and type of a facility whose context is relevant to the represented installation.</summary>
        [System.Xml.Serialization.XmlElementAttribute("contextFacility")]
        [System.ComponentModel.DescriptionAttribute("The name and type of a facility whose context is relevant to the represented inst" +
            "allation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("contextFacility", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct[] contextFacility {
            get {
                return this.contextFacilityField;
            }
            set {
                this.contextFacilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of report.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The type of report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("kind", DataType="kindString")]
        public string kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of period that is being reported. This value must be consistent with the reporting start and end values.</summary>
        [System.ComponentModel.DescriptionAttribute("The type of period that is being reported. This value must be consistent with the" +
            " reporting start and end values.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("periodKind", DataType="ReportingPeriod")]
        public ReportingPeriod periodKind {
            get {
                return this.periodKindField;
            }
            set {
                this.periodKindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool periodKindSpecified {
            get {
                return this.periodKindFieldSpecified;
            }
            set {
                this.periodKindFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dTimEnd", typeof(System.DateTime))]
        [System.Xml.Serialization.XmlElementAttribute("dTimStart", typeof(System.DateTime))]
        [System.Xml.Serialization.XmlElementAttribute("dateEnd", typeof(System.DateTime), DataType="date")]
        [System.Xml.Serialization.XmlElementAttribute("dateStart", typeof(System.DateTime), DataType="date")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStart", DataType="timestamp")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimEnd", DataType="timestamp")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dateStart", DataType="date")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dateEnd", DataType="date")]
        public System.DateTime[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType5[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The operator of the facilities in the report.</summary>
        [System.ComponentModel.DescriptionAttribute("The operator of the facilities in the report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("operator", DataType="cs_businessAssociate")]
        public cs_businessAssociate @operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The tile of the report if different from the name of the report.</summary>
        [System.ComponentModel.DescriptionAttribute("The tile of the report if different from the name of the report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("title", DataType="nameStruct")]
        public nameStruct title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The geographic context of the report.</summary>
        [System.ComponentModel.DescriptionAttribute("The geographic context of the report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("geographicContext", DataType="cs_geographicContext")]
        public cs_geographicContext geographicContext {
            get {
                return this.geographicContextField;
            }
            set {
                this.geographicContextField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date that the report was issued.</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DescriptionAttribute("The date that the report was issued.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("issueDate", DataType="date")]
        public System.DateTime issueDate {
            get {
                return this.issueDateField;
            }
            set {
                this.issueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool issueDateSpecified {
            get {
                return this.issueDateFieldSpecified;
            }
            set {
                this.issueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The person or company that issued the report. This may contain the role of the person or company within the context of the report.</summary>
        [System.ComponentModel.DescriptionAttribute("The person or company that issued the report. This may contain the role of the pe" +
            "rson or company within the context of the report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("issuedBy", DataType="cs_businessAssociate")]
        public cs_businessAssociate issuedBy {
            get {
                return this.issuedByField;
            }
            set {
                this.issuedByField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date that the report was approved.</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DescriptionAttribute("The date that the report was approved.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("approvalDate", DataType="date")]
        public System.DateTime approvalDate {
            get {
                return this.approvalDateField;
            }
            set {
                this.approvalDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool approvalDateSpecified {
            get {
                return this.approvalDateFieldSpecified;
            }
            set {
                this.approvalDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The person or company that approved the report. This may contain the role of the person or company within the context of the report.</summary>
        [System.ComponentModel.DescriptionAttribute("The person or company that approved the report. This may contain the role of the " +
            "person or company within the context of the report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("approver", DataType="cs_businessAssociate")]
        public cs_businessAssociate approver {
            get {
                return this.approverField;
            }
            set {
                this.approverField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A report for each installation</summary>
        [System.Xml.Serialization.XmlElementAttribute("installationReport")]
        [System.ComponentModel.DescriptionAttribute("A report for each installation")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("installationReport", DataType="cs_productionOperationInstallationReport")]
        public cs_productionOperationInstallationReport[] installationReport {
            get {
                return this.installationReportField;
            }
            set {
                this.installationReportField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of an object. This should not be used for child nodes within an object. For an independent object, the value may be globally unique. For a dependent object, the value must be unique (for the same object type) within the context of the parent object. There should be no assumption as to the semantic content of this attribute. The purpose of this type is to facilitate modifying the optionality in derived schemas.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of an object. This should not be used for child nodes within an object. For an independent object, the value may be globally unique. For a dependent object, the value must be unique (for the same object type) within the context of the parent object. There should be no assumption as to the semantic content of this attribute. The purpose of this type is to facilitate modifying the optionality in derived schemas.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series", IncludeInSchema=false)]
    public enum ItemsChoiceType5 {
        
        /// <remarks/>
        dTimEnd,
        
        /// <remarks/>
        dTimStart,
        
        /// <remarks/>
        dateEnd,
        
        /// <remarks/>
        dateStart,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("PRODML", "1.3.1.1")]
    public partial class obj_productFlowModel {
        
        private string nameField;
        
        private facilityIdentifierStruct installationField;
        
        private facilityIdentifierStruct[] contextFacilityField;
        
        private Energistics.DataAccess.Timestamp dTimStartField;
        
        private bool dTimStartFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimEndField;
        
        private bool dTimEndFieldSpecified;
        
        private endpointQualifiedDateTime existenceTimeField;
        
        private endpointQualifiedDateTime dTimMinField;
        
        private endpointQualifiedDateTime dTimMaxField;
        
        private cs_productFlowExternalReference[] externalConnectField;
        
        private cs_productFlowNetwork[] networkField;
        
        private string commentField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The name of the Product Flow Model.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the Product Flow Model.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the facility which is represented by this model.  The name can be qualified by a naming system.  This also defines the kind of facility.</summary>
        [System.ComponentModel.DescriptionAttribute("The name of the facility which is represented by this model.  The name can be qua" +
            "lified by a naming system.  This also defines the kind of facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("installation", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct installation {
            get {
                return this.installationField;
            }
            set {
                this.installationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name and type of a facility whose context is relevant to the represented installation.</summary>
        [System.Xml.Serialization.XmlElementAttribute("contextFacility")]
        [System.ComponentModel.DescriptionAttribute("The name and type of a facility whose context is relevant to the represented inst" +
            "allation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("contextFacility", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct[] contextFacility {
            get {
                return this.contextFacilityField;
            }
            set {
                this.contextFacilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time of the start of validity for this model.</summary>
        [System.ComponentModel.DescriptionAttribute("The date and time of the start of validity for this model.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimStartSpecified {
            get {
                return this.dTimStartFieldSpecified;
            }
            set {
                this.dTimStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time of the termination of validity for this model.</summary>
        [System.ComponentModel.DescriptionAttribute("The date and time of the termination of validity for this model.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimEndSpecified {
            get {
                return this.dTimEndFieldSpecified;
            }
            set {
                this.dTimEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The time for which "currently existing" data is desired from the network. All connections (and related data) existing at this time (i.e. start and end bracket this value) will will be returned if requested. The existence time is a server query parameter. See the WITSML API Specification appendix on "Special Handling" of growing objects  for a description of the behavior related to this parameter.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The time for which ""currently existing"" data is desired from the network. All connections (and related data) existing at this time (i.e. start and end bracket this value) will will be returned if requested. The existence time is a server query parameter. See the WITSML API Specification appendix on ""Special Handling"" of growing objects  for a description of the behavior related to this parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("existenceTime", DataType="endpointQualifiedDateTime")]
        public endpointQualifiedDateTime existenceTime {
            get {
                return this.existenceTimeField;
            }
            set {
                this.existenceTimeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The minimum time index contained within the report. The minimum and maximum indexes are server query parameters and will be  populated with valid values in a "get" result. See the WITSML API Specification appendix on "Special Handling" of growing objects  for a description of the behavior related to this parameter.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The minimum time index contained within the report. The minimum and maximum indexes are server query parameters and will be  populated with valid values in a ""get"" result. See the WITSML API Specification appendix on ""Special Handling"" of growing objects  for a description of the behavior related to this parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimMin", DataType="endpointQualifiedDateTime")]
        public endpointQualifiedDateTime dTimMin {
            get {
                return this.dTimMinField;
            }
            set {
                this.dTimMinField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum time index contained within the report. The minimum and maximum indexes are server query parameters and will be  populated with valid values in a "get" result. See the WITSML API Specification appendix on "Special Handling" of growing objects  for a description of the behavior related to this parameter.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The maximum time index contained within the report. The minimum and maximum indexes are server query parameters and will be  populated with valid values in a ""get"" result. See the WITSML API Specification appendix on ""Special Handling"" of growing objects  for a description of the behavior related to this parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimMax", DataType="endpointQualifiedDateTime")]
        public endpointQualifiedDateTime dTimMax {
            get {
                return this.dTimMaxField;
            }
            set {
                this.dTimMaxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines the external port in another Product Flow Model to which  an external port in this model is connected. An external port should be connected to an external port with the opposite direction. The connected external port must be in another Product Flow Model. These connections should always be defined on a one-to-one basis. For example, if a facility may receive input from multiple other facilities then a separate input port should be defined for each of those facilities. This allows any question about mass balancing to be contained  within each individual model. The external port name must match the name of an external port on the network that represents this model.</summary>
        [System.Xml.Serialization.XmlElementAttribute("externalConnect")]
        [System.ComponentModel.DescriptionAttribute(@"Defines the external port in another Product Flow Model to which  an external port in this model is connected. An external port should be connected to an external port with the opposite direction. The connected external port must be in another Product Flow Model. These connections should always be defined on a one-to-one basis. For example, if a facility may receive input from multiple other facilities then a separate input port should be defined for each of those facilities. This allows any question about mass balancing to be contained  within each individual model. The external port name must match the name of an external port on the network that represents this model.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("externalConnect", DataType="cs_productFlowExternalReference")]
        public cs_productFlowExternalReference[] externalConnect {
            get {
                return this.externalConnectField;
            }
            set {
                this.externalConnectField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The description of one named network within this model. Each model is self contained but may reference other newtorks for defining internal detail. One of the networks must represent this model.</summary>
        [System.Xml.Serialization.XmlElementAttribute("network")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The description of one named network within this model. Each model is self contai" +
            "ned but may reference other newtorks for defining internal detail. One of the ne" +
            "tworks must represent this model.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("network", DataType="cs_productFlowNetwork")]
        public cs_productFlowNetwork[] network {
            get {
                return this.networkField;
            }
            set {
                this.networkField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A descriptive remark about the model.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A descriptive remark about the model.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of an object. This should not be used for child nodes within an object. For an independent object, the value may be globally unique. For a dependent object, the value must be unique (for the same object type) within the context of the parent object. There should be no assumption as to the semantic content of this attribute. The purpose of this type is to facilitate modifying the optionality in derived schemas.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of an object. This should not be used for child nodes within an object. For an independent object, the value may be globally unique. For a dependent object, the value must be unique (for the same object type) within the context of the parent object. There should be no assumption as to the semantic content of this attribute. The purpose of this type is to facilitate modifying the optionality in derived schemas.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productFlowExternalReference {
        
        private refNameString portField;
        
        private refNameString connectedPortField;
        
        private refNameString connectedModelField;
        
        private facilityIdentifierStruct connectedInstallationField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>A pointer to the external port in the network  that represents the current Model.  This is the port to which a different model is being connected.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A pointer to the external port in the network  that represents the current Model." +
            "  This is the port to which a different model is being connected.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("port", DataType="refNameString")]
        public refNameString port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the external port within the connected Model. This is the port on a different model to which the port on this model is connected.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A pointer to the external port within the connected Model. This is the port on a " +
            "different model to which the port on this model is connected.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("connectedPort", DataType="refNameString")]
        public refNameString connectedPort {
            get {
                return this.connectedPortField;
            }
            set {
                this.connectedPortField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the Product Flow Model that contains the connected port.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A pointer to the Product Flow Model that contains the connected port.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("connectedModel", DataType="refNameString")]
        public refNameString connectedModel {
            get {
                return this.connectedModelField;
            }
            set {
                this.connectedModelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the facility that is represented by the connected model.  The name can be qualified by a naming system.  This also defines the kind of facility.</summary>
        [System.ComponentModel.DescriptionAttribute("The name of the facility that is represented by the connected model.  The name ca" +
            "n be qualified by a naming system.  This also defines the kind of facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("connectedInstallation", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct connectedInstallation {
            get {
                return this.connectedInstallationField;
            }
            set {
                this.connectedInstallationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productFlowNetwork {
        
        private string nameField;
        
        private string planNameField;
        
        private refNameString parentNetworkField;
        
        private refNameString representedUnitField;
        
        private string commentField;
        
        private cs_productFlowlExternalPort[] portField;
        
        private cs_productFlowUnit[] unitField;
        
        private cs_productFlowChangeLog[] changeLogField;
        
        private cs_productFlowNetworkPlan[] planField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The name of the Product Flow Network. This must be unique within the context of the overall Product Flow Model.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the Product Flow Network. This must be unique within the context of t" +
            "he overall Product Flow Model.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of a network plan. This indicates a planned network. All child network components must all be planned and be part of the same plan. The parent network must either contain the plan (i.e., be an actual) or be part of the same plan. Not specified indicates an actual network.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The name of a network plan. This indicates a planned network. All child network components must all be planned and be part of the same plan. The parent network must either contain the plan (i.e., be an actual) or be part of the same plan. Not specified indicates an actual network.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("planName", DataType="nameString")]
        public string planName {
            get {
                return this.planNameField;
            }
            set {
                this.planNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the network containing the unit that this network represents. That is, the Unit must exist in a different Network. If a parent network is not specified then the network represents the model. A model should only be represented by one network. The model network represents the overall installation.  All other networks represent internal detail and should not be referenced from  outside the model. The external ports on the model network represent  the external ports to the overall Product Flow Model. A pointer to an external port on the Product Flow Model does not require the name of the model network because it is redundant to knowledge of the model name  (i.e., there is a one-to-one correspondence).</summary>
        [System.ComponentModel.DescriptionAttribute(@"A pointer to the network containing the unit that this network represents. That is, the Unit must exist in a different Network. If a parent network is not specified then the network represents the model. A model should only be represented by one network. The model network represents the overall installation.  All other networks represent internal detail and should not be referenced from  outside the model. The external ports on the model network represent  the external ports to the overall Product Flow Model. A pointer to an external port on the Product Flow Model does not require the name of the model network because it is redundant to knowledge of the model name  (i.e., there is a one-to-one correspondence).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("parentNetwork", DataType="refNameString")]
        public refNameString parentNetwork {
            get {
                return this.parentNetworkField;
            }
            set {
                this.parentNetworkField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>DEPRECATED. Use parentNetwork for all new work. A pointer to the Flow Unit that this network represents. The Unit must exist in a different Network. If a unit is not specified then the network represents the model. A model should only be represented by one network. The model network represents the overall installation.  All other networks represent internal detail and should not be referenced from  outside this model. The external ports on the model network represent  the external ports to the overall Product Flow Model. A pointer to an external port on the Product Flow Model does not require the name of the model network because it is redundant to knowledge of the model name  (i.e., there is a one-to-one correspondence). A unit model defines the internal behavior of a Flow Unit.</summary>
        [System.ComponentModel.DescriptionAttribute(@"DEPRECATED. Use parentNetwork for all new work. A pointer to the Flow Unit that this network represents. The Unit must exist in a different Network. If a unit is not specified then the network represents the model. A model should only be represented by one network. The model network represents the overall installation.  All other networks represent internal detail and should not be referenced from  outside this model. The external ports on the model network represent  the external ports to the overall Product Flow Model. A pointer to an external port on the Product Flow Model does not require the name of the model network because it is redundant to knowledge of the model name  (i.e., there is a one-to-one correspondence). A unit model defines the internal behavior of a Flow Unit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("representedUnit", DataType="refNameString")]
        public refNameString representedUnit {
            get {
                return this.representedUnitField;
            }
            set {
                this.representedUnitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A descriptive remark about the network.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A descriptive remark about the network.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An external port. This exposes an internal node for the purpose of allowing connections to the internal behavior of the network. Networks that represent a Flow Unit should always have external ports. If this network represents a Unit then the name of the external port must match the name of a port on the Unit (i.e., they are logically the same port).</summary>
        [System.Xml.Serialization.XmlElementAttribute("port")]
        [System.ComponentModel.DescriptionAttribute(@"An external port. This exposes an internal node for the purpose of allowing connections to the internal behavior of the network. Networks that represent a Flow Unit should always have external ports. If this network represents a Unit then the name of the external port must match the name of a port on the Unit (i.e., they are logically the same port).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("port", DataType="cs_productFlowlExternalPort")]
        public cs_productFlowlExternalPort[] port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A flow behavior for one unit. Within this context, a unit represents a usage of equipment for some purpose. The unit is generally identified by its function rather than the actual equipment used to realize the function. A unit might represent something complex like a field or separator or something simple  like a valve or pump.</summary>
        [System.Xml.Serialization.XmlElementAttribute("unit")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"A flow behavior for one unit. Within this context, a unit represents a usage of equipment for some purpose. The unit is generally identified by its function rather than the actual equipment used to realize the function. A unit might represent something complex like a field or separator or something simple  like a valve or pump.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("unit", DataType="cs_productFlowUnit")]
        public cs_productFlowUnit[] unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Documents that a change occurred at a particular time.</summary>
        [System.Xml.Serialization.XmlElementAttribute("changeLog")]
        [System.ComponentModel.DescriptionAttribute("Documents that a change occurred at a particular time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("changeLog", DataType="cs_productFlowChangeLog")]
        public cs_productFlowChangeLog[] changeLog {
            get {
                return this.changeLogField;
            }
            set {
                this.changeLogField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines the existance of a planned network which is a variant of this network beginning at a specified point in time. Any changes to the actual network after that time do not affect the plan.</summary>
        [System.Xml.Serialization.XmlElementAttribute("plan")]
        [System.ComponentModel.DescriptionAttribute("Defines the existance of a planned network which is a variant of this network beg" +
            "inning at a specified point in time. Any changes to the actual network after tha" +
            "t time do not affect the plan.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("plan", DataType="cs_productFlowNetworkPlan")]
        public cs_productFlowNetworkPlan[] plan {
            get {
                return this.planField;
            }
            set {
                this.planField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productFlowlExternalPort {
        
        private string nameField;
        
        private ProductFlowPortType directionField;
        
        private bool exposedField;
        
        private bool exposedFieldSpecified;
        
        private string connectedNodeField;
        
        private string commentField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The name of the external port within the context of  the current Product Flow Network.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the external port within the context of  the current Product Flow Net" +
            "work.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines whether this port is an inlet or outlet. Note that this is a nominal intended direction.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Defines whether this port is an inlet or outlet. Note that this is a nominal inte" +
            "nded direction.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("direction", DataType="ProductFlowPortType")]
        public ProductFlowPortType direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True ("true" or "1") indicates that the port is an exposed internal port and cannot be used in a connection external to the network. False ("false" or "0") or not given indicates a normal port.</summary>
        [System.ComponentModel.DescriptionAttribute("True (\"true\" or \"1\") indicates that the port is an exposed internal port and cann" +
            "ot be used in a connection external to the network. False (\"false\" or \"0\") or no" +
            "t given indicates a normal port.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("exposed", DataType="logicalBoolean")]
        public bool exposed {
            get {
                return this.exposedField;
            }
            set {
                this.exposedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool exposedSpecified {
            get {
                return this.exposedFieldSpecified;
            }
            set {
                this.exposedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines the internal node to which this external port is connected. All ports (whether internal or external) that are connected to a node with the  same name are connected to each other. Node names are unique to each network. The purpose of the external port is to provide input to or output from the internal network except when the port is an "exposed" port. The purpose of an exposed port is to allow the properties of the port to be seen external to the network. For an exposed port, the connection points to the associated port.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"Defines the internal node to which this external port is connected. All ports (whether internal or external) that are connected to a node with the  same name are connected to each other. Node names are unique to each network. The purpose of the external port is to provide input to or output from the internal network except when the port is an ""exposed"" port. The purpose of an exposed port is to allow the properties of the port to be seen external to the network. For an exposed port, the connection points to the associated port.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("connectedNode", DataType="nameString")]
        public string connectedNode {
            get {
                return this.connectedNodeField;
            }
            set {
                this.connectedNodeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A descriptive remark about the port.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A descriptive remark about the port.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productFlowUnit {
        
        private string nameField;
        
        private string planNameField;
        
        private refNameString internalNetworkField;
        
        private facilityIdentifierStruct facilityField;
        
        private facilityIdentifierStruct facilityParent1Field;
        
        private facilityIdentifierStruct facilityParent2Field;
        
        private nameStruct[] facilityAliasField;
        
        private facilityIdentifierStruct[] contextFacilityField;
        
        private cs_productFlowExpectedUnitProperty[] expectedPropertyField;
        
        private cs_relativeCoordinate relativeCoordinateField;
        
        private cs_productFlowPort[] portField;
        
        private string commentField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The name of the Product Flow Unit within the  context of the Product Flow Network.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the Product Flow Unit within the  context of the Product Flow Network" +
            ".")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of a network plan. This indicates a planned unit. All child network components must all be planned and be part of the same plan. The parent network must either contain the plan (i.e., be an actual) or be part of the same plan. Not specified indicates an actual unit.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The name of a network plan. This indicates a planned unit. All child network components must all be planned and be part of the same plan. The parent network must either contain the plan (i.e., be an actual) or be part of the same plan. Not specified indicates an actual unit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("planName", DataType="nameString")]
        public string planName {
            get {
                return this.planNameField;
            }
            set {
                this.planNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the network representing the internal behavior of this unit. The names of the external ports on the internal network must match the names of  the ports on this unit. That is they are logically the same ports.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the network representing the internal behavior of this unit. The nam" +
            "es of the external ports on the internal network must match the names of  the po" +
            "rts on this unit. That is they are logically the same ports.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("internalNetwork", DataType="refNameString")]
        public refNameString internalNetwork {
            get {
                return this.internalNetworkField;
            }
            set {
                this.internalNetworkField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the facility for which this Product Flow Unit describes fluid flow connecton behavior. The name can be qualified by a naming system.  This also defines the kind of facility.</summary>
        [System.ComponentModel.DescriptionAttribute("The name of the facility for which this Product Flow Unit describes fluid flow co" +
            "nnecton behavior. The name can be qualified by a naming system.  This also defin" +
            "es the kind of facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facility", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>For facilities whose name is unique within the context of another  facility, the name of the parent facility this named facility.  The name can be qualified by a naming system. This also defines the kind of facility.</summary>
        [System.ComponentModel.DescriptionAttribute("For facilities whose name is unique within the context of another  facility, the " +
            "name of the parent facility this named facility.  The name can be qualified by a" +
            " naming system. This also defines the kind of facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facilityParent1", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct facilityParent1 {
            get {
                return this.facilityParent1Field;
            }
            set {
                this.facilityParent1Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>For facilities whose name is unique within the context of another  facility, the name of the parent facility of facilityParent1.  The name can be qualified by a naming system. This also defines the kind of facility.</summary>
        [System.ComponentModel.DescriptionAttribute("For facilities whose name is unique within the context of another  facility, the " +
            "name of the parent facility of facilityParent1.  The name can be qualified by a " +
            "naming system. This also defines the kind of facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facilityParent2", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct facilityParent2 {
            get {
                return this.facilityParent2Field;
            }
            set {
                this.facilityParent2Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An alternatative name of a facility. This is generally unique within a naming system. The above contextually unique name (that is, within  the context of a parent) should also be listed as an alias.</summary>
        [System.Xml.Serialization.XmlElementAttribute("facilityAlias")]
        [System.ComponentModel.DescriptionAttribute("An alternatative name of a facility. This is generally unique within a naming sys" +
            "tem. The above contextually unique name (that is, within  the context of a paren" +
            "t) should also be listed as an alias.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facilityAlias", DataType="nameStruct")]
        public nameStruct[] facilityAlias {
            get {
                return this.facilityAliasField;
            }
            set {
                this.facilityAliasField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name and type of a facility whose context is relevant to the represented facility.</summary>
        [System.Xml.Serialization.XmlElementAttribute("contextFacility")]
        [System.ComponentModel.DescriptionAttribute("The name and type of a facility whose context is relevant to the represented faci" +
            "lity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("contextFacility", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct[] contextFacility {
            get {
                return this.contextFacilityField;
            }
            set {
                this.contextFacilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines an expected property of the facility represented by this unit.</summary>
        [System.Xml.Serialization.XmlElementAttribute("expectedProperty")]
        [System.ComponentModel.DescriptionAttribute("Defines an expected property of the facility represented by this unit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("expectedProperty", DataType="cs_productFlowExpectedUnitProperty")]
        public cs_productFlowExpectedUnitProperty[] expectedProperty {
            get {
                return this.expectedPropertyField;
            }
            set {
                this.expectedPropertyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines the relative coordinate of the unit on a display screen. This is not intended for detailed diagrams. Rather it is intended to allow different applications to present a user view which has a consistent layout.</summary>
        [System.ComponentModel.DescriptionAttribute("Defines the relative coordinate of the unit on a display screen. This is not inte" +
            "nded for detailed diagrams. Rather it is intended to allow different application" +
            "s to present a user view which has a consistent layout.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("relativeCoordinate", DataType="cs_relativeCoordinate")]
        public cs_relativeCoordinate relativeCoordinate {
            get {
                return this.relativeCoordinateField;
            }
            set {
                this.relativeCoordinateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An inlet or outlet port associated with this unit. If there is an internal network then the name of this port must match the name of  an external port for that network. Any properties (e.g., volume, pressure, temperature) that are assigned to this port  are inherently assigned to the corresponding external port on the internal network.  That is, the ports are logically the same port. Similar to a node, there is no pressure drop across a port.   Also similar to a node, conservation of mass exists across the port and the flow direction across the port can change over time if the relative pressures across connected units change.</summary>
        [System.Xml.Serialization.XmlElementAttribute("port")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"An inlet or outlet port associated with this unit. If there is an internal network then the name of this port must match the name of  an external port for that network. Any properties (e.g., volume, pressure, temperature) that are assigned to this port  are inherently assigned to the corresponding external port on the internal network.  That is, the ports are logically the same port. Similar to a node, there is no pressure drop across a port.   Also similar to a node, conservation of mass exists across the port and the flow direction across the port can change over time if the relative pressures across connected units change.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("port", DataType="cs_productFlowPort")]
        public cs_productFlowPort[] port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A descriptive remark associated with this unit.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A descriptive remark associated with this unit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productFlowExpectedUnitProperty {
        
        private FacilityParameter propertyField;
        
        private string childFacilityIdentifierField;
        
        private object[] itemsField;
        
        private nameStruct[] tagAliasField;
        
        private generalMeasureType deadbandField;
        
        private timeMeasure maximumFrequencyField;
        
        private string commentField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The expected kind of facility property. Each property is documented to have values of a particular type.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The expected kind of facility property. Each property is documented to have value" +
            "s of a particular type.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("property", DataType="FacilityParameter")]
        public FacilityParameter property {
            get {
                return this.propertyField;
            }
            set {
                this.propertyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The "PRODML Relative Identifier" of a child of the parent facility. The idenfifier path is presumed to begin with the identity of the parent facility. This identifies a sub-facility which is identified within the context of the parent facilityParent2/facilityParent1/name identification hierarchy. The property will only be expected to be defined for this child and not for the parent.</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        [System.ComponentModel.DescriptionAttribute(@"The ""PRODML Relative Identifier"" of a child of the parent facility. The idenfifier path is presumed to begin with the identity of the parent facility. This identifies a sub-facility which is identified within the context of the parent facilityParent2/facilityParent1/name identification hierarchy. The property will only be expected to be defined for this child and not for the parent.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("childFacilityIdentifier", DataType="prodmlRelativeIdentifier")]
        public string childFacilityIdentifier {
            get {
                return this.childFacilityIdentifierField;
            }
            set {
                this.childFacilityIdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("expectedFlowProduct", typeof(cs_productFlowQualifierExpected))]
        [System.Xml.Serialization.XmlElementAttribute("qualifier", typeof(FlowQualifier))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("expectedFlowProduct", DataType="cs_productFlowQualifierExpected")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("qualifier", DataType="FlowQualifier")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An alternative name for the sensor that will measure the property.</summary>
        [System.Xml.Serialization.XmlElementAttribute("tagAlias")]
        [System.ComponentModel.DescriptionAttribute("An alternative name for the sensor that will measure the property.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tagAlias", DataType="nameStruct")]
        public nameStruct[] tagAlias {
            get {
                return this.tagAliasField;
            }
            set {
                this.tagAliasField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Difference between two consecutive readings must exceeds deadband value to be accepted</summary>
        [System.ComponentModel.DescriptionAttribute("Difference between two consecutive readings must exceeds deadband value to be acc" +
            "epted")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("deadband", DataType="generalMeasureType")]
        public generalMeasureType deadband {
            get {
                return this.deadbandField;
            }
            set {
                this.deadbandField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum time difference from the last sent event before the next event is sent.</summary>
        [System.ComponentModel.DescriptionAttribute("The maximum time difference from the last sent event before the next event is sen" +
            "t.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("maximumFrequency", DataType="timeMeasure")]
        public timeMeasure maximumFrequency {
            get {
                return this.maximumFrequencyField;
            }
            set {
                this.maximumFrequencyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A descriptive remark associated with this property.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A descriptive remark associated with this property.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productFlowQualifierExpected {
        
        private ReportingFlow flowField;
        
        private ReportingProduct productField;
        
        private bool productFieldSpecified;
        
        private FlowQualifier[] qualifierField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The expected kind of flow.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The expected kind of flow.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flow", DataType="ReportingFlow")]
        public ReportingFlow flow {
            get {
                return this.flowField;
            }
            set {
                this.flowField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The expected kind of product within the flow.</summary>
        [System.ComponentModel.DescriptionAttribute("The expected kind of product within the flow.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("product", DataType="ReportingProduct")]
        public ReportingProduct product {
            get {
                return this.productField;
            }
            set {
                this.productField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool productSpecified {
            get {
                return this.productFieldSpecified;
            }
            set {
                this.productFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The expected kind of qualifier of the flow.</summary>
        [System.Xml.Serialization.XmlElementAttribute("qualifier")]
        [System.ComponentModel.DescriptionAttribute("The expected kind of qualifier of the flow.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("qualifier", DataType="FlowQualifier")]
        public FlowQualifier[] qualifier {
            get {
                return this.qualifierField;
            }
            set {
                this.qualifierField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_relativeCoordinate {
        
        private lengthPerLengthMeasure xField;
        
        private lengthPerLengthMeasure yField;
        
        private lengthPerLengthMeasure zField;
        
        /// <remarks/>
        /// <summary>Defines the relative from-left-to-right location on a display screen. The display origin (0,0) is the upper left-hand corner of the display as viewed by the user.</summary>
        [System.ComponentModel.DescriptionAttribute("Defines the relative from-left-to-right location on a display screen. The display" +
            " origin (0,0) is the upper left-hand corner of the display as viewed by the user" +
            ".")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("x", DataType="lengthPerLengthMeasure")]
        public lengthPerLengthMeasure x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines the relative from-top-to-bottom location on a display screen. The display origin (0,0) is the upper left-hand corner of the display as viewed by the user.</summary>
        [System.ComponentModel.DescriptionAttribute("Defines the relative from-top-to-bottom location on a display screen. The display" +
            " origin (0,0) is the upper left-hand corner of the display as viewed by the user" +
            ".")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("y", DataType="lengthPerLengthMeasure")]
        public lengthPerLengthMeasure y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines the relative from-front-to-back location in a 3D system. The unrotated display origin (0,0) is the upper left-hand corner of the display as viewed by the user. The "3D picture" may be rotated on the 2d display.</summary>
        [System.ComponentModel.DescriptionAttribute("Defines the relative from-front-to-back location in a 3D system. The unrotated di" +
            "splay origin (0,0) is the upper left-hand corner of the display as viewed by the" +
            " user. The \"3D picture\" may be rotated on the 2d display.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("z", DataType="lengthPerLengthMeasure")]
        public lengthPerLengthMeasure z {
            get {
                return this.zField;
            }
            set {
                this.zField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productFlowPort {
        
        private string nameField;
        
        private string planNameField;
        
        private ProductFlowPortType directionField;
        
        private facilityIdentifierStruct facilityField;
        
        private nameStruct[] facilityAliasField;
        
        private bool exposedField;
        
        private bool exposedFieldSpecified;
        
        private cs_connectedNode[] connectedNodeField;
        
        private cs_productFlowQualifierExpected[] expectedFlowProductField;
        
        private cs_productFlowExpectedPortProperty[] expectedFlowPropertyField;
        
        private string commentField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The name of the port within the context of the Product Flow Unit.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the port within the context of the Product Flow Unit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of a network plan. This indicates a planned port. All child network components must all be planned and be part of the same plan. The parent unit must be part of the same plan or be an actual. Not specified indicates an actual port.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of a network plan. This indicates a planned port. All child network comp" +
            "onents must all be planned and be part of the same plan. The parent unit must be" +
            " part of the same plan or be an actual. Not specified indicates an actual port.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("planName", DataType="nameString")]
        public string planName {
            get {
                return this.planNameField;
            }
            set {
                this.planNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines whether this port is an inlet or outlet. This is a nominal intended direction.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Defines whether this port is an inlet or outlet. This is a nominal intended direc" +
            "tion.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("direction", DataType="ProductFlowPortType")]
        public ProductFlowPortType direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the facility represented by this Product Flow Port The name can be qualified by a naming system. The facility name is assumed to be unique within the context of the facility  represented by the unit.  This also defines the kind of facility.</summary>
        [System.ComponentModel.DescriptionAttribute("The name of the facility represented by this Product Flow Port The name can be qu" +
            "alified by a naming system. The facility name is assumed to be unique within the" +
            " context of the facility  represented by the unit.  This also defines the kind o" +
            "f facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facility", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An alternatative name of a facility. This is generally unique within a naming system. The above contextually unique name  should also be listed as an alias.</summary>
        [System.Xml.Serialization.XmlElementAttribute("facilityAlias")]
        [System.ComponentModel.DescriptionAttribute("An alternatative name of a facility. This is generally unique within a naming sys" +
            "tem. The above contextually unique name  should also be listed as an alias.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facilityAlias", DataType="nameStruct")]
        public nameStruct[] facilityAlias {
            get {
                return this.facilityAliasField;
            }
            set {
                this.facilityAliasField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True ("true" or "1") indicates that the port is an exposed internal port and cannot be used in a connection external to the unit. False ("false" or "0") or not given indicates a normal port.</summary>
        [System.ComponentModel.DescriptionAttribute("True (\"true\" or \"1\") indicates that the port is an exposed internal port and cann" +
            "ot be used in a connection external to the unit. False (\"false\" or \"0\") or not g" +
            "iven indicates a normal port.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("exposed", DataType="logicalBoolean")]
        public bool exposed {
            get {
                return this.exposedField;
            }
            set {
                this.exposedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool exposedSpecified {
            get {
                return this.exposedFieldSpecified;
            }
            set {
                this.exposedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines the node to which this port is connected. A timestamp activates and deactivates the connection.  Only one connectedNode should be active at any one point in time. There are no semantics for the node except common connection. All ports that are connected to a node with the the same name are inherently connected to each other. The name of the node is only required to be unique within the context of the current Product Flow Network (that is, not the overall model). All ports must be connected to a node and whether or not any other port is connected to the same node depends on the requirements of the network.  Any node that is internally connected to only one port is presumably a candidate  to be connected to an external node. The behavior of ports connected at a common node is as follows:  a) There is no pressure drop across the node. All ports connected to the node have   the same pressure. That is, there is an assumption of steady state fluid flow.  b) Conservation of mass exists across the node. The mass into the node via all   connected ports equals the mass out of the node via all connected ports.  c) The flow direction of a port connected to the node may be transient. That is, flow   direction may change toward any port(s) if the relative internal pressure of  the Product Flow Units change and a new steady state is achieved.</summary>
        [System.Xml.Serialization.XmlElementAttribute("connectedNode")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"Defines the node to which this port is connected. A timestamp activates and deactivates the connection.  Only one connectedNode should be active at any one point in time. There are no semantics for the node except common connection. All ports that are connected to a node with the the same name are inherently connected to each other. The name of the node is only required to be unique within the context of the current Product Flow Network (that is, not the overall model). All ports must be connected to a node and whether or not any other port is connected to the same node depends on the requirements of the network.  Any node that is internally connected to only one port is presumably a candidate  to be connected to an external node. The behavior of ports connected at a common node is as follows:  a) There is no pressure drop across the node. All ports connected to the node have   the same pressure. That is, there is an assumption of steady state fluid flow.  b) Conservation of mass exists across the node. The mass into the node via all   connected ports equals the mass out of the node via all connected ports.  c) The flow direction of a port connected to the node may be transient. That is, flow   direction may change toward any port(s) if the relative internal pressure of  the Product Flow Units change and a new steady state is achieved.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("connectedNode", DataType="cs_connectedNode")]
        public cs_connectedNode[] connectedNode {
            get {
                return this.connectedNodeField;
            }
            set {
                this.connectedNodeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines the expected flow and product pairs to be  assigned to this port by a Product Volume report. A set of expected qualifiers can be defined for each pair.</summary>
        [System.Xml.Serialization.XmlElementAttribute("expectedFlowProduct")]
        [System.ComponentModel.DescriptionAttribute("Defines the expected flow and product pairs to be  assigned to this port by a Pro" +
            "duct Volume report. A set of expected qualifiers can be defined for each pair.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("expectedFlowProduct", DataType="cs_productFlowQualifierExpected")]
        public cs_productFlowQualifierExpected[] expectedFlowProduct {
            get {
                return this.expectedFlowProductField;
            }
            set {
                this.expectedFlowProductField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines the properties that are expected to be measured at this port. This can also specify the equipment tag(s) of the sensor that will read the value. Only one of each property kind should be active at any point in time.</summary>
        [System.Xml.Serialization.XmlElementAttribute("expectedFlowProperty")]
        [System.ComponentModel.DescriptionAttribute("Defines the properties that are expected to be measured at this port. This can al" +
            "so specify the equipment tag(s) of the sensor that will read the value. Only one" +
            " of each property kind should be active at any point in time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("expectedFlowProperty", DataType="cs_productFlowExpectedPortProperty")]
        public cs_productFlowExpectedPortProperty[] expectedFlowProperty {
            get {
                return this.expectedFlowPropertyField;
            }
            set {
                this.expectedFlowPropertyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A descriptive remark associated with this port.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A descriptive remark associated with this port.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_connectedNode {
        
        private string nodeField;
        
        private string planNameField;
        
        private Energistics.DataAccess.Timestamp dTimStartField;
        
        private bool dTimStartFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimEndField;
        
        private bool dTimEndFieldSpecified;
        
        private string commentField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Defines the node to which this port is connected. Only two ports should be actively connected to the same node at the same point in time. That is, a port should only be connected to one other port. There are no semantics for the node except common connection. All ports that are connected to a node with the the same name are inherently connected to each other. The name of the node is only required to be unique within the context of the current Product Flow Network (that is, not the overall model). All ports must be connected to a node and whether or not any other port is connected to the same node depends on the requirements of the network.  Any node that is internally connected to only one node is presumably a candidate  to be connected to an external node. The behavior of ports connected at a common node is as follows:  a) There is no pressure drop across the node. All ports connected to the node have   the same pressure. That is, there is an assumption of steady state fluid flow.  b) Conservation of mass exists across the node. The mass into the node via all   connected ports equals the mass out of the node via all connected ports.  c) The flow direction of a port connected to the node may be transient. That is, flow   direction may change toward any port if the relative internal pressure of  the Product Flow Units change and a new steady state is achieved.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"Defines the node to which this port is connected. Only two ports should be actively connected to the same node at the same point in time. That is, a port should only be connected to one other port. There are no semantics for the node except common connection. All ports that are connected to a node with the the same name are inherently connected to each other. The name of the node is only required to be unique within the context of the current Product Flow Network (that is, not the overall model). All ports must be connected to a node and whether or not any other port is connected to the same node depends on the requirements of the network.  Any node that is internally connected to only one node is presumably a candidate  to be connected to an external node. The behavior of ports connected at a common node is as follows:  a) There is no pressure drop across the node. All ports connected to the node have   the same pressure. That is, there is an assumption of steady state fluid flow.  b) Conservation of mass exists across the node. The mass into the node via all   connected ports equals the mass out of the node via all connected ports.  c) The flow direction of a port connected to the node may be transient. That is, flow   direction may change toward any port if the relative internal pressure of  the Product Flow Units change and a new steady state is achieved.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("node", DataType="nameString")]
        public string node {
            get {
                return this.nodeField;
            }
            set {
                this.nodeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of a network plan. This indicates a planned connection. The connected port must be part of the same plan or be an actual. Not specified indicates an actual connection.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of a network plan. This indicates a planned connection. The connected po" +
            "rt must be part of the same plan or be an actual. Not specified indicates an act" +
            "ual connection.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("planName", DataType="nameString")]
        public string planName {
            get {
                return this.planNameField;
            }
            set {
                this.planNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time that the connection was activated.</summary>
        [System.ComponentModel.DescriptionAttribute("The date and time that the connection was activated.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimStartSpecified {
            get {
                return this.dTimStartFieldSpecified;
            }
            set {
                this.dTimStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time that the connection was terminated.</summary>
        [System.ComponentModel.DescriptionAttribute("The date and time that the connection was terminated.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimEndSpecified {
            get {
                return this.dTimEndFieldSpecified;
            }
            set {
                this.dTimEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A descriptive remark associated with this connection, possibly including a reason for termination.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A descriptive remark associated with this connection, possibly including a reason" +
            " for termination.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productFlowExpectedPortProperty {
        
        private ReportingProperty propertyField;
        
        private Energistics.DataAccess.Timestamp dTimStartField;
        
        private bool dTimStartFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimEndField;
        
        private bool dTimEndFieldSpecified;
        
        private nameStruct[] tagAliasField;
        
        private generalMeasureType deadbandField;
        
        private timeMeasure maximumFrequencyField;
        
        private cs_productFlowQualifierExpected[] expectedFlowProductField;
        
        private string commentField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The expected kind of property.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The expected kind of property.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("property", DataType="ReportingProperty")]
        public ReportingProperty property {
            get {
                return this.propertyField;
            }
            set {
                this.propertyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time that the sensor was activated on the port.</summary>
        [System.ComponentModel.DescriptionAttribute("The date and time that the sensor was activated on the port.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimStartSpecified {
            get {
                return this.dTimStartFieldSpecified;
            }
            set {
                this.dTimStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time that the sensor was deactivated on the port.</summary>
        [System.ComponentModel.DescriptionAttribute("The date and time that the sensor was deactivated on the port.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimEndSpecified {
            get {
                return this.dTimEndFieldSpecified;
            }
            set {
                this.dTimEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An alternative name for the sensor that will measure the property.</summary>
        [System.Xml.Serialization.XmlElementAttribute("tagAlias")]
        [System.ComponentModel.DescriptionAttribute("An alternative name for the sensor that will measure the property.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tagAlias", DataType="nameStruct")]
        public nameStruct[] tagAlias {
            get {
                return this.tagAliasField;
            }
            set {
                this.tagAliasField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Difference between two consecutive readings must exceeds deadband value to be accepted</summary>
        [System.ComponentModel.DescriptionAttribute("Difference between two consecutive readings must exceeds deadband value to be acc" +
            "epted")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("deadband", DataType="generalMeasureType")]
        public generalMeasureType deadband {
            get {
                return this.deadbandField;
            }
            set {
                this.deadbandField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum time difference from the last sent event before the next event is sent.</summary>
        [System.ComponentModel.DescriptionAttribute("The maximum time difference from the last sent event before the next event is sen" +
            "t.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("maximumFrequency", DataType="timeMeasure")]
        public timeMeasure maximumFrequency {
            get {
                return this.maximumFrequencyField;
            }
            set {
                this.maximumFrequencyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines the expected flow and product pairs to be  assigned to this port by a Product Volume report. A set of expected qualifiers can be defined for each pair. The aggregate of expectations on all properties should be a subset of  the aggregate of expectations on the port.  If no expectations are defined on the port then the port aggregate will be defined by the properties.</summary>
        [System.Xml.Serialization.XmlElementAttribute("expectedFlowProduct")]
        [System.ComponentModel.DescriptionAttribute(@"Defines the expected flow and product pairs to be  assigned to this port by a Product Volume report. A set of expected qualifiers can be defined for each pair. The aggregate of expectations on all properties should be a subset of  the aggregate of expectations on the port.  If no expectations are defined on the port then the port aggregate will be defined by the properties.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("expectedFlowProduct", DataType="cs_productFlowQualifierExpected")]
        public cs_productFlowQualifierExpected[] expectedFlowProduct {
            get {
                return this.expectedFlowProductField;
            }
            set {
                this.expectedFlowProductField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A descriptive remark associated with this property.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A descriptive remark associated with this property.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ReportingProperty {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("alarm absolute pressure")]
        alarmabsolutepressure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("atmospheric pressure")]
        atmosphericpressure,
        
        /// <remarks/>
        density,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("density flow rate")]
        densityflowrate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("density standard")]
        densitystandard,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dewpoint temperature standard")]
        dewpointtemperaturestandard,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("differential pressure")]
        differentialpressure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("differential temperature")]
        differentialtemperature,
        
        /// <remarks/>
        efficiency,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("flow rate")]
        flowrate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("flow rate standard")]
        flowratestandard,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas liquid ratio")]
        gasliquidratio,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas oil ratio")]
        gasoilratio,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gross calorific value standard")]
        grosscalorificvaluestandard,
        
        /// <remarks/>
        mass,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mass concentration")]
        massconcentration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("molar amount")]
        molaramount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("molar fraction")]
        molarfraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("molecular weight")]
        molecularweight,
        
        /// <remarks/>
        pressure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("reid vapor pressure")]
        reidvaporpressure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("specific gravity")]
        specificgravity,
        
        /// <remarks/>
        temperature,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("true vapor pressure")]
        truevaporpressure,
        
        /// <remarks/>
        volume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volume concentration")]
        volumeconcentration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volume standard")]
        volumestandard,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wobbe index")]
        wobbeindex,
        
        /// <remarks/>
        work,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("standard volume")]
        standardvolume,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productFlowChangeLog {
        
        private string nameField;
        
        private Energistics.DataAccess.Timestamp dTimField;
        
        private string reasonField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>A name assigned to the change.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A name assigned to the change.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The timestamp associated with the change. All changes must use this timestamp.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The timestamp associated with the change. All changes must use this timestamp.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A textual reason for the change.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A textual reason for the change.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reason", DataType="commentString")]
        public string reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productFlowNetworkPlan {
        
        private string nameField;
        
        private Energistics.DataAccess.Timestamp dTimStartField;
        
        private string purposeField;
        
        private cs_productFlowChangeLog[] changeLogField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The name assigned to the plan.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name assigned to the plan.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time of the start of the plan. This point coincides with the end of the actual configuration. The configuration of the actual at this point in time represents the configuration of the plan at this starting point. All changes to this plan must be in the future from this point in time.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"The date and time of the start of the plan. This point coincides with the end of the actual configuration. The configuration of the actual at this point in time represents the configuration of the plan at this starting point. All changes to this plan must be in the future from this point in time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A textual description of the purpose of the plan.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A textual description of the purpose of the plan.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("purpose", DataType="commentString")]
        public string purpose {
            get {
                return this.purposeField;
            }
            set {
                this.purposeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Documents that a change occurred at a particular time.</summary>
        [System.Xml.Serialization.XmlElementAttribute("changeLog")]
        [System.ComponentModel.DescriptionAttribute("Documents that a change occurred at a particular time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("changeLog", DataType="cs_productFlowChangeLog")]
        public cs_productFlowChangeLog[] changeLog {
            get {
                return this.changeLogField;
            }
            set {
                this.changeLogField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("PRODML", "1.3.1.1")]
    public partial class obj_fluidSample {
        
        private string nameField;
        
        private string sampleBottleField;
        
        private FluidSampleKind sampleTypeField;
        
        private bool sampleTypeFieldSpecified;
        
        private facilityIdentifierStruct facilityField;
        
        private facilityIdentifierStruct facilityParent1Field;
        
        private facilityIdentifierStruct facilityParent2Field;
        
        private nameStruct[] facilityAliasField;
        
        private FluidSampleTestAcquisition testKindField;
        
        private bool testKindFieldSpecified;
        
        private measuredDepthCoord testMDField;
        
        private string testIdField;
        
        private string testRunField;
        
        private string testProviderField;
        
        private ReservoirFluidKind reservoirFluidTypeField;
        
        private bool reservoirFluidTypeFieldSpecified;
        
        private System.DateTime acquisitionDateField;
        
        private bool acquisitionDateFieldSpecified;
        
        private measuredDepthCoord acquisitionMDField;
        
        private pressureMeasure acquisitionPressureField;
        
        private thermodynamicTemperatureMeasure acquisitionTemperatureField;
        
        private standardVolumePerStandardVolumeMeasure acquisitionGORStdField;
        
        private string sampleDispositionField;
        
        private bool representativeField;
        
        private bool representativeFieldSpecified;
        
        private string commentField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The name of the Fluid Sample.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the Fluid Sample.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sampleBottle", DataType="nameString")]
        public string sampleBottle {
            get {
                return this.sampleBottleField;
            }
            set {
                this.sampleBottleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sampleType", DataType="FluidSampleKind")]
        public FluidSampleKind sampleType {
            get {
                return this.sampleTypeField;
            }
            set {
                this.sampleTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sampleTypeSpecified {
            get {
                return this.sampleTypeFieldSpecified;
            }
            set {
                this.sampleTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the facility from which the sample was acquired.  The name can be qualified by a naming system.  This also defines the kind of facility. Common facilities are wells, wellbores within a well, completions within a well.</summary>
        [System.ComponentModel.DescriptionAttribute("The name of the facility from which the sample was acquired.  The name can be qua" +
            "lified by a naming system.  This also defines the kind of facility. Common facil" +
            "ities are wells, wellbores within a well, completions within a well.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facility", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>For facilities whose name is unique within the context of another  facility, the name of the parent facility. For example, if name represents a completion, then facilityParent1 would represent the name of the well within which name was unique. The name can be qualified by a naming system. This also defines the kind of facility.</summary>
        [System.ComponentModel.DescriptionAttribute(@"For facilities whose name is unique within the context of another  facility, the name of the parent facility. For example, if name represents a completion, then facilityParent1 would represent the name of the well within which name was unique. The name can be qualified by a naming system. This also defines the kind of facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facilityParent1", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct facilityParent1 {
            get {
                return this.facilityParent1Field;
            }
            set {
                this.facilityParent1Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>For facilities whose name is unique within the context of another  facility, the name of the parent facility of parent1.  The name can be qualified by a naming system. This also defines the kind of facility.</summary>
        [System.ComponentModel.DescriptionAttribute("For facilities whose name is unique within the context of another  facility, the " +
            "name of the parent facility of parent1.  The name can be qualified by a naming s" +
            "ystem. This also defines the kind of facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facilityParent2", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct facilityParent2 {
            get {
                return this.facilityParent2Field;
            }
            set {
                this.facilityParent2Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An alternatative name of a facility. This is generally unique within a naming system. The above contextually unique name (that is, within  the context of a parent) should also be listed as an alias.</summary>
        [System.Xml.Serialization.XmlElementAttribute("facilityAlias")]
        [System.ComponentModel.DescriptionAttribute("An alternatative name of a facility. This is generally unique within a naming sys" +
            "tem. The above contextually unique name (that is, within  the context of a paren" +
            "t) should also be listed as an alias.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facilityAlias", DataType="nameStruct")]
        public nameStruct[] facilityAlias {
            get {
                return this.facilityAliasField;
            }
            set {
                this.facilityAliasField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The kind of test which acquired the sample.</summary>
        [System.ComponentModel.DescriptionAttribute("The kind of test which acquired the sample.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testKind", DataType="FluidSampleTestAcquisition")]
        public FluidSampleTestAcquisition testKind {
            get {
                return this.testKindField;
            }
            set {
                this.testKindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool testKindSpecified {
            get {
                return this.testKindFieldSpecified;
            }
            set {
                this.testKindFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth of the test in a wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth of the test in a wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testMD", DataType="measuredDepthCoord")]
        public measuredDepthCoord testMD {
            get {
                return this.testMDField;
            }
            set {
                this.testMDField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The test identifier.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The test identifier.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testId", DataType="kindString")]
        public string testId {
            get {
                return this.testIdField;
            }
            set {
                this.testIdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The test run number (e.g., for an RFT)</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The test run number (e.g., for an RFT)")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testRun", DataType="kindString")]
        public string testRun {
            get {
                return this.testRunField;
            }
            set {
                this.testRunField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the company which ran the test.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the company which ran the test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testProvider", DataType="nameString")]
        public string testProvider {
            get {
                return this.testProviderField;
            }
            set {
                this.testProviderField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reservoirFluidType", DataType="ReservoirFluidKind")]
        public ReservoirFluidKind reservoirFluidType {
            get {
                return this.reservoirFluidTypeField;
            }
            set {
                this.reservoirFluidTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reservoirFluidTypeSpecified {
            get {
                return this.reservoirFluidTypeFieldSpecified;
            }
            set {
                this.reservoirFluidTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("acquisitionDate", DataType="date")]
        public System.DateTime acquisitionDate {
            get {
                return this.acquisitionDateField;
            }
            set {
                this.acquisitionDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acquisitionDateSpecified {
            get {
                return this.acquisitionDateFieldSpecified;
            }
            set {
                this.acquisitionDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("acquisitionMD", DataType="measuredDepthCoord")]
        public measuredDepthCoord acquisitionMD {
            get {
                return this.acquisitionMDField;
            }
            set {
                this.acquisitionMDField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("acquisitionPressure", DataType="pressureMeasure")]
        public pressureMeasure acquisitionPressure {
            get {
                return this.acquisitionPressureField;
            }
            set {
                this.acquisitionPressureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("acquisitionTemperature", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure acquisitionTemperature {
            get {
                return this.acquisitionTemperatureField;
            }
            set {
                this.acquisitionTemperatureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("acquisitionGORStd", DataType="standardVolumePerStandardVolumeMeasure")]
        public standardVolumePerStandardVolumeMeasure acquisitionGORStd {
            get {
                return this.acquisitionGORStdField;
            }
            set {
                this.acquisitionGORStdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sampleDisposition", DataType="descriptionString")]
        public string sampleDisposition {
            get {
                return this.sampleDispositionField;
            }
            set {
                this.sampleDispositionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("representative", DataType="logicalBoolean")]
        public bool representative {
            get {
                return this.representativeField;
            }
            set {
                this.representativeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool representativeSpecified {
            get {
                return this.representativeFieldSpecified;
            }
            set {
                this.representativeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum FluidSampleKind {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bottom hole")]
        bottomhole,
        
        /// <remarks/>
        wellhead,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drill stem test")]
        drillstemtest,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation tester")]
        formationtester,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("RFT or MDT")]
        RFTorMDT,
        
        /// <remarks/>
        recombined,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator gas")]
        separatorgas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator oil")]
        separatoroil,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator water")]
        separatorwater,
        
        /// <remarks/>
        synthetic,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum FluidSampleTestAcquisition {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drill stem test")]
        drillstemtest,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("repeat formation tester")]
        repeatformationtester,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ReservoirFluidKind {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("black oil")]
        blackoil,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("volatile oil")]
        volatileoil,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("critical or near critical")]
        criticalornearcritical,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wet gas or condensate")]
        wetgasorcondensate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dry gas")]
        drygas,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fluidResultContaminant {
        
        private FluidContaminant contaminantKindField;
        
        private massConcentrationMeasurePercent weightPercentField;
        
        private volumePerVolumeMeasurePercent volumePercentField;
        
        private string descriptionField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("contaminantKind", DataType="FluidContaminant")]
        public FluidContaminant contaminantKind {
            get {
                return this.contaminantKindField;
            }
            set {
                this.contaminantKindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("weightPercent", DataType="massConcentrationMeasurePercent")]
        public massConcentrationMeasurePercent weightPercent {
            get {
                return this.weightPercentField;
            }
            set {
                this.weightPercentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volumePercent", DataType="volumePerVolumeMeasurePercent")]
        public volumePerVolumeMeasurePercent volumePercent {
            get {
                return this.volumePercentField;
            }
            set {
                this.volumePercentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="descriptionString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum FluidContaminant {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling mud")]
        drillingmud,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("completion fluid")]
        completionfluid,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("extraneous oil")]
        extraneousoil,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("extraneous gas")]
        extraneousgas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("extraneous water")]
        extraneouswater,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation water")]
        formationwater,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cement fluids")]
        cementfluids,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("treatment chemicals")]
        treatmentchemicals,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fluidResultSeparatorTestStep {
        
        private short stepNumberField;
        
        private bool stepNumberFieldSpecified;
        
        private thermodynamicTemperatureMeasure stepTemperatureField;
        
        private pressureMeasure stepPressureField;
        
        private pressureMeasure itemField;
        
        private ItemChoiceType7 itemElementNameField;
        
        private object item1Field;
        
        private densityMeasure oilMassDensityField;
        
        private volumePerStandardVolumeMeasure oilFormationVolumeFactorStdField;
        
        private dynamicViscosityMeasure oilViscosityField;
        
        private abstractMeasure[] itemsField;
        
        private standardVolumePerStandardVolumeMeasure correctedStageSeparatorGORStdField;
        
        private standardVolumePerStandardVolumeMeasure cumulativeStockTankGORStdField;
        
        private standardVolumePerStandardVolumeMeasure solutionGORStdField;
        
        private double gasMolecularWeightField;
        
        private bool gasMolecularWeightFieldSpecified;
        
        private double gasGravityField;
        
        private bool gasGravityFieldSpecified;
        
        private densityMeasure gasMassDensityField;
        
        private double gasZFactorField;
        
        private bool gasZFactorFieldSpecified;
        
        private dynamicViscosityMeasure gasViscosityField;
        
        private densityMeasure residualAPIGravityField;
        
        private string commentField;
        
        private object[] items1Field;
        
        private Items1ChoiceType1[] items1ElementNameField;
        
        private cs_fluidResultPhaseComposition[] vaporCompositionField;
        
        private cs_fluidResultPhaseComposition[] liquidCompositionField;
        
        private cs_fluidResultCompositeComposition[] compositeCompositionField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The stepNumber represents a row in the table.</summary>
        [System.ComponentModel.DescriptionAttribute("The stepNumber represents a row in the table.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stepNumber", DataType="positiveCount")]
        public short stepNumber {
            get {
                return this.stepNumberField;
            }
            set {
                this.stepNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stepNumberSpecified {
            get {
                return this.stepNumberFieldSpecified;
            }
            set {
                this.stepNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stepTemperature", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure stepTemperature {
            get {
                return this.stepTemperatureField;
            }
            set {
                this.stepTemperatureField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stepPressure", DataType="pressureMeasure")]
        public pressureMeasure stepPressure {
            get {
                return this.stepPressureField;
            }
            set {
                this.stepPressureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bubblePointPressure", typeof(pressureMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("retrogradeDewPointPressure", typeof(pressureMeasure))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bubblePointPressure", DataType="pressureMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("retrogradeDewPointPressure", DataType="pressureMeasure")]
        public pressureMeasure Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType7 ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("oilAPIGravity", typeof(densityMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("oilSpecificGravity", typeof(double))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilAPIGravity", DataType="densityMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilSpecificGravity", DataType="unitlessQuantity")]
        public object Item1 {
            get {
                return this.item1Field;
            }
            set {
                this.item1Field = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilMassDensity", DataType="densityMeasure")]
        public densityMeasure oilMassDensity {
            get {
                return this.oilMassDensityField;
            }
            set {
                this.oilMassDensityField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilFormationVolumeFactorStd", DataType="volumePerStandardVolumeMeasure")]
        public volumePerStandardVolumeMeasure oilFormationVolumeFactorStd {
            get {
                return this.oilFormationVolumeFactorStdField;
            }
            set {
                this.oilFormationVolumeFactorStdField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilViscosity", DataType="dynamicViscosityMeasure")]
        public dynamicViscosityMeasure oilViscosity {
            get {
                return this.oilViscosityField;
            }
            set {
                this.oilViscosityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("gasVolume", typeof(standardVolumeMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("oilShrinkageFactor", typeof(volumePerVolumeMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("oilVolume", typeof(volumeMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("stageSeparatorGORStd", typeof(standardVolumePerVolumeMeasure))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilVolume", DataType="volumeMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasVolume", DataType="standardVolumeMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilShrinkageFactor", DataType="volumePerVolumeMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stageSeparatorGORStd", DataType="standardVolumePerVolumeMeasure")]
        public abstractMeasure[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("correctedStageSeparatorGORStd", DataType="standardVolumePerStandardVolumeMeasure")]
        public standardVolumePerStandardVolumeMeasure correctedStageSeparatorGORStd {
            get {
                return this.correctedStageSeparatorGORStdField;
            }
            set {
                this.correctedStageSeparatorGORStdField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cumulativeStockTankGORStd", DataType="standardVolumePerStandardVolumeMeasure")]
        public standardVolumePerStandardVolumeMeasure cumulativeStockTankGORStd {
            get {
                return this.cumulativeStockTankGORStdField;
            }
            set {
                this.cumulativeStockTankGORStdField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("solutionGORStd", DataType="standardVolumePerStandardVolumeMeasure")]
        public standardVolumePerStandardVolumeMeasure solutionGORStd {
            get {
                return this.solutionGORStdField;
            }
            set {
                this.solutionGORStdField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasMolecularWeight", DataType="unitlessQuantity")]
        public double gasMolecularWeight {
            get {
                return this.gasMolecularWeightField;
            }
            set {
                this.gasMolecularWeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gasMolecularWeightSpecified {
            get {
                return this.gasMolecularWeightFieldSpecified;
            }
            set {
                this.gasMolecularWeightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasGravity", DataType="unitlessQuantity")]
        public double gasGravity {
            get {
                return this.gasGravityField;
            }
            set {
                this.gasGravityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gasGravitySpecified {
            get {
                return this.gasGravityFieldSpecified;
            }
            set {
                this.gasGravityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasMassDensity", DataType="densityMeasure")]
        public densityMeasure gasMassDensity {
            get {
                return this.gasMassDensityField;
            }
            set {
                this.gasMassDensityField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasZFactor", DataType="unitlessQuantity")]
        public double gasZFactor {
            get {
                return this.gasZFactorField;
            }
            set {
                this.gasZFactorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gasZFactorSpecified {
            get {
                return this.gasZFactorFieldSpecified;
            }
            set {
                this.gasZFactorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasViscosity", DataType="dynamicViscosityMeasure")]
        public dynamicViscosityMeasure gasViscosity {
            get {
                return this.gasViscosityField;
            }
            set {
                this.gasViscosityField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("residualAPIGravity", DataType="densityMeasure")]
        public densityMeasure residualAPIGravity {
            get {
                return this.residualAPIGravityField;
            }
            set {
                this.residualAPIGravityField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("reservoir", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("saturated", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("stockTank", typeof(cs_fluidResultStockTank))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stockTank", DataType="cs_fluidResultStockTank")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reservoir", DataType="logicalBoolean")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("saturated", DataType="logicalBoolean")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType1[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("vaporComposition")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("vaporComposition", DataType="cs_fluidResultPhaseComposition")]
        public cs_fluidResultPhaseComposition[] vaporComposition {
            get {
                return this.vaporCompositionField;
            }
            set {
                this.vaporCompositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("liquidComposition")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("liquidComposition", DataType="cs_fluidResultPhaseComposition")]
        public cs_fluidResultPhaseComposition[] liquidComposition {
            get {
                return this.liquidCompositionField;
            }
            set {
                this.liquidCompositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("compositeComposition")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("compositeComposition", DataType="cs_fluidResultCompositeComposition")]
        public cs_fluidResultCompositeComposition[] compositeComposition {
            get {
                return this.compositeCompositionField;
            }
            set {
                this.compositeCompositionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series", IncludeInSchema=false)]
    public enum ItemChoiceType7 {
        
        /// <remarks/>
        bubblePointPressure,
        
        /// <remarks/>
        retrogradeDewPointPressure,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fluidResultStockTank {
        
        private thermodynamicTemperatureMeasure temperatureField;
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("temperature", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure temperature {
            get {
                return this.temperatureField;
            }
            set {
                this.temperatureField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series", IncludeInSchema=false)]
    public enum Items1ChoiceType1 {
        
        /// <remarks/>
        reservoir,
        
        /// <remarks/>
        saturated,
        
        /// <remarks/>
        stockTank,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fluidResultPhaseComposition {
        
        private string componentNameField;
        
        private massConcentrationMeasurePercent weightPercentField;
        
        private molarFractionMeasurePercent molePercentField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("componentName", DataType="kindString")]
        public string componentName {
            get {
                return this.componentNameField;
            }
            set {
                this.componentNameField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("weightPercent", DataType="massConcentrationMeasurePercent")]
        public massConcentrationMeasurePercent weightPercent {
            get {
                return this.weightPercentField;
            }
            set {
                this.weightPercentField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("molePercent", DataType="molarFractionMeasurePercent")]
        public molarFractionMeasurePercent molePercent {
            get {
                return this.molePercentField;
            }
            set {
                this.molePercentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fluidResultCompositeComposition {
        
        private string componentNameField;
        
        private massConcentrationMeasurePercent weightPercentField;
        
        private molarFractionMeasurePercent molePercentField;
        
        private double kValueField;
        
        private bool kValueFieldSpecified;
        
        private string uidField;
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("componentName", DataType="kindString")]
        public string componentName {
            get {
                return this.componentNameField;
            }
            set {
                this.componentNameField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("weightPercent", DataType="massConcentrationMeasurePercent")]
        public massConcentrationMeasurePercent weightPercent {
            get {
                return this.weightPercentField;
            }
            set {
                this.weightPercentField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("molePercent", DataType="molarFractionMeasurePercent")]
        public molarFractionMeasurePercent molePercent {
            get {
                return this.molePercentField;
            }
            set {
                this.molePercentField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("kValue", DataType="unitlessQuantity")]
        public double kValue {
            get {
                return this.kValueField;
            }
            set {
                this.kValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kValueSpecified {
            get {
                return this.kValueFieldSpecified;
            }
            set {
                this.kValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fluidResultSeparatorTest {
        
        private short testNumberField;
        
        private bool testNumberFieldSpecified;
        
        private cs_fluidResultVolumeReference shrinkageReferenceField;
        
        private cs_fluidResultSeparatorTestStep[] separatorTestStepField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testNumber", DataType="positiveCount")]
        public short testNumber {
            get {
                return this.testNumberField;
            }
            set {
                this.testNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool testNumberSpecified {
            get {
                return this.testNumberFieldSpecified;
            }
            set {
                this.testNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("shrinkageReference", DataType="cs_fluidResultVolumeReference")]
        public cs_fluidResultVolumeReference shrinkageReference {
            get {
                return this.shrinkageReferenceField;
            }
            set {
                this.shrinkageReferenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("separatorTestStep")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("separatorTestStep", DataType="cs_fluidResultSeparatorTestStep")]
        public cs_fluidResultSeparatorTestStep[] separatorTestStep {
            get {
                return this.separatorTestStepField;
            }
            set {
                this.separatorTestStepField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fluidResultVolumeReference {
        
        private VolumeReferenceKind kindField;
        
        private volumeMeasure referenceVolumeField;
        
        private string commentField;
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("kind", DataType="VolumeReferenceKind")]
        public VolumeReferenceKind kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("referenceVolume", DataType="volumeMeasure")]
        public volumeMeasure referenceVolume {
            get {
                return this.referenceVolumeField;
            }
            set {
                this.referenceVolumeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum VolumeReferenceKind {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("initial reservoir")]
        initialreservoir,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("saturation-measured")]
        saturationmeasured,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("saturation-calculated")]
        saturationcalculated,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stock tank")]
        stocktank,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("current separator stage")]
        currentseparatorstage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 1")]
        separatorstage1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 2")]
        separatorstage2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 3")]
        separatorstage3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 4")]
        separatorstage4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 5")]
        separatorstage5,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 6")]
        separatorstage6,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 7")]
        separatorstage7,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 8")]
        separatorstage8,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 9")]
        separatorstage9,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 10")]
        separatorstage10,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 11")]
        separatorstage11,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 12")]
        separatorstage12,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 13")]
        separatorstage13,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 14")]
        separatorstage14,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 15")]
        separatorstage15,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 16")]
        separatorstage16,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 17")]
        separatorstage17,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 18")]
        separatorstage18,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 19")]
        separatorstage19,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 20")]
        separatorstage20,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 21")]
        separatorstage21,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 22")]
        separatorstage22,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 23")]
        separatorstage23,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 24")]
        separatorstage24,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 25")]
        separatorstage25,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 26")]
        separatorstage26,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 27")]
        separatorstage27,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 28")]
        separatorstage28,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 29")]
        separatorstage29,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("separator stage 30")]
        separatorstage30,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fluidResultTransportTestStep {
        
        private short stepNumberField;
        
        private bool stepNumberFieldSpecified;
        
        private thermodynamicTemperatureMeasure stepTemperatureField;
        
        private pressureMeasure stepPressureField;
        
        private pressureMeasure itemField;
        
        private ItemChoiceType6 itemElementNameField;
        
        private pressureMeasure dewPointPressureField;
        
        private thermodynamicTemperatureMeasure cloudPointField;
        
        private thermodynamicTemperatureMeasure pourPointField;
        
        private double oilMolecularWeightField;
        
        private bool oilMolecularWeightFieldSpecified;
        
        private object item1Field;
        
        private densityMeasure oilMassDensityField;
        
        private compressibilityMeasure oilCompressibilityField;
        
        private dynamicViscosityMeasure oilViscosityField;
        
        private thermalConductivityMeasure oilThermalConductivityField;
        
        private double gasMolecularWeightField;
        
        private bool gasMolecularWeightFieldSpecified;
        
        private double gasGravityField;
        
        private bool gasGravityFieldSpecified;
        
        private densityMeasure gasMassDensityField;
        
        private double gasZFactorField;
        
        private bool gasZFactorFieldSpecified;
        
        private compressibilityMeasure gasCompressibilityField;
        
        private dynamicViscosityMeasure gasViscosityField;
        
        private thermalConductivityMeasure gasThermalConductivityField;
        
        private modulusOfCompressionMeasure gasHeatingValueField;
        
        private string commentField;
        
        private object[] itemsField;
        
        private ItemsChoiceType4[] itemsElementNameField;
        
        private cs_fluidResultPhaseComposition[] vaporCompositionField;
        
        private cs_fluidResultPhaseComposition[] liquidCompositionField;
        
        private cs_fluidResultCompositeComposition[] compositeCompositionField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The stepNumber represents a row in the table.</summary>
        [System.ComponentModel.DescriptionAttribute("The stepNumber represents a row in the table.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stepNumber", DataType="positiveCount")]
        public short stepNumber {
            get {
                return this.stepNumberField;
            }
            set {
                this.stepNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stepNumberSpecified {
            get {
                return this.stepNumberFieldSpecified;
            }
            set {
                this.stepNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stepTemperature", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure stepTemperature {
            get {
                return this.stepTemperatureField;
            }
            set {
                this.stepTemperatureField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stepPressure", DataType="pressureMeasure")]
        public pressureMeasure stepPressure {
            get {
                return this.stepPressureField;
            }
            set {
                this.stepPressureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bubblePointPressure", typeof(pressureMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("retrogradeDewPointPressure", typeof(pressureMeasure))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bubblePointPressure", DataType="pressureMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("retrogradeDewPointPressure", DataType="pressureMeasure")]
        public pressureMeasure Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType6 ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dewPointPressure", DataType="pressureMeasure")]
        public pressureMeasure dewPointPressure {
            get {
                return this.dewPointPressureField;
            }
            set {
                this.dewPointPressureField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cloudPoint", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure cloudPoint {
            get {
                return this.cloudPointField;
            }
            set {
                this.cloudPointField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pourPoint", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure pourPoint {
            get {
                return this.pourPointField;
            }
            set {
                this.pourPointField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilMolecularWeight", DataType="unitlessQuantity")]
        public double oilMolecularWeight {
            get {
                return this.oilMolecularWeightField;
            }
            set {
                this.oilMolecularWeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oilMolecularWeightSpecified {
            get {
                return this.oilMolecularWeightFieldSpecified;
            }
            set {
                this.oilMolecularWeightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("oilAPIGravity", typeof(densityMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("oilSpecificGravity", typeof(double))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilAPIGravity", DataType="densityMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilSpecificGravity", DataType="unitlessQuantity")]
        public object Item1 {
            get {
                return this.item1Field;
            }
            set {
                this.item1Field = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilMassDensity", DataType="densityMeasure")]
        public densityMeasure oilMassDensity {
            get {
                return this.oilMassDensityField;
            }
            set {
                this.oilMassDensityField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilCompressibility", DataType="compressibilityMeasure")]
        public compressibilityMeasure oilCompressibility {
            get {
                return this.oilCompressibilityField;
            }
            set {
                this.oilCompressibilityField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilViscosity", DataType="dynamicViscosityMeasure")]
        public dynamicViscosityMeasure oilViscosity {
            get {
                return this.oilViscosityField;
            }
            set {
                this.oilViscosityField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilThermalConductivity", DataType="thermalConductivityMeasure")]
        public thermalConductivityMeasure oilThermalConductivity {
            get {
                return this.oilThermalConductivityField;
            }
            set {
                this.oilThermalConductivityField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasMolecularWeight", DataType="unitlessQuantity")]
        public double gasMolecularWeight {
            get {
                return this.gasMolecularWeightField;
            }
            set {
                this.gasMolecularWeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gasMolecularWeightSpecified {
            get {
                return this.gasMolecularWeightFieldSpecified;
            }
            set {
                this.gasMolecularWeightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasGravity", DataType="unitlessQuantity")]
        public double gasGravity {
            get {
                return this.gasGravityField;
            }
            set {
                this.gasGravityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gasGravitySpecified {
            get {
                return this.gasGravityFieldSpecified;
            }
            set {
                this.gasGravityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasMassDensity", DataType="densityMeasure")]
        public densityMeasure gasMassDensity {
            get {
                return this.gasMassDensityField;
            }
            set {
                this.gasMassDensityField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasZFactor", DataType="unitlessQuantity")]
        public double gasZFactor {
            get {
                return this.gasZFactorField;
            }
            set {
                this.gasZFactorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gasZFactorSpecified {
            get {
                return this.gasZFactorFieldSpecified;
            }
            set {
                this.gasZFactorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasCompressibility", DataType="compressibilityMeasure")]
        public compressibilityMeasure gasCompressibility {
            get {
                return this.gasCompressibilityField;
            }
            set {
                this.gasCompressibilityField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasViscosity", DataType="dynamicViscosityMeasure")]
        public dynamicViscosityMeasure gasViscosity {
            get {
                return this.gasViscosityField;
            }
            set {
                this.gasViscosityField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasThermalConductivity", DataType="thermalConductivityMeasure")]
        public thermalConductivityMeasure gasThermalConductivity {
            get {
                return this.gasThermalConductivityField;
            }
            set {
                this.gasThermalConductivityField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasHeatingValue", DataType="modulusOfCompressionMeasure")]
        public modulusOfCompressionMeasure gasHeatingValue {
            get {
                return this.gasHeatingValueField;
            }
            set {
                this.gasHeatingValueField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("reservoir", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("saturated", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("stockTank", typeof(cs_fluidResultStockTank))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stockTank", DataType="cs_fluidResultStockTank")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reservoir", DataType="logicalBoolean")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("saturated", DataType="logicalBoolean")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType4[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("vaporComposition")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("vaporComposition", DataType="cs_fluidResultPhaseComposition")]
        public cs_fluidResultPhaseComposition[] vaporComposition {
            get {
                return this.vaporCompositionField;
            }
            set {
                this.vaporCompositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("liquidComposition")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("liquidComposition", DataType="cs_fluidResultPhaseComposition")]
        public cs_fluidResultPhaseComposition[] liquidComposition {
            get {
                return this.liquidCompositionField;
            }
            set {
                this.liquidCompositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("compositeComposition")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("compositeComposition", DataType="cs_fluidResultCompositeComposition")]
        public cs_fluidResultCompositeComposition[] compositeComposition {
            get {
                return this.compositeCompositionField;
            }
            set {
                this.compositeCompositionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series", IncludeInSchema=false)]
    public enum ItemChoiceType6 {
        
        /// <remarks/>
        bubblePointPressure,
        
        /// <remarks/>
        retrogradeDewPointPressure,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series", IncludeInSchema=false)]
    public enum ItemsChoiceType4 {
        
        /// <remarks/>
        reservoir,
        
        /// <remarks/>
        saturated,
        
        /// <remarks/>
        stockTank,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fluidResultTransportPropertiesTest {
        
        private short testNumberField;
        
        private bool testNumberFieldSpecified;
        
        private cs_fluidResultTransportTestStep[] transportTestStepField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testNumber", DataType="positiveCount")]
        public short testNumber {
            get {
                return this.testNumberField;
            }
            set {
                this.testNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool testNumberSpecified {
            get {
                return this.testNumberFieldSpecified;
            }
            set {
                this.testNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("transportTestStep")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("transportTestStep", DataType="cs_fluidResultTransportTestStep")]
        public cs_fluidResultTransportTestStep[] transportTestStep {
            get {
                return this.transportTestStepField;
            }
            set {
                this.transportTestStepField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fluidResultJCurveTestStep {
        
        private short stepNumberField;
        
        private bool stepNumberFieldSpecified;
        
        private pressureMeasure stepPressureField;
        
        private dynamicViscosityMeasure oilViscosityField;
        
        private abstractMeasure itemField;
        
        private double gasMolecularWeightField;
        
        private bool gasMolecularWeightFieldSpecified;
        
        private double gasGravityField;
        
        private bool gasGravityFieldSpecified;
        
        private volumePerStandardVolumeMeasure gasFormationVolumeFactorStdField;
        
        private double gasZFactorField;
        
        private bool gasZFactorFieldSpecified;
        
        private dynamicViscosityMeasure gasViscosityField;
        
        private abstractMeasure item1Field;
        
        private volumePerStandardVolumeMeasure condensateYieldVolumeRatio1StdField;
        
        private volumePerStandardVolumeMeasure condensateYieldVolumeRatio2StdField;
        
        private string commentField;
        
        private object[] itemsField;
        
        private ItemsChoiceType3[] itemsElementNameField;
        
        private cs_fluidResultPhaseComposition[] vaporCompositionField;
        
        private cs_fluidResultPhaseComposition[] liquidCompositionField;
        
        private cs_fluidResultCompositeComposition[] compositeCompositionField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The stepNumber represents a row in the table.</summary>
        [System.ComponentModel.DescriptionAttribute("The stepNumber represents a row in the table.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stepNumber", DataType="positiveCount")]
        public short stepNumber {
            get {
                return this.stepNumberField;
            }
            set {
                this.stepNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stepNumberSpecified {
            get {
                return this.stepNumberFieldSpecified;
            }
            set {
                this.stepNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stepPressure", DataType="pressureMeasure")]
        public pressureMeasure stepPressure {
            get {
                return this.stepPressureField;
            }
            set {
                this.stepPressureField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilViscosity", DataType="dynamicViscosityMeasure")]
        public dynamicViscosityMeasure oilViscosity {
            get {
                return this.oilViscosityField;
            }
            set {
                this.oilViscosityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("liquidDropoutPercent", typeof(volumePerVolumeMeasurePercent))]
        [System.Xml.Serialization.XmlElementAttribute("liquidVolume", typeof(volumeMeasure))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("liquidVolume", DataType="volumeMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("liquidDropoutPercent", DataType="volumePerVolumeMeasurePercent")]
        public abstractMeasure Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasMolecularWeight", DataType="unitlessQuantity")]
        public double gasMolecularWeight {
            get {
                return this.gasMolecularWeightField;
            }
            set {
                this.gasMolecularWeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gasMolecularWeightSpecified {
            get {
                return this.gasMolecularWeightFieldSpecified;
            }
            set {
                this.gasMolecularWeightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasGravity", DataType="unitlessQuantity")]
        public double gasGravity {
            get {
                return this.gasGravityField;
            }
            set {
                this.gasGravityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gasGravitySpecified {
            get {
                return this.gasGravityFieldSpecified;
            }
            set {
                this.gasGravityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasFormationVolumeFactorStd", DataType="volumePerStandardVolumeMeasure")]
        public volumePerStandardVolumeMeasure gasFormationVolumeFactorStd {
            get {
                return this.gasFormationVolumeFactorStdField;
            }
            set {
                this.gasFormationVolumeFactorStdField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasZFactor", DataType="unitlessQuantity")]
        public double gasZFactor {
            get {
                return this.gasZFactorField;
            }
            set {
                this.gasZFactorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gasZFactorSpecified {
            get {
                return this.gasZFactorFieldSpecified;
            }
            set {
                this.gasZFactorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasViscosity", DataType="dynamicViscosityMeasure")]
        public dynamicViscosityMeasure gasViscosity {
            get {
                return this.gasViscosityField;
            }
            set {
                this.gasViscosityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("cumulativeGasProducedRatioStd", typeof(standardVolumePerStandardVolumeMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("cumulativeGasProducedVolume", typeof(standardVolumeMeasure))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cumulativeGasProducedVolume", DataType="standardVolumeMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cumulativeGasProducedRatioStd", DataType="standardVolumePerStandardVolumeMeasure")]
        public abstractMeasure Item1 {
            get {
                return this.item1Field;
            }
            set {
                this.item1Field = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condensateYieldVolumeRatio1Std", DataType="volumePerStandardVolumeMeasure")]
        public volumePerStandardVolumeMeasure condensateYieldVolumeRatio1Std {
            get {
                return this.condensateYieldVolumeRatio1StdField;
            }
            set {
                this.condensateYieldVolumeRatio1StdField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condensateYieldVolumeRatio2Std", DataType="volumePerStandardVolumeMeasure")]
        public volumePerStandardVolumeMeasure condensateYieldVolumeRatio2Std {
            get {
                return this.condensateYieldVolumeRatio2StdField;
            }
            set {
                this.condensateYieldVolumeRatio2StdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("reservoir", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("saturated", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("stockTank", typeof(cs_fluidResultStockTank))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stockTank", DataType="cs_fluidResultStockTank")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reservoir", DataType="logicalBoolean")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("saturated", DataType="logicalBoolean")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType3[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("vaporComposition")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("vaporComposition", DataType="cs_fluidResultPhaseComposition")]
        public cs_fluidResultPhaseComposition[] vaporComposition {
            get {
                return this.vaporCompositionField;
            }
            set {
                this.vaporCompositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("liquidComposition")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("liquidComposition", DataType="cs_fluidResultPhaseComposition")]
        public cs_fluidResultPhaseComposition[] liquidComposition {
            get {
                return this.liquidCompositionField;
            }
            set {
                this.liquidCompositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("compositeComposition")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("compositeComposition", DataType="cs_fluidResultCompositeComposition")]
        public cs_fluidResultCompositeComposition[] compositeComposition {
            get {
                return this.compositeCompositionField;
            }
            set {
                this.compositeCompositionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series", IncludeInSchema=false)]
    public enum ItemsChoiceType3 {
        
        /// <remarks/>
        reservoir,
        
        /// <remarks/>
        saturated,
        
        /// <remarks/>
        stockTank,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fluidResultJCurveTest {
        
        private short testNumberField;
        
        private bool testNumberFieldSpecified;
        
        private thermodynamicTemperatureMeasure testTemperatureField;
        
        private pressureMeasure itemField;
        
        private ItemChoiceType5 itemElementNameField;
        
        private cs_fluidResultVolumeReference liquidDropoutReferenceField;
        
        private standardVolumeMeasure cumulativeGasProducedReferenceField;
        
        private pressureMeasure condensateYieldPressure1Field;
        
        private thermodynamicTemperatureMeasure condensateYieldTemperature1Field;
        
        private pressureMeasure condensateYieldPressure2Field;
        
        private thermodynamicTemperatureMeasure condensateYieldTemperature2Field;
        
        private cs_fluidResultJCurveTestStep[] jcrvTestStepField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testNumber", DataType="positiveCount")]
        public short testNumber {
            get {
                return this.testNumberField;
            }
            set {
                this.testNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool testNumberSpecified {
            get {
                return this.testNumberFieldSpecified;
            }
            set {
                this.testNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testTemperature", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure testTemperature {
            get {
                return this.testTemperatureField;
            }
            set {
                this.testTemperatureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bubblePointPressure", typeof(pressureMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("retrogradeDewPointPressure", typeof(pressureMeasure))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bubblePointPressure", DataType="pressureMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("retrogradeDewPointPressure", DataType="pressureMeasure")]
        public pressureMeasure Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType5 ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("liquidDropoutReference", DataType="cs_fluidResultVolumeReference")]
        public cs_fluidResultVolumeReference liquidDropoutReference {
            get {
                return this.liquidDropoutReferenceField;
            }
            set {
                this.liquidDropoutReferenceField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cumulativeGasProducedReference", DataType="standardVolumeMeasure")]
        public standardVolumeMeasure cumulativeGasProducedReference {
            get {
                return this.cumulativeGasProducedReferenceField;
            }
            set {
                this.cumulativeGasProducedReferenceField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condensateYieldPressure1", DataType="pressureMeasure")]
        public pressureMeasure condensateYieldPressure1 {
            get {
                return this.condensateYieldPressure1Field;
            }
            set {
                this.condensateYieldPressure1Field = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condensateYieldTemperature1", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure condensateYieldTemperature1 {
            get {
                return this.condensateYieldTemperature1Field;
            }
            set {
                this.condensateYieldTemperature1Field = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condensateYieldPressure2", DataType="pressureMeasure")]
        public pressureMeasure condensateYieldPressure2 {
            get {
                return this.condensateYieldPressure2Field;
            }
            set {
                this.condensateYieldPressure2Field = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condensateYieldTemperature2", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure condensateYieldTemperature2 {
            get {
                return this.condensateYieldTemperature2Field;
            }
            set {
                this.condensateYieldTemperature2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("jcrvTestStep")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("jcrvTestStep", DataType="cs_fluidResultJCurveTestStep")]
        public cs_fluidResultJCurveTestStep[] jcrvTestStep {
            get {
                return this.jcrvTestStepField;
            }
            set {
                this.jcrvTestStepField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series", IncludeInSchema=false)]
    public enum ItemChoiceType5 {
        
        /// <remarks/>
        bubblePointPressure,
        
        /// <remarks/>
        retrogradeDewPointPressure,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fluidResultDifferentialLiberationTestStep {
        
        private short stepNumberField;
        
        private bool stepNumberFieldSpecified;
        
        private pressureMeasure stepPressureField;
        
        private densityMeasure oilMassDensityField;
        
        private volumePerStandardVolumeMeasure oilFormationVolumeFactorStdField;
        
        private compressibilityMeasure oilCompressibilityField;
        
        private dynamicViscosityMeasure oilViscosityField;
        
        private abstractMeasure itemField;
        
        private double gasMolecularWeightField;
        
        private bool gasMolecularWeightFieldSpecified;
        
        private double gasGravityField;
        
        private bool gasGravityFieldSpecified;
        
        private densityMeasure gasMassDensityField;
        
        private volumePerStandardVolumeMeasure gasFormationVolumeFactorStdField;
        
        private double gasZFactorField;
        
        private bool gasZFactorFieldSpecified;
        
        private dynamicViscosityMeasure gasViscosityField;
        
        private volumePerStandardVolumeMeasure totalFormationVolumeFactorStdField;
        
        private standardVolumePerStandardVolumeMeasure solutionGORStdField;
        
        private standardVolumePerStandardVolumeMeasure cumulativeStockTankGORStdField;
        
        private standardVolumePerVolumeMeasure cumulativeSaturatedGORStdField;
        
        private densityMeasure residualAPIGravityField;
        
        private string commentField;
        
        private object[] itemsField;
        
        private ItemsChoiceType2[] itemsElementNameField;
        
        private cs_fluidResultPhaseComposition[] vaporCompositionField;
        
        private cs_fluidResultPhaseComposition[] liquidCompositionField;
        
        private cs_fluidResultCompositeComposition[] compositeCompositionField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The stepNumber represents a row in the table.</summary>
        [System.ComponentModel.DescriptionAttribute("The stepNumber represents a row in the table.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stepNumber", DataType="positiveCount")]
        public short stepNumber {
            get {
                return this.stepNumberField;
            }
            set {
                this.stepNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stepNumberSpecified {
            get {
                return this.stepNumberFieldSpecified;
            }
            set {
                this.stepNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stepPressure", DataType="pressureMeasure")]
        public pressureMeasure stepPressure {
            get {
                return this.stepPressureField;
            }
            set {
                this.stepPressureField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilMassDensity", DataType="densityMeasure")]
        public densityMeasure oilMassDensity {
            get {
                return this.oilMassDensityField;
            }
            set {
                this.oilMassDensityField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilFormationVolumeFactorStd", DataType="volumePerStandardVolumeMeasure")]
        public volumePerStandardVolumeMeasure oilFormationVolumeFactorStd {
            get {
                return this.oilFormationVolumeFactorStdField;
            }
            set {
                this.oilFormationVolumeFactorStdField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilCompressibility", DataType="compressibilityMeasure")]
        public compressibilityMeasure oilCompressibility {
            get {
                return this.oilCompressibilityField;
            }
            set {
                this.oilCompressibilityField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilViscosity", DataType="dynamicViscosityMeasure")]
        public dynamicViscosityMeasure oilViscosity {
            get {
                return this.oilViscosityField;
            }
            set {
                this.oilViscosityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("oilShrinkageFactor", typeof(volumePerVolumeMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("oilVolume", typeof(volumeMeasure))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilVolume", DataType="volumeMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilShrinkageFactor", DataType="volumePerVolumeMeasure")]
        public abstractMeasure Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasMolecularWeight", DataType="unitlessQuantity")]
        public double gasMolecularWeight {
            get {
                return this.gasMolecularWeightField;
            }
            set {
                this.gasMolecularWeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gasMolecularWeightSpecified {
            get {
                return this.gasMolecularWeightFieldSpecified;
            }
            set {
                this.gasMolecularWeightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasGravity", DataType="unitlessQuantity")]
        public double gasGravity {
            get {
                return this.gasGravityField;
            }
            set {
                this.gasGravityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gasGravitySpecified {
            get {
                return this.gasGravityFieldSpecified;
            }
            set {
                this.gasGravityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasMassDensity", DataType="densityMeasure")]
        public densityMeasure gasMassDensity {
            get {
                return this.gasMassDensityField;
            }
            set {
                this.gasMassDensityField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasFormationVolumeFactorStd", DataType="volumePerStandardVolumeMeasure")]
        public volumePerStandardVolumeMeasure gasFormationVolumeFactorStd {
            get {
                return this.gasFormationVolumeFactorStdField;
            }
            set {
                this.gasFormationVolumeFactorStdField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasZFactor", DataType="unitlessQuantity")]
        public double gasZFactor {
            get {
                return this.gasZFactorField;
            }
            set {
                this.gasZFactorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gasZFactorSpecified {
            get {
                return this.gasZFactorFieldSpecified;
            }
            set {
                this.gasZFactorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasViscosity", DataType="dynamicViscosityMeasure")]
        public dynamicViscosityMeasure gasViscosity {
            get {
                return this.gasViscosityField;
            }
            set {
                this.gasViscosityField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("totalFormationVolumeFactorStd", DataType="volumePerStandardVolumeMeasure")]
        public volumePerStandardVolumeMeasure totalFormationVolumeFactorStd {
            get {
                return this.totalFormationVolumeFactorStdField;
            }
            set {
                this.totalFormationVolumeFactorStdField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("solutionGORStd", DataType="standardVolumePerStandardVolumeMeasure")]
        public standardVolumePerStandardVolumeMeasure solutionGORStd {
            get {
                return this.solutionGORStdField;
            }
            set {
                this.solutionGORStdField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cumulativeStockTankGORStd", DataType="standardVolumePerStandardVolumeMeasure")]
        public standardVolumePerStandardVolumeMeasure cumulativeStockTankGORStd {
            get {
                return this.cumulativeStockTankGORStdField;
            }
            set {
                this.cumulativeStockTankGORStdField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cumulativeSaturatedGORStd", DataType="standardVolumePerVolumeMeasure")]
        public standardVolumePerVolumeMeasure cumulativeSaturatedGORStd {
            get {
                return this.cumulativeSaturatedGORStdField;
            }
            set {
                this.cumulativeSaturatedGORStdField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("residualAPIGravity", DataType="densityMeasure")]
        public densityMeasure residualAPIGravity {
            get {
                return this.residualAPIGravityField;
            }
            set {
                this.residualAPIGravityField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("reservoir", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("saturated", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("stockTank", typeof(cs_fluidResultStockTank))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stockTank", DataType="cs_fluidResultStockTank")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reservoir", DataType="logicalBoolean")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("saturated", DataType="logicalBoolean")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType2[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("vaporComposition")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("vaporComposition", DataType="cs_fluidResultPhaseComposition")]
        public cs_fluidResultPhaseComposition[] vaporComposition {
            get {
                return this.vaporCompositionField;
            }
            set {
                this.vaporCompositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("liquidComposition")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("liquidComposition", DataType="cs_fluidResultPhaseComposition")]
        public cs_fluidResultPhaseComposition[] liquidComposition {
            get {
                return this.liquidCompositionField;
            }
            set {
                this.liquidCompositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("compositeComposition")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("compositeComposition", DataType="cs_fluidResultCompositeComposition")]
        public cs_fluidResultCompositeComposition[] compositeComposition {
            get {
                return this.compositeCompositionField;
            }
            set {
                this.compositeCompositionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series", IncludeInSchema=false)]
    public enum ItemsChoiceType2 {
        
        /// <remarks/>
        reservoir,
        
        /// <remarks/>
        saturated,
        
        /// <remarks/>
        stockTank,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fluidResultDifferentialLiberationTest {
        
        private short testNumberField;
        
        private bool testNumberFieldSpecified;
        
        private thermodynamicTemperatureMeasure testTemperatureField;
        
        private pressureMeasure itemField;
        
        private ItemChoiceType4 itemElementNameField;
        
        private cs_fluidResultVolumeReference shrinkageReferenceField;
        
        private cs_fluidResultDifferentialLiberationTestStep[] dlTestStepField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testNumber", DataType="positiveCount")]
        public short testNumber {
            get {
                return this.testNumberField;
            }
            set {
                this.testNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool testNumberSpecified {
            get {
                return this.testNumberFieldSpecified;
            }
            set {
                this.testNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testTemperature", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure testTemperature {
            get {
                return this.testTemperatureField;
            }
            set {
                this.testTemperatureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bubblePointPressure", typeof(pressureMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("retrogradeDewPointPressure", typeof(pressureMeasure))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bubblePointPressure", DataType="pressureMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("retrogradeDewPointPressure", DataType="pressureMeasure")]
        public pressureMeasure Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType4 ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("shrinkageReference", DataType="cs_fluidResultVolumeReference")]
        public cs_fluidResultVolumeReference shrinkageReference {
            get {
                return this.shrinkageReferenceField;
            }
            set {
                this.shrinkageReferenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dlTestStep")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dlTestStep", DataType="cs_fluidResultDifferentialLiberationTestStep")]
        public cs_fluidResultDifferentialLiberationTestStep[] dlTestStep {
            get {
                return this.dlTestStepField;
            }
            set {
                this.dlTestStepField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series", IncludeInSchema=false)]
    public enum ItemChoiceType4 {
        
        /// <remarks/>
        bubblePointPressure,
        
        /// <remarks/>
        retrogradeDewPointPressure,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fluidResultCvdTestStep {
        
        private short stepNumberField;
        
        private bool stepNumberFieldSpecified;
        
        private pressureMeasure stepPressureField;
        
        private dynamicViscosityMeasure oilViscosityField;
        
        private abstractMeasure itemField;
        
        private double gasMolecularWeightField;
        
        private bool gasMolecularWeightFieldSpecified;
        
        private double gasGravityField;
        
        private bool gasGravityFieldSpecified;
        
        private volumePerStandardVolumeMeasure gasFormationVolumeFactorStdField;
        
        private double gasZFactorField;
        
        private bool gasZFactorFieldSpecified;
        
        private dynamicViscosityMeasure gasViscosityField;
        
        private abstractMeasure item1Field;
        
        private string commentField;
        
        private object[] itemsField;
        
        private ItemsChoiceType1[] itemsElementNameField;
        
        private cs_fluidResultPhaseComposition[] vaporCompositionField;
        
        private cs_fluidResultPhaseComposition[] liquidCompositionField;
        
        private cs_fluidResultCompositeComposition[] compositeCompositionField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The stepNumber represents a row in the table.</summary>
        [System.ComponentModel.DescriptionAttribute("The stepNumber represents a row in the table.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stepNumber", DataType="positiveCount")]
        public short stepNumber {
            get {
                return this.stepNumberField;
            }
            set {
                this.stepNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stepNumberSpecified {
            get {
                return this.stepNumberFieldSpecified;
            }
            set {
                this.stepNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stepPressure", DataType="pressureMeasure")]
        public pressureMeasure stepPressure {
            get {
                return this.stepPressureField;
            }
            set {
                this.stepPressureField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilViscosity", DataType="dynamicViscosityMeasure")]
        public dynamicViscosityMeasure oilViscosity {
            get {
                return this.oilViscosityField;
            }
            set {
                this.oilViscosityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("liquidDropoutPercent", typeof(volumePerVolumeMeasurePercent))]
        [System.Xml.Serialization.XmlElementAttribute("liquidVolume", typeof(volumeMeasure))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("liquidVolume", DataType="volumeMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("liquidDropoutPercent", DataType="volumePerVolumeMeasurePercent")]
        public abstractMeasure Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasMolecularWeight", DataType="unitlessQuantity")]
        public double gasMolecularWeight {
            get {
                return this.gasMolecularWeightField;
            }
            set {
                this.gasMolecularWeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gasMolecularWeightSpecified {
            get {
                return this.gasMolecularWeightFieldSpecified;
            }
            set {
                this.gasMolecularWeightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasGravity", DataType="unitlessQuantity")]
        public double gasGravity {
            get {
                return this.gasGravityField;
            }
            set {
                this.gasGravityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gasGravitySpecified {
            get {
                return this.gasGravityFieldSpecified;
            }
            set {
                this.gasGravityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasFormationVolumeFactorStd", DataType="volumePerStandardVolumeMeasure")]
        public volumePerStandardVolumeMeasure gasFormationVolumeFactorStd {
            get {
                return this.gasFormationVolumeFactorStdField;
            }
            set {
                this.gasFormationVolumeFactorStdField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasZFactor", DataType="unitlessQuantity")]
        public double gasZFactor {
            get {
                return this.gasZFactorField;
            }
            set {
                this.gasZFactorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gasZFactorSpecified {
            get {
                return this.gasZFactorFieldSpecified;
            }
            set {
                this.gasZFactorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasViscosity", DataType="dynamicViscosityMeasure")]
        public dynamicViscosityMeasure gasViscosity {
            get {
                return this.gasViscosityField;
            }
            set {
                this.gasViscosityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("cumulativeGasProducedRatioStd", typeof(standardVolumePerStandardVolumeMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("cumulativeGasProducedVolume", typeof(standardVolumeMeasure))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cumulativeGasProducedVolume", DataType="standardVolumeMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cumulativeGasProducedRatioStd", DataType="standardVolumePerStandardVolumeMeasure")]
        public abstractMeasure Item1 {
            get {
                return this.item1Field;
            }
            set {
                this.item1Field = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("reservoir", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("saturated", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("stockTank", typeof(cs_fluidResultStockTank))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stockTank", DataType="cs_fluidResultStockTank")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reservoir", DataType="logicalBoolean")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("saturated", DataType="logicalBoolean")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType1[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("vaporComposition")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("vaporComposition", DataType="cs_fluidResultPhaseComposition")]
        public cs_fluidResultPhaseComposition[] vaporComposition {
            get {
                return this.vaporCompositionField;
            }
            set {
                this.vaporCompositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("liquidComposition")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("liquidComposition", DataType="cs_fluidResultPhaseComposition")]
        public cs_fluidResultPhaseComposition[] liquidComposition {
            get {
                return this.liquidCompositionField;
            }
            set {
                this.liquidCompositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("compositeComposition")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("compositeComposition", DataType="cs_fluidResultCompositeComposition")]
        public cs_fluidResultCompositeComposition[] compositeComposition {
            get {
                return this.compositeCompositionField;
            }
            set {
                this.compositeCompositionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series", IncludeInSchema=false)]
    public enum ItemsChoiceType1 {
        
        /// <remarks/>
        reservoir,
        
        /// <remarks/>
        saturated,
        
        /// <remarks/>
        stockTank,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fluidResultConstantVolumeDepletionTest {
        
        private short testNumberField;
        
        private bool testNumberFieldSpecified;
        
        private thermodynamicTemperatureMeasure testTemperatureField;
        
        private pressureMeasure itemField;
        
        private ItemChoiceType3 itemElementNameField;
        
        private cs_fluidResultVolumeReference liquidDropoutReferenceField;
        
        private standardVolumeMeasure cumulativeGasProducedReferenceStdField;
        
        private cs_fluidResultCvdTestStep[] cvdTestStepField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testNumber", DataType="positiveCount")]
        public short testNumber {
            get {
                return this.testNumberField;
            }
            set {
                this.testNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool testNumberSpecified {
            get {
                return this.testNumberFieldSpecified;
            }
            set {
                this.testNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testTemperature", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure testTemperature {
            get {
                return this.testTemperatureField;
            }
            set {
                this.testTemperatureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bubblePointPressure", typeof(pressureMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("retrogradeDewPointPressure", typeof(pressureMeasure))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bubblePointPressure", DataType="pressureMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("retrogradeDewPointPressure", DataType="pressureMeasure")]
        public pressureMeasure Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType3 ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("liquidDropoutReference", DataType="cs_fluidResultVolumeReference")]
        public cs_fluidResultVolumeReference liquidDropoutReference {
            get {
                return this.liquidDropoutReferenceField;
            }
            set {
                this.liquidDropoutReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The volume is corrected to standard conditions of temperature and pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("The volume is corrected to standard conditions of temperature and pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cumulativeGasProducedReferenceStd", DataType="standardVolumeMeasure")]
        public standardVolumeMeasure cumulativeGasProducedReferenceStd {
            get {
                return this.cumulativeGasProducedReferenceStdField;
            }
            set {
                this.cumulativeGasProducedReferenceStdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("cvdTestStep")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cvdTestStep", DataType="cs_fluidResultCvdTestStep")]
        public cs_fluidResultCvdTestStep[] cvdTestStep {
            get {
                return this.cvdTestStepField;
            }
            set {
                this.cvdTestStepField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series", IncludeInSchema=false)]
    public enum ItemChoiceType3 {
        
        /// <remarks/>
        bubblePointPressure,
        
        /// <remarks/>
        retrogradeDewPointPressure,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fluidResultCceTestStep {
        
        private short stepNumberField;
        
        private bool stepNumberFieldSpecified;
        
        private pressureMeasure stepPressureField;
        
        private densityMeasure oilMassDensityField;
        
        private compressibilityMeasure oilCompressibilityField;
        
        private dynamicViscosityMeasure oilViscosityField;
        
        private abstractMeasure[] itemsField;
        
        private ItemsChoiceType[] itemsElementNameField;
        
        private volumePerVolumeMeasure relativeVolumeRatioField;
        
        private densityMeasure gasMassDensityField;
        
        private double gasZFactorField;
        
        private bool gasZFactorFieldSpecified;
        
        private compressibilityMeasure gasCompressibilityField;
        
        private dynamicViscosityMeasure gasViscosityField;
        
        private double yFactorField;
        
        private bool yFactorFieldSpecified;
        
        private string commentField;
        
        private object[] items1Field;
        
        private Items1ChoiceType[] items1ElementNameField;
        
        private cs_fluidResultPhaseComposition[] vaporCompositionField;
        
        private cs_fluidResultPhaseComposition[] liquidCompositionField;
        
        private cs_fluidResultCompositeComposition[] compositeCompositionField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The stepNumber represents a row in the table.</summary>
        [System.ComponentModel.DescriptionAttribute("The stepNumber represents a row in the table.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stepNumber", DataType="positiveCount")]
        public short stepNumber {
            get {
                return this.stepNumberField;
            }
            set {
                this.stepNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stepNumberSpecified {
            get {
                return this.stepNumberFieldSpecified;
            }
            set {
                this.stepNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stepPressure", DataType="pressureMeasure")]
        public pressureMeasure stepPressure {
            get {
                return this.stepPressureField;
            }
            set {
                this.stepPressureField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilMassDensity", DataType="densityMeasure")]
        public densityMeasure oilMassDensity {
            get {
                return this.oilMassDensityField;
            }
            set {
                this.oilMassDensityField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilCompressibility", DataType="compressibilityMeasure")]
        public compressibilityMeasure oilCompressibility {
            get {
                return this.oilCompressibilityField;
            }
            set {
                this.oilCompressibilityField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilViscosity", DataType="dynamicViscosityMeasure")]
        public dynamicViscosityMeasure oilViscosity {
            get {
                return this.oilViscosityField;
            }
            set {
                this.oilViscosityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("liquidDropoutPercent", typeof(volumePerVolumeMeasurePercent))]
        [System.Xml.Serialization.XmlElementAttribute("liquidVolume", typeof(volumeMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("totalVolume", typeof(volumeMeasure))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("liquidDropoutPercent", DataType="volumePerVolumeMeasurePercent")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("totalVolume", DataType="volumeMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("liquidVolume", DataType="volumeMeasure")]
        public abstractMeasure[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("relativeVolumeRatio", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure relativeVolumeRatio {
            get {
                return this.relativeVolumeRatioField;
            }
            set {
                this.relativeVolumeRatioField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasMassDensity", DataType="densityMeasure")]
        public densityMeasure gasMassDensity {
            get {
                return this.gasMassDensityField;
            }
            set {
                this.gasMassDensityField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasZFactor", DataType="unitlessQuantity")]
        public double gasZFactor {
            get {
                return this.gasZFactorField;
            }
            set {
                this.gasZFactorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gasZFactorSpecified {
            get {
                return this.gasZFactorFieldSpecified;
            }
            set {
                this.gasZFactorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasCompressibility", DataType="compressibilityMeasure")]
        public compressibilityMeasure gasCompressibility {
            get {
                return this.gasCompressibilityField;
            }
            set {
                this.gasCompressibilityField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasViscosity", DataType="dynamicViscosityMeasure")]
        public dynamicViscosityMeasure gasViscosity {
            get {
                return this.gasViscosityField;
            }
            set {
                this.gasViscosityField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("yFactor", DataType="unitlessQuantity")]
        public double yFactor {
            get {
                return this.yFactorField;
            }
            set {
                this.yFactorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool yFactorSpecified {
            get {
                return this.yFactorFieldSpecified;
            }
            set {
                this.yFactorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("reservoir", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("saturated", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("stockTank", typeof(cs_fluidResultStockTank))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("Items1ElementName")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stockTank", DataType="cs_fluidResultStockTank")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reservoir", DataType="logicalBoolean")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("saturated", DataType="logicalBoolean")]
        public object[] Items1 {
            get {
                return this.items1Field;
            }
            set {
                this.items1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items1ElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Items1ChoiceType[] Items1ElementName {
            get {
                return this.items1ElementNameField;
            }
            set {
                this.items1ElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("vaporComposition")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("vaporComposition", DataType="cs_fluidResultPhaseComposition")]
        public cs_fluidResultPhaseComposition[] vaporComposition {
            get {
                return this.vaporCompositionField;
            }
            set {
                this.vaporCompositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("liquidComposition")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("liquidComposition", DataType="cs_fluidResultPhaseComposition")]
        public cs_fluidResultPhaseComposition[] liquidComposition {
            get {
                return this.liquidCompositionField;
            }
            set {
                this.liquidCompositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("compositeComposition")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("compositeComposition", DataType="cs_fluidResultCompositeComposition")]
        public cs_fluidResultCompositeComposition[] compositeComposition {
            get {
                return this.compositeCompositionField;
            }
            set {
                this.compositeCompositionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series", IncludeInSchema=false)]
    public enum ItemsChoiceType {
        
        /// <remarks/>
        liquidDropoutPercent,
        
        /// <remarks/>
        liquidVolume,
        
        /// <remarks/>
        totalVolume,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series", IncludeInSchema=false)]
    public enum Items1ChoiceType {
        
        /// <remarks/>
        reservoir,
        
        /// <remarks/>
        saturated,
        
        /// <remarks/>
        stockTank,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fluidResultConstantCompositionExpansionTest {
        
        private short testNumberField;
        
        private bool testNumberFieldSpecified;
        
        private thermodynamicTemperatureMeasure testTemperatureField;
        
        private pressureMeasure itemField;
        
        private ItemChoiceType2 itemElementNameField;
        
        private cs_fluidResultVolumeReference liquidDropoutReferenceField;
        
        private cs_fluidResultVolumeReference relativeVolumeReferenceField;
        
        private cs_fluidResultCceTestStep[] cceTestStepField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testNumber", DataType="positiveCount")]
        public short testNumber {
            get {
                return this.testNumberField;
            }
            set {
                this.testNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool testNumberSpecified {
            get {
                return this.testNumberFieldSpecified;
            }
            set {
                this.testNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testTemperature", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure testTemperature {
            get {
                return this.testTemperatureField;
            }
            set {
                this.testTemperatureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bubblePointPressure", typeof(pressureMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("retrogradeDewPointPressure", typeof(pressureMeasure))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bubblePointPressure", DataType="pressureMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("retrogradeDewPointPressure", DataType="pressureMeasure")]
        public pressureMeasure Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType2 ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("liquidDropoutReference", DataType="cs_fluidResultVolumeReference")]
        public cs_fluidResultVolumeReference liquidDropoutReference {
            get {
                return this.liquidDropoutReferenceField;
            }
            set {
                this.liquidDropoutReferenceField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("relativeVolumeReference", DataType="cs_fluidResultVolumeReference")]
        public cs_fluidResultVolumeReference relativeVolumeReference {
            get {
                return this.relativeVolumeReferenceField;
            }
            set {
                this.relativeVolumeReferenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("cceTestStep")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cceTestStep", DataType="cs_fluidResultCceTestStep")]
        public cs_fluidResultCceTestStep[] cceTestStep {
            get {
                return this.cceTestStepField;
            }
            set {
                this.cceTestStepField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series", IncludeInSchema=false)]
    public enum ItemChoiceType2 {
        
        /// <remarks/>
        bubblePointPressure,
        
        /// <remarks/>
        retrogradeDewPointPressure,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fluidResultSaturationTestStep {
        
        private short stepNumberField;
        
        private bool stepNumberFieldSpecified;
        
        private thermodynamicTemperatureMeasure stepTemperatureField;
        
        private pressureMeasure itemField;
        
        private ItemChoiceType1 itemElementNameField;
        
        private pressureMeasure dewPointPressureField;
        
        private string commentField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The stepNumber represents a row in the table.</summary>
        [System.ComponentModel.DescriptionAttribute("The stepNumber represents a row in the table.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stepNumber", DataType="positiveCount")]
        public short stepNumber {
            get {
                return this.stepNumberField;
            }
            set {
                this.stepNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stepNumberSpecified {
            get {
                return this.stepNumberFieldSpecified;
            }
            set {
                this.stepNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stepTemperature", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure stepTemperature {
            get {
                return this.stepTemperatureField;
            }
            set {
                this.stepTemperatureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bubblePointPressure", typeof(pressureMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("retrogradeDewPointPressure", typeof(pressureMeasure))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bubblePointPressure", DataType="pressureMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("retrogradeDewPointPressure", DataType="pressureMeasure")]
        public pressureMeasure Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType1 ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dewPointPressure", DataType="pressureMeasure")]
        public pressureMeasure dewPointPressure {
            get {
                return this.dewPointPressureField;
            }
            set {
                this.dewPointPressureField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series", IncludeInSchema=false)]
    public enum ItemChoiceType1 {
        
        /// <remarks/>
        bubblePointPressure,
        
        /// <remarks/>
        retrogradeDewPointPressure,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fluidResultSaturationTest {
        
        private short testNumberField;
        
        private bool testNumberFieldSpecified;
        
        private cs_fluidResultSaturationTestStep[] saturationTestStepField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testNumber", DataType="positiveCount")]
        public short testNumber {
            get {
                return this.testNumberField;
            }
            set {
                this.testNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool testNumberSpecified {
            get {
                return this.testNumberFieldSpecified;
            }
            set {
                this.testNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("saturationTestStep")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("saturationTestStep", DataType="cs_fluidResultSaturationTestStep")]
        public cs_fluidResultSaturationTestStep[] saturationTestStep {
            get {
                return this.saturationTestStepField;
            }
            set {
                this.saturationTestStepField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class binaryInteractionCoefficient {
        
        private string referenceComponentField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("referenceComponent", DataType="kindString")]
        public string referenceComponent {
            get {
                return this.referenceComponentField;
            }
            set {
                this.referenceComponentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fluidResultComposition {
        
        private bool isPrimaryField;
        
        private string componentNameField;
        
        private FluidComponent componentBaseKindField;
        
        private bool componentBaseKindFieldSpecified;
        
        private FluidComponentKind componentKindField;
        
        private bool componentKindFieldSpecified;
        
        private double molecularWeightField;
        
        private bool molecularWeightFieldSpecified;
        
        private massConcentrationMeasurePercent weightPercentField;
        
        private molarFractionMeasurePercent molePercentField;
        
        private double specificGravityField;
        
        private bool specificGravityFieldSpecified;
        
        private thermodynamicTemperatureMeasure boilingPointField;
        
        private pressureMeasure criticalPressureField;
        
        private thermodynamicTemperatureMeasure criticalTemperatureField;
        
        private volumeMeasure criticalVolumeField;
        
        private double acentricFactorField;
        
        private bool acentricFactorFieldSpecified;
        
        private molarVolumeMeasure volumeTranslationFactorField;
        
        private double alphaShapeFactorField;
        
        private bool alphaShapeFactorFieldSpecified;
        
        private double watsonKExponentField;
        
        private bool watsonKExponentFieldSpecified;
        
        private short splitCountField;
        
        private bool splitCountFieldSpecified;
        
        private double plusMinimumMolecularWeightField;
        
        private bool plusMinimumMolecularWeightFieldSpecified;
        
        private double plusMaximumMolecularWeightField;
        
        private bool plusMaximumMolecularWeightFieldSpecified;
        
        private pressureMeasure rvpField;
        
        private pressureMeasure tvpField;
        
        private binaryInteractionCoefficient[] binaryInteractionCoefficientField;
        
        private bool calculatedField;
        
        private bool calculatedFieldSpecified;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>True ("true" or "1") indicates that the component is the  primary component in the composition.  False ("false" or "0") or not given indicates that this is not a primary component.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("True (\"true\" or \"1\") indicates that the component is the  primary component in th" +
            "e composition.  False (\"false\" or \"0\") or not given indicates that this is not a" +
            " primary component.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("isPrimary", DataType="logicalBoolean")]
        public bool isPrimary {
            get {
                return this.isPrimaryField;
            }
            set {
                this.isPrimaryField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("componentName", DataType="nameString")]
        public string componentName {
            get {
                return this.componentNameField;
            }
            set {
                this.componentNameField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("componentBaseKind", DataType="FluidComponent")]
        public FluidComponent componentBaseKind {
            get {
                return this.componentBaseKindField;
            }
            set {
                this.componentBaseKindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool componentBaseKindSpecified {
            get {
                return this.componentBaseKindFieldSpecified;
            }
            set {
                this.componentBaseKindFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("componentKind", DataType="FluidComponentKind")]
        public FluidComponentKind componentKind {
            get {
                return this.componentKindField;
            }
            set {
                this.componentKindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool componentKindSpecified {
            get {
                return this.componentKindFieldSpecified;
            }
            set {
                this.componentKindFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("molecularWeight", DataType="unitlessQuantity")]
        public double molecularWeight {
            get {
                return this.molecularWeightField;
            }
            set {
                this.molecularWeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool molecularWeightSpecified {
            get {
                return this.molecularWeightFieldSpecified;
            }
            set {
                this.molecularWeightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("weightPercent", DataType="massConcentrationMeasurePercent")]
        public massConcentrationMeasurePercent weightPercent {
            get {
                return this.weightPercentField;
            }
            set {
                this.weightPercentField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("molePercent", DataType="molarFractionMeasurePercent")]
        public molarFractionMeasurePercent molePercent {
            get {
                return this.molePercentField;
            }
            set {
                this.molePercentField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("specificGravity", DataType="unitlessQuantity")]
        public double specificGravity {
            get {
                return this.specificGravityField;
            }
            set {
                this.specificGravityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool specificGravitySpecified {
            get {
                return this.specificGravityFieldSpecified;
            }
            set {
                this.specificGravityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("boilingPoint", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure boilingPoint {
            get {
                return this.boilingPointField;
            }
            set {
                this.boilingPointField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("criticalPressure", DataType="pressureMeasure")]
        public pressureMeasure criticalPressure {
            get {
                return this.criticalPressureField;
            }
            set {
                this.criticalPressureField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("criticalTemperature", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure criticalTemperature {
            get {
                return this.criticalTemperatureField;
            }
            set {
                this.criticalTemperatureField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("criticalVolume", DataType="volumeMeasure")]
        public volumeMeasure criticalVolume {
            get {
                return this.criticalVolumeField;
            }
            set {
                this.criticalVolumeField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("acentricFactor", DataType="unitlessQuantity")]
        public double acentricFactor {
            get {
                return this.acentricFactorField;
            }
            set {
                this.acentricFactorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acentricFactorSpecified {
            get {
                return this.acentricFactorFieldSpecified;
            }
            set {
                this.acentricFactorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volumeTranslationFactor", DataType="molarVolumeMeasure")]
        public molarVolumeMeasure volumeTranslationFactor {
            get {
                return this.volumeTranslationFactorField;
            }
            set {
                this.volumeTranslationFactorField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("alphaShapeFactor", DataType="unitlessQuantity")]
        public double alphaShapeFactor {
            get {
                return this.alphaShapeFactorField;
            }
            set {
                this.alphaShapeFactorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool alphaShapeFactorSpecified {
            get {
                return this.alphaShapeFactorFieldSpecified;
            }
            set {
                this.alphaShapeFactorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("watsonKExponent", DataType="unitlessQuantity")]
        public double watsonKExponent {
            get {
                return this.watsonKExponentField;
            }
            set {
                this.watsonKExponentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool watsonKExponentSpecified {
            get {
                return this.watsonKExponentFieldSpecified;
            }
            set {
                this.watsonKExponentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("splitCount", DataType="positiveCount")]
        public short splitCount {
            get {
                return this.splitCountField;
            }
            set {
                this.splitCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool splitCountSpecified {
            get {
                return this.splitCountFieldSpecified;
            }
            set {
                this.splitCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("plusMinimumMolecularWeight", DataType="unitlessQuantity")]
        public double plusMinimumMolecularWeight {
            get {
                return this.plusMinimumMolecularWeightField;
            }
            set {
                this.plusMinimumMolecularWeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool plusMinimumMolecularWeightSpecified {
            get {
                return this.plusMinimumMolecularWeightFieldSpecified;
            }
            set {
                this.plusMinimumMolecularWeightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("plusMaximumMolecularWeight", DataType="unitlessQuantity")]
        public double plusMaximumMolecularWeight {
            get {
                return this.plusMaximumMolecularWeightField;
            }
            set {
                this.plusMaximumMolecularWeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool plusMaximumMolecularWeightSpecified {
            get {
                return this.plusMaximumMolecularWeightFieldSpecified;
            }
            set {
                this.plusMaximumMolecularWeightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reid vapor pressure of the product. The absolute vapor pressure of volatile crude oil and  volatile petroleum liquids, except liquefied petroleum gases, as  determined in  accordance with American Society for Testing and Materials under the designation ASTM D323-56.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Reid vapor pressure of the product. The absolute vapor pressure of volatile crude oil and  volatile petroleum liquids, except liquefied petroleum gases, as  determined in  accordance with American Society for Testing and Materials under the designation ASTM D323-56.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rvp", DataType="pressureMeasure")]
        public pressureMeasure rvp {
            get {
                return this.rvpField;
            }
            set {
                this.rvpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vapor pressure of the product. The equilibrium partial pressure exerted by a petroleum liquid  as determined in accordance with standard methods.</summary>
        [System.ComponentModel.DescriptionAttribute("True vapor pressure of the product. The equilibrium partial pressure exerted by a" +
            " petroleum liquid  as determined in accordance with standard methods.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvp", DataType="pressureMeasure")]
        public pressureMeasure tvp {
            get {
                return this.tvpField;
            }
            set {
                this.tvpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("binaryInteractionCoefficient")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("binaryInteractionCoefficient", DataType="binaryInteractionCoefficient")]
        public binaryInteractionCoefficient[] binaryInteractionCoefficient {
            get {
                return this.binaryInteractionCoefficientField;
            }
            set {
                this.binaryInteractionCoefficientField = value;
            }
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("calculated", DataType="logicalBoolean")]
        public bool calculated {
            get {
                return this.calculatedField;
            }
            set {
                this.calculatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool calculatedSpecified {
            get {
                return this.calculatedFieldSpecified;
            }
            set {
                this.calculatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum FluidComponent {
        
        /// <remarks/>
        hydrogen,
        
        /// <remarks/>
        water,
        
        /// <remarks/>
        nitrogen,
        
        /// <remarks/>
        oxygen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydrogen sulfide")]
        hydrogensulfide,
        
        /// <remarks/>
        argon,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("carbon dioxide")]
        carbondioxide,
        
        /// <remarks/>
        methane,
        
        /// <remarks/>
        ethane,
        
        /// <remarks/>
        propane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2-methylpropane")]
        Item2methylpropane,
        
        /// <remarks/>
        butane,
        
        /// <remarks/>
        cyclopentane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2-methylbutane")]
        Item2methylbutane,
        
        /// <remarks/>
        pentane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2,2 dimethylpropane")]
        Item22dimethylpropane,
        
        /// <remarks/>
        benzene,
        
        /// <remarks/>
        cyclohexane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("methylcyclopentane ")]
        methylcyclopentane,
        
        /// <remarks/>
        hexane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2,2-dimethylbutane")]
        Item22dimethylbutane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2,3-dimethylbutane")]
        Item23dimethylbutane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2-methylpentane")]
        Item2methylpentane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3-methylpentane")]
        Item3methylpentane,
        
        /// <remarks/>
        methylbenzene,
        
        /// <remarks/>
        methylcyclohexane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1,1-dimethylcyclopentane")]
        Item11dimethylcyclopentane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cis-1,3-dimethylcyclopentane")]
        cis13dimethylcyclopentane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("trans-1,2-dimethylcyclopentane")]
        trans12dimethylcyclopentane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("trans-1,3-dimethylcyclopentane")]
        trans13dimethylcyclopentane,
        
        /// <remarks/>
        ethylcyclopentane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2,2-dimethylpentane")]
        Item22dimethylpentane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2,2,3-trimethylbutane")]
        Item223trimethylbutane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2,4-Dimethylpentane")]
        Item24Dimethylpentane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2-methylhexane")]
        Item2methylhexane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3,3-dimethylpentane")]
        Item33dimethylpentane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2,3-dimethylpentane")]
        Item23dimethylpentane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3-ethylpentane")]
        Item3ethylpentane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3-methylhexane")]
        Item3methylhexane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1,2 dimethylbenzene")]
        Item12dimethylbenzene,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1,3 dimethylbenzene")]
        Item13dimethylbenzene,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1,4-dimethylbenzene")]
        Item14dimethylbenzene,
        
        /// <remarks/>
        ethylbenzene,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2,3,3-trimethylpentane")]
        Item233trimethylpentane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2,2-dimethylhexane")]
        Item22dimethylhexane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2,4-dimethylhexane")]
        Item24dimethylhexane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2,5-dimethylhexane")]
        Item25dimethylhexane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1,2,4-trimethylbenzene")]
        Item124trimethylbenzene,
        
        /// <remarks/>
        hexanes,
        
        /// <remarks/>
        heptanes,
        
        /// <remarks/>
        octanes,
        
        /// <remarks/>
        nonanes,
        
        /// <remarks/>
        decanes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C11 fraction")]
        C11fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C12 fraction")]
        C12fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C13 fraction")]
        C13fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C14 fraction")]
        C14fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C15 fraction")]
        C15fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C16 fraction")]
        C16fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C17 fraction")]
        C17fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C18 fraction")]
        C18fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C19 fraction")]
        C19fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C20 fraction")]
        C20fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C21 fraction")]
        C21fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C22 fraction")]
        C22fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C23 fraction")]
        C23fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C24 fraction")]
        C24fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C25 fraction")]
        C25fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C26 fraction")]
        C26fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C27 fraction")]
        C27fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C28 fraction")]
        C28fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C29 fraction")]
        C29fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C30 fraction")]
        C30fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C31 fraction")]
        C31fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C32 fraction")]
        C32fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C33 fraction")]
        C33fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C34 fraction")]
        C34fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C35 fraction")]
        C35fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C36 fraction")]
        C36fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C37 fraction")]
        C37fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C38 fraction")]
        C38fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C39 fraction")]
        C39fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C40 fraction")]
        C40fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C41 fraction")]
        C41fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C42 fraction")]
        C42fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C43 fraction")]
        C43fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C44 fraction")]
        C44fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C45 fraction")]
        C45fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C46 fraction")]
        C46fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C47 fraction")]
        C47fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C48 fraction")]
        C48fraction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C49 fraction")]
        C49fraction,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum FluidComponentKind {
        
        /// <remarks/>
        pure,
        
        /// <remarks/>
        frac,
        
        /// <remarks/>
        plus,
        
        /// <remarks/>
        split,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fluidResultDataQuality {
        
        private DataQuality qualityField;
        
        private string sourceField;
        
        private string purposeField;
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("quality", DataType="DataQuality")]
        public DataQuality quality {
            get {
                return this.qualityField;
            }
            set {
                this.qualityField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("source", DataType="nameString")]
        public string source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("purpose", DataType="descriptionString")]
        public string purpose {
            get {
                return this.purposeField;
            }
            set {
                this.purposeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum DataQuality {
        
        /// <remarks/>
        best,
        
        /// <remarks/>
        good,
        
        /// <remarks/>
        fair,
        
        /// <remarks/>
        poor,
        
        /// <remarks/>
        invalid,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("PRODML", "1.3.1.1")]
    public partial class obj_fluidAnalysisResult {
        
        private string nameFluidSampleField;
        
        private string nameFluidAnalysisField;
        
        private string nameField;
        
        private pressureMeasure transferPressureField;
        
        private thermodynamicTemperatureMeasure transferTemperatureField;
        
        private pressureMeasure reservoirPressureField;
        
        private thermodynamicTemperatureMeasure reservoirTemperatureField;
        
        private pressureMeasure saturationPressureField;
        
        private standardVolumePerStandardVolumeMeasure producingGORStdField;
        
        private densityMeasure oilAPIGravityMeasuredField;
        
        private densityMeasure oilAPIGravityCorrectedField;
        
        private double gasGravityMeasuredField;
        
        private bool gasGravityMeasuredFieldSpecified;
        
        private double gasGravityCorrectedField;
        
        private bool gasGravityCorrectedFieldSpecified;
        
        private double h2oGravityMeasuredField;
        
        private bool h2oGravityMeasuredFieldSpecified;
        
        private double h2oGravityCorrectedField;
        
        private bool h2oGravityCorrectedFieldSpecified;
        
        private massConcentrationMeasure h2oSalinityField;
        
        private massConcentrationMeasurePercent aromaticsWeightPercentField;
        
        private massConcentrationMeasurePercent asphaltenesWeightPercentField;
        
        private massConcentrationMeasurePercent napthenesWeightPercentField;
        
        private massConcentrationMeasurePercent parafinsWeightPercentField;
        
        private pressureMeasure standardPressureField;
        
        private thermodynamicTemperatureMeasure standardTemperatureField;
        
        private EosModelKind eosMOdelField;
        
        private bool eosMOdelFieldSpecified;
        
        private string analysisDescriptionField;
        
        private string analysisPurposeField;
        
        private cs_fluidResultDataQuality fluidDataQualityField;
        
        private cs_fluidResultComposition[] fluidSampleCompositionField;
        
        private object[] itemsField;
        
        private cs_fluidResultContaminant[] fluidSampleContaminantField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidFluidSampleField;
        
        private string uidFluidAnalysisField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the fluid sample that was analyzed.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the fluid sample that was analyzed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameFluidSample", DataType="nameString")]
        public string nameFluidSample {
            get {
                return this.nameFluidSampleField;
            }
            set {
                this.nameFluidSampleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the fluid analysis that produced this result.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the fluid analysis that produced this result.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameFluidAnalysis", DataType="nameString")]
        public string nameFluidAnalysis {
            get {
                return this.nameFluidAnalysisField;
            }
            set {
                this.nameFluidAnalysisField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the Fluid Analysis Result.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the Fluid Analysis Result.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("transferPressure", DataType="pressureMeasure")]
        public pressureMeasure transferPressure {
            get {
                return this.transferPressureField;
            }
            set {
                this.transferPressureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("transferTemperature", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure transferTemperature {
            get {
                return this.transferTemperatureField;
            }
            set {
                this.transferTemperatureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reservoirPressure", DataType="pressureMeasure")]
        public pressureMeasure reservoirPressure {
            get {
                return this.reservoirPressureField;
            }
            set {
                this.reservoirPressureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reservoirTemperature", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure reservoirTemperature {
            get {
                return this.reservoirTemperatureField;
            }
            set {
                this.reservoirTemperatureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("saturationPressure", DataType="pressureMeasure")]
        public pressureMeasure saturationPressure {
            get {
                return this.saturationPressureField;
            }
            set {
                this.saturationPressureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("producingGORStd", DataType="standardVolumePerStandardVolumeMeasure")]
        public standardVolumePerStandardVolumeMeasure producingGORStd {
            get {
                return this.producingGORStdField;
            }
            set {
                this.producingGORStdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilAPIGravityMeasured", DataType="densityMeasure")]
        public densityMeasure oilAPIGravityMeasured {
            get {
                return this.oilAPIGravityMeasuredField;
            }
            set {
                this.oilAPIGravityMeasuredField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilAPIGravityCorrected", DataType="densityMeasure")]
        public densityMeasure oilAPIGravityCorrected {
            get {
                return this.oilAPIGravityCorrectedField;
            }
            set {
                this.oilAPIGravityCorrectedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasGravityMeasured", DataType="unitlessQuantity")]
        public double gasGravityMeasured {
            get {
                return this.gasGravityMeasuredField;
            }
            set {
                this.gasGravityMeasuredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gasGravityMeasuredSpecified {
            get {
                return this.gasGravityMeasuredFieldSpecified;
            }
            set {
                this.gasGravityMeasuredFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasGravityCorrected", DataType="unitlessQuantity")]
        public double gasGravityCorrected {
            get {
                return this.gasGravityCorrectedField;
            }
            set {
                this.gasGravityCorrectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gasGravityCorrectedSpecified {
            get {
                return this.gasGravityCorrectedFieldSpecified;
            }
            set {
                this.gasGravityCorrectedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("h2oGravityMeasured", DataType="unitlessQuantity")]
        public double h2oGravityMeasured {
            get {
                return this.h2oGravityMeasuredField;
            }
            set {
                this.h2oGravityMeasuredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool h2oGravityMeasuredSpecified {
            get {
                return this.h2oGravityMeasuredFieldSpecified;
            }
            set {
                this.h2oGravityMeasuredFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("h2oGravityCorrected", DataType="unitlessQuantity")]
        public double h2oGravityCorrected {
            get {
                return this.h2oGravityCorrectedField;
            }
            set {
                this.h2oGravityCorrectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool h2oGravityCorrectedSpecified {
            get {
                return this.h2oGravityCorrectedFieldSpecified;
            }
            set {
                this.h2oGravityCorrectedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("h2oSalinity", DataType="massConcentrationMeasure")]
        public massConcentrationMeasure h2oSalinity {
            get {
                return this.h2oSalinityField;
            }
            set {
                this.h2oSalinityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("aromaticsWeightPercent", DataType="massConcentrationMeasurePercent")]
        public massConcentrationMeasurePercent aromaticsWeightPercent {
            get {
                return this.aromaticsWeightPercentField;
            }
            set {
                this.aromaticsWeightPercentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("asphaltenesWeightPercent", DataType="massConcentrationMeasurePercent")]
        public massConcentrationMeasurePercent asphaltenesWeightPercent {
            get {
                return this.asphaltenesWeightPercentField;
            }
            set {
                this.asphaltenesWeightPercentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("napthenesWeightPercent", DataType="massConcentrationMeasurePercent")]
        public massConcentrationMeasurePercent napthenesWeightPercent {
            get {
                return this.napthenesWeightPercentField;
            }
            set {
                this.napthenesWeightPercentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("parafinsWeightPercent", DataType="massConcentrationMeasurePercent")]
        public massConcentrationMeasurePercent parafinsWeightPercent {
            get {
                return this.parafinsWeightPercentField;
            }
            set {
                this.parafinsWeightPercentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The definition of standard pressure for all elements which end in "Std".</summary>
        [System.ComponentModel.DescriptionAttribute("The definition of standard pressure for all elements which end in \"Std\".")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("standardPressure", DataType="pressureMeasure")]
        public pressureMeasure standardPressure {
            get {
                return this.standardPressureField;
            }
            set {
                this.standardPressureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The definition of standard temperature for all elements which end in "Std".</summary>
        [System.ComponentModel.DescriptionAttribute("The definition of standard temperature for all elements which end in \"Std\".")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("standardTemperature", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure standardTemperature {
            get {
                return this.standardTemperatureField;
            }
            set {
                this.standardTemperatureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eosMOdel", DataType="EosModelKind")]
        public EosModelKind eosMOdel {
            get {
                return this.eosMOdelField;
            }
            set {
                this.eosMOdelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eosMOdelSpecified {
            get {
                return this.eosMOdelFieldSpecified;
            }
            set {
                this.eosMOdelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("analysisDescription", DataType="descriptionString")]
        public string analysisDescription {
            get {
                return this.analysisDescriptionField;
            }
            set {
                this.analysisDescriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("analysisPurpose", DataType="descriptionString")]
        public string analysisPurpose {
            get {
                return this.analysisPurposeField;
            }
            set {
                this.analysisPurposeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fluidDataQuality", DataType="cs_fluidResultDataQuality")]
        public cs_fluidResultDataQuality fluidDataQuality {
            get {
                return this.fluidDataQualityField;
            }
            set {
                this.fluidDataQualityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.Xml.Serialization.XmlElementAttribute("fluidSampleComposition")]
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fluidSampleComposition", DataType="cs_fluidResultComposition")]
        public cs_fluidResultComposition[] fluidSampleComposition {
            get {
                return this.fluidSampleCompositionField;
            }
            set {
                this.fluidSampleCompositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("constantCompositionExpansionTest", typeof(cs_fluidResultConstantCompositionExpansionTest))]
        [System.Xml.Serialization.XmlElementAttribute("constantVolumeDepletionTest", typeof(cs_fluidResultConstantVolumeDepletionTest))]
        [System.Xml.Serialization.XmlElementAttribute("differentialLiberationTest", typeof(cs_fluidResultDifferentialLiberationTest))]
        [System.Xml.Serialization.XmlElementAttribute("jCurveTest", typeof(cs_fluidResultJCurveTest))]
        [System.Xml.Serialization.XmlElementAttribute("saturationTest", typeof(cs_fluidResultSaturationTest))]
        [System.Xml.Serialization.XmlElementAttribute("separatorTest", typeof(cs_fluidResultSeparatorTest))]
        [System.Xml.Serialization.XmlElementAttribute("transportPropertiesTest", typeof(cs_fluidResultTransportPropertiesTest))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("saturationTest", DataType="cs_fluidResultSaturationTest")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("constantCompositionExpansionTest", DataType="cs_fluidResultConstantCompositionExpansionTest")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("constantVolumeDepletionTest", DataType="cs_fluidResultConstantVolumeDepletionTest")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("differentialLiberationTest", DataType="cs_fluidResultDifferentialLiberationTest")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("jCurveTest", DataType="cs_fluidResultJCurveTest")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("transportPropertiesTest", DataType="cs_fluidResultTransportPropertiesTest")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("separatorTest", DataType="cs_fluidResultSeparatorTest")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.Xml.Serialization.XmlElementAttribute("fluidSampleContaminant")]
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fluidSampleContaminant", DataType="cs_fluidResultContaminant")]
        public cs_fluidResultContaminant[] fluidSampleContaminant {
            get {
                return this.fluidSampleContaminantField;
            }
            set {
                this.fluidSampleContaminantField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the Fluid Sample that was analyzed.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the Fluid Sample that was analyzed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidFluidSample", DataType="refString")]
        public string uidFluidSample {
            get {
                return this.uidFluidSampleField;
            }
            set {
                this.uidFluidSampleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the Fluid Analysis that produced this result.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the Fluid Analysis that produced this result.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidFluidAnalysis", DataType="refString")]
        public string uidFluidAnalysis {
            get {
                return this.uidFluidAnalysisField;
            }
            set {
                this.uidFluidAnalysisField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum EosModelKind {
        
        /// <remarks/>
        bwrs,
        
        /// <remarks/>
        cubeos,
        
        /// <remarks/>
        pr,
        
        /// <remarks/>
        prvt,
        
        /// <remarks/>
        srk,
        
        /// <remarks/>
        srkvt,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("PRODML", "1.3.1.1")]
    public partial class obj_fluidAnalysis {
        
        private string nameField;
        
        private object itemField;
        
        private System.DateTime analysisdDateField;
        
        private bool analysisdDateFieldSpecified;
        
        private string applicationNameField;
        
        private string applicationVersionField;
        
        private string analysisCompanyField;
        
        private string personNameField;
        
        private string reportIdentifierField;
        
        private System.DateTime reportDateField;
        
        private bool reportDateFieldSpecified;
        
        private string reportLocationField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The name of the Fluid Analysis.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the Fluid Analysis.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("laboratorybAnalysisKind", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("userAnalysisKind", typeof(FluidAnalysisKind))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("userAnalysisKind", DataType="FluidAnalysisKind")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("laboratorybAnalysisKind", DataType="kindString")]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("analysisdDate", DataType="date")]
        public System.DateTime analysisdDate {
            get {
                return this.analysisdDateField;
            }
            set {
                this.analysisdDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool analysisdDateSpecified {
            get {
                return this.analysisdDateFieldSpecified;
            }
            set {
                this.analysisdDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the application that was run by the user.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the application that was run by the user.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("applicationName", DataType="nameString")]
        public string applicationName {
            get {
                return this.applicationNameField;
            }
            set {
                this.applicationNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The version of the application that was run by the user.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The version of the application that was run by the user.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("applicationVersion", DataType="nameString")]
        public string applicationVersion {
            get {
                return this.applicationVersionField;
            }
            set {
                this.applicationVersionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("analysisCompany", DataType="nameString")]
        public string analysisCompany {
            get {
                return this.analysisCompanyField;
            }
            set {
                this.analysisCompanyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the analyst or user who is responsible for the results.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the analyst or user who is responsible for the results.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("personName", DataType="nameString")]
        public string personName {
            get {
                return this.personNameField;
            }
            set {
                this.personNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reportIdentifier", DataType="nameString")]
        public string reportIdentifier {
            get {
                return this.reportIdentifierField;
            }
            set {
                this.reportIdentifierField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reportDate", DataType="date")]
        public System.DateTime reportDate {
            get {
                return this.reportDateField;
            }
            set {
                this.reportDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reportDateSpecified {
            get {
                return this.reportDateFieldSpecified;
            }
            set {
                this.reportDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>xxxxxxxxxxxxxxxx</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("xxxxxxxxxxxxxxxx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reportLocation", DataType="descriptionString")]
        public string reportLocation {
            get {
                return this.reportLocationField;
            }
            set {
                this.reportLocationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum FluidAnalysisKind {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("quality control")]
        qualitycontrol,
        
        /// <remarks/>
        calc,
        
        /// <remarks/>
        bus,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fiberOTDR {
        
        private string nameField;
        
        private OTDRReason reasonForRunField;
        
        private bool reasonForRunFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimRunField;
        
        private refNameString dataInOTDRFileField;
        
        private refNameString oTDRImageFileField;
        
        private cs_fiberOTDRInstrumentBox oTDRInstrumentField;
        
        private lengthMeasure opticalPathDistanceStartField;
        
        private lengthMeasure opticalPathDistanceEndField;
        
        private OTDRDirection directionField;
        
        private lengthMeasure wavelengthField;
        
        private cs_businessAssociate measurementContactField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The name for this OTDR.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name for this OTDR.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The reason the OTDR test was run. The three main reasons are pre-installation' which is before the installation of the fiber; 'post-installation'  which is used to validate a successful fiber installation;  and 'DTS run' a quality check of the fiber prior to a DTS run. A fourth permitted value is 'other'.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The reason the OTDR test was run. The three main reasons are pre-installation' which is before the installation of the fiber; 'post-installation'  which is used to validate a successful fiber installation;  and 'DTS run' a quality check of the fiber prior to a DTS run. A fourth permitted value is 'other'.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reasonForRun", DataType="OTDRReason")]
        public OTDRReason reasonForRun {
            get {
                return this.reasonForRunField;
            }
            set {
                this.reasonForRunField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reasonForRunSpecified {
            get {
                return this.reasonForRunFieldSpecified;
            }
            set {
                this.reasonForRunFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The dateTime of the run.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The dateTime of the run.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimRun", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimRun {
            get {
                return this.dTimRunField;
            }
            set {
                this.dTimRunField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A reference to the external file used to record the OTDR data. Note this file will not be in an Energistics format but likely in a special OTDR format.</summary>
        [System.ComponentModel.DescriptionAttribute("A reference to the external file used to record the OTDR data. Note this file wil" +
            "l not be in an Energistics format but likely in a special OTDR format.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dataInOTDRFile", DataType="refNameString")]
        public refNameString dataInOTDRFile {
            get {
                return this.dataInOTDRFileField;
            }
            set {
                this.dataInOTDRFileField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A reference to the well log used to record the table of data.</summary>
        [System.ComponentModel.DescriptionAttribute("A reference to the well log used to record the table of data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("OTDRImageFile", DataType="refNameString")]
        public refNameString OTDRImageFile {
            get {
                return this.oTDRImageFileField;
            }
            set {
                this.oTDRImageFileField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A reference to the instrument box that was used for the OTDR run</summary>
        [System.ComponentModel.DescriptionAttribute("A reference to the instrument box that was used for the OTDR run")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("OTDRInstrument", DataType="cs_fiberOTDRInstrumentBox")]
        public cs_fiberOTDRInstrumentBox OTDRInstrument {
            get {
                return this.oTDRInstrumentField;
            }
            set {
                this.oTDRInstrumentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The point measured along the optical path at which this OTDR survey starts.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The point measured along the optical path at which this OTDR survey starts.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("opticalPathDistanceStart", DataType="lengthMeasure")]
        public lengthMeasure opticalPathDistanceStart {
            get {
                return this.opticalPathDistanceStartField;
            }
            set {
                this.opticalPathDistanceStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The point measured along the optical path at which this OTDR survey ends.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The point measured along the optical path at which this OTDR survey ends.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("opticalPathDistanceEnd", DataType="lengthMeasure")]
        public lengthMeasure opticalPathDistanceEnd {
            get {
                return this.opticalPathDistanceEndField;
            }
            set {
                this.opticalPathDistanceEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Enum. The direction of the OTDR survey.  "Forward"  means "in the same direction as the positive direction along the optical path".</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Enum. The direction of the OTDR survey.  \"Forward\"  means \"in the same direction " +
            "as the positive direction along the optical path\".")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("direction", DataType="OTDRDirection")]
        public OTDRDirection direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The wavelength at which this OTDR survey was carried out.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The wavelength at which this OTDR survey was carried out.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wavelength", DataType="lengthMeasure")]
        public lengthMeasure wavelength {
            get {
                return this.wavelengthField;
            }
            set {
                this.wavelengthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Contact for the person who performed the OTDR reading</summary>
        [System.ComponentModel.DescriptionAttribute("Contact for the person who performed the OTDR reading")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("measurementContact", DataType="cs_businessAssociate")]
        public cs_businessAssociate measurementContact {
            get {
                return this.measurementContactField;
            }
            set {
                this.measurementContactField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum OTDRReason {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pre-installation")]
        preinstallation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("post-installation")]
        postinstallation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DTS run")]
        DTSrun,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fiberOTDRInstrumentBox : cs_instrument {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cs_fiberOTDRInstrumentBox))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(grp_dtsInstrumentBox))]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_instrument : cs_dtsEquipment {
        
        private cs_businessAssociate instrumentVendorField;
        
        /// <remarks/>
        /// <summary>Contact information for the person/company that provided the equipment</summary>
        [System.ComponentModel.DescriptionAttribute("Contact information for the person/company that provided the equipment")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("instrumentVendor", DataType="cs_businessAssociate")]
        public cs_businessAssociate instrumentVendor {
            get {
                return this.instrumentVendorField;
            }
            set {
                this.instrumentVendorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cs_fiberCommon))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cs_fiberTerminator))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cs_fiberConnection))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cs_fiberSplice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cs_fiberTurnaround))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cs_fiberOpticalPathSegment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cs_instrument))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cs_fiberOTDRInstrumentBox))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(grp_dtsInstrumentBox))]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public abstract partial class cs_dtsEquipment {
        
        private string nameField;
        
        private string manufacturerField;
        
        private System.DateTime manufacturingDateField;
        
        private bool manufacturingDateFieldSpecified;
        
        private string typeField;
        
        private cs_businessAssociate supplierField;
        
        private System.DateTime supplyDateField;
        
        private bool supplyDateFieldSpecified;
        
        private string supplierModelNumberField;
        
        private string softwareVersionField;
        
        private string commentField;
        
        /// <remarks/>
        /// <summary>The name for the item of equipment.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name for the item of equipment.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The manufacturer for this item of equipment.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The manufacturer for this item of equipment.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("manufacturer", DataType="nameString")]
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date when the equipment (e.g. instrument box) was manufactured</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DescriptionAttribute("Date when the equipment (e.g. instrument box) was manufactured")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("manufacturingDate", DataType="date")]
        public System.DateTime manufacturingDate {
            get {
                return this.manufacturingDateField;
            }
            set {
                this.manufacturingDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool manufacturingDateSpecified {
            get {
                return this.manufacturingDateFieldSpecified;
            }
            set {
                this.manufacturingDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of equipment. This might include the model type.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The type of equipment. This might include the model type.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("type", DataType="kindString")]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Contact details for the company/person supplying the equipment.</summary>
        [System.ComponentModel.DescriptionAttribute("Contact details for the company/person supplying the equipment.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("supplier", DataType="cs_businessAssociate")]
        public cs_businessAssociate supplier {
            get {
                return this.supplierField;
            }
            set {
                this.supplierField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date on which this fiber segment was suppied.</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DescriptionAttribute("The date on which this fiber segment was suppied.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("supplyDate", DataType="date")]
        public System.DateTime supplyDate {
            get {
                return this.supplyDateField;
            }
            set {
                this.supplyDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool supplyDateSpecified {
            get {
                return this.supplyDateFieldSpecified;
            }
            set {
                this.supplyDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The model number (alphanumeric) that is used by the supplier to reference the type of fiber that is supplied to the user.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The model number (alphanumeric) that is used by the supplier to reference the typ" +
            "e of fiber that is supplied to the user.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("supplierModelNumber", DataType="nameString")]
        public string supplierModelNumber {
            get {
                return this.supplierModelNumberField;
            }
            set {
                this.supplierModelNumberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Latest known version of the software/firmware that is running in the equipment</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Latest known version of the software/firmware that is running in the equipment")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("softwareVersion", DataType="nameString")]
        public string softwareVersion {
            get {
                return this.softwareVersionField;
            }
            set {
                this.softwareVersionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A descriptive remark about the equipment (e.g. optical fiber)</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A descriptive remark about the equipment (e.g. optical fiber)")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cs_fiberTerminator))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cs_fiberConnection))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cs_fiberSplice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cs_fiberTurnaround))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cs_fiberOpticalPathSegment))]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fiberCommon : cs_dtsEquipment {
        
        private dimensionlessMeasure reflectanceField;
        
        private dimensionlessMeasure lossField;
        
        private string reasonForDecommissioningField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The fraction of incident light that is reflected by a fiber path component. Measured in dB.</summary>
        [System.ComponentModel.DescriptionAttribute("The fraction of incident light that is reflected by a fiber path component. Measu" +
            "red in dB.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reflectance", DataType="dimensionlessMeasure")]
        public dimensionlessMeasure reflectance {
            get {
                return this.reflectanceField;
            }
            set {
                this.reflectanceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The fraction of incident light that is lost by a fiber path component. Measured in dB.</summary>
        [System.ComponentModel.DescriptionAttribute("The fraction of incident light that is lost by a fiber path component. Measured i" +
            "n dB.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("loss", DataType="dimensionlessMeasure")]
        public dimensionlessMeasure loss {
            get {
                return this.lossField;
            }
            set {
                this.lossField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Any remarks that help understand why the optical fiber is no longer in use.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Any remarks that help understand why the optical fiber is no longer in use.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reasonForDecommissioning", DataType="commentString")]
        public string reasonForDecommissioning {
            get {
                return this.reasonForDecommissioningField;
            }
            set {
                this.reasonForDecommissioningField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fiberTerminator : cs_fiberCommon {
        
        private TerminationType terminationTypeField;
        
        /// <remarks/>
        /// <summary>Information about the termination used for the fiber</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Information about the termination used for the fiber")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("terminationType", DataType="TerminationType")]
        public TerminationType terminationType {
            get {
                return this.terminationTypeField;
            }
            set {
                this.terminationTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum TerminationType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("looped back to instrument box")]
        loopedbacktoinstrumentbox,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("termination at cable")]
        terminationatcable,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fiberConnection : cs_fiberCommon {
        
        private FiberConnectorTypes[] connectorTypeField;
        
        private FiberEndType[] endTypeField;
        
        private string connectionIDField;
        
        /// <remarks/>
        /// <summary>Specifies whether this is a dry mate or wet mate</summary>
        [System.Xml.Serialization.XmlElementAttribute("connectorType")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Specifies whether this is a dry mate or wet mate")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("connectorType", DataType="FiberConnectorTypes")]
        public FiberConnectorTypes[] connectorType {
            get {
                return this.connectorTypeField;
            }
            set {
                this.connectorTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Describes whether the fiber end is angle polished or flat polished</summary>
        [System.Xml.Serialization.XmlElementAttribute("endType")]
        [System.ComponentModel.DescriptionAttribute("Describes whether the fiber end is angle polished or flat polished")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("endType", DataType="FiberEndType")]
        public FiberEndType[] endType {
            get {
                return this.endTypeField;
            }
            set {
                this.endTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The uid of this object.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The uid of this object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("connectionID", DataType="uidString")]
        public string connectionID {
            get {
                return this.connectionIDField;
            }
            set {
                this.connectionIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum FiberConnectorTypes {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dry mate")]
        drymate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wet mate")]
        wetmate,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum FiberEndType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("angle polished")]
        anglepolished,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("flat polished")]
        flatpolished,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fiberSplice : cs_fiberCommon {
        
        private FiberSpliceTypes fiberSpliceTypeField;
        
        private PressureUom pressureRatingField;
        
        private bool pressureRatingFieldSpecified;
        
        private PlaneAngleUom bendAngleField;
        
        private bool bendAngleFieldSpecified;
        
        private string spliceEquipmentUsedField;
        
        private string strippingTypeField;
        
        private string protectorTypeField;
        
        /// <remarks/>
        /// <summary>Enum.  The type of splice.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Enum.  The type of splice.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fiberSpliceType", DataType="FiberSpliceTypes")]
        public FiberSpliceTypes fiberSpliceType {
            get {
                return this.fiberSpliceTypeField;
            }
            set {
                this.fiberSpliceTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The pressure rating for which the splice is expected to withstand</summary>
        [System.ComponentModel.DescriptionAttribute("The pressure rating for which the splice is expected to withstand")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pressureRating", DataType="PressureUom")]
        public PressureUom pressureRating {
            get {
                return this.pressureRatingField;
            }
            set {
                this.pressureRatingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pressureRatingSpecified {
            get {
                return this.pressureRatingFieldSpecified;
            }
            set {
                this.pressureRatingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measurement of the bend on the splice.</summary>
        [System.ComponentModel.DescriptionAttribute("The measurement of the bend on the splice.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bendAngle", DataType="PlaneAngleUom")]
        public PlaneAngleUom bendAngle {
            get {
                return this.bendAngleField;
            }
            set {
                this.bendAngleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bendAngleSpecified {
            get {
                return this.bendAngleFieldSpecified;
            }
            set {
                this.bendAngleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A useful description of the equipment used to create the splice</summary>
        [System.ComponentModel.DescriptionAttribute("A useful description of the equipment used to create the splice")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("spliceEquipmentUsed", DataType="string")]
        public string spliceEquipmentUsed {
            get {
                return this.spliceEquipmentUsedField;
            }
            set {
                this.spliceEquipmentUsedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A useful description of the stripping type that was conducted</summary>
        [System.ComponentModel.DescriptionAttribute("A useful description of the stripping type that was conducted")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("strippingType", DataType="string")]
        public string strippingType {
            get {
                return this.strippingTypeField;
            }
            set {
                this.strippingTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A useful description of the type of protector used in the splice.</summary>
        [System.ComponentModel.DescriptionAttribute("A useful description of the type of protector used in the splice.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("protectorType", DataType="string")]
        public string protectorType {
            get {
                return this.protectorTypeField;
            }
            set {
                this.protectorTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum FiberSpliceTypes {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cable splice")]
        cablesplice,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("h splice")]
        hsplice,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("user-custom")]
        usercustom,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fiberTurnaround : cs_fiberCommon {
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fiberOpticalPathSegment : cs_fiberCommon {
        
        private lengthMeasure fiberLengthField;
        
        private lengthMeasure overStuffingField;
        
        private lengthMeasure coreDiameterField;
        
        private lengthMeasure claddedDiameterField;
        
        private lengthMeasure outsideDiameterField;
        
        private FiberMode modeField;
        
        private bool modeFieldSpecified;
        
        private string coatingField;
        
        private string jacketField;
        
        private string coreTypeField;
        
        private indexedObject[] parameterField;
        
        private string spoolNumberTagField;
        
        private lengthMeasure spoolLengthField;
        
        private cs_fiberRefractiveIndex[] refractiveIndexField;
        
        private cs_fiberOneWayAttenuation[] oneWayAttenuationField;
        
        private cs_fiberConveyance fiberConveyanceField;
        
        private CableType cableTypeField;
        
        private bool cableTypeFieldSpecified;
        
        /// <remarks/>
        /// <summary>The length of fiber in this optical path section.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The length of fiber in this optical path section.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fiberLength", DataType="lengthMeasure")]
        public lengthMeasure fiberLength {
            get {
                return this.fiberLengthField;
            }
            set {
                this.fiberLengthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>For this fiber segment, the amount of "overstuffing", ie the excess length of fiber which was installed compared to the length of the facility which is to be surveyed. Example, if 110m of fiber were to be installed to measure 100m length of pipeline, the overstuffing would be 10m.  Overstuffing can be allowed for in the facilityMapping section. The overstuffing is assumed to be linear distributed along the facility being measured.</summary>
        [System.ComponentModel.DescriptionAttribute(@"For this fiber segment, the amount of ""overstuffing"", ie the excess length of fiber which was installed compared to the length of the facility which is to be surveyed. Example, if 110m of fiber were to be installed to measure 100m length of pipeline, the overstuffing would be 10m.  Overstuffing can be allowed for in the facilityMapping section. The overstuffing is assumed to be linear distributed along the facility being measured.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("overStuffing", DataType="lengthMeasure")]
        public lengthMeasure overStuffing {
            get {
                return this.overStuffingField;
            }
            set {
                this.overStuffingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The inner diameter of the core, generally measured in microns (um).</summary>
        [System.ComponentModel.DescriptionAttribute("The inner diameter of the core, generally measured in microns (um).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("coreDiameter", DataType="lengthMeasure")]
        public lengthMeasure coreDiameter {
            get {
                return this.coreDiameterField;
            }
            set {
                this.coreDiameterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The diameter of the core plus the cladding, generally measured in microns (um).</summary>
        [System.ComponentModel.DescriptionAttribute("The diameter of the core plus the cladding, generally measured in microns (um).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("claddedDiameter", DataType="lengthMeasure")]
        public lengthMeasure claddedDiameter {
            get {
                return this.claddedDiameterField;
            }
            set {
                this.claddedDiameterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The diameter of the cable containing the fiber, including all its sheathing layers.</summary>
        [System.ComponentModel.DescriptionAttribute("The diameter of the cable containing the fiber, including all its sheathing layer" +
            "s.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("outsideDiameter", DataType="lengthMeasure")]
        public lengthMeasure outsideDiameter {
            get {
                return this.outsideDiameterField;
            }
            set {
                this.outsideDiameterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The mode of fiber.  Enum. Values are single- or multi- mode fiber, or other/unknown.</summary>
        [System.ComponentModel.DescriptionAttribute("The mode of fiber.  Enum. Values are single- or multi- mode fiber, or other/unkno" +
            "wn.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mode", DataType="FiberMode")]
        public FiberMode mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool modeSpecified {
            get {
                return this.modeFieldSpecified;
            }
            set {
                this.modeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of coating on the fiber.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The type of coating on the fiber.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("coating", DataType="kindString")]
        public string coating {
            get {
                return this.coatingField;
            }
            set {
                this.coatingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of jacket covering the fiber.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The type of jacket covering the fiber.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("jacket", DataType="kindString")]
        public string jacket {
            get {
                return this.jacketField;
            }
            set {
                this.jacketField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Property of the fiber core.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("Property of the fiber core.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("coreType", DataType="kindString")]
        public string coreType {
            get {
                return this.coreTypeField;
            }
            set {
                this.coreTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Additional parameters to define the fiber as a material.</summary>
        [System.Xml.Serialization.XmlElementAttribute("parameter")]
        [System.ComponentModel.DescriptionAttribute("Additional parameters to define the fiber as a material.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("parameter", DataType="indexedObject")]
        public indexedObject[] parameter {
            get {
                return this.parameterField;
            }
            set {
                this.parameterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The spool number of the particular spool from which this fiber segement was taken. The spool number may contain alphanumeric characters.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The spool number of the particular spool from which this fiber segement was taken" +
            ". The spool number may contain alphanumeric characters.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("spoolNumberTag", DataType="kindString")]
        public string spoolNumberTag {
            get {
                return this.spoolNumberTagField;
            }
            set {
                this.spoolNumberTagField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The length of the fiber on the spool when purchased.</summary>
        [System.ComponentModel.DescriptionAttribute("The length of the fiber on the spool when purchased.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("spoolLength", DataType="lengthMeasure")]
        public lengthMeasure spoolLength {
            get {
                return this.spoolLengthField;
            }
            set {
                this.spoolLengthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The refractive index of a material depends on the frequency (or wavelength) of the light. Hence it is necessary to include both the value (a unitless number) and the frequency (or wavelength) it was measured at. The frequency will be a quantity type with a frequency unit such as Hz.</summary>
        [System.Xml.Serialization.XmlElementAttribute("refractiveIndex")]
        [System.ComponentModel.DescriptionAttribute(@"The refractive index of a material depends on the frequency (or wavelength) of the light. Hence it is necessary to include both the value (a unitless number) and the frequency (or wavelength) it was measured at. The frequency will be a quantity type with a frequency unit such as Hz.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("refractiveIndex", DataType="cs_fiberRefractiveIndex")]
        public cs_fiberRefractiveIndex[] refractiveIndex {
            get {
                return this.refractiveIndexField;
            }
            set {
                this.refractiveIndexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The power loss for one way travel of a beam of light, usually measured in decibels per unit length. It is necessary to include both the value (and its unit) and the wavelength. The wavelength varies with the refractive index, while the frequency remains constant.  The wavelength given to specify this type is the wavelength in a vacuum (refractive index = 1).</summary>
        [System.Xml.Serialization.XmlElementAttribute("oneWayAttenuation")]
        [System.ComponentModel.DescriptionAttribute(@"The power loss for one way travel of a beam of light, usually measured in decibels per unit length. It is necessary to include both the value (and its unit) and the wavelength. The wavelength varies with the refractive index, while the frequency remains constant.  The wavelength given to specify this type is the wavelength in a vacuum (refractive index = 1).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oneWayAttenuation", DataType="cs_fiberOneWayAttenuation")]
        public cs_fiberOneWayAttenuation[] oneWayAttenuation {
            get {
                return this.oneWayAttenuationField;
            }
            set {
                this.oneWayAttenuationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The means by which this fiber segment is conveyed into the well.</summary>
        [System.ComponentModel.DescriptionAttribute("The means by which this fiber segment is conveyed into the well.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fiberConveyance", DataType="cs_fiberConveyance")]
        public cs_fiberConveyance fiberConveyance {
            get {
                return this.fiberConveyanceField;
            }
            set {
                this.fiberConveyanceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>ENUM: The type of cable used in this segment.  Example: single-fiber-cable</summary>
        [System.ComponentModel.DescriptionAttribute("ENUM: The type of cable used in this segment.  Example: single-fiber-cable")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cableType", DataType="CableType")]
        public CableType cableType {
            get {
                return this.cableTypeField;
            }
            set {
                this.cableTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cableTypeSpecified {
            get {
                return this.cableTypeFieldSpecified;
            }
            set {
                this.cableTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum FiberMode {
        
        /// <remarks/>
        singlemode,
        
        /// <remarks/>
        multimode,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class indexedObject {
        
        private short indexField;
        
        private string nameField;
        
        private string uomField;
        
        private string descriptionField;
        
        private string valueField;
        
        /// <remarks/>
        /// <summary>Indexes things with the same name.  That is the first one, the second one, etc.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Indexes things with the same name.  That is the first one, the second one, etc.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("index", DataType="positiveCount")]
        public short index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="kindString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(24)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="uomString")]
        public string uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="descriptionString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fiberRefractiveIndex {
        
        private attenuationMeasure valueField;
        
        private frequencyMeasure frequencyField;
        
        private lengthMeasure wavelengthField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The value of the refractive index.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The value of the refractive index.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("value", DataType="attenuationMeasure")]
        public attenuationMeasure value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The frequency (and uom) for which the refractive index is measured.</summary>
        [System.ComponentModel.DescriptionAttribute("The frequency (and uom) for which the refractive index is measured.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("frequency", DataType="frequencyMeasure")]
        public frequencyMeasure frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The wavelength (and uom) for which the refractive index is measured. The reported wavelength should be the wavelength of the light in a vacuum.</summary>
        [System.ComponentModel.DescriptionAttribute("The wavelength (and uom) for which the refractive index is measured. The reported" +
            " wavelength should be the wavelength of the light in a vacuum.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wavelength", DataType="lengthMeasure")]
        public lengthMeasure wavelength {
            get {
                return this.wavelengthField;
            }
            set {
                this.wavelengthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fiberOneWayAttenuation {
        
        private attenuationMeasure valueField;
        
        private abstractMeasure itemField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The value of the one way loss per unit of length. The usual uom is decibels per kilometre (dB/km) although this might vary depending on the calibration method used.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The value of the one way loss per unit of length. The usual uom is decibels per k" +
            "ilometre (dB/km) although this might vary depending on the calibration method us" +
            "ed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("value", DataType="attenuationMeasure")]
        public attenuationMeasure value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("frequency", typeof(frequencyMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("wavelength", typeof(lengthMeasure))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("frequency", DataType="frequencyMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wavelength", DataType="lengthMeasure")]
        public abstractMeasure Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fiberConveyance {
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("fiberControlLine", typeof(cs_fiberControlLine))]
        [System.Xml.Serialization.XmlElementAttribute("intervention", typeof(cs_interventionConveyance))]
        [System.Xml.Serialization.XmlElementAttribute("permanent", typeof(cs_permanentCable))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("intervention", DataType="cs_interventionConveyance")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("permanent", DataType="cs_permanentCable")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fiberControlLine", DataType="cs_fiberControlLine")]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fiberControlLine {
        
        private ControlLineSize sizeField;
        
        private ControlLineMaterial materialField;
        
        private ControlLineEncapsulationType encapsulationTypeField;
        
        private ControlLineEncapsulationSize encapsulationSizeField;
        
        private string commentField;
        
        private cs_fiberPumpActivity[] pumpActivityField;
        
        private string downholeControlLineRefUIDField;
        
        /// <remarks/>
        /// <summary>Enum of the common sizes of control line. The enum list gives diameters and weight per length values.  A fiber may be installed inside the control line.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Enum of the common sizes of control line. The enum list gives diameters and weigh" +
            "t per length values.  A fiber may be installed inside the control line.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("size", DataType="ControlLineSize")]
        public ControlLineSize size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Enum of the common materials from which control line may be made.  A fiber may be installed inside the control line.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Enum of the common materials from which control line may be made.  A fiber may be" +
            " installed inside the control line.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("material", DataType="ControlLineMaterial")]
        public ControlLineMaterial material {
            get {
                return this.materialField;
            }
            set {
                this.materialField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Enum of square or round encapsulation  for a control line.   A fiber may be installed inside the control line.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Enum of square or round encapsulation  for a control line.   A fiber may be insta" +
            "lled inside the control line.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("encapsulationType", DataType="ControlLineEncapsulationType")]
        public ControlLineEncapsulationType encapsulationType {
            get {
                return this.encapsulationTypeField;
            }
            set {
                this.encapsulationTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Enum of the size of encapsulation of a fiber within a control line.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Enum of the size of encapsulation of a fiber within a control line.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("encapsulationSize", DataType="ControlLineEncapsulationSize")]
        public ControlLineEncapsulationSize encapsulationSize {
            get {
                return this.encapsulationSizeField;
            }
            set {
                this.encapsulationSizeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A descriptive remark about the fiber control line</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A descriptive remark about the fiber control line")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The activity of pumping the fiber downhole into a control line (small diameter tube).</summary>
        [System.Xml.Serialization.XmlElementAttribute("pumpActivity")]
        [System.ComponentModel.DescriptionAttribute("The activity of pumping the fiber downhole into a control line (small diameter tu" +
            "be).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pumpActivity", DataType="cs_fiberPumpActivity")]
        public cs_fiberPumpActivity[] pumpActivity {
            get {
                return this.pumpActivityField;
            }
            set {
                this.pumpActivityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A reference to the control line string in a Completion data-object which represents this control line containing a fiber.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A reference to the control line string in a Completion data-object which represen" +
            "ts this control line containing a fiber.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("downholeControlLineRefUID", DataType="refString")]
        public string downholeControlLineRefUID {
            get {
                return this.downholeControlLineRefUIDField;
            }
            set {
                this.downholeControlLineRefUIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ControlLineSize {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("diameter 0.25 in weight 0.028 lb/ft")]
        diameter025inweight0028lbft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("diameter 0.25 in weight 0.035 lb/ft")]
        diameter025inweight0035lbft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("diameter 0.375 in weight 0.048 lb/ft")]
        diameter0375inweight0048lbft,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ControlLineMaterial {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("inc 825")]
        inc825,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ss 316")]
        ss316,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ControlLineEncapsulationType {
        
        /// <remarks/>
        round,
        
        /// <remarks/>
        square,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ControlLineEncapsulationSize {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("11x11")]
        Item11x11,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("23x11")]
        Item23x11,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fiberPumpActivity {
        
        private string nameField;
        
        private refNameString installedFiberField;
        
        private System.DateTime pumpingDateField;
        
        private bool pumpingDateFieldSpecified;
        
        private string engineerNameField;
        
        private string serviceCompanyField;
        
        private string pumpFluidTypeField;
        
        private string controlLineFluidField;
        
        private string pumpDirectionField;
        
        private string fiberEndSealField;
        
        private string cableMeterTypeField;
        
        private string cableMeterSerialNumberField;
        
        private System.DateTime cableMeterCalibrationDateField;
        
        private bool cableMeterCalibrationDateFieldSpecified;
        
        private lengthMeasure excessFiberRecoveredField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string commentField;
        
        /// <remarks/>
        /// <summary>A name which can be used to reference the pumping activity. In general a pumping activity does not have a natural name so that this element will not be often used.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A name which can be used to reference the pumping activity. In general a pumping " +
            "activity does not have a natural name so that this element will not be often use" +
            "d.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the InstalledFiberInstance that this activity relates to.</summary>
        [System.ComponentModel.DescriptionAttribute("The name of the InstalledFiberInstance that this activity relates to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("installedFiber", DataType="refNameString")]
        public refNameString installedFiber {
            get {
                return this.installedFiberField;
            }
            set {
                this.installedFiberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date of the pumping activity.</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DescriptionAttribute("The date of the pumping activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pumpingDate", DataType="date")]
        public System.DateTime pumpingDate {
            get {
                return this.pumpingDateField;
            }
            set {
                this.pumpingDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pumpingDateSpecified {
            get {
                return this.pumpingDateFieldSpecified;
            }
            set {
                this.pumpingDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The person in charge of the pumping activity.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The person in charge of the pumping activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("engineerName", DataType="nameString")]
        public string engineerName {
            get {
                return this.engineerNameField;
            }
            set {
                this.engineerNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The company that performed the pumping activity.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The company that performed the pumping activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("serviceCompany", DataType="nameString")]
        public string serviceCompany {
            get {
                return this.serviceCompanyField;
            }
            set {
                this.serviceCompanyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of fluid used in the pump.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The type of fluid used in the pump.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pumpFluidType", DataType="kindString")]
        public string pumpFluidType {
            get {
                return this.pumpFluidTypeField;
            }
            set {
                this.pumpFluidTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of fluid used in the control line.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The type of fluid used in the control line.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("controlLineFluid", DataType="kindString")]
        public string controlLineFluid {
            get {
                return this.controlLineFluidField;
            }
            set {
                this.controlLineFluidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The direction of the pumping.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The direction of the pumping.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pumpDirection", DataType="kindString")]
        public string pumpDirection {
            get {
                return this.pumpDirectionField;
            }
            set {
                this.pumpDirectionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of end seal on the fiber.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The type of end seal on the fiber.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fiberEndSeal", DataType="kindString")]
        public string fiberEndSeal {
            get {
                return this.fiberEndSealField;
            }
            set {
                this.fiberEndSealField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of cable meter.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The type of cable meter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cableMeterType", DataType="kindString")]
        public string cableMeterType {
            get {
                return this.cableMeterTypeField;
            }
            set {
                this.cableMeterTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The serial number of the cable meter.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The serial number of the cable meter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cableMeterSerialNumber", DataType="nameString")]
        public string cableMeterSerialNumber {
            get {
                return this.cableMeterSerialNumberField;
            }
            set {
                this.cableMeterSerialNumberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date the cable meter was calibrated.</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DescriptionAttribute("The date the cable meter was calibrated.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cableMeterCalibrationDate", DataType="date")]
        public System.DateTime cableMeterCalibrationDate {
            get {
                return this.cableMeterCalibrationDateField;
            }
            set {
                this.cableMeterCalibrationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cableMeterCalibrationDateSpecified {
            get {
                return this.cableMeterCalibrationDateFieldSpecified;
            }
            set {
                this.cableMeterCalibrationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The length of the excess fiber that was removed.</summary>
        [System.ComponentModel.DescriptionAttribute("The length of the excess fiber that was removed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("excessFiberRecovered", DataType="lengthMeasure")]
        public lengthMeasure excessFiberRecovered {
            get {
                return this.excessFiberRecoveredField;
            }
            set {
                this.excessFiberRecoveredField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comment about the pump activity.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Comment about the pump activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_interventionConveyance {
        
        private InterventionConveyanceType interventionConveyanceTypeField;
        
        private string commentField;
        
        /// <remarks/>
        /// <summary>Enum. For intervention conveyance option, the type of conveyance. Example: coiled tubing.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Enum. For intervention conveyance option, the type of conveyance. Example: coiled" +
            " tubing.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("interventionConveyanceType", DataType="InterventionConveyanceType")]
        public InterventionConveyanceType interventionConveyanceType {
            get {
                return this.interventionConveyanceTypeField;
            }
            set {
                this.interventionConveyanceTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comment about the intervention conveyance.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Comment about the intervention conveyance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum InterventionConveyanceType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("coiled tubing")]
        coiledtubing,
        
        /// <remarks/>
        rod,
        
        /// <remarks/>
        slickline,
        
        /// <remarks/>
        wireline,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_permanentCable {
        
        private PermanentCableInstallationType permanentCableInstallationTypeField;
        
        private string commentField;
        
        /// <remarks/>
        /// <summary>Enum. For permanent conveyance option, the type of conveyance. Example: clamped to tubular</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Enum. For permanent conveyance option, the type of conveyance. Example: clamped t" +
            "o tubular")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("permanentCableInstallationType", DataType="PermanentCableInstallationType")]
        public PermanentCableInstallationType permanentCableInstallationType {
            get {
                return this.permanentCableInstallationTypeField;
            }
            set {
                this.permanentCableInstallationTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comment about the intervention conveyance.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Comment about the intervention conveyance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum PermanentCableInstallationType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("buried parallel to tubular")]
        buriedparalleltotubular,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("clamped to tubular")]
        clampedtotubular,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wrapped around tubular")]
        wrappedaroundtubular,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum CableType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electrical-fiber-cable")]
        electricalfibercable,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("multi-fiber-cable")]
        multifibercable,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("single-fiber-cable")]
        singlefibercable,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class grp_dtsInstrumentBox : cs_instrument {
        
        private string serial_numberField;
        
        private lengthMeasure internalOvenLocationNearField;
        
        private lengthMeasure internalOvenLocationFarField;
        
        private thermodynamicTemperatureMeasure referenceCoilTemperatureField;
        
        private indexedObject[] parameterField;
        
        private timeMeasure warmupTimeField;
        
        private timeMeasure startupTimeField;
        
        private cs_dtsCalibration[] instrumentCalibrationField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private cs_dtsPatchCord cs_dtsPatchCordField;
        
        /// <remarks/>
        /// <summary>An identification tag for the instrument box. A serial number is a type of identification tag however some tags contain many pieces of information. This structure just identifies the tag and does not describe the contents.</summary>
        [System.ComponentModel.DescriptionAttribute("An identification tag for the instrument box. A serial number is a type of identi" +
            "fication tag however some tags contain many pieces of information. This structur" +
            "e just identifies the tag and does not describe the contents.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("serial_number", DataType="string")]
        public string serial_number {
            get {
                return this.serial_numberField;
            }
            set {
                this.serial_numberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Near distance of the oven from the beginning of the fiber.</summary>
        [System.ComponentModel.DescriptionAttribute("Near distance of the oven from the beginning of the fiber.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("internalOvenLocationNear", DataType="lengthMeasure")]
        public lengthMeasure internalOvenLocationNear {
            get {
                return this.internalOvenLocationNearField;
            }
            set {
                this.internalOvenLocationNearField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Far distance of the oven from the beginning of the fiber.</summary>
        [System.ComponentModel.DescriptionAttribute("Far distance of the oven from the beginning of the fiber.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("internalOvenLocationFar", DataType="lengthMeasure")]
        public lengthMeasure internalOvenLocationFar {
            get {
                return this.internalOvenLocationFarField;
            }
            set {
                this.internalOvenLocationFarField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The temperature of the oven.</summary>
        [System.ComponentModel.DescriptionAttribute("The temperature of the oven.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("referenceCoilTemperature", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure referenceCoilTemperature {
            get {
                return this.referenceCoilTemperatureField;
            }
            set {
                this.referenceCoilTemperatureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Additional parameters to define the instrument box as a  piece of equipment. These should not be parameters to define the installation  or use of the box in the wellbore, or other system. This element should be used  only if an appropriate parameter is not available as an element, or in the  calibration operation.</summary>
        [System.Xml.Serialization.XmlElementAttribute("parameter")]
        [System.ComponentModel.DescriptionAttribute(@"Additional parameters to define the instrument box as a  piece of equipment. These should not be parameters to define the installation  or use of the box in the wellbore, or other system. This element should be used  only if an appropriate parameter is not available as an element, or in the  calibration operation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("parameter", DataType="indexedObject")]
        public indexedObject[] parameter {
            get {
                return this.parameterField;
            }
            set {
                this.parameterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The duration of time starting from the initiation of the first temperature measurement until the unit complies with the stated values of the main measurement specifications.</summary>
        [System.ComponentModel.DescriptionAttribute("The duration of time starting from the initiation of the first temperature measur" +
            "ement until the unit complies with the stated values of the main measurement spe" +
            "cifications.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("warmupTime", DataType="timeMeasure")]
        public timeMeasure warmupTime {
            get {
                return this.warmupTimeField;
            }
            set {
                this.warmupTimeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The start-up time is the duration of time from the initial powering on the instrument until the first temperature measurement is permitted.</summary>
        [System.ComponentModel.DescriptionAttribute("The start-up time is the duration of time from the initial powering on the instru" +
            "ment until the first temperature measurement is permitted.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("startupTime", DataType="timeMeasure")]
        public timeMeasure startupTime {
            get {
                return this.startupTimeField;
            }
            set {
                this.startupTimeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calibration parameters vary from vendor to vendor, depending  on the calibration method being used. This is a general type that allows a calibration  date, business associate, and many  name/value pairs.</summary>
        [System.Xml.Serialization.XmlElementAttribute("instrumentCalibration")]
        [System.ComponentModel.DescriptionAttribute("Calibration parameters vary from vendor to vendor, depending  on the calibration " +
            "method being used. This is a general type that allows a calibration  date, busin" +
            "ess associate, and many  name/value pairs.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("instrumentCalibration", DataType="cs_dtsCalibration")]
        public cs_dtsCalibration[] instrumentCalibration {
            get {
                return this.instrumentCalibrationField;
            }
            set {
                this.instrumentCalibrationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information regarding the patch cord used to connect the instrument box to the start of the optical fiber path.</summary>
        [System.ComponentModel.DescriptionAttribute("Information regarding the patch cord used to connect the instrument box to the st" +
            "art of the optical fiber path.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cs_dtsPatchCord", DataType="cs_dtsPatchCord")]
        public cs_dtsPatchCord cs_dtsPatchCord {
            get {
                return this.cs_dtsPatchCordField;
            }
            set {
                this.cs_dtsPatchCordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_dtsCalibration {
        
        private System.DateTime dTimCalibrationField;
        
        private bool dTimCalibrationFieldSpecified;
        
        private string calibratedByField;
        
        private string calibrationProtocolField;
        
        private calibrationParameter[] parameterField;
        
        private string remarksField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The date of the calibration</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DescriptionAttribute("The date of the calibration")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimCalibration", DataType="date")]
        public System.DateTime dTimCalibration {
            get {
                return this.dTimCalibrationField;
            }
            set {
                this.dTimCalibrationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimCalibrationSpecified {
            get {
                return this.dTimCalibrationFieldSpecified;
            }
            set {
                this.dTimCalibrationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The business associate that performed the calibration.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The business associate that performed the calibration.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("calibratedBy", DataType="nameString")]
        public string calibratedBy {
            get {
                return this.calibratedByField;
            }
            set {
                this.calibratedByField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>This may be a standard protocol, or a software application.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("This may be a standard protocol, or a software application.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("calibrationProtocol", DataType="nameString")]
        public string calibrationProtocol {
            get {
                return this.calibrationProtocolField;
            }
            set {
                this.calibrationProtocolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Attribute name is the name of the parameter. Optional attribute  uom is the unit of measure of the parameter. The value of the element is the value  of the parameter. Note that a string value may appear as a parameter.</summary>
        [System.Xml.Serialization.XmlElementAttribute("parameter")]
        [System.ComponentModel.DescriptionAttribute("Attribute name is the name of the parameter. Optional attribute  uom is the unit " +
            "of measure of the parameter. The value of the element is the value  of the param" +
            "eter. Note that a string value may appear as a parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("parameter", DataType="calibrationParameter")]
        public calibrationParameter[] parameter {
            get {
                return this.parameterField;
            }
            set {
                this.parameterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Any remarks that may be useful, regarding the calibration information.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Any remarks that may be useful, regarding the calibration information.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("remarks", DataType="commentString")]
        public string remarks {
            get {
                return this.remarksField;
            }
            set {
                this.remarksField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class calibrationParameter {
        
        private string uomField;
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        /// <summary>The unit of measure of the parameter value.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(24)]
        [System.ComponentModel.DescriptionAttribute("The unit of measure of the parameter value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="uomString")]
        public string uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the parameter.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_dtsPatchCord {
        
        private lengthMeasure fiberLengthField;
        
        private string descriptionField;
        
        /// <remarks/>
        /// <summary>Optical distance between the instrument and the end of the patch cord that will be attached to the rest of the optical path from which a measurement will be taken.</summary>
        [System.ComponentModel.DescriptionAttribute("Optical distance between the instrument and the end of the patch cord that will b" +
            "e attached to the rest of the optical path from which a measurement will be take" +
            "n.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fiberLength", DataType="lengthMeasure")]
        public lengthMeasure fiberLength {
            get {
                return this.fiberLengthField;
            }
            set {
                this.fiberLengthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A textual description of the patch cord</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A textual description of the patch cord")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="commentString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum OTDRDirection {
        
        /// <remarks/>
        backward,
        
        /// <remarks/>
        forward,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fiberFacilityPipeline {
        
        private nameStruct nameField;
        
        private string datumPortReferenceField;
        
        private facilityIdentifierStruct installationField;
        
        private string kindField;
        
        private facilityIdentifierStruct contextFacilityField;
        
        /// <remarks/>
        /// <summary>The name of this facilityMapping instance.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The name of this facilityMapping instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameStruct")]
        public nameStruct name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A description of which "port" ie, connection/end or defined point on a pipeline the facilityLength is indexed from.</summary>
        [System.ComponentModel.DescriptionAttribute("A description of which \"port\" ie, connection/end or defined point on a pipeline t" +
            "he facilityLength is indexed from.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("datumPortReference", DataType="string")]
        public string datumPortReference {
            get {
                return this.datumPortReferenceField;
            }
            set {
                this.datumPortReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the facility which is represented by this facilityMapping</summary>
        [System.ComponentModel.DescriptionAttribute("The name of the facility which is represented by this facilityMapping")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("installation", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct installation {
            get {
                return this.installationField;
            }
            set {
                this.installationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The kind of facility mapped to the optical path. Expected to be a pipeline but this element can be used to show other facilities being mapped to fiber length in future.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The kind of facility mapped to the optical path. Expected to be a pipeline but th" +
            "is element can be used to show other facilities being mapped to fiber length in " +
            "future.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("kind", DataType="kindString")]
        public string kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name and type of a facility whose context is relevant to the represented installation.</summary>
        [System.ComponentModel.DescriptionAttribute("The name and type of a facility whose context is relevant to the represented inst" +
            "allation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("contextFacility", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct contextFacility {
            get {
                return this.contextFacilityField;
            }
            set {
                this.contextFacilityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fiberFacilityWell {
        
        private string nameField;
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string wellDatumField;
        
        private string uidWellField;
        
        private string uidWellboreField;
        
        /// <remarks/>
        /// <summary>The name of this facilityMapping instance.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of this facilityMapping instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the well.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the well.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore that contains the optical path being mapped to the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore that contains the optical path being " +
            "mapped to the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWellbore", DataType="nameString")]
        public string nameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A reference to the wellDatum from which the facilityLength (ie, depth in this case of a wellbore being mapped) is measured from.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A reference to the wellDatum from which the facilityLength (ie, depth in this cas" +
            "e of a wellbore being mapped) is measured from.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellDatum", DataType="refWellDatum")]
        public string wellDatum {
            get {
                return this.wellDatumField;
            }
            set {
                this.wellDatumField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents the well referenced by t" +
            "he (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidParentString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the wellbore. This uniquely represents the wellbore referenced by the (possibly non-unique) nameWellbore.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the wellbore. This uniquely represents the wellbore referen" +
            "ced by the (possibly non-unique) nameWellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWellbore", DataType="uidParentString")]
        public string uidWellbore {
            get {
                return this.uidWellboreField;
            }
            set {
                this.uidWellboreField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fiberFacilityMappingPart {
        
        private lengthMeasure[] opticalPathDistanceStartField;
        
        private lengthMeasure[] opticalPathDistanceEndField;
        
        private lengthMeasure[] facilityLengthStartField;
        
        private lengthMeasure[] facilityLengthEndField;
        
        private string[] commentField;
        
        private object[] itemsField;
        
        private string mappingPartIDField;
        
        /// <remarks/>
        /// <summary>Distance between the beginning of the optical path to the distance where the mapping with the facility takes place.</summary>
        [System.Xml.Serialization.XmlElementAttribute("opticalPathDistanceStart")]
        [System.ComponentModel.DescriptionAttribute("Distance between the beginning of the optical path to the distance where the mapp" +
            "ing with the facility takes place.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("opticalPathDistanceStart", DataType="lengthMeasure")]
        public lengthMeasure[] opticalPathDistanceStart {
            get {
                return this.opticalPathDistanceStartField;
            }
            set {
                this.opticalPathDistanceStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance between the beginning of the optical path to the distance where the mapping with the facility ends.</summary>
        [System.Xml.Serialization.XmlElementAttribute("opticalPathDistanceEnd")]
        [System.ComponentModel.DescriptionAttribute("Distance between the beginning of the optical path to the distance where the mapp" +
            "ing with the facility ends.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("opticalPathDistanceEnd", DataType="lengthMeasure")]
        public lengthMeasure[] opticalPathDistanceEnd {
            get {
                return this.opticalPathDistanceEndField;
            }
            set {
                this.opticalPathDistanceEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance between the facility datum and the distance where the mapping with the optical path takes place</summary>
        [System.Xml.Serialization.XmlElementAttribute("facilityLengthStart")]
        [System.ComponentModel.DescriptionAttribute("Distance between the facility datum and the distance where the mapping with the o" +
            "ptical path takes place")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facilityLengthStart", DataType="lengthMeasure")]
        public lengthMeasure[] facilityLengthStart {
            get {
                return this.facilityLengthStartField;
            }
            set {
                this.facilityLengthStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance between the facility datum and the distance where the mapping with the optical path ends.</summary>
        [System.Xml.Serialization.XmlElementAttribute("facilityLengthEnd")]
        [System.ComponentModel.DescriptionAttribute("Distance between the facility datum and the distance where the mapping with the o" +
            "ptical path ends.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facilityLengthEnd", DataType="lengthMeasure")]
        public lengthMeasure[] facilityLengthEnd {
            get {
                return this.facilityLengthEndField;
            }
            set {
                this.facilityLengthEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A descriptive remark about the facility mapping</summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        [System.ComponentModel.DescriptionAttribute("A descriptive remark about the facility mapping")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string[] comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("pipeline", typeof(cs_fiberFacilityPipeline))]
        [System.Xml.Serialization.XmlElementAttribute("well", typeof(cs_fiberFacilityWell))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("well", DataType="cs_fiberFacilityWell")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pipeline", DataType="cs_fiberFacilityPipeline")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The uid of this facility mapping part.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The uid of this facility mapping part.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mappingPartID", DataType="uidString")]
        public string mappingPartID {
            get {
                return this.mappingPartIDField;
            }
            set {
                this.mappingPartIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fiberFacilityMapping {
        
        private Energistics.DataAccess.Timestamp timeStartField;
        
        private Energistics.DataAccess.Timestamp timeEndField;
        
        private bool timeEndFieldSpecified;
        
        private cs_fiberFacilityMappingPart[] fiberFacilityMappingPartField;
        
        private string commentField;
        
        private string mappingIDField;
        
        /// <remarks/>
        /// <summary>Date when the mapping between the facility and the optical path becomes effective</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Date when the mapping between the facility and the optical path becomes effective" +
            "")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("timeStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp timeStart {
            get {
                return this.timeStartField;
            }
            set {
                this.timeStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date when the mapping between the facility and the optical path is no longer valid</summary>
        [System.ComponentModel.DescriptionAttribute("Date when the mapping between the facility and the optical path is no longer vali" +
            "d")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("timeEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp timeEnd {
            get {
                return this.timeEndField;
            }
            set {
                this.timeEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeEndSpecified {
            get {
                return this.timeEndFieldSpecified;
            }
            set {
                this.timeEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Relates distances measured along the optical path to specific lengths along facilities (wellbores or pipelines).</summary>
        [System.Xml.Serialization.XmlElementAttribute("fiberFacilityMappingPart")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Relates distances measured along the optical path to specific lengths along facil" +
            "ities (wellbores or pipelines).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fiberFacilityMappingPart", DataType="cs_fiberFacilityMappingPart")]
        public cs_fiberFacilityMappingPart[] fiberFacilityMappingPart {
            get {
                return this.fiberFacilityMappingPartField;
            }
            set {
                this.fiberFacilityMappingPartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A descriptive remark about the facility mapping</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A descriptive remark about the facility mapping")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The uid of this facility mapping collection.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The uid of this facility mapping collection.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mappingID", DataType="uidString")]
        public string mappingID {
            get {
                return this.mappingIDField;
            }
            set {
                this.mappingIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fiberPathDefect {
        
        private lengthMeasure[] opticalPathDistanceStartField;
        
        private lengthMeasure[] opticalPathDistanceEndField;
        
        private PathDefectTypes[] defectTypeField;
        
        private System.DateTime[] timeStartField;
        
        private System.DateTime[] timeEndField;
        
        private string[] commentField;
        
        private string defectIDField;
        
        /// <remarks/>
        /// <summary>Starting point of the detected defect as distance in the optical path from the lightbox</summary>
        [System.Xml.Serialization.XmlElementAttribute("opticalPathDistanceStart")]
        [System.ComponentModel.DescriptionAttribute("Starting point of the detected defect as distance in the optical path from the li" +
            "ghtbox")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("opticalPathDistanceStart", DataType="lengthMeasure")]
        public lengthMeasure[] opticalPathDistanceStart {
            get {
                return this.opticalPathDistanceStartField;
            }
            set {
                this.opticalPathDistanceStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Ending point of the detected defect as distance in the optical path from the lightbox.  Can have the same value as the 'opticalPathDistanceStart' if the defect is found at a specific location rather than a segment.</summary>
        [System.Xml.Serialization.XmlElementAttribute("opticalPathDistanceEnd")]
        [System.ComponentModel.DescriptionAttribute("Ending point of the detected defect as distance in the optical path from the ligh" +
            "tbox.  Can have the same value as the \'opticalPathDistanceStart\' if the defect i" +
            "s found at a specific location rather than a segment.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("opticalPathDistanceEnd", DataType="lengthMeasure")]
        public lengthMeasure[] opticalPathDistanceEnd {
            get {
                return this.opticalPathDistanceEndField;
            }
            set {
                this.opticalPathDistanceEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Enum.  The type of defect on the optical path.</summary>
        [System.Xml.Serialization.XmlElementAttribute("defectType")]
        [System.ComponentModel.DescriptionAttribute("Enum.  The type of defect on the optical path.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("defectType", DataType="PathDefectTypes")]
        public PathDefectTypes[] defectType {
            get {
                return this.defectTypeField;
            }
            set {
                this.defectTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date when the defect was detected</summary>
        [System.Xml.Serialization.XmlElementAttribute("timeStart")]
        [System.ComponentModel.DescriptionAttribute("Date when the defect was detected")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("timeStart", DataType="timestamp")]
        public System.DateTime[] timeStart {
            get {
                return this.timeStartField;
            }
            set {
                this.timeStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date when the defect was no longer detected (or was corrected)</summary>
        [System.Xml.Serialization.XmlElementAttribute("timeEnd")]
        [System.ComponentModel.DescriptionAttribute("Date when the defect was no longer detected (or was corrected)")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("timeEnd", DataType="timestamp")]
        public System.DateTime[] timeEnd {
            get {
                return this.timeEndField;
            }
            set {
                this.timeEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A descriptive remark about the defect found on this location</summary>
        [System.Xml.Serialization.XmlElementAttribute("comment")]
        [System.ComponentModel.DescriptionAttribute("A descriptive remark about the defect found on this location")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string[] comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The uid of this object.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The uid of this object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("defectID", DataType="uidString")]
        public string defectID {
            get {
                return this.defectIDField;
            }
            set {
                this.defectIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum PathDefectTypes {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("darkened fiber")]
        darkenedfiber,
        
        /// <remarks/>
        other,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cs_fiberOpticalPathNetwork))]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_productFlowModel {
        
        private facilityIdentifierStruct installationField;
        
        private facilityIdentifierStruct[] contextFacilityField;
        
        private Energistics.DataAccess.Timestamp dTimStartField;
        
        private bool dTimStartFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimEndField;
        
        private bool dTimEndFieldSpecified;
        
        private endpointQualifiedDateTime existenceTimeField;
        
        private endpointQualifiedDateTime dTimMinField;
        
        private endpointQualifiedDateTime dTimMaxField;
        
        private cs_productFlowExternalReference[] externalConnectField;
        
        private cs_productFlowNetwork[] networkField;
        
        private string commentField;
        
        /// <remarks/>
        /// <summary>The name of the facility which is represented by this model.  The name can be qualified by a naming system.  This also defines the kind of facility.</summary>
        [System.ComponentModel.DescriptionAttribute("The name of the facility which is represented by this model.  The name can be qua" +
            "lified by a naming system.  This also defines the kind of facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("installation", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct installation {
            get {
                return this.installationField;
            }
            set {
                this.installationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name and type of a facility whose context is relevant to the represented installation.</summary>
        [System.Xml.Serialization.XmlElementAttribute("contextFacility")]
        [System.ComponentModel.DescriptionAttribute("The name and type of a facility whose context is relevant to the represented inst" +
            "allation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("contextFacility", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct[] contextFacility {
            get {
                return this.contextFacilityField;
            }
            set {
                this.contextFacilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time of the start of validity for this model.</summary>
        [System.ComponentModel.DescriptionAttribute("The date and time of the start of validity for this model.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimStartSpecified {
            get {
                return this.dTimStartFieldSpecified;
            }
            set {
                this.dTimStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date and time of the termination of validity for this model.</summary>
        [System.ComponentModel.DescriptionAttribute("The date and time of the termination of validity for this model.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimEndSpecified {
            get {
                return this.dTimEndFieldSpecified;
            }
            set {
                this.dTimEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The time for which "currently existing" data is desired from the network. All connections (and related data) existing at this time (i.e. start and end bracket this value) will will be returned if requested. The existence time is a server query parameter. See the WITSML API Specification appendix on "Special Handling" of growing objects  for a description of the behavior related to this parameter.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The time for which ""currently existing"" data is desired from the network. All connections (and related data) existing at this time (i.e. start and end bracket this value) will will be returned if requested. The existence time is a server query parameter. See the WITSML API Specification appendix on ""Special Handling"" of growing objects  for a description of the behavior related to this parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("existenceTime", DataType="endpointQualifiedDateTime")]
        public endpointQualifiedDateTime existenceTime {
            get {
                return this.existenceTimeField;
            }
            set {
                this.existenceTimeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The minimum time index contained within the report. The minimum and maximum indexes are server query parameters and will be  populated with valid values in a "get" result. See the WITSML API Specification appendix on "Special Handling" of growing objects  for a description of the behavior related to this parameter.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The minimum time index contained within the report. The minimum and maximum indexes are server query parameters and will be  populated with valid values in a ""get"" result. See the WITSML API Specification appendix on ""Special Handling"" of growing objects  for a description of the behavior related to this parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimMin", DataType="endpointQualifiedDateTime")]
        public endpointQualifiedDateTime dTimMin {
            get {
                return this.dTimMinField;
            }
            set {
                this.dTimMinField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum time index contained within the report. The minimum and maximum indexes are server query parameters and will be  populated with valid values in a "get" result. See the WITSML API Specification appendix on "Special Handling" of growing objects  for a description of the behavior related to this parameter.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The maximum time index contained within the report. The minimum and maximum indexes are server query parameters and will be  populated with valid values in a ""get"" result. See the WITSML API Specification appendix on ""Special Handling"" of growing objects  for a description of the behavior related to this parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimMax", DataType="endpointQualifiedDateTime")]
        public endpointQualifiedDateTime dTimMax {
            get {
                return this.dTimMaxField;
            }
            set {
                this.dTimMaxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines the external port in another Product Flow Model to which  an external port in this model is connected. An external port should be connected to an external port with the opposite direction. The connected external port must be in another Product Flow Model. These connections should always be defined on a one-to-one basis. For example, if a facility may receive input from multiple other facilities then a separate input port should be defined for each of those facilities. This allows any question about mass balancing to be contained  within each individual model. The external port name must match the name of an external port on the network that represents this model.</summary>
        [System.Xml.Serialization.XmlElementAttribute("externalConnect")]
        [System.ComponentModel.DescriptionAttribute(@"Defines the external port in another Product Flow Model to which  an external port in this model is connected. An external port should be connected to an external port with the opposite direction. The connected external port must be in another Product Flow Model. These connections should always be defined on a one-to-one basis. For example, if a facility may receive input from multiple other facilities then a separate input port should be defined for each of those facilities. This allows any question about mass balancing to be contained  within each individual model. The external port name must match the name of an external port on the network that represents this model.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("externalConnect", DataType="cs_productFlowExternalReference")]
        public cs_productFlowExternalReference[] externalConnect {
            get {
                return this.externalConnectField;
            }
            set {
                this.externalConnectField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The description of one named network within this model. Each model is self contained but may reference other newtorks for defining internal detail. One of the networks must represent this model.</summary>
        [System.Xml.Serialization.XmlElementAttribute("network")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The description of one named network within this model. Each model is self contai" +
            "ned but may reference other newtorks for defining internal detail. One of the ne" +
            "tworks must represent this model.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("network", DataType="cs_productFlowNetwork")]
        public cs_productFlowNetwork[] network {
            get {
                return this.networkField;
            }
            set {
                this.networkField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A descriptive remark about the model.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A descriptive remark about the model.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fiberOpticalPathNetwork : cs_productFlowModel {
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_fiberOpticalPathInventory {
        
        private cs_fiberOpticalPathSegment[] segmentField;
        
        private cs_fiberTurnaround[] turnaroundField;
        
        private cs_fiberSplice[] spliceField;
        
        private cs_fiberConnection[] connectionField;
        
        private cs_fiberTerminator terminatorField;
        
        /// <remarks/>
        /// <summary>A single segment of the optical fiber used for distributed temperature surveys. Multiple such segments may be connected by other types of component including connectors, splices and fiber turnarounds.</summary>
        [System.Xml.Serialization.XmlElementAttribute("segment")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A single segment of the optical fiber used for distributed temperature surveys. M" +
            "ultiple such segments may be connected by other types of component including con" +
            "nectors, splices and fiber turnarounds.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("segment", DataType="cs_fiberOpticalPathSegment")]
        public cs_fiberOpticalPathSegment[] segment {
            get {
                return this.segmentField;
            }
            set {
                this.segmentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A turnaround component within the optical path.</summary>
        [System.Xml.Serialization.XmlElementAttribute("turnaround")]
        [System.ComponentModel.DescriptionAttribute("A turnaround component within the optical path.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("turnaround", DataType="cs_fiberTurnaround")]
        public cs_fiberTurnaround[] turnaround {
            get {
                return this.turnaroundField;
            }
            set {
                this.turnaroundField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A splice component within the optical path.</summary>
        [System.Xml.Serialization.XmlElementAttribute("splice")]
        [System.ComponentModel.DescriptionAttribute("A splice component within the optical path.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("splice", DataType="cs_fiberSplice")]
        public cs_fiberSplice[] splice {
            get {
                return this.spliceField;
            }
            set {
                this.spliceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A connection component within the optical path.</summary>
        [System.Xml.Serialization.XmlElementAttribute("connection")]
        [System.ComponentModel.DescriptionAttribute("A connection component within the optical path.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("connection", DataType="cs_fiberConnection")]
        public cs_fiberConnection[] connection {
            get {
                return this.connectionField;
            }
            set {
                this.connectionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The terminator of the optical path. This may be a component (in the case of a single ended fiber installation), or it may be a connection back into the instrument box in the case of a double ended fiber installation.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The terminator of the optical path. This may be a component (in the case of a sin" +
            "gle ended fiber installation), or it may be a connection back into the instrumen" +
            "t box in the case of a double ended fiber installation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("terminator", DataType="cs_fiberTerminator")]
        public cs_fiberTerminator terminator {
            get {
                return this.terminatorField;
            }
            set {
                this.terminatorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("PRODML", "1.3.1.1")]
    public partial class obj_fiberOpticalPath {
        
        private string nameField;
        
        private cs_fiberOpticalPathInventory inventoryField;
        
        private cs_fiberOpticalPathNetwork[] opticalPathNetworkField;
        
        private cs_fiberPathDefect[] defectField;
        
        private cs_fiberFacilityMapping[] facilityMappingField;
        
        private cs_businessAssociate installingVendorField;
        
        private cs_fiberOTDR[] otdrField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>A human understandable name for the fiber. This is used for  identification of the instance.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A human understandable name for the fiber. This is used for  identification of th" +
            "e instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The list of equipment used in the optical path.  Equipment may be used in the optical path for different periods of time, so this inventory contains all items of equipment which are used at some period of time.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The list of equipment used in the optical path.  Equipment may be used in the opt" +
            "ical path for different periods of time, so this inventory contains all items of" +
            " equipment which are used at some period of time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("inventory", DataType="cs_fiberOpticalPathInventory")]
        public cs_fiberOpticalPathInventory inventory {
            get {
                return this.inventoryField;
            }
            set {
                this.inventoryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The sequence of connected items of equipment along the optical path. Represented by a flow network.</summary>
        [System.Xml.Serialization.XmlElementAttribute("opticalPathNetwork")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The sequence of connected items of equipment along the optical path. Represented " +
            "by a flow network.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("opticalPathNetwork", DataType="cs_fiberOpticalPathNetwork")]
        public cs_fiberOpticalPathNetwork[] opticalPathNetwork {
            get {
                return this.opticalPathNetworkField;
            }
            set {
                this.opticalPathNetworkField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A zone of the fibre which has defective optical properties (e.g., darkening).</summary>
        [System.Xml.Serialization.XmlElementAttribute("defect")]
        [System.ComponentModel.DescriptionAttribute("A zone of the fibre which has defective optical properties (e.g., darkening).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("defect", DataType="cs_fiberPathDefect")]
        public cs_fiberPathDefect[] defect {
            get {
                return this.defectField;
            }
            set {
                this.defectField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Relates distances measured along the optical path to specific lengths along facilities (wellbores or pipelines).</summary>
        [System.Xml.Serialization.XmlElementAttribute("facilityMapping")]
        [System.ComponentModel.DescriptionAttribute("Relates distances measured along the optical path to specific lengths along facil" +
            "ities (wellbores or pipelines).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facilityMapping", DataType="cs_fiberFacilityMapping")]
        public cs_fiberFacilityMapping[] facilityMapping {
            get {
                return this.facilityMappingField;
            }
            set {
                this.facilityMappingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The vendor who performed the physical deployment</summary>
        [System.ComponentModel.DescriptionAttribute("The vendor who performed the physical deployment")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("installingVendor", DataType="cs_businessAssociate")]
        public cs_businessAssociate installingVendor {
            get {
                return this.installingVendorField;
            }
            set {
                this.installingVendorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>This records the result arrays along with context information for an Optical Time Domain Reflectometry (OTDR) survey.  The arrays will define the relative scattered power from the Rayleigh scattering vs distance along the fiber.  The actual data values are recorded in a OTDR file and/or image file, which are referenced in subelements.</summary>
        [System.Xml.Serialization.XmlElementAttribute("otdr")]
        [System.ComponentModel.DescriptionAttribute(@"This records the result arrays along with context information for an Optical Time Domain Reflectometry (OTDR) survey.  The arrays will define the relative scattered power from the Rayleigh scattering vs distance along the fiber.  The actual data values are recorded in a OTDR file and/or image file, which are referenced in subelements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("otdr", DataType="cs_fiberOTDR")]
        public cs_fiberOTDR[] otdr {
            get {
                return this.otdrField;
            }
            set {
                this.otdrField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_dtsInterpretationData {
        
        private refNameString facilityMappingRefField;
        
        private lengthMeasure samplingIntervalField;
        
        private bool badFlagField;
        
        private Energistics.DataAccess.Timestamp creationStartTimeField;
        
        private InterpretationProcessingType interpretationProcessingTypeField;
        
        private string indexMnemonicField;
        
        private short pointCountField;
        
        private string commentField;
        
        private cs_logDataInterpretation logDataInterpretationField;
        
        private string parentInterpretationIDField;
        
        private string interpretationIDField;
        
        /// <remarks/>
        /// <summary>A reference to the facilityMapping to which this InterpretationData relates. The facility mapping relates a length of fiber to a corresponding length of a facility (probably a wellbore or pipeline). The facilityMapping also contains the datum from which the InterpretedData is indexed.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"A reference to the facilityMapping to which this InterpretationData relates. The facility mapping relates a length of fiber to a corresponding length of a facility (probably a wellbore or pipeline). The facilityMapping also contains the datum from which the InterpretedData is indexed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facilityMappingRef", DataType="refNameString")]
        public refNameString facilityMappingRef {
            get {
                return this.facilityMappingRefField;
            }
            set {
                this.facilityMappingRefField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The “sampling interval” is the difference in fiber distance between consecutive temperature sample points in a single temperature trace.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The “sampling interval” is the difference in fiber distance between consecutive t" +
            "emperature sample points in a single temperature trace.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("samplingInterval", DataType="lengthMeasure")]
        public lengthMeasure samplingInterval {
            get {
                return this.samplingIntervalField;
            }
            set {
                this.samplingIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Indicates whether the interpretation log contains bad data or not.  This allows you to keep bad data around (so at least you know that something was generated/acquired) and filter it out when doing relevant data-wise operations.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Indicates whether the interpretation log contains bad data or not.  This allows y" +
            "ou to keep bad data around (so at least you know that something was generated/ac" +
            "quired) and filter it out when doing relevant data-wise operations.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("badFlag", DataType="logicalBoolean")]
        public bool badFlag {
            get {
                return this.badFlagField;
            }
            set {
                this.badFlagField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time when the interpretation log data was generated.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Time when the interpretation log data was generated.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("creationStartTime", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp creationStartTime {
            get {
                return this.creationStartTimeField;
            }
            set {
                this.creationStartTimeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Indicates what type of post-processing technique was used to generate this interpretation log.  Enum list. The meaning is that this process was applied to the InterpretedData referenced by the parentInterpretationID.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Indicates what type of post-processing technique was used to generate this interp" +
            "retation log.  Enum list. The meaning is that this process was applied to the In" +
            "terpretedData referenced by the parentInterpretationID.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("interpretationProcessingType", DataType="InterpretationProcessingType")]
        public InterpretationProcessingType interpretationProcessingType {
            get {
                return this.interpretationProcessingTypeField;
            }
            set {
                this.interpretationProcessingTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>This is the mnemonic of the channel in the InterpretedData which represents the index to the data (expected to be a length along the facility (e.g., wellbore, pipeline) being measured.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("This is the mnemonic of the channel in the InterpretedData which represents the i" +
            "ndex to the data (expected to be a length along the facility (e.g., wellbore, pi" +
            "peline) being measured.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("indexMnemonic", DataType="str32")]
        public string indexMnemonic {
            get {
                return this.indexMnemonicField;
            }
            set {
                this.indexMnemonicField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The number of rows in this interpreted data object. Each row or "point" represents a measurement along the fiber.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The number of rows in this interpreted data object. Each row or \"point\" represent" +
            "s a measurement along the fiber.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pointCount", DataType="nonNegativeCount")]
        public short pointCount {
            get {
                return this.pointCountField;
            }
            set {
                this.pointCountField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A descriptive remark about the interpretation log</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A descriptive remark about the interpretation log")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("logDataInterpretation", DataType="cs_logDataInterpretation")]
        public cs_logDataInterpretation logDataInterpretation {
            get {
                return this.logDataInterpretationField;
            }
            set {
                this.logDataInterpretationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Optional element indicating that the referenced InterpretedData object is the parent from which this InterpretedData is derived. Example, this instance may be derived from a parent by the data having been temperature-shifted to match an external data source. The element InterpretationProcessingType is provided to record which type of operation was peformed on the parent data to obtain this instance of data.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"Optional element indicating that the referenced InterpretedData object is the parent from which this InterpretedData is derived. Example, this instance may be derived from a parent by the data having been temperature-shifted to match an external data source. The element InterpretationProcessingType is provided to record which type of operation was peformed on the parent data to obtain this instance of data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("parentInterpretationID", DataType="refString")]
        public string parentInterpretationID {
            get {
                return this.parentInterpretationIDField;
            }
            set {
                this.parentInterpretationIDField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reference to the  interpretation for this set of data.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Reference to the  interpretation for this set of data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("interpretationID", DataType="uidString")]
        public string interpretationID {
            get {
                return this.interpretationIDField;
            }
            set {
                this.interpretationIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum InterpretationProcessingType {
        
        /// <remarks/>
        averaged,
        
        /// <remarks/>
        denormalized,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("depth-corrected")]
        depthcorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("manufacturer-generated")]
        manufacturergenerated,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("temperature-shifted")]
        temperatureshifted,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("user-custom")]
        usercustom,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_logDataInterpretation : cs_logData {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cs_logDataInterpretation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cs_logDataTrace))]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_logData {
        
        private string mnemonicListField;
        
        private string unitListField;
        
        private string[] dataField;
        
        /// <remarks/>
        /// <summary>A comma delimited list of curve mnemonics. Each mnemonic should only occur once in the list. The order of the mnemonics defines the order of the  delimited values in elements "unitList" and "data".  If the index curve is specified then it must be first in the list. This is an API "column-identifier" query parameter for growing objects.  See the relevant API specification for the query behavior related to this element.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"A comma delimited list of curve mnemonics. Each mnemonic should only occur once in the list. The order of the mnemonics defines the order of the  delimited values in elements ""unitList"" and ""data"".  If the index curve is specified then it must be first in the list. This is an API ""column-identifier"" query parameter for growing objects.  See the relevant API specification for the query behavior related to this element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mnemonicList", DataType="string")]
        public string mnemonicList {
            get {
                return this.mnemonicListField;
            }
            set {
                this.mnemonicListField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A comma delimited list of unit of measure acronyms that represent the values in "data". The units are in the same order as the mnemonics in element mnemonicList. Each unit value must match the value in the logCurveInfo structure for that curve. A null value (i.e., unitless as opposed to dimensionless) will be defined by adjacent commas.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"A comma delimited list of unit of measure acronyms that represent the values in ""data"". The units are in the same order as the mnemonics in element mnemonicList. Each unit value must match the value in the logCurveInfo structure for that curve. A null value (i.e., unitless as opposed to dimensionless) will be defined by adjacent commas.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("unitList", DataType="string")]
        public string unitList {
            get {
                return this.unitListField;
            }
            set {
                this.unitListField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The actual data corresponding to the curves defined in  the "mnemonicList" element. Normally a comma delimited list of data values (see dataDelimiter) with one  value for each curve on the log (e.g., "xxx,yyy, zzz"). For array curves, the value of the array curve will be a space delimited list of values that are contained within the commas that delimit the value for that curve (e.g., "xxx,aa bb cc,zzz"). This essentially represents one row of a table where the curve  mnemonics represent the column headings. This is an API "data-node" query parameter for growing objects.  See the relevant API specification for the query behavior related to this element.</summary>
        [System.Xml.Serialization.XmlElementAttribute("data")]
        [System.ComponentModel.DescriptionAttribute(@"The actual data corresponding to the curves defined in  the ""mnemonicList"" element. Normally a comma delimited list of data values (see dataDelimiter) with one  value for each curve on the log (e.g., ""xxx,yyy, zzz""). For array curves, the value of the array curve will be a space delimited list of values that are contained within the commas that delimit the value for that curve (e.g., ""xxx,aa bb cc,zzz""). This essentially represents one row of a table where the curve  mnemonics represent the column headings. This is an API ""data-node"" query parameter for growing objects.  See the relevant API specification for the query behavior related to this element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("data", DataType="string")]
        public string[] data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_logDataTrace : cs_logData {
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_dtsInterpretationLogSet {
        
        private string preferredInterpretationIDField;
        
        private cs_dtsInterpretationData[] interpretationDataField;
        
        private string measurementIDField;
        
        private string interpretationLogIDField;
        
        /// <remarks/>
        /// <summary>Where there is a set of dtsInterpretedData logs that are generated from the same measurement (each log having gone through a different post-processing type, for example), if there is one log that is ‘preferred’ for additional business decisions (while the other ones were merely what-if scenarios), then this preferred log in the collection of child dtsInterpretedData can be flagged by referencing its UID with this element.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"Where there is a set of dtsInterpretedData logs that are generated from the same measurement (each log having gone through a different post-processing type, for example), if there is one log that is ‘preferred’ for additional business decisions (while the other ones were merely what-if scenarios), then this preferred log in the collection of child dtsInterpretedData can be flagged by referencing its UID with this element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("preferredInterpretationID", DataType="refString")]
        public string preferredInterpretationID {
            get {
                return this.preferredInterpretationIDField;
            }
            set {
                this.preferredInterpretationIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("interpretationData")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("interpretationData", DataType="cs_dtsInterpretationData")]
        public cs_dtsInterpretationData[] interpretationData {
            get {
                return this.interpretationDataField;
            }
            set {
                this.interpretationDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mandatory element indicating that the referenced MeasuredTraceSet object is the raw trace data from which this InterpretedData is derived. This is needed so that any InterpretedData can be related to the raw measurement from which it is derived.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Mandatory element indicating that the referenced MeasuredTraceSet object is the r" +
            "aw trace data from which this InterpretedData is derived. This is needed so that" +
            " any InterpretedData can be related to the raw measurement from which it is deri" +
            "ved.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("measurementID", DataType="refString")]
        public string measurementID {
            get {
                return this.measurementIDField;
            }
            set {
                this.measurementIDField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The uid of this object.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The uid of this object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("interpretationLogID", DataType="uidString")]
        public string interpretationLogID {
            get {
                return this.interpretationLogIDField;
            }
            set {
                this.interpretationLogIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_dtsMeasurementTrace {
        
        private TraceProcessingType traceProcessingTypeField;
        
        private lengthMeasure samplingIntervalField;
        
        private string indexMnemonicField;
        
        private short pointCountField;
        
        private frequencyMeasure frequencyRayleigh1Field;
        
        private frequencyMeasure frequencyRayleigh2Field;
        
        private string commentField;
        
        private cs_logDataTrace logDataTraceField;
        
        private string parentMeasurementIDField;
        
        private string measurementIDField;
        
        /// <remarks/>
        /// <summary>Denotes whether the trace was stored as acquired by the measurement device or recalibrated in any way.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Denotes whether the trace was stored as acquired by the measurement device or rec" +
            "alibrated in any way.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("traceProcessingType", DataType="TraceProcessingType")]
        public TraceProcessingType traceProcessingType {
            get {
                return this.traceProcessingTypeField;
            }
            set {
                this.traceProcessingTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The sampling interval is the difference in fiber distance between consecutive temperature sample points in a single temperature trace.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The sampling interval is the difference in fiber distance between consecutive tem" +
            "perature sample points in a single temperature trace.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("samplingInterval", DataType="lengthMeasure")]
        public lengthMeasure samplingInterval {
            get {
                return this.samplingIntervalField;
            }
            set {
                this.samplingIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>This is the mnemonic of the channel in the MeasuredTraceSet which represents the index to the data (expected to be a length along the facility (e.g., wellbore, pipeline) being measured.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("This is the mnemonic of the channel in the MeasuredTraceSet which represents the " +
            "index to the data (expected to be a length along the facility (e.g., wellbore, p" +
            "ipeline) being measured.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("indexMnemonic", DataType="str32")]
        public string indexMnemonic {
            get {
                return this.indexMnemonicField;
            }
            set {
                this.indexMnemonicField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The number of rows in this interpreted data object. Each row or "point" represents a measurement along the fiber.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The number of rows in this interpreted data object. Each row or \"point\" represent" +
            "s a measurement along the fiber.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pointCount", DataType="nonNegativeCount")]
        public short pointCount {
            get {
                return this.pointCountField;
            }
            set {
                this.pointCountField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Frequency reference for Rayleigh 1 measurement.</summary>
        [System.ComponentModel.DescriptionAttribute("Frequency reference for Rayleigh 1 measurement.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("frequencyRayleigh1", DataType="frequencyMeasure")]
        public frequencyMeasure frequencyRayleigh1 {
            get {
                return this.frequencyRayleigh1Field;
            }
            set {
                this.frequencyRayleigh1Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Frequency reference for Rayleigh 2 measurement.</summary>
        [System.ComponentModel.DescriptionAttribute("Frequency reference for Rayleigh 2 measurement.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("frequencyRayleigh2", DataType="frequencyMeasure")]
        public frequencyMeasure frequencyRayleigh2 {
            get {
                return this.frequencyRayleigh2Field;
            }
            set {
                this.frequencyRayleigh2Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A descriptive remark about the measured trace set</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A descriptive remark about the measured trace set")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("logDataTrace", DataType="cs_logDataTrace")]
        public cs_logDataTrace logDataTrace {
            get {
                return this.logDataTraceField;
            }
            set {
                this.logDataTraceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Where this dtsMeasuredTraceSet was derived from a "parent" dtsMeasuredTraceSet (having been recalibrated for example), the parent dtsMeasuredTraceSet can be indicated by referencing its UID with this element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Where this dtsMeasuredTraceSet was derived from a \"parent\" dtsMeasuredTraceSet (h" +
            "aving been recalibrated for example), the parent dtsMeasuredTraceSet can be indi" +
            "cated by referencing its UID with this element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("parentMeasurementID", DataType="refString")]
        public string parentMeasurementID {
            get {
                return this.parentMeasurementIDField;
            }
            set {
                this.parentMeasurementIDField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The uid of this object.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The uid of this object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("measurementID", DataType="uidString")]
        public string measurementID {
            get {
                return this.measurementIDField;
            }
            set {
                this.measurementIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum TraceProcessingType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("as acquired")]
        asacquired,
        
        /// <remarks/>
        recalibrated,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("PRODML", "1.3.1.1")]
    public partial class obj_dtsMeasurement {
        
        private string nameField;
        
        private bool badSetFlagField;
        
        private bool emptySetFlagField;
        
        private Energistics.DataAccess.Timestamp timeStartField;
        
        private Energistics.DataAccess.Timestamp timeEndField;
        
        private bool timeEndFieldSpecified;
        
        private timeMeasure timeSinceInstrumentStartupField;
        
        private string[] measurementTagsField;
        
        private refNameString installedSystemRefField;
        
        private OpticalPathConfiguration measurementConfigurationField;
        
        private cs_extensionNameValue[] diagnosticParametersField;
        
        private cs_dtsMeasurementTrace[] measurementTraceField;
        
        private cs_dtsInterpretationLogSet interpretationLogField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidField;
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Set to 'true' when a measurement is included but is known to be bad (i.e. all the values are null).  Use this flag in situations when you want to keep track of the fact that a measurement was generated/received however the measurement was bad.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Set to \'true\' when a measurement is included but is known to be bad (i.e. all the" +
            " values are null).  Use this flag in situations when you want to keep track of t" +
            "he fact that a measurement was generated/received however the measurement was ba" +
            "d.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("badSetFlag", DataType="logicalBoolean")]
        public bool badSetFlag {
            get {
                return this.badSetFlagField;
            }
            set {
                this.badSetFlagField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Set to 'true' when the measurement set is empty (only the header is provided).  Use this flag for situations when the instrument box attempts to get a reading but nothing is generated (fiber is disconnected, for example).</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Set to \'true\' when the measurement set is empty (only the header is provided).  U" +
            "se this flag for situations when the instrument box attempts to get a reading bu" +
            "t nothing is generated (fiber is disconnected, for example).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("emptySetFlag", DataType="logicalBoolean")]
        public bool emptySetFlag {
            get {
                return this.emptySetFlagField;
            }
            set {
                this.emptySetFlagField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time when the installed system began taking the measurement</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Time when the installed system began taking the measurement")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("timeStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp timeStart {
            get {
                return this.timeStartField;
            }
            set {
                this.timeStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time when the installed system finished taking the measurement</summary>
        [System.ComponentModel.DescriptionAttribute("Time when the installed system finished taking the measurement")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("timeEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp timeEnd {
            get {
                return this.timeEndField;
            }
            set {
                this.timeEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeEndSpecified {
            get {
                return this.timeEndFieldSpecified;
            }
            set {
                this.timeEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of time that the instrument box has been up and running since its last power up.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of time that the instrument box has been up and running since its last pow" +
            "er up.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("timeSinceInstrumentStartup", DataType="timeMeasure")]
        public timeMeasure timeSinceInstrumentStartup {
            get {
                return this.timeSinceInstrumentStartupField;
            }
            set {
                this.timeSinceInstrumentStartupField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>This supports user-defined "tags" (in the form of text strings) to be attached to the measurement. Example: to indicate other operations under way at the time (e.g., "start of injection").</summary>
        [System.Xml.Serialization.XmlElementAttribute("measurementTags")]
        [System.ComponentModel.DescriptionAttribute("This supports user-defined \"tags\" (in the form of text strings) to be attached to" +
            " the measurement. Example: to indicate other operations under way at the time (e" +
            ".g., \"start of injection\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("measurementTags", DataType="string")]
        public string[] measurementTags {
            get {
                return this.measurementTagsField;
            }
            set {
                this.measurementTagsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reference to the installed system used to take the measurement (combination of instrument box and optical path)</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Reference to the installed system used to take the measurement (combination of in" +
            "strument box and optical path)")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("installedSystemRef", DataType="refNameString")]
        public refNameString installedSystemRef {
            get {
                return this.installedSystemRefField;
            }
            set {
                this.installedSystemRefField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Enum. The configuration of the optical path. This may be varied from measurement to measurement independent of the fiber path network.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Enum. The configuration of the optical path. This may be varied from measurement " +
            "to measurement independent of the fiber path network.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("measurementConfiguration", DataType="OpticalPathConfiguration")]
        public OpticalPathConfiguration measurementConfiguration {
            get {
                return this.measurementConfigurationField;
            }
            set {
                this.measurementConfigurationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Diagnostic information generated by the instrument box at the time the measurement was taken.</summary>
        [System.Xml.Serialization.XmlElementAttribute("diagnosticParameters")]
        [System.ComponentModel.DescriptionAttribute("Diagnostic information generated by the instrument box at the time the measuremen" +
            "t was taken.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("diagnosticParameters", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] diagnosticParameters {
            get {
                return this.diagnosticParametersField;
            }
            set {
                this.diagnosticParametersField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Header data for raw (measured) traces collections</summary>
        [System.Xml.Serialization.XmlElementAttribute("measurementTrace")]
        [System.ComponentModel.DescriptionAttribute("Header data for raw (measured) traces collections")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("measurementTrace", DataType="cs_dtsMeasurementTrace")]
        public cs_dtsMeasurementTrace[] measurementTrace {
            get {
                return this.measurementTraceField;
            }
            set {
                this.measurementTraceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Container of interpreted data which also specifies by reference the measured data on which the interpretation is based.</summary>
        [System.ComponentModel.DescriptionAttribute("Container of interpreted data which also specifies by reference the measured data" +
            " on which the interpretation is based.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("interpretationLog", DataType="cs_dtsInterpretationLogSet")]
        public cs_dtsInterpretationLogSet interpretationLog {
            get {
                return this.interpretationLogField;
            }
            set {
                this.interpretationLogField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum OpticalPathConfiguration {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("accurate single-ended/dual laser")]
        accuratesingleendedduallaser,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("differential loss calibrated")]
        differentiallosscalibrated,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("double-ended")]
        doubleended,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("single-ended")]
        singleended,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("PRODML", "1.3.1.1")]
    public partial class obj_dtsInstrumentBox {
        
        private grp_dtsInstrumentBox grp_dtsInstrumentBoxField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidField;
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("grp_dtsInstrumentBox", DataType="grp_dtsInstrumentBox")]
        public grp_dtsInstrumentBox grp_dtsInstrumentBox {
            get {
                return this.grp_dtsInstrumentBoxField;
            }
            set {
                this.grp_dtsInstrumentBoxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("PRODML", "1.3.1.1")]
    public partial class obj_dtsInstalledSystem {
        
        private string nameField;
        
        private Energistics.DataAccess.Timestamp dateMinField;
        
        private Energistics.DataAccess.Timestamp dateMaxField;
        
        private bool dateMaxFieldSpecified;
        
        private lengthMeasure opticalPathLengthField;
        
        private double opticalBudgetField;
        
        private bool opticalBudgetFieldSpecified;
        
        private refNameString opticalPathRefField;
        
        private refNameString instrumentBoxRefField;
        
        private string commentField;
        
        private cs_dtsCalibration[] dtsCalibrationField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidField;
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The minimum date index contained within the object. The minimum and maximum indexes are server query parameters and will be  populated with valid values in a "get" result. That is, all measurements for a well in the specified period defined by the min/max. See the WITSML API Specification appendix on "Special Handling" of growing objects  for a description of the behavior related to this parameter.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"The minimum date index contained within the object. The minimum and maximum indexes are server query parameters and will be  populated with valid values in a ""get"" result. That is, all measurements for a well in the specified period defined by the min/max. See the WITSML API Specification appendix on ""Special Handling"" of growing objects  for a description of the behavior related to this parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dateMin", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dateMin {
            get {
                return this.dateMinField;
            }
            set {
                this.dateMinField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum date index contained within the object. The minimum and maximum indexes are server query parameters and will be  populated with valid values in a "get" result. See the WITSML API Specification appendix on "Special Handling" of growing objects  for a description of the behavior related to this parameter.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The maximum date index contained within the object. The minimum and maximum indexes are server query parameters and will be  populated with valid values in a ""get"" result. See the WITSML API Specification appendix on ""Special Handling"" of growing objects  for a description of the behavior related to this parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dateMax", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dateMax {
            get {
                return this.dateMaxField;
            }
            set {
                this.dateMaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateMaxSpecified {
            get {
                return this.dateMaxFieldSpecified;
            }
            set {
                this.dateMaxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The length of the fiber installed in the wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("The length of the fiber installed in the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("opticalPathLength", DataType="lengthMeasure")]
        public lengthMeasure opticalPathLength {
            get {
                return this.opticalPathLengthField;
            }
            set {
                this.opticalPathLengthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total light budget available for the installation. This is  generally measured in decibels, and indicates the total power loss for two-way  travel of the light in the installed fiber.</summary>
        [System.ComponentModel.DescriptionAttribute("Total light budget available for the installation. This is  generally measured in" +
            " decibels, and indicates the total power loss for two-way  travel of the light i" +
            "n the installed fiber.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("opticalBudget", DataType="double")]
        public double opticalBudget {
            get {
                return this.opticalBudgetField;
            }
            set {
                this.opticalBudgetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool opticalBudgetSpecified {
            get {
                return this.opticalBudgetFieldSpecified;
            }
            set {
                this.opticalBudgetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reference to optical path.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Reference to optical path.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("opticalPathRef", DataType="refNameString")]
        public refNameString opticalPathRef {
            get {
                return this.opticalPathRefField;
            }
            set {
                this.opticalPathRefField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reference to instrument box.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Reference to instrument box.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("instrumentBoxRef", DataType="refNameString")]
        public refNameString instrumentBoxRef {
            get {
                return this.instrumentBoxRefField;
            }
            set {
                this.instrumentBoxRefField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comment about this installed system.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Comment about this installed system.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calibration parameters vary from vendor to vendor, depending  on the calibration method being used. This is a general type that allows a calibration  date, business associate, and many  name/value pairs.</summary>
        [System.Xml.Serialization.XmlElementAttribute("dtsCalibration")]
        [System.ComponentModel.DescriptionAttribute("Calibration parameters vary from vendor to vendor, depending  on the calibration " +
            "method being used. This is a general type that allows a calibration  date, busin" +
            "ess associate, and many  name/value pairs.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dtsCalibration", DataType="cs_dtsCalibration")]
        public cs_dtsCalibration[] dtsCalibration {
            get {
                return this.dtsCalibrationField;
            }
            set {
                this.dtsCalibrationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_facilityIdentifier {
        
        private nameStruct nameField;
        
        private facilityIdentifierStruct installationField;
        
        private string kindField;
        
        private facilityIdentifierStruct contextFacilityField;
        
        private cs_geographicContext geographicContextField;
        
        private cs_productVolumeBusinessUnit businessUnitField;
        
        private cs_businessAssociate operatorField;
        
        /// <remarks/>
        /// <summary>Name of the facility</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Name of the facility")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameStruct")]
        public nameStruct name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the facility which is represented by this facilityMapping</summary>
        [System.ComponentModel.DescriptionAttribute("The name of the facility which is represented by this facilityMapping")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("installation", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct installation {
            get {
                return this.installationField;
            }
            set {
                this.installationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of facility where the fiber is deployed</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("Type of facility where the fiber is deployed")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("kind", DataType="kindString")]
        public string kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name and type of a facility whose context is relevant to the represented installation.</summary>
        [System.ComponentModel.DescriptionAttribute("The name and type of a facility whose context is relevant to the represented inst" +
            "allation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("contextFacility", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct contextFacility {
            get {
                return this.contextFacilityField;
            }
            set {
                this.contextFacilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The geographical information about the facility.</summary>
        [System.ComponentModel.DescriptionAttribute("The geographical information about the facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("geographicContext", DataType="cs_geographicContext")]
        public cs_geographicContext geographicContext {
            get {
                return this.geographicContextField;
            }
            set {
                this.geographicContextField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Identifier of the business unit responsible for the facility.</summary>
        [System.ComponentModel.DescriptionAttribute("Identifier of the business unit responsible for the facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("businessUnit", DataType="cs_productVolumeBusinessUnit")]
        public cs_productVolumeBusinessUnit businessUnit {
            get {
                return this.businessUnitField;
            }
            set {
                this.businessUnitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Contact for the company/person operating the facility</summary>
        [System.ComponentModel.DescriptionAttribute("Contact for the company/person operating the facility")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("operator", DataType="cs_businessAssociate")]
        public cs_businessAssociate @operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_documentInfoQueryParam {
        
        private endpointQualifiedDateTime dTimMinField;
        
        private endpointQualifiedDateTime dTimMaxField;
        
        /// <remarks/>
        /// <summary>The minimum start time for an object. This only applies to objects with a root level date and/or dateTime element(s). The objects may or not be growing objects but the See the API specification for behavior related to this query parameter.</summary>
        [System.ComponentModel.DescriptionAttribute("The minimum start time for an object. This only applies to objects with a root le" +
            "vel date and/or dateTime element(s). The objects may or not be growing objects b" +
            "ut the See the API specification for behavior related to this query parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimMin", DataType="endpointQualifiedDateTime")]
        public endpointQualifiedDateTime dTimMin {
            get {
                return this.dTimMinField;
            }
            set {
                this.dTimMinField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum start time for an object. This only applies to objects with a root level date and/or dateTime element(s). See the API specification for behavior related to this query parameter.</summary>
        [System.ComponentModel.DescriptionAttribute("The maximum start time for an object. This only applies to objects with a root le" +
            "vel date and/or dateTime element(s). See the API specification for behavior rela" +
            "ted to this query parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimMax", DataType="endpointQualifiedDateTime")]
        public endpointQualifiedDateTime dTimMax {
            get {
                return this.dTimMaxField;
            }
            set {
                this.dTimMaxField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_documentEvent {
        
        private Energistics.DataAccess.Timestamp eventDateField;
        
        private string eventTypeField;
        
        private string responsiblePartyField;
        
        private string commentField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The date on which the event took place.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The date on which the event took place.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eventDate", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp eventDate {
            get {
                return this.eventDateField;
            }
            set {
                this.eventDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The kind of event event.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The kind of event event.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eventType", DataType="nameString")]
        public string eventType {
            get {
                return this.eventTypeField;
            }
            set {
                this.eventTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The party responsible for the event.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The party responsible for the event.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("responsibleParty", DataType="nameString")]
        public string responsibleParty {
            get {
                return this.responsiblePartyField;
            }
            set {
                this.responsiblePartyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A free form comment that can further  define the event that occurred.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A free form comment that can further  define the event that occurred.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_documentSecurityInfo {
        
        private string classField;
        
        private string securitySystemField;
        
        private Energistics.DataAccess.Timestamp endDateField;
        
        private bool endDateFieldSpecified;
        
        private string commentField;
        
        private cs_extensionNameValue[] extensionNameValueField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The security class in which this document is  classified. Examples would be confidential, partner confidential,  tight. The meaning of the class is determined by the System in which  it is defined.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The security class in which this document is  classified. Examples would be confi" +
            "dential, partner confidential,  tight. The meaning of the class is determined by" +
            " the System in which  it is defined.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("class", DataType="kindString")]
        public string @class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The security classification system.  This gives context to the meaning of the Class value.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The security classification system.  This gives context to the meaning of the Cla" +
            "ss value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("securitySystem", DataType="kindString")]
        public string securitySystem {
            get {
                return this.securitySystemField;
            }
            set {
                this.securitySystemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date on which this security class is no  longer applicable.</summary>
        [System.ComponentModel.DescriptionAttribute("The date on which this security class is no  longer applicable.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("endDate", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endDateSpecified {
            get {
                return this.endDateFieldSpecified;
            }
            set {
                this.endDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A general comment to further define the security  class.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A general comment to further define the security  class.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Extensions to the schema based on a name-value construct.</summary>
        [System.Xml.Serialization.XmlElementAttribute("extensionNameValue")]
        [System.ComponentModel.DescriptionAttribute("Extensions to the schema based on a name-value construct.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extensionNameValue", DataType="cs_extensionNameValue")]
        public cs_extensionNameValue[] extensionNameValue {
            get {
                return this.extensionNameValueField;
            }
            set {
                this.extensionNameValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_documentFileCreation {
        
        private Energistics.DataAccess.Timestamp fileCreationDateField;
        
        private string softwareNameField;
        
        private string fileCreatorField;
        
        private string commentField;
        
        /// <remarks/>
        /// <summary>The date and time that the file was created.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The date and time that the file was created.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fileCreationDate", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp fileCreationDate {
            get {
                return this.fileCreationDateField;
            }
            set {
                this.fileCreationDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>If appropriate, the software that created the file.  This is a free form string, and may include whatever information  is deemed relevant.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("If appropriate, the software that created the file.  This is a free form string, " +
            "and may include whatever information  is deemed relevant.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("softwareName", DataType="nameString")]
        public string softwareName {
            get {
                return this.softwareNameField;
            }
            set {
                this.softwareNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The person or business associate that created  the file.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The person or business associate that created  the file.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fileCreator", DataType="nameString")]
        public string fileCreator {
            get {
                return this.fileCreatorField;
            }
            set {
                this.fileCreatorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Any comment that would be useful to further  explain the creation of this instance document.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Any comment that would be useful to further  explain the creation of this instanc" +
            "e document.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public partial class cs_documentInfo {
        
        private nameStruct documentNameField;
        
        private nameStruct[] documentAliasField;
        
        private Energistics.DataAccess.Timestamp documentDateField;
        
        private bool documentDateFieldSpecified;
        
        private nameStruct[] documentClassField;
        
        private cs_documentFileCreation fileCreationInformationField;
        
        private cs_documentSecurityInfo[] securityInformationField;
        
        private string disclaimerField;
        
        private cs_documentEvent[] auditTrailField;
        
        private string ownerField;
        
        private cs_documentInfoQueryParam queryParamField;
        
        private string commentField;
        
        /// <remarks/>
        /// <summary>An identifier for the document. This is  intended to be unique within the context of the NamingSystem.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("An identifier for the document. This is  intended to be unique within the context" +
            " of the NamingSystem.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentName", DataType="nameStruct")]
        public nameStruct documentName {
            get {
                return this.documentNameField;
            }
            set {
                this.documentNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Zero or more alternate names for the document.  These names do not need to be unique within the naming system.</summary>
        [System.Xml.Serialization.XmlElementAttribute("documentAlias")]
        [System.ComponentModel.DescriptionAttribute("Zero or more alternate names for the document.  These names do not need to be uni" +
            "que within the naming system.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentAlias", DataType="nameStruct")]
        public nameStruct[] documentAlias {
            get {
                return this.documentAliasField;
            }
            set {
                this.documentAliasField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date of the creation of the document.  This is not the same as the date that the file was created.  For this date, the document is considered to be the set of  information associated with this document information.  For example, the document may be a seismic binset.  This represents the date that the binset was created.  The FileCreation information would capture the date that  the XML file was created to send or exchange the binset.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The date of the creation of the document.  This is not the same as the date that the file was created.  For this date, the document is considered to be the set of  information associated with this document information.  For example, the document may be a seismic binset.  This represents the date that the binset was created.  The FileCreation information would capture the date that  the XML file was created to send or exchange the binset.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentDate", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp documentDate {
            get {
                return this.documentDateField;
            }
            set {
                this.documentDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentDateSpecified {
            get {
                return this.documentDateFieldSpecified;
            }
            set {
                this.documentDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A document class. Examples of classes would be a  metadata classification or a set of keywords.</summary>
        [System.Xml.Serialization.XmlElementAttribute("documentClass")]
        [System.ComponentModel.DescriptionAttribute("A document class. Examples of classes would be a  metadata classification or a se" +
            "t of keywords.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentClass", DataType="nameStruct")]
        public nameStruct[] documentClass {
            get {
                return this.documentClassField;
            }
            set {
                this.documentClassField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The information about the creation of the  exchange file. This is not about the creation of the data within  the file, but the creation of the file itself.</summary>
        [System.ComponentModel.DescriptionAttribute("The information about the creation of the  exchange file. This is not about the c" +
            "reation of the data within  the file, but the creation of the file itself.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fileCreationInformation", DataType="cs_documentFileCreation")]
        public cs_documentFileCreation fileCreationInformation {
            get {
                return this.fileCreationInformationField;
            }
            set {
                this.fileCreationInformationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information about the security to be applied to  this file. More than one classification can be given.</summary>
        [System.Xml.Serialization.XmlElementAttribute("securityInformation")]
        [System.ComponentModel.DescriptionAttribute("Information about the security to be applied to  this file. More than one classif" +
            "ication can be given.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("securityInformation", DataType="cs_documentSecurityInfo")]
        public cs_documentSecurityInfo[] securityInformation {
            get {
                return this.securityInformationField;
            }
            set {
                this.securityInformationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A free-form string that allows a disclaimer to  accompany the information.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A free-form string that allows a disclaimer to  accompany the information.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("disclaimer", DataType="commentString")]
        public string disclaimer {
            get {
                return this.disclaimerField;
            }
            set {
                this.disclaimerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A collection of events that can document the  history of the data.</summary>
        [System.Xml.Serialization.XmlArrayItemAttribute("event", IsNullable=false)]
        [System.ComponentModel.DescriptionAttribute("A collection of events that can document the  history of the data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("auditTrail", DataType="cs_documentAudit")]
        public cs_documentEvent[] auditTrail {
            get {
                return this.auditTrailField;
            }
            set {
                this.auditTrailField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The owner of the data.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The owner of the data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("owner", DataType="nameString")]
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>WITSML query parameters.</summary>
        [System.ComponentModel.DescriptionAttribute("WITSML query parameters.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("queryParam", DataType="cs_documentInfoQueryParam")]
        public cs_documentInfoQueryParam queryParam {
            get {
                return this.queryParamField;
            }
            set {
                this.queryParamField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An optional comment about the document.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("An optional comment about the document.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [System.Xml.Serialization.XmlRootAttribute("wftRuns", Namespace="http://www.prodml.org/schemas/1series", IsNullable=false)]
    public partial class obj_wftRuns : abstractObject {
        
        private cs_documentInfo documentInfoField;
        
        private obj_wftRun[] wftRunField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information about a single Wireline Formation Test (WFT).</summary>
        [System.Xml.Serialization.XmlElementAttribute("wftRun")]
        [System.ComponentModel.DescriptionAttribute("Information about a single Wireline Formation Test (WFT).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wftRun", DataType="obj_wftRun")]
        public obj_wftRun[] wftRun {
            get {
                return this.wftRunField;
            }
            set {
                this.wftRunField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.2\\.[0-9]\\.[1-9]?[0-9]\\(PRODML\\)")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionStringProdml")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [System.Xml.Serialization.XmlRootAttribute("wellTests", Namespace="http://www.prodml.org/schemas/1series", IsNullable=false)]
    public partial class obj_wellTests : abstractObject {
        
        private cs_documentInfo documentInfoField;
        
        private obj_wellTest[] wellTestField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information about a single well test.</summary>
        [System.Xml.Serialization.XmlElementAttribute("wellTest")]
        [System.ComponentModel.DescriptionAttribute("Information about a single well test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellTest", DataType="obj_wellTest")]
        public obj_wellTest[] wellTest {
            get {
                return this.wellTestField;
            }
            set {
                this.wellTestField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.2\\.[0-9]\\.[1-9]?[0-9]\\(PRODML\\)")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionStringProdml")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [System.Xml.Serialization.XmlRootAttribute("timeSeriesStatistics", Namespace="http://www.prodml.org/schemas/1series", IsNullable=false)]
    public partial class obj_timeSeriesStatistics : abstractObject {
        
        private cs_documentInfo documentInfoField;
        
        private obj_timeSeriesStatistic[] timeSeriesStatisticField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Statistics about a single range of time. This is a VIEW of the time series data and represents derived information about that series. As such, it is not persisted and cannot be added, updated or deleted from a persistent server. The statistics view uses the same identity (including uid) as the time series data object.</summary>
        [System.Xml.Serialization.XmlElementAttribute("timeSeriesStatistic")]
        [System.ComponentModel.DescriptionAttribute(@"Statistics about a single range of time. This is a VIEW of the time series data and represents derived information about that series. As such, it is not persisted and cannot be added, updated or deleted from a persistent server. The statistics view uses the same identity (including uid) as the time series data object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("timeSeriesStatistic", DataType="obj_timeSeriesStatistic")]
        public obj_timeSeriesStatistic[] timeSeriesStatistic {
            get {
                return this.timeSeriesStatisticField;
            }
            set {
                this.timeSeriesStatisticField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.2\\.[0-9]\\.[1-9]?[0-9]\\(PRODML\\)")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionStringProdml")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [System.Xml.Serialization.XmlRootAttribute("timeSeriesDatas", Namespace="http://www.prodml.org/schemas/1series", IsNullable=false)]
    public partial class obj_timeSeriesDatas : abstractObject {
        
        private obj_timeSeriesData[] timeSeriesDataField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about a single time series.</summary>
        [System.Xml.Serialization.XmlElementAttribute("timeSeriesData")]
        [System.ComponentModel.DescriptionAttribute("Information about a single time series.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("timeSeriesData", DataType="obj_timeSeriesData")]
        public obj_timeSeriesData[] timeSeriesData {
            get {
                return this.timeSeriesDataField;
            }
            set {
                this.timeSeriesDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.2\\.[0-9]\\.[1-9]?[0-9]\\(PRODML\\)")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionStringProdml")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [System.Xml.Serialization.XmlRootAttribute("report", Namespace="http://www.prodml.org/schemas/1series", IsNullable=false)]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("PRODML", "1.3.1.1")]
    public partial class obj_report : abstractObject {
        
        private string kindField;
        
        private nameStruct titleField;
        
        private System.DateTime dateField;
        
        private bool dateFieldSpecified;
        
        private System.DateTime dateEndField;
        
        private bool dateEndFieldSpecified;
        
        private string monthField;
        
        private int yearField;
        
        private bool yearFieldSpecified;
        
        private string commentField;
        
        private string reportVersionField;
        
        private ReportVersionStatus reportStatusField;
        
        private bool reportStatusFieldSpecified;
        
        private facilityIdentifierStruct installationField;
        
        private facilityIdentifierStruct[] contextFacilityField;
        
        private cs_businessAssociate operatorField;
        
        private cs_geographicContext geographicContextField;
        
        private System.DateTime issueDateField;
        
        private bool issueDateFieldSpecified;
        
        private cs_businessAssociate issuedByField;
        
        private System.DateTime approvalDateField;
        
        private bool approvalDateFieldSpecified;
        
        private cs_businessAssociate approverField;
        
        private cs_customData customDataField;
        
        /// <remarks/>
        /// <summary>The type of report.  This should define and constrain the expected content of the report.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The type of report.  This should define and constrain the expected content of the" +
            " report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("kind", DataType="kindString")]
        public string kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The tile of the report if different from the name of the report.</summary>
        [System.ComponentModel.DescriptionAttribute("The tile of the report if different from the name of the report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("title", DataType="nameStruct")]
        public nameStruct title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date that the report represents (i.e., not a year or month). Only one of date, month or year should be specified.</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DescriptionAttribute("The date that the report represents (i.e., not a year or month). Only one of date" +
            ", month or year should be specified.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("date", DataType="date")]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateSpecified {
            get {
                return this.dateFieldSpecified;
            }
            set {
                this.dateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The ending date that the report represents if it represents an interval.</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DescriptionAttribute("The ending date that the report represents if it represents an interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dateEnd", DataType="date")]
        public System.DateTime dateEnd {
            get {
                return this.dateEndField;
            }
            set {
                this.dateEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateEndSpecified {
            get {
                return this.dateEndFieldSpecified;
            }
            set {
                this.dateEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The month that the report represents (i.e., not a year, date or date range). Only one of date, month or year should be specified.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([1-9][0-9][0-9][0-9])-(([0][0-9])|([1][0-2]))")]
        [System.ComponentModel.DescriptionAttribute("The month that the report represents (i.e., not a year, date or date range). Only" +
            " one of date, month or year should be specified.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("month", DataType="calendarMonth")]
        public string month {
            get {
                return this.monthField;
            }
            set {
                this.monthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The year that the report represents (i.e., not a month, date or date range). Only one of date, month or year should be specified.</summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(1000D, 9999D)]
        [System.ComponentModel.DescriptionAttribute("The year that the report represents (i.e., not a month, date or date range). Only" +
            " one of date, month or year should be specified.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("year", DataType="calendarYear")]
        public int year {
            get {
                return this.yearField;
            }
            set {
                this.yearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool yearSpecified {
            get {
                return this.yearFieldSpecified;
            }
            set {
                this.yearFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A textual comment about the report.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A textual comment about the report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The current report version.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.ComponentModel.DescriptionAttribute("The current report version.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reportVersion", DataType="kindString")]
        public string reportVersion {
            get {
                return this.reportVersionField;
            }
            set {
                this.reportVersionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The current document version status.</summary>
        [System.ComponentModel.DescriptionAttribute("The current document version status.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reportStatus", DataType="ReportVersionStatus")]
        public ReportVersionStatus reportStatus {
            get {
                return this.reportStatusField;
            }
            set {
                this.reportStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reportStatusSpecified {
            get {
                return this.reportStatusFieldSpecified;
            }
            set {
                this.reportStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the facility which is represented by this report.  The name can be qualified by a naming system.  This also defines the kind of facility.</summary>
        [System.ComponentModel.DescriptionAttribute("The name of the facility which is represented by this report.  The name can be qu" +
            "alified by a naming system.  This also defines the kind of facility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("installation", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct installation {
            get {
                return this.installationField;
            }
            set {
                this.installationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name and type of a facility whose context is relevant to  the represented installation.</summary>
        [System.Xml.Serialization.XmlElementAttribute("contextFacility")]
        [System.ComponentModel.DescriptionAttribute("The name and type of a facility whose context is relevant to  the represented ins" +
            "tallation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("contextFacility", DataType="facilityIdentifierStruct")]
        public facilityIdentifierStruct[] contextFacility {
            get {
                return this.contextFacilityField;
            }
            set {
                this.contextFacilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The operator of the facilities in the report.</summary>
        [System.ComponentModel.DescriptionAttribute("The operator of the facilities in the report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("operator", DataType="cs_businessAssociate")]
        public cs_businessAssociate @operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The geographic context of the report.</summary>
        [System.ComponentModel.DescriptionAttribute("The geographic context of the report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("geographicContext", DataType="cs_geographicContext")]
        public cs_geographicContext geographicContext {
            get {
                return this.geographicContextField;
            }
            set {
                this.geographicContextField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date that the report was issued.</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DescriptionAttribute("The date that the report was issued.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("issueDate", DataType="date")]
        public System.DateTime issueDate {
            get {
                return this.issueDateField;
            }
            set {
                this.issueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool issueDateSpecified {
            get {
                return this.issueDateFieldSpecified;
            }
            set {
                this.issueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The person or company that issued the report. This may contain the role of the person or company within the context of the report.</summary>
        [System.ComponentModel.DescriptionAttribute("The person or company that issued the report. This may contain the role of the pe" +
            "rson or company within the context of the report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("issuedBy", DataType="cs_businessAssociate")]
        public cs_businessAssociate issuedBy {
            get {
                return this.issuedByField;
            }
            set {
                this.issuedByField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date that the report was approved.</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DescriptionAttribute("The date that the report was approved.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("approvalDate", DataType="date")]
        public System.DateTime approvalDate {
            get {
                return this.approvalDateField;
            }
            set {
                this.approvalDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool approvalDateSpecified {
            get {
                return this.approvalDateFieldSpecified;
            }
            set {
                this.approvalDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The person or company that approved the report. This may contain the role of the person or company within the context of the report.</summary>
        [System.ComponentModel.DescriptionAttribute("The person or company that approved the report. This may contain the role of the " +
            "person or company within the context of the report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("approver", DataType="cs_businessAssociate")]
        public cs_businessAssociate approver {
            get {
                return this.approverField;
            }
            set {
                this.approverField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum ReportVersionStatus {
        
        /// <remarks/>
        final,
        
        /// <remarks/>
        preliminary,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [System.Xml.Serialization.XmlRootAttribute("productVolumes", Namespace="http://www.prodml.org/schemas/1series", IsNullable=false)]
    public partial class obj_productVolumes : abstractObject {
        
        private cs_documentInfo documentInfoField;
        
        private obj_productVolume[] productVolumeField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information about a single productVolume.</summary>
        [System.Xml.Serialization.XmlElementAttribute("productVolume")]
        [System.ComponentModel.DescriptionAttribute("Information about a single productVolume.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("productVolume", DataType="obj_productVolume")]
        public obj_productVolume[] productVolume {
            get {
                return this.productVolumeField;
            }
            set {
                this.productVolumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.2\\.[0-9]\\.[1-9]?[0-9]\\(PRODML\\)")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionStringProdml")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [System.Xml.Serialization.XmlRootAttribute("productionOperations", Namespace="http://www.prodml.org/schemas/1series", IsNullable=false)]
    public partial class obj_productionOperations : abstractObject {
        
        private cs_documentInfo documentInfoField;
        
        private obj_productionOperation[] productionOperationField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information about a single productionOperation.</summary>
        [System.Xml.Serialization.XmlElementAttribute("productionOperation")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Information about a single productionOperation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("productionOperation", DataType="obj_productionOperation")]
        public obj_productionOperation[] productionOperation {
            get {
                return this.productionOperationField;
            }
            set {
                this.productionOperationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.2\\.[0-9]\\.[1-9]?[0-9]\\(PRODML\\)")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionStringProdml")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [System.Xml.Serialization.XmlRootAttribute("productFlowModels", Namespace="http://www.prodml.org/schemas/1series", IsNullable=false)]
    public partial class obj_productFlowModels : abstractObject {
        
        private cs_documentInfo documentInfoField;
        
        private obj_productFlowModel[] productFlowModelField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information about a single Product Flow Model.</summary>
        [System.Xml.Serialization.XmlElementAttribute("productFlowModel")]
        [System.ComponentModel.DescriptionAttribute("Information about a single Product Flow Model.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("productFlowModel", DataType="obj_productFlowModel")]
        public obj_productFlowModel[] productFlowModel {
            get {
                return this.productFlowModelField;
            }
            set {
                this.productFlowModelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the documenti nstance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.2\\.[0-9]\\.[1-9]?[0-9]\\(PRODML\\)")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "enti nstance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionStringProdml")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [System.Xml.Serialization.XmlRootAttribute("fluidSamples", Namespace="http://www.prodml.org/schemas/1series", IsNullable=false)]
    public partial class obj_fluidSamples : abstractObject {
        
        private cs_documentInfo documentInfoField;
        
        private obj_fluidSample[] fluidSampleField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information about a single Fluid Sample.</summary>
        [System.Xml.Serialization.XmlElementAttribute("fluidSample")]
        [System.ComponentModel.DescriptionAttribute("Information about a single Fluid Sample.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fluidSample", DataType="obj_fluidSample")]
        public obj_fluidSample[] fluidSample {
            get {
                return this.fluidSampleField;
            }
            set {
                this.fluidSampleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the documenti nstance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.2\\.[0-9]\\.[1-9]?[0-9]\\(PRODML\\)")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "enti nstance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionStringProdml")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [System.Xml.Serialization.XmlRootAttribute("fluidAnalysisResults", Namespace="http://www.prodml.org/schemas/1series", IsNullable=false)]
    public partial class obj_fluidAnalysisResults : abstractObject {
        
        private cs_documentInfo documentInfoField;
        
        private obj_fluidAnalysisResult[] fluidAnalysisResultField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information about a single Fluid Analysis Result.</summary>
        [System.Xml.Serialization.XmlElementAttribute("fluidAnalysisResult")]
        [System.ComponentModel.DescriptionAttribute("Information about a single Fluid Analysis Result.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fluidAnalysisResult", DataType="obj_fluidAnalysisResult")]
        public obj_fluidAnalysisResult[] fluidAnalysisResult {
            get {
                return this.fluidAnalysisResultField;
            }
            set {
                this.fluidAnalysisResultField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the documenti nstance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.2\\.[0-9]\\.[1-9]?[0-9]\\(PRODML\\)")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "enti nstance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionStringProdml")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [System.Xml.Serialization.XmlRootAttribute("fluidAnalysiss", Namespace="http://www.prodml.org/schemas/1series", IsNullable=false)]
    public partial class obj_fluidAnalysiss : abstractObject {
        
        private cs_documentInfo documentInfoField;
        
        private obj_fluidAnalysis[] fluidAnalysisField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information about a single Fluid Analysis.</summary>
        [System.Xml.Serialization.XmlElementAttribute("fluidAnalysis")]
        [System.ComponentModel.DescriptionAttribute("Information about a single Fluid Analysis.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fluidAnalysis", DataType="obj_fluidAnalysis")]
        public obj_fluidAnalysis[] fluidAnalysis {
            get {
                return this.fluidAnalysisField;
            }
            set {
                this.fluidAnalysisField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the documenti nstance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.2\\.[0-9]\\.[1-9]?[0-9]\\(PRODML\\)")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "enti nstance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionStringProdml")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [System.Xml.Serialization.XmlRootAttribute("fiberOpticalPaths", Namespace="http://www.prodml.org/schemas/1series", IsNullable=false)]
    public partial class obj_fiberOpticalPaths : abstractObject {
        
        private cs_documentInfo documentInfoField;
        
        private cs_facilityIdentifier facilityIdentifierField;
        
        private obj_fiberOpticalPath[] fiberOpticalPathField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>A schema to capture a set of data that is relevant for many exchange documents. It includes information about the file that was created, and high-level information about the data that is being exchanged within the file.</summary>
        [System.ComponentModel.DescriptionAttribute("A schema to capture a set of data that is relevant for many exchange documents. I" +
            "t includes information about the file that was created, and high-level informati" +
            "on about the data that is being exchanged within the file.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facilityIdentifier", DataType="cs_facilityIdentifier")]
        public cs_facilityIdentifier facilityIdentifier {
            get {
                return this.facilityIdentifierField;
            }
            set {
                this.facilityIdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("fiberOpticalPath")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fiberOpticalPath", DataType="obj_fiberOpticalPath")]
        public obj_fiberOpticalPath[] fiberOpticalPath {
            get {
                return this.fiberOpticalPathField;
            }
            set {
                this.fiberOpticalPathField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.2\\.[0-9]\\.[1-9]?[0-9]\\(PRODML\\)")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionStringProdml")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [System.Xml.Serialization.XmlRootAttribute("dtsMeasurements", Namespace="http://www.prodml.org/schemas/1series", IsNullable=false)]
    public partial class obj_dtsMeasurements : abstractObject {
        
        private cs_documentInfo documentInfoField;
        
        private cs_facilityIdentifier facilityIdentifierField;
        
        private obj_dtsMeasurement[] dtsMeasurementField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>A schema to capture a set of data that is relevant for many exchange documents. It includes information about the file that was created, and high-level information about the data that is being exchanged within the file.</summary>
        [System.ComponentModel.DescriptionAttribute("A schema to capture a set of data that is relevant for many exchange documents. I" +
            "t includes information about the file that was created, and high-level informati" +
            "on about the data that is being exchanged within the file.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facilityIdentifier", DataType="cs_facilityIdentifier")]
        public cs_facilityIdentifier facilityIdentifier {
            get {
                return this.facilityIdentifierField;
            }
            set {
                this.facilityIdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dtsMeasurement")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dtsMeasurement", DataType="obj_dtsMeasurement")]
        public obj_dtsMeasurement[] dtsMeasurement {
            get {
                return this.dtsMeasurementField;
            }
            set {
                this.dtsMeasurementField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.2\\.[0-9]\\.[1-9]?[0-9]\\(PRODML\\)")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionStringProdml")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [System.Xml.Serialization.XmlRootAttribute("dtsInstrumentBoxes", Namespace="http://www.prodml.org/schemas/1series", IsNullable=false)]
    public partial class obj_dtsInstrumentBoxes : abstractObject {
        
        private cs_documentInfo documentInfoField;
        
        private cs_facilityIdentifier facilityIdentifierField;
        
        private obj_dtsInstrumentBox[] fiberInstrumentBoxField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>A schema to capture a set of data that is relevant for many exchange documents. It includes information about the file that was created, and high-level information about the data that is being exchanged within the file.</summary>
        [System.ComponentModel.DescriptionAttribute("A schema to capture a set of data that is relevant for many exchange documents. I" +
            "t includes information about the file that was created, and high-level informati" +
            "on about the data that is being exchanged within the file.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facilityIdentifier", DataType="cs_facilityIdentifier")]
        public cs_facilityIdentifier facilityIdentifier {
            get {
                return this.facilityIdentifierField;
            }
            set {
                this.facilityIdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("fiberInstrumentBox")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fiberInstrumentBox", DataType="obj_dtsInstrumentBox")]
        public obj_dtsInstrumentBox[] fiberInstrumentBox {
            get {
                return this.fiberInstrumentBoxField;
            }
            set {
                this.fiberInstrumentBoxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.2\\.[0-9]\\.[1-9]?[0-9]\\(PRODML\\)")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionStringProdml")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    [System.Xml.Serialization.XmlRootAttribute("dtsInstalledSystems", Namespace="http://www.prodml.org/schemas/1series", IsNullable=false)]
    public partial class obj_dtsInstalledSystems : abstractObject {
        
        private cs_documentInfo documentInfoField;
        
        private cs_facilityIdentifier facilityIdentifierField;
        
        private obj_dtsInstalledSystem[] dtsinstalledSystemField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>A schema to capture a set of data that is relevant for many exchange documents. It includes information about the file that was created, and high-level information about the data that is being exchanged within the file.</summary>
        [System.ComponentModel.DescriptionAttribute("A schema to capture a set of data that is relevant for many exchange documents. I" +
            "t includes information about the file that was created, and high-level informati" +
            "on about the data that is being exchanged within the file.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("facilityIdentifier", DataType="cs_facilityIdentifier")]
        public cs_facilityIdentifier facilityIdentifier {
            get {
                return this.facilityIdentifierField;
            }
            set {
                this.facilityIdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dtsinstalledSystem")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dtsinstalledSystem", DataType="obj_dtsInstalledSystem")]
        public obj_dtsInstalledSystem[] dtsinstalledSystem {
            get {
                return this.dtsinstalledSystemField;
            }
            set {
                this.dtsinstalledSystemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.2\\.[0-9]\\.[1-9]?[0-9]\\(PRODML\\)")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionStringProdml")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum NameTagLocation {
        
        /// <remarks/>
        body,
        
        /// <remarks/>
        box,
        
        /// <remarks/>
        pin,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum NameTagNumberingScheme {
        
        /// <remarks/>
        EPC64,
        
        /// <remarks/>
        EPC96,
        
        /// <remarks/>
        MSRCID,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ANSI/AIM-BC2")]
        ANSIAIMBC2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ANSI/AIM-BC6")]
        ANSIAIMBC6,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ANSI/AIM-BC10")]
        ANSIAIMBC10,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EAN.UCC")]
        EANUCC,
        
        /// <remarks/>
        F2F,
        
        /// <remarks/>
        MFM,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("serial number")]
        serialnumber,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum NameTagTechnology {
        
        /// <remarks/>
        tagged,
        
        /// <remarks/>
        labeled,
        
        /// <remarks/>
        intrinsic,
        
        /// <remarks/>
        stamped,
        
        /// <remarks/>
        painted,
        
        /// <remarks/>
        temporary,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum InstalledFiberPoint {
        
        /// <remarks/>
        splice,
        
        /// <remarks/>
        connector,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("end of fiber")]
        endoffiber,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("base of fiber")]
        baseoffiber,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("turn around point")]
        turnaroundpoint,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("start of fiber")]
        startoffiber,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oven entry point")]
        ovenentrypoint,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oven exit point")]
        ovenexitpoint,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("downhole gauge")]
        downholegauge,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DTS laser head")]
        DTSlaserhead,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DTS reference oven")]
        DTSreferenceoven,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("splice box")]
        splicebox,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wellhead junction box")]
        wellheadjunctionbox,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("base tubing hanger flange")]
        basetubinghangerflange,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PBR wet connect")]
        PBRwetconnect,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("top ESP pump")]
        topESPpump,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("base ESP pump")]
        baseESPpump,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wellhead temperature gauge")]
        wellheadtemperaturegauge,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("top completion zone")]
        topcompletionzone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("base completion zone")]
        basecompletionzone,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum InterpretationMnemonicType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("facilityDistance,adjustedTemperature")]
        facilityDistanceadjustedTemperature,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum InterpretationUnitType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m,degC")]
        mdegC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft,degF")]
        ftdegF,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum MeasurementMnemonicType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(@"fiberDistance,antistokes,stokes,reverseAntiStokes,reverseStokes,rayleigh1,rayleigh2,brillouinfrequency,loss,lossRatio,cumulativeExcessLoss,frequencyQualityMeasure,measurementUncertainty,brillouinAmplitude,opticalPathTemperature,uncalibratedTemperature1,uncalibratedTemperature2,")]
        fiberDistanceantistokesstokesreverseAntiStokesreverseStokesrayleigh1rayleigh2brillouinfrequencylosslossRatiocumulativeExcessLossfrequencyQualityMeasuremeasurementUncertaintybrillouinAmplitudeopticalPathTemperatureuncalibratedTemperature1uncalibratedTemperature2,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.prodml.org/schemas/1series")]
    public enum MeasurementUnitType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m,mW,mW,mW,mW,mW,mW,GHz,dB/Km,dB/Km,dB,dimensionless,degC,mW,degC,degC,degC,")]
        mmWmWmWmWmWmWGHzdBKmdBKmdBdimensionlessdegCmWdegCdegCdegC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft,mW,mW,mW,mW,mW,mW,GHz,dB/Km,dB/Km,dB,dimensionless,degF,mW,degF,degF,degF,")]
        ftmWmWmWmWmWmWGHzdBKmdBKmdBdimensionlessdegFmWdegFdegFdegF,
    }
}
