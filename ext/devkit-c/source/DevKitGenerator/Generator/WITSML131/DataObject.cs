//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=2.0.50727.3038.
// 
namespace Energistics.Generator.WITSML131 {
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum ActivityClassType {
        
        /// <remarks/>
        planned,
        
        /// <remarks/>
        unplanned,
        
        /// <remarks/>
        downtime,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum ActivityCode {
        
        /// <remarks/>
        abandonment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("abandonment -- log plugs")]
        abandonmentlogplugs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("abandonment -- run plugs")]
        abandonmentrunplugs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("abandonment -- wait on cement")]
        abandonmentwaitoncement,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing, cement")]
        casingcement,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing, cement -- circulate, cement")]
        casingcementcirculatecement,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing, cement -- other")]
        casingcementother,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing, cement -- rig up, run casing")]
        casingcementrigupruncasing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing, cement -- rig up, run liner")]
        casingcementriguprunliner,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing, cement -- wait on cement")]
        casingcementwaitoncement,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("completion operations")]
        completionoperations,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("completion operations -- rig up")]
        completionoperationsrigup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("completion operations -- tear down")]
        completionoperationsteardown,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("completion operations -- testing ")]
        completionoperationstesting,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("completion operations -- running liner")]
        completionoperationsrunningliner,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("completion operations -- gravel packing")]
        completionoperationsgravelpacking,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("completion operations -- logging")]
        completionoperationslogging,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cond mud, circulate")]
        condmudcirculate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cond mud, circulate -- boulder or gravel")]
        condmudcirculateboulderorgravel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cond mud, circulate -- casing")]
        condmudcirculatecasing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cond mud, circulate -- cementing")]
        condmudcirculatecementing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cond mud, circulate -- circulate samples")]
        condmudcirculatecirculatesamples,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cond mud, circulate -- coring")]
        condmudcirculatecoring,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cond mud, circulate -- drilling")]
        condmudcirculatedrilling,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cond mud, circulate -- fishing")]
        condmudcirculatefishing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cond mud, circulate -- gumbo attack")]
        condmudcirculategumboattack,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cond mud, circulate -- logging")]
        condmudcirculatelogging,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cond mud, circulate -- lost circulation")]
        condmudcirculatelostcirculation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cond mud, circulate -- well control")]
        condmudcirculatewellcontrol,
        
        /// <remarks/>
        coring,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("coring -- conventional")]
        coringconventional,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("coring -- flow check")]
        coringflowcheck,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("coring -- laydown barrel")]
        coringlaydownbarrel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("coring -- oriented")]
        coringoriented,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("coring -- plastic sleeve")]
        coringplasticsleeve,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("coring -- rig up core barrel")]
        coringrigupcorebarrel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("coring -- sponge")]
        coringsponge,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cut, slip drilling line")]
        cutslipdrillingline,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deviation survey")]
        deviationsurvey,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deviation survey -- dir multi-shot")]
        deviationsurveydirmultishot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deviation survey -- dir single shot")]
        deviationsurveydirsingleshot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deviation survey -- drift")]
        deviationsurveydrift,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deviation survey -- gyro")]
        deviationsurveygyro,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deviation survey -- MWD")]
        deviationsurveyMWD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dir work")]
        dirwork,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dir work -- horizontal drilling")]
        dirworkhorizontaldrilling,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dir work -- motor drilling")]
        dirworkmotordrilling,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dir work -- orient")]
        dirworkorient,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dir work -- rotary drilling")]
        dirworkrotarydrilling,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dir work -- slant drilling")]
        dirworkslantdrilling,
        
        /// <remarks/>
        DST,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DST -- cased hole")]
        DSTcasedhole,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DST -- lay down tools")]
        DSTlaydowntools,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DST -- open hole")]
        DSTopenhole,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DST -- open hole closed chamber")]
        DSTopenholeclosedchamber,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DST -- rig up tools")]
        DSTriguptools,
        
        /// <remarks/>
        drilling,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling -- casing")]
        drillingcasing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling -- connection")]
        drillingconnection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling -- drill cement, float equip")]
        drillingdrillcementfloatequip,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling -- flow check")]
        drillingflowcheck,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling -- hole opening")]
        drillingholeopening,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling -- new hole")]
        drillingnewhole,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling -- sidetracking")]
        drillingsidetracking,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling -- under-reaming")]
        drillingunderreaming,
        
        /// <remarks/>
        fishing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fishing -- BHA")]
        fishingBHA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fishing -- casing")]
        fishingcasing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fishing -- cones")]
        fishingcones,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fishing -- other")]
        fishingother,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fishing -- stuck pipe")]
        fishingstuckpipe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fishing -- wireline tools")]
        fishingwirelinetools,
        
        /// <remarks/>
        HSE,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("HSE -- hold drill")]
        HSEholddrill,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("HSE -- incident")]
        HSEincident,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("HSE -- safety meeting")]
        HSEsafetymeeting,
        
        /// <remarks/>
        mill,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mill -- cut casing or tubing")]
        millcutcasingortubing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mill -- milling")]
        millmilling,
        
        /// <remarks/>
        miscellaneous,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nipple up BOP")]
        nippleupBOP,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nipple up BOP -- diverter")]
        nippleupBOPdiverter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nipple up BOP -- manifold")]
        nippleupBOPmanifold,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nipple up BOP -- other")]
        nippleupBOPother,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nipple up BOP -- PVT system")]
        nippleupBOPPVTsystem,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nipple up BOP -- stack")]
        nippleupBOPstack,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("plug back")]
        plugback,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("plug back -- abandonment")]
        plugbackabandonment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("plug back -- kick off plug")]
        plugbackkickoffplug,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("plug back -- lost circulation")]
        plugbacklostcirculation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("plug back -- wait on cement")]
        plugbackwaitoncement,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("plug back -- well control")]
        plugbackwellcontrol,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure test")]
        pressuretest,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure test -- BOP manifold")]
        pressuretestBOPmanifold,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure test -- BOP stack")]
        pressuretestBOPstack,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure test -- form integrity test")]
        pressuretestformintegritytest,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure test -- form leak off test")]
        pressuretestformleakofftest,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure test -- packer")]
        pressuretestpacker,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure test -- PIT")]
        pressuretestPIT,
        
        /// <remarks/>
        reaming,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("reaming -- back reaming")]
        reamingbackreaming,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("reaming -- coring")]
        reamingcoring,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("reaming -- drill")]
        reamingdrill,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("reaming -- logging")]
        reaminglogging,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("reaming -- under-reaming")]
        reamingunderreaming,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig move")]
        rigmove,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig move -- anchor handling")]
        rigmoveanchorhandling,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig move -- inter-pad move")]
        rigmoveinterpadmove,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig move -- inter-well move")]
        rigmoveinterwellmove,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig move -- jack up or down")]
        rigmovejackupordown,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig move -- other")]
        rigmoveother,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig move -- position rig")]
        rigmovepositionrig,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig move -- skid rig")]
        rigmoveskidrig,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig release")]
        rigrelease,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig release -- cut casing")]
        rigreleasecutcasing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig release -- install capping assembly")]
        rigreleaseinstallcappingassembly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig release -- MOB or DE-MOB")]
        rigreleaseMOBorDEMOB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig repairs")]
        rigrepairs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig repairs -- drawworks")]
        rigrepairsdrawworks,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig repairs -- electrical")]
        rigrepairselectrical,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig repairs -- mud system")]
        rigrepairsmudsystem,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig repairs -- other")]
        rigrepairsother,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig repairs -- rotary")]
        rigrepairsrotary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig repairs -- subsea equipment")]
        rigrepairssubseaequipment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig repairs -- well control equipment")]
        rigrepairswellcontrolequipment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig service")]
        rigservice,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig service -- lubricate rig")]
        rigservicelubricaterig,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig service -- test equipment")]
        rigservicetestequipment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig up or tear down")]
        riguporteardown,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig up or tear down -- rig up")]
        riguporteardownrigup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig up or tear down -- site work")]
        riguporteardownsitework,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig up or tear down -- tear down")]
        riguporteardownteardown,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("run or pull riser")]
        runorpullriser,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("run or pull riser -- other")]
        runorpullriserother,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("run or pull riser -- run or pull riser")]
        runorpullriserrunorpullriser,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("squeeze cement")]
        squeezecement,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("squeeze cement -- casing repair")]
        squeezecementcasingrepair,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("squeeze cement -- casing shoe")]
        squeezecementcasingshoe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("squeeze cement -- parted casing")]
        squeezecementpartedcasing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("squeeze cement -- perforations DST")]
        squeezecementperforationsDST,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stuck pipe")]
        stuckpipe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("surface string handling")]
        surfacestringhandling,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("testing general")]
        testinggeneral,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("testing general -- equipment")]
        testinggeneralequipment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("testing general -- flow")]
        testinggeneralflow,
        
        /// <remarks/>
        tripping,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tripping -- back-reaming")]
        trippingbackreaming,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tripping -- flow check")]
        trippingflowcheck,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tripping -- short trip in")]
        trippingshorttripin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tripping -- short trip out")]
        trippingshorttripout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tripping -- trip in (from surface)")]
        trippingtripinfromsurface,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tripping -- trip out (to surface)")]
        trippingtripouttosurface,
        
        /// <remarks/>
        wait,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wait -- daylight")]
        waitdaylight,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wait -- environmental or regulatory")]
        waitenvironmentalorregulatory,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wait -- equipment")]
        waitequipment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wait -- holiday")]
        waitholiday,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wait -- ice")]
        waitice,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wait -- on orders")]
        waitonorders,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wait -- operator")]
        waitoperator,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wait -- other")]
        waitother,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wait -- partners")]
        waitpartners,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wait -- service company")]
        waitservicecompany,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wait -- weather")]
        waitweather,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well control")]
        wellcontrol,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well control -- mix")]
        wellcontrolmix,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well control -- shut in")]
        wellcontrolshutin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well control -- strip")]
        wellcontrolstrip,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well control -- well kill")]
        wellcontrolwellkill,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well srvc")]
        wellsrvc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well srvc -- casing repair")]
        wellsrvccasingrepair,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well srvc -- clean well to compl fluid")]
        wellsrvccleanwelltocomplfluid,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well srvc -- coiled tubing work")]
        wellsrvccoiledtubingwork,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well srvc -- gravel pack")]
        wellsrvcgravelpack,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well srvc -- install or test xmas tree")]
        wellsrvcinstallortestxmastree,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well srvc -- kill well")]
        wellsrvckillwell,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well srvc -- land, set, test completion")]
        wellsrvclandsettestcompletion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well srvc -- perforate")]
        wellsrvcperforate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well srvc -- pull completion")]
        wellsrvcpullcompletion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well srvc -- pull suspension plugs")]
        wellsrvcpullsuspensionplugs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well srvc -- run completion")]
        wellsrvcruncompletion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well srvc -- run screens")]
        wellsrvcrunscreens,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well srvc -- sand control")]
        wellsrvcsandcontrol,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well srvc -- stimulation")]
        wellsrvcstimulation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well srvc -- subsea work")]
        wellsrvcsubseawork,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well srvc -- surface line work")]
        wellsrvcsurfacelinework,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well srvc -- suspend well or pull BOPs")]
        wellsrvcsuspendwellorpullBOPs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well srvc -- test well")]
        wellsrvctestwell,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well srvc -- wash")]
        wellsrvcwash,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well srvc -- wireline work")]
        wellsrvcwirelinework,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well srvc -- work tubulars")]
        wellsrvcworktubulars,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well srvc -- workstring run")]
        wellsrvcworkstringrun,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wireline logs")]
        wirelinelogs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wireline logs -- abandonment")]
        wirelinelogsabandonment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wireline logs -- evaluation")]
        wirelinelogsevaluation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wireline logs -- form tester")]
        wirelinelogsformtester,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wireline logs -- other")]
        wirelinelogsother,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wireline logs -- side wall cores")]
        wirelinelogssidewallcores,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wireline logs -- velocity")]
        wirelinelogsvelocity,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum AziRef {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("magnetic north")]
        magneticnorth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("grid north")]
        gridnorth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("true north")]
        truenorth,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum ArrayElementDataType {
        
        /// <remarks/>
        boolean,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("integer 8 bit")]
        integer8bit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("integer 16 bit")]
        integer16bit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("integer 32 bit")]
        integer32bit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("integer 64 bit")]
        integer64bit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("IEEE float 32 bit")]
        IEEEfloat32bit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("IEEE float 64 bit")]
        IEEEfloat64bit,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum BearingType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oil seal")]
        oilseal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud lube")]
        mudlube,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum BitDullCode {
        
        /// <remarks/>
        BC,
        
        /// <remarks/>
        BT,
        
        /// <remarks/>
        BU,
        
        /// <remarks/>
        CC,
        
        /// <remarks/>
        CD,
        
        /// <remarks/>
        CI,
        
        /// <remarks/>
        CR,
        
        /// <remarks/>
        CT,
        
        /// <remarks/>
        ER,
        
        /// <remarks/>
        FC,
        
        /// <remarks/>
        HC,
        
        /// <remarks/>
        JD,
        
        /// <remarks/>
        LC,
        
        /// <remarks/>
        LN,
        
        /// <remarks/>
        LT,
        
        /// <remarks/>
        NO,
        
        /// <remarks/>
        OC,
        
        /// <remarks/>
        PB,
        
        /// <remarks/>
        PN,
        
        /// <remarks/>
        RG,
        
        /// <remarks/>
        RO,
        
        /// <remarks/>
        SD,
        
        /// <remarks/>
        SS,
        
        /// <remarks/>
        TR,
        
        /// <remarks/>
        WO,
        
        /// <remarks/>
        WT,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum BitReasonPulled {
        
        /// <remarks/>
        BHA,
        
        /// <remarks/>
        CM,
        
        /// <remarks/>
        CP,
        
        /// <remarks/>
        DMF,
        
        /// <remarks/>
        DP,
        
        /// <remarks/>
        DST,
        
        /// <remarks/>
        DTF,
        
        /// <remarks/>
        FM,
        
        /// <remarks/>
        HP,
        
        /// <remarks/>
        HR,
        
        /// <remarks/>
        LOG,
        
        /// <remarks/>
        PP,
        
        /// <remarks/>
        PR,
        
        /// <remarks/>
        RIG,
        
        /// <remarks/>
        TD,
        
        /// <remarks/>
        TQ,
        
        /// <remarks/>
        TW,
        
        /// <remarks/>
        WC,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum BitType {
        
        /// <remarks/>
        diamond,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("diamond core")]
        diamondcore,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("insert roller cone")]
        insertrollercone,
        
        /// <remarks/>
        PDC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PDC core")]
        PDCcore,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("roller cone")]
        rollercone,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum BhaStatus {
        
        /// <remarks/>
        final,
        
        /// <remarks/>
        progress,
        
        /// <remarks/>
        plan,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum BladeShapeType {
        
        /// <remarks/>
        dynamic,
        
        /// <remarks/>
        melon,
        
        /// <remarks/>
        spiral,
        
        /// <remarks/>
        straight,
        
        /// <remarks/>
        variable,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum BladeType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("clamp-on")]
        clampon,
        
        /// <remarks/>
        integral,
        
        /// <remarks/>
        sleeve,
        
        /// <remarks/>
        welded,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum BopType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("annular preventer")]
        annularpreventer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shear ram")]
        shearram,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("blind ram")]
        blindram,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pipe ram")]
        piperam,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling spool")]
        drillingspool,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("flexible joint")]
        flexiblejoint,
        
        /// <remarks/>
        connector,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum BoxPinConfig {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bottom box, top box")]
        bottomboxtopbox,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bottom box, top pin")]
        bottomboxtoppin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bottom pin top box")]
        bottompintopbox,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bottom pin")]
        bottompin,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum CementJobType {
        
        /// <remarks/>
        primary,
        
        /// <remarks/>
        plug,
        
        /// <remarks/>
        squeeze,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum ConnectionPosition {
        
        /// <remarks/>
        both,
        
        /// <remarks/>
        bottom,
        
        /// <remarks/>
        top,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum DeflectionMethod {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("point bit")]
        pointbit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("push bit")]
        pushbit,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum DerrickType {
        
        /// <remarks/>
        @double,
        
        /// <remarks/>
        quadruple,
        
        /// <remarks/>
        slant,
        
        /// <remarks/>
        triple,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum DrawWorksType {
        
        /// <remarks/>
        mechanical,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("standard electric")]
        standardelectric,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("diesel electric")]
        dieselelectric,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ram rig")]
        ramrig,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum DriveType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("coiled tubing")]
        coiledtubing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rotary kelly drive")]
        rotarykellydrive,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("top drive")]
        topdrive,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum ElevCodeEnum {
        
        /// <remarks/>
        CF,
        
        /// <remarks/>
        CV,
        
        /// <remarks/>
        DF,
        
        /// <remarks/>
        GL,
        
        /// <remarks/>
        KB,
        
        /// <remarks/>
        RB,
        
        /// <remarks/>
        RT,
        
        /// <remarks/>
        SF,
        
        /// <remarks/>
        LAT,
        
        /// <remarks/>
        SL,
        
        /// <remarks/>
        MHHW,
        
        /// <remarks/>
        MHW,
        
        /// <remarks/>
        MLLW,
        
        /// <remarks/>
        MLW,
        
        /// <remarks/>
        MTL,
        
        /// <remarks/>
        KO,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum Ellipsoid {
        
        /// <remarks/>
        AGD66,
        
        /// <remarks/>
        AIRY_MOD,
        
        /// <remarks/>
        AIRY30,
        
        /// <remarks/>
        AIRY49,
        
        /// <remarks/>
        AUST_NAT,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("BESL-DHD")]
        BESLDHD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("BESL-NGL")]
        BESLNGL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("BESL-RT9")]
        BESLRT9,
        
        /// <remarks/>
        BESS41,
        
        /// <remarks/>
        BESSNAM,
        
        /// <remarks/>
        BOGOTA,
        
        /// <remarks/>
        CL58,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CL58-1")]
        CL581,
        
        /// <remarks/>
        CL66,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CL66-M")]
        CL66M,
        
        /// <remarks/>
        CL80,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CL80-A")]
        CL80A,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CL80-B")]
        CL80B,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CL80-I")]
        CL80I,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CL80-J")]
        CL80J,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CL80-M")]
        CL80M,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CL80-P")]
        CL80P,
        
        /// <remarks/>
        CMPOINCH,
        
        /// <remarks/>
        DAN,
        
        /// <remarks/>
        DELA,
        
        /// <remarks/>
        ED50,
        
        /// <remarks/>
        EGYPT07,
        
        /// <remarks/>
        EVER,
        
        /// <remarks/>
        EVER48,
        
        /// <remarks/>
        EVER56,
        
        /// <remarks/>
        EVER69,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EVER-BR")]
        EVERBR,
        
        /// <remarks/>
        EVERMOD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EVER-P")]
        EVERP,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EVER-TM")]
        EVERTM,
        
        /// <remarks/>
        EVTM,
        
        /// <remarks/>
        FISC60,
        
        /// <remarks/>
        FISC60MOD,
        
        /// <remarks/>
        FISC68,
        
        /// <remarks/>
        FISCMOD,
        
        /// <remarks/>
        GDA94,
        
        /// <remarks/>
        GRS67,
        
        /// <remarks/>
        GRS80,
        
        /// <remarks/>
        HAY09,
        
        /// <remarks/>
        HEIS,
        
        /// <remarks/>
        HEL06,
        
        /// <remarks/>
        HEL07,
        
        /// <remarks/>
        HOUG,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("IAG-75")]
        IAG75,
        
        /// <remarks/>
        INDIAN75,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("INDO-74")]
        INDO74,
        
        /// <remarks/>
        INT24,
        
        /// <remarks/>
        IUGG67,
        
        /// <remarks/>
        IUGG75,
        
        /// <remarks/>
        JEFF48,
        
        /// <remarks/>
        KAU63,
        
        /// <remarks/>
        KRSV,
        
        /// <remarks/>
        MERIT83,
        
        /// <remarks/>
        NAD27,
        
        /// <remarks/>
        NAHRAN,
        
        /// <remarks/>
        NEWINT67,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NWL-10D")]
        NWL10D,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NWL-9D")]
        NWL9D,
        
        /// <remarks/>
        OSGB36,
        
        /// <remarks/>
        OSU86F,
        
        /// <remarks/>
        OSU91A,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PLESSIS-1817")]
        PLESSIS1817,
        
        /// <remarks/>
        PSAD56,
        
        /// <remarks/>
        PTNOIRE,
        
        /// <remarks/>
        SA69,
        
        /// <remarks/>
        SPHR,
        
        /// <remarks/>
        STRU,
        
        /// <remarks/>
        WALB,
        
        /// <remarks/>
        WAR24,
        
        /// <remarks/>
        WGS60,
        
        /// <remarks/>
        WGS66,
        
        /// <remarks/>
        WGS72,
        
        /// <remarks/>
        WGS84,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum FiberMode {
        
        /// <remarks/>
        singlemode,
        
        /// <remarks/>
        multimode,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum GasPeakType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("circulating background gas")]
        circulatingbackgroundgas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("connection gas")]
        connectiongas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling background gas")]
        drillingbackgroundgas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling gas peak")]
        drillinggaspeak,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("flow check gas")]
        flowcheckgas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("no readings")]
        noreadings,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shut down gas")]
        shutdowngas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("trip gas")]
        tripgas,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum GeodeticDatum {
        
        /// <remarks/>
        ADND,
        
        /// <remarks/>
        ARC50,
        
        /// <remarks/>
        AUSG,
        
        /// <remarks/>
        CAA,
        
        /// <remarks/>
        CHAS,
        
        /// <remarks/>
        CORAL,
        
        /// <remarks/>
        ED50,
        
        /// <remarks/>
        ED87,
        
        /// <remarks/>
        ERIN65,
        
        /// <remarks/>
        GD49,
        
        /// <remarks/>
        GHANA,
        
        /// <remarks/>
        GUAM63,
        
        /// <remarks/>
        HJRS55,
        
        /// <remarks/>
        HTS,
        
        /// <remarks/>
        INCH,
        
        /// <remarks/>
        INDIA1,
        
        /// <remarks/>
        INDIA2,
        
        /// <remarks/>
        INDNS74,
        
        /// <remarks/>
        LIB64,
        
        /// <remarks/>
        LUZON,
        
        /// <remarks/>
        MRCH,
        
        /// <remarks/>
        NAD27,
        
        /// <remarks/>
        NAD83,
        
        /// <remarks/>
        NGRA,
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        NPRM,
        
        /// <remarks/>
        OSGB36,
        
        /// <remarks/>
        POTS1,
        
        /// <remarks/>
        PULK1,
        
        /// <remarks/>
        PULK2,
        
        /// <remarks/>
        QRNQ,
        
        /// <remarks/>
        SA56,
        
        /// <remarks/>
        SRL60,
        
        /// <remarks/>
        TNRV25,
        
        /// <remarks/>
        TOKYO,
        
        /// <remarks/>
        UserDefined,
        
        /// <remarks/>
        VROL,
        
        /// <remarks/>
        WGS72,
        
        /// <remarks/>
        WGS84,
        
        /// <remarks/>
        YACR,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum Hemispheres {
        
        /// <remarks/>
        northern,
        
        /// <remarks/>
        southern,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum HoleCasingType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("blow out preventer")]
        blowoutpreventer,
        
        /// <remarks/>
        casing,
        
        /// <remarks/>
        conductor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("curved conductor")]
        curvedconductor,
        
        /// <remarks/>
        liner,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("open hole")]
        openhole,
        
        /// <remarks/>
        riser,
        
        /// <remarks/>
        tubing,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum HoleOpenerType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("under-reamer")]
        underreamer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fixed blade")]
        fixedblade,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum IntervalMethod {
        
        /// <remarks/>
        average,
        
        /// <remarks/>
        maximum,
        
        /// <remarks/>
        minimum,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("spot sample")]
        spotsample,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum IntervalType {
        
        /// <remarks/>
        time,
        
        /// <remarks/>
        depth,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum ItemState {
        
        /// <remarks/>
        actual,
        
        /// <remarks/>
        model,
        
        /// <remarks/>
        plan,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum InstalledFiberPoint {
        
        /// <remarks/>
        splice,
        
        /// <remarks/>
        connector,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("end of fiber")]
        endoffiber,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("base of fiber")]
        baseoffiber,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("turn around point")]
        turnaroundpoint,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("start of fiber")]
        startoffiber,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oven entry point")]
        ovenentrypoint,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oven exit point")]
        ovenexitpoint,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("downhole gauge")]
        downholegauge,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DTS laser head")]
        DTSlaserhead,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DTS reference oven")]
        DTSreferenceoven,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("splice box")]
        splicebox,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wellhead junction box")]
        wellheadjunctionbox,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("base tubing hanger flange")]
        basetubinghangerflange,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PBR wet connect")]
        PBRwetconnect,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("top ESP pump")]
        topESPpump,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("base ESP pump")]
        baseESPpump,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wellhead temperature gauge")]
        wellheadtemperaturegauge,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("top completion zone")]
        topcompletionzone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("base completion zone")]
        basecompletionzone,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum JarType {
        
        /// <remarks/>
        mechanical,
        
        /// <remarks/>
        hydraulic,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydro mechanical")]
        hydromechanical,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum JarAction {
        
        /// <remarks/>
        up,
        
        /// <remarks/>
        down,
        
        /// <remarks/>
        both,
        
        /// <remarks/>
        vibrating,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum LithologySource {
        
        /// <remarks/>
        interpreted,
        
        /// <remarks/>
        core,
        
        /// <remarks/>
        cuttings,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum LithologyType {
        
        /// <remarks/>
        andesite,
        
        /// <remarks/>
        anhydrite,
        
        /// <remarks/>
        arkose,
        
        /// <remarks/>
        basalt,
        
        /// <remarks/>
        breccia,
        
        /// <remarks/>
        calcarenite,
        
        /// <remarks/>
        calcilutite,
        
        /// <remarks/>
        calcisiltite,
        
        /// <remarks/>
        chalk,
        
        /// <remarks/>
        chert,
        
        /// <remarks/>
        clay,
        
        /// <remarks/>
        claystone,
        
        /// <remarks/>
        coal,
        
        /// <remarks/>
        conglomerate,
        
        /// <remarks/>
        diabase,
        
        /// <remarks/>
        diorite,
        
        /// <remarks/>
        dolomite,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dolomite, calcareous")]
        dolomitecalcareous,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("extrusive rock (volcanic)")]
        extrusiverockvolcanic,
        
        /// <remarks/>
        feldspar,
        
        /// <remarks/>
        gabbro,
        
        /// <remarks/>
        glauconite,
        
        /// <remarks/>
        gneiss,
        
        /// <remarks/>
        granite,
        
        /// <remarks/>
        gravel,
        
        /// <remarks/>
        greenstones,
        
        /// <remarks/>
        greywacke,
        
        /// <remarks/>
        gumbo,
        
        /// <remarks/>
        gypsum,
        
        /// <remarks/>
        halite,
        
        /// <remarks/>
        igneous,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("intrusvie rock (plutonic)")]
        intrusvierockplutonic,
        
        /// <remarks/>
        lignite,
        
        /// <remarks/>
        limestone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("limestone, argillaceous")]
        limestoneargillaceous,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("limestone, dolomitic")]
        limestonedolomitic,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("limestone, sandy")]
        limestonesandy,
        
        /// <remarks/>
        marble,
        
        /// <remarks/>
        marl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("metamorphic rocks")]
        metamorphicrocks,
        
        /// <remarks/>
        mudstone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("no description")]
        nodescription,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("no sample")]
        nosample,
        
        /// <remarks/>
        ophiolite,
        
        /// <remarks/>
        peat,
        
        /// <remarks/>
        phosphate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("phosphate rock")]
        phosphaterock,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("potassium and magnesium salts")]
        potassiumandmagnesiumsalts,
        
        /// <remarks/>
        quartzite,
        
        /// <remarks/>
        rhyolite,
        
        /// <remarks/>
        salt,
        
        /// <remarks/>
        sand,
        
        /// <remarks/>
        sandstone,
        
        /// <remarks/>
        schist,
        
        /// <remarks/>
        serpentine,
        
        /// <remarks/>
        shale,
        
        /// <remarks/>
        silt,
        
        /// <remarks/>
        siltstone,
        
        /// <remarks/>
        slate,
        
        /// <remarks/>
        syenite,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tillite (diamictite)")]
        tillitediamictite,
        
        /// <remarks/>
        trachyte,
        
        /// <remarks/>
        tuff,
        
        /// <remarks/>
        ultrabasic,
        
        /// <remarks/>
        undifferentiated,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum LogDataType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("date time")]
        datetime,
        
        /// <remarks/>
        @double,
        
        /// <remarks/>
        @long,
        
        /// <remarks/>
        @string,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum LogIndexDirection {
        
        /// <remarks/>
        decreasing,
        
        /// <remarks/>
        increasing,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum LogIndexType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("date time")]
        datetime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("elapsed time")]
        elapsedtime,
        
        /// <remarks/>
        length,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("measured depth")]
        measureddepth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("vertical depth")]
        verticaldepth,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum LogTraceOrigin {
        
        /// <remarks/>
        realtime,
        
        /// <remarks/>
        modeled,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum LogTraceState {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("depth adjusted")]
        depthadjusted,
        
        /// <remarks/>
        edited,
        
        /// <remarks/>
        joined,
        
        /// <remarks/>
        processed,
        
        /// <remarks/>
        raw,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum MaterialType {
        
        /// <remarks/>
        aluminum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("beryllium copper")]
        berylliumcopper,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("chrome alloy")]
        chromealloy,
        
        /// <remarks/>
        composite,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("non-magnetic steel")]
        nonmagneticsteel,
        
        /// <remarks/>
        plastic,
        
        /// <remarks/>
        steel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("steel alloy")]
        steelalloy,
        
        /// <remarks/>
        titanium,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum MeasurementType {
        
        /// <remarks/>
        acceleration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("acoustic caliper")]
        acousticcaliper,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("acoustic casing collar locator")]
        acousticcasingcollarlocator,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("acoustic impedance")]
        acousticimpedance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("acoustic porosity")]
        acousticporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("acoustic velocity")]
        acousticvelocity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("acoustic wave matrix travel time")]
        acousticwavematrixtraveltime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("acoustic wave travel time")]
        acousticwavetraveltime,
        
        /// <remarks/>
        amplitude,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("amplitude of acoustic wave")]
        amplitudeofacousticwave,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("amplitude of E-M wave")]
        amplitudeofEMwave,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("amplitude ratio")]
        amplituderatio,
        
        /// <remarks/>
        area,
        
        /// <remarks/>
        attenuation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("attenuation of acoustic wave")]
        attenuationofacousticwave,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("attenuation of E-M wave")]
        attenuationofEMwave,
        
        /// <remarks/>
        auxiliary,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("average porosity")]
        averageporosity,
        
        /// <remarks/>
        azimuth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("barite mud correction")]
        baritemudcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bed thickness correction")]
        bedthicknesscorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit size")]
        bitsize,
        
        /// <remarks/>
        blocked,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("borehole environment correction")]
        boreholeenvironmentcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("borehole fluid composition correction")]
        boreholefluidcompositioncorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("borehole fluid correction")]
        boreholefluidcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("borehole size correction")]
        boreholesizecorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bromide mud correction")]
        bromidemudcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bulk compressibility")]
        bulkcompressibility,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bulk density")]
        bulkdensity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bulk volume")]
        bulkvolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bulk volume gas")]
        bulkvolumegas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bulk volume hydrocarbon")]
        bulkvolumehydrocarbon,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bulk volume oil")]
        bulkvolumeoil,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bulk volume water")]
        bulkvolumewater,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C/O ratio")]
        COratio,
        
        /// <remarks/>
        caliper,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cased hole correction")]
        casedholecorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing collar locator")]
        casingcollarlocator,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing correction")]
        casingcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing diameter correction")]
        casingdiametercorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing inspection")]
        casinginspection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing thickness correction")]
        casingthicknesscorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing weight correction")]
        casingweightcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cement correction")]
        cementcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cement density correction")]
        cementdensitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cement evaluation")]
        cementevaluation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cement thickness correction")]
        cementthicknesscorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cement type correction")]
        cementtypecorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CH density porosity")]
        CHdensityporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CH dolomite density porosity")]
        CHdolomitedensityporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CH dolomite neutron porosity")]
        CHdolomiteneutronporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CH limestone density porosity")]
        CHlimestonedensityporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CH limestone neutron porosity")]
        CHlimestoneneutronporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CH neutron porosity")]
        CHneutronporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CH sandstone density porosity")]
        CHsandstonedensityporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CH sandstone neutron porosity")]
        CHsandstoneneutronporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("compressional wave dolomite porosity")]
        compressionalwavedolomiteporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("compressional wave limestone porosity")]
        compressionalwavelimestoneporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("compressional wave matrix travel time")]
        compressionalwavematrixtraveltime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("compressional wave sandstone porosity")]
        compressionalwavesandstoneporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("compressional wave travel time")]
        compressionalwavetraveltime,
        
        /// <remarks/>
        conductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("conductivity from attenuation")]
        conductivityfromattenuation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("conductivity from phase shift")]
        conductivityfromphaseshift,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("connate water conductivity")]
        connatewaterconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("connate water resistivity")]
        connatewaterresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("conventional core porosity")]
        conventionalcoreporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("core matrix density")]
        corematrixdensity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("core permeability")]
        corepermeability,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("core porosity")]
        coreporosity,
        
        /// <remarks/>
        corrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("count rate")]
        countrate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("count rate ratio")]
        countrateratio,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cross plot porosity")]
        crossplotporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("decay time")]
        decaytime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deep conductivity")]
        deepconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deep induction conductivity")]
        deepinductionconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deep induction resistivity")]
        deepinductionresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deep laterolog conductivity")]
        deeplaterologconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deep laterolog resistivity")]
        deeplaterologresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deep resistivity")]
        deepresistivity,
        
        /// <remarks/>
        density,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("density porosity")]
        densityporosity,
        
        /// <remarks/>
        depth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("depth adjusted")]
        depthadjusted,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("depth derived from velocity")]
        depthderivedfromvelocity,
        
        /// <remarks/>
        deviation,
        
        /// <remarks/>
        dielectric,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("diffusion correction")]
        diffusioncorrection,
        
        /// <remarks/>
        dip,
        
        /// <remarks/>
        dipmeter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dipmeter conductivity")]
        dipmeterconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dipmeter resistivity")]
        dipmeterresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dolomite acoustic porosity")]
        dolomiteacousticporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dolomite density porosity")]
        dolomitedensityporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dolomite neutron porosity")]
        dolomiteneutronporosity,
        
        /// <remarks/>
        edited,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("effective porosity")]
        effectiveporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electric current")]
        electriccurrent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electric potential")]
        electricpotential,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electromagnetic wave matrix travel time")]
        electromagneticwavematrixtraveltime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electromagnetic wave travel time")]
        electromagneticwavetraveltime,
        
        /// <remarks/>
        element,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("elemental ratio")]
        elementalratio,
        
        /// <remarks/>
        enhanced,
        
        /// <remarks/>
        filtered,
        
        /// <remarks/>
        flowmeter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fluid density")]
        fluiddensity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fluid velocity")]
        fluidvelocity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fluid viscosity")]
        fluidviscosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("flushed zone conductivity")]
        flushedzoneconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("flushed zone resistivity")]
        flushedzoneresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("flushed zone saturation")]
        flushedzonesaturation,
        
        /// <remarks/>
        force,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation density correction")]
        formationdensitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation properties correction")]
        formationpropertiescorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation salinity correction")]
        formationsalinitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation saturation correction")]
        formationsaturationcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation volume factor correction")]
        formationvolumefactorcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation water density correction")]
        formationwaterdensitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation water saturation correction")]
        formationwatersaturationcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("free fluid index")]
        freefluidindex,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("friction effect correction")]
        frictioneffectcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gamma ray")]
        gammaray,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gamma ray minus uranium")]
        gammarayminusuranium,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas saturation")]
        gassaturation,
        
        /// <remarks/>
        gradiomanometer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("high frequency conductivity")]
        highfrequencyconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("high frequency electromagnetic")]
        highfrequencyelectromagnetic,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("high frequency electromagnetic porosity")]
        highfrequencyelectromagneticporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("high frequency E-M phase shift")]
        highfrequencyEMphaseshift,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("high frequency resistivity")]
        highfrequencyresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydrocarbon correction")]
        hydrocarboncorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydrocarbon density correction")]
        hydrocarbondensitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydrocarbon gravity correction")]
        hydrocarbongravitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydrocarbon saturation")]
        hydrocarbonsaturation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydrocarbon viscosity correction")]
        hydrocarbonviscositycorrection,
        
        /// <remarks/>
        image,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("interpretation variable")]
        interpretationvariable,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("iron mud correction")]
        ironmudcorrection,
        
        /// <remarks/>
        joined,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("KCl mud correction")]
        KClmudcorrection,
        
        /// <remarks/>
        length,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("limestone acoustic porosity")]
        limestoneacousticporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("limestone density porosity")]
        limestonedensityporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("limestone neutron porosity")]
        limestoneneutronporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lithology correction")]
        lithologycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("log derived permeability")]
        logderivedpermeability,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("log matrix density")]
        logmatrixdensity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("magnetic casing collar locator")]
        magneticcasingcollarlocator,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("matrix density")]
        matrixdensity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("matrix travel time")]
        matrixtraveltime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("measured depth")]
        measureddepth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mechanical caliper")]
        mechanicalcaliper,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mechanical casing collar locator")]
        mechanicalcasingcollarlocator,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("medium conductivity")]
        mediumconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("medium induction conductivity")]
        mediuminductionconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("medium induction resistivity")]
        mediuminductionresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("medium laterolog conductivity")]
        mediumlaterologconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("medium laterolog resistivity")]
        mediumlaterologresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("medium resistivity")]
        mediumresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("micro conductivity")]
        microconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("micro inverse conductivity")]
        microinverseconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("micro inverse resistivity")]
        microinverseresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("micro laterolog conductivity")]
        microlaterologconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("micro laterolog resistivity")]
        microlaterologresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("micro normal conductivity")]
        micronormalconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("micro normal resistivity")]
        micronormalresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("micro resistivity")]
        microresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("micro spherically focused conductivity")]
        microsphericallyfocusedconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("micro spherically focused resistivity")]
        microsphericallyfocusedresistivity,
        
        /// <remarks/>
        mineral,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud cake conductivity")]
        mudcakeconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud cake correction")]
        mudcakecorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud cake density correction")]
        mudcakedensitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud cake resistivity")]
        mudcakeresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud cake resistivity correction")]
        mudcakeresistivitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud cake thickness correction")]
        mudcakethicknesscorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud composition correction")]
        mudcompositioncorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud conductivity")]
        mudconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud filtrate conductivity")]
        mudfiltrateconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud filtrate correction")]
        mudfiltratecorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud filtrate density correction")]
        mudfiltratedensitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud filtrate resistivity")]
        mudfiltrateresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud filtrate resistivity correction")]
        mudfiltrateresistivitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud filtrate salinity correction")]
        mudfiltratesalinitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud resistivity")]
        mudresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud salinity correction")]
        mudsalinitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud viscosity correction")]
        mudviscositycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud weight correction")]
        mudweightcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("neutron die away time")]
        neutrondieawaytime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("neutron porosity")]
        neutronporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nuclear caliper")]
        nuclearcaliper,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nuclear magnetic decay time")]
        nuclearmagneticdecaytime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nuclear magnetism log permeability")]
        nuclearmagnetismlogpermeability,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nuclear magnetism porosity")]
        nuclearmagnetismporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("OH density porosity")]
        OHdensityporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("OH dolomite density porosity")]
        OHdolomitedensityporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("OH dolomite neutron porosity")]
        OHdolomiteneutronporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("OH limestone density porosity")]
        OHlimestonedensityporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("OH limestone neutron porosity")]
        OHlimestoneneutronporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("OH neutron porosity")]
        OHneutronporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("OH sandstone density porosity")]
        OHsandstonedensityporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("OH sandstone neutron porosity")]
        OHsandstoneneutronporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oil based mud correction")]
        oilbasedmudcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oil saturation")]
        oilsaturation,
        
        /// <remarks/>
        perforating,
        
        /// <remarks/>
        permeability,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("phase shift")]
        phaseshift,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("photoelectric absorption")]
        photoelectricabsorption,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("photoelectric absorption correction")]
        photoelectricabsorptioncorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("physical measurement correction")]
        physicalmeasurementcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("plane angle")]
        planeangle,
        
        /// <remarks/>
        porosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("porosity correction")]
        porositycorrection,
        
        /// <remarks/>
        potassium,
        
        /// <remarks/>
        pressure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure correction")]
        pressurecorrection,
        
        /// <remarks/>
        processed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pulsed neutron porosity")]
        pulsedneutronporosity,
        
        /// <remarks/>
        quality,
        
        /// <remarks/>
        ratio,
        
        /// <remarks/>
        raw,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("relative bearing")]
        relativebearing,
        
        /// <remarks/>
        resistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("resistivity factor correction")]
        resistivityfactorcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("resistivity from attenuation")]
        resistivityfromattenuation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("resistivity from phase shift")]
        resistivityfromphaseshift,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("resistivity phase shift")]
        resistivityphaseshift,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("resistivity ratio")]
        resistivityratio,
        
        /// <remarks/>
        salinity,
        
        /// <remarks/>
        sampling,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sandstone acoustic porosity")]
        sandstoneacousticporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sandstone density porosity")]
        sandstonedensityporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sandstone neutron porosity")]
        sandstoneneutronporosity,
        
        /// <remarks/>
        saturation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shale volume")]
        shalevolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shallow conductivity")]
        shallowconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shallow induction conductivity")]
        shallowinductionconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shallow induction resistivity")]
        shallowinductionresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shallow laterolog conductivity")]
        shallowlaterologconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shallow laterolog resistivity")]
        shallowlaterologresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shallow resistivity")]
        shallowresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shear wave dolomite porosity")]
        shearwavedolomiteporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shear wave limestone porosity")]
        shearwavelimestoneporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shear wave matrix travel time")]
        shearwavematrixtraveltime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shear wave sandstone porosity")]
        shearwavesandstoneporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shear wave travel time")]
        shearwavetraveltime,
        
        /// <remarks/>
        shifted,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sidewall core porosity")]
        sidewallcoreporosity,
        
        /// <remarks/>
        sigma,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sigma formation")]
        sigmaformation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sigma gas")]
        sigmagas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sigma hydrocarbon")]
        sigmahydrocarbon,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sigma matrix")]
        sigmamatrix,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sigma oil")]
        sigmaoil,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sigma water")]
        sigmawater,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("slippage velocity correction")]
        slippagevelocitycorrection,
        
        /// <remarks/>
        smoothed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("spectral gamma ray")]
        spectralgammaray,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("spherically focused conductivity")]
        sphericallyfocusedconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("spherically focused resistivity")]
        sphericallyfocusedresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("spontaneous potential")]
        spontaneouspotential,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("spreading loss correction")]
        spreadinglosscorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("synthetic well log trace")]
        syntheticwelllogtrace,
        
        /// <remarks/>
        temperature,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("temperature correction")]
        temperaturecorrection,
        
        /// <remarks/>
        tension,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Th/K ratio")]
        ThKratio,
        
        /// <remarks/>
        thorium,
        
        /// <remarks/>
        time,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tool diameter correction")]
        tooldiametercorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tool eccentricity correction")]
        tooleccentricitycorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("total gamma ray")]
        totalgammaray,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("total porosity")]
        totalporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tracer survey")]
        tracersurvey,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("travel time")]
        traveltime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("true conductivity")]
        trueconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("true resistivity")]
        trueresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("true vertical depth")]
        trueverticaldepth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tube wave dolomite porosity")]
        tubewavedolomiteporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tube wave limestone porosity")]
        tubewavelimestoneporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tube wave matrix travel time")]
        tubewavematrixtraveltime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tube wave sandstone porosity")]
        tubewavesandstoneporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tube wave travel time")]
        tubewavetraveltime,
        
        /// <remarks/>
        uranium,
        
        /// <remarks/>
        velocity,
        
        /// <remarks/>
        volume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("water based fluid correction")]
        waterbasedfluidcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("water holdup correction")]
        waterholdupcorrection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("water saturated conductivity")]
        watersaturatedconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("water saturated resistivity")]
        watersaturatedresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("water saturation")]
        watersaturation,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum MessageProbability {
        
        /// <remarks/>
        low,
        
        /// <remarks/>
        medium,
        
        /// <remarks/>
        high,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum MessageSeverity {
        
        /// <remarks/>
        catastrophic,
        
        /// <remarks/>
        major,
        
        /// <remarks/>
        minor,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum MessageType {
        
        /// <remarks/>
        alarm,
        
        /// <remarks/>
        @event,
        
        /// <remarks/>
        informational,
        
        /// <remarks/>
        warning,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum MudLogParameterType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit parameters")]
        bitparameters,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit type comment")]
        bittypecomment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing point comment")]
        casingpointcomment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("chromatograph comment")]
        chromatographcomment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("circulation system comment")]
        circulationsystemcomment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("core interval comment")]
        coreintervalcomment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cuttings gas")]
        cuttingsgas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("direct fracture pressure")]
        directfracturepressure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("direct pore pressure measurements")]
        directporepressuremeasurements,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling data comment")]
        drillingdatacomment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fracture PG estimate most likely")]
        fracturePGestimatemostlikely,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas peaks comment")]
        gaspeakscomment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas ratio comment")]
        gasratiocomment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("general engineering comment")]
        generalengineeringcomment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kicks and flows")]
        kicksandflows,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lithlog comment")]
        lithlogcomment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lost returns")]
        lostreturns,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("LWD comment")]
        LWDcomment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("marker or formation top comment")]
        markerorformationtopcomment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("midnight depth date")]
        midnightdepthdate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud check comment")]
        mudcheckcomment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud data comment")]
        muddatacomment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mudlog comment")]
        mudlogcomment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("overburden gradient")]
        overburdengradient,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("overpull on connection")]
        overpullonconnection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("overpull on trip")]
        overpullontrip,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pore PG estimate most likely")]
        porePGestimatemostlikely,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pore pressure estimate while drilling")]
        porepressureestimatewhiledrilling,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure data comment")]
        pressuredatacomment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shale density comment")]
        shaledensitycomment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("short trip comment")]
        shorttripcomment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("show report comment")]
        showreportcomment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sidewall core comment")]
        sidewallcorecomment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sliding Interval")]
        slidingInterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("steam still results comment")]
        steamstillresultscomment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("survey comment")]
        surveycomment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("temperature data comment")]
        temperaturedatacomment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("temperature trend comment")]
        temperaturetrendcomment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wireline log comment")]
        wirelinelogcomment,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum NADTypes {
        
        /// <remarks/>
        NAD27,
        
        /// <remarks/>
        NAD83,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum NameTagLocation {
        
        /// <remarks/>
        body,
        
        /// <remarks/>
        box,
        
        /// <remarks/>
        pin,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum NameTagNumberingScheme {
        
        /// <remarks/>
        EPC64,
        
        /// <remarks/>
        EPC96,
        
        /// <remarks/>
        MSRCID,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ANSI/AIM-BC2")]
        ANSIAIMBC2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ANSI/AIM-BC6")]
        ANSIAIMBC6,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ANSI/AIM-BC10")]
        ANSIAIMBC10,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EAN.UCC")]
        EANUCC,
        
        /// <remarks/>
        F2F,
        
        /// <remarks/>
        MFM,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("serial number")]
        serialnumber,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum NameTagTechnology {
        
        /// <remarks/>
        tagged,
        
        /// <remarks/>
        labeled,
        
        /// <remarks/>
        intrinsic,
        
        /// <remarks/>
        stamped,
        
        /// <remarks/>
        painted,
        
        /// <remarks/>
        temporary,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum NozzleType {
        
        /// <remarks/>
        extended,
        
        /// <remarks/>
        normal,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum OTDRReason {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pre-installation")]
        preinstallation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("post-installation")]
        postinstallation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DTS run")]
        DTSrun,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum PitType {
        
        /// <remarks/>
        bulk,
        
        /// <remarks/>
        chemical,
        
        /// <remarks/>
        drilling,
        
        /// <remarks/>
        mix,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud cleaning")]
        mudcleaning,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sand trap")]
        sandtrap,
        
        /// <remarks/>
        slug,
        
        /// <remarks/>
        storage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("surge tank")]
        surgetank,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("trip tank")]
        triptank,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum Projection {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Albers equal area")]
        Albersequalarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("azimuthal equidistant")]
        azimuthalequidistant,
        
        /// <remarks/>
        Cassini,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("equidistant conic")]
        equidistantconic,
        
        /// <remarks/>
        equirectangular,
        
        /// <remarks/>
        gnomonic,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Lambert azimuthal")]
        Lambertazimuthal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Lambert conformal conic")]
        Lambertconformalconic,
        
        /// <remarks/>
        Mercator,
        
        /// <remarks/>
        Miller,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oblique Mercator")]
        obliqueMercator,
        
        /// <remarks/>
        orthographic,
        
        /// <remarks/>
        perspective,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("polar stereographic")]
        polarstereographic,
        
        /// <remarks/>
        polyconic,
        
        /// <remarks/>
        sinusoidal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("state plane")]
        stateplane,
        
        /// <remarks/>
        stereographic,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("transverse Mercator")]
        transverseMercator,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("universal transverse Mercator")]
        universaltransverseMercator,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("user defined")]
        userdefined,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Van der Grinten")]
        VanderGrinten,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum ProjectionVariantsObliqueMercator {
        
        /// <remarks/>
        @default,
        
        /// <remarks/>
        rectified,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rectified skew")]
        rectifiedskew,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rectified skew center origin")]
        rectifiedskewcenterorigin,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum PumpType {
        
        /// <remarks/>
        centrifugal,
        
        /// <remarks/>
        duplex,
        
        /// <remarks/>
        triplex,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum PumpOpType {
        
        /// <remarks/>
        drilling,
        
        /// <remarks/>
        reaming,
        
        /// <remarks/>
        circulating,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("slow pump")]
        slowpump,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum QualifierType {
        
        /// <remarks/>
        anhydritic,
        
        /// <remarks/>
        argillaceous,
        
        /// <remarks/>
        barite,
        
        /// <remarks/>
        belemnitic,
        
        /// <remarks/>
        bioturbated,
        
        /// <remarks/>
        bituminous,
        
        /// <remarks/>
        bryozoans,
        
        /// <remarks/>
        burrowed,
        
        /// <remarks/>
        calcareous,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("calcite concr")]
        calciteconcr,
        
        /// <remarks/>
        carbonaceous,
        
        /// <remarks/>
        chalky,
        
        /// <remarks/>
        chamosite,
        
        /// <remarks/>
        chert,
        
        /// <remarks/>
        chlorite,
        
        /// <remarks/>
        concretions,
        
        /// <remarks/>
        conglomeratic,
        
        /// <remarks/>
        coral,
        
        /// <remarks/>
        crinoids,
        
        /// <remarks/>
        diatoms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dolomite concretion")]
        dolomiteconcretion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dolomite stringer")]
        dolomitestringer,
        
        /// <remarks/>
        dolomitic,
        
        /// <remarks/>
        dolomite,
        
        /// <remarks/>
        feldspar,
        
        /// <remarks/>
        ferruginous,
        
        /// <remarks/>
        fissile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("forams undifferentiated")]
        foramsundifferentiated,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fossil fragment")]
        fossilfragment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fossils undifferentiated")]
        fossilsundifferentiated,
        
        /// <remarks/>
        glauconite,
        
        /// <remarks/>
        glauconitic,
        
        /// <remarks/>
        gravelly,
        
        /// <remarks/>
        gypsiferous,
        
        /// <remarks/>
        halite,
        
        /// <remarks/>
        illite,
        
        /// <remarks/>
        kaolinite,
        
        /// <remarks/>
        lignite,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("limestone stringer")]
        limestonestringer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lithic fragment")]
        lithicfragment,
        
        /// <remarks/>
        marly,
        
        /// <remarks/>
        mica,
        
        /// <remarks/>
        microfossil,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("no description")]
        nodescription,
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        oncolite,
        
        /// <remarks/>
        oncolith,
        
        /// <remarks/>
        oncolithic,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ooid or oolith")]
        ooidoroolith,
        
        /// <remarks/>
        ostracods,
        
        /// <remarks/>
        pebbly,
        
        /// <remarks/>
        pelletal,
        
        /// <remarks/>
        pellet,
        
        /// <remarks/>
        peloid,
        
        /// <remarks/>
        peloidal,
        
        /// <remarks/>
        phosphate,
        
        /// <remarks/>
        pisolite,
        
        /// <remarks/>
        pisolith,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("plant remains")]
        plantremains,
        
        /// <remarks/>
        pyrite,
        
        /// <remarks/>
        quartz,
        
        /// <remarks/>
        radiolaria,
        
        /// <remarks/>
        salty,
        
        /// <remarks/>
        sandy,
        
        /// <remarks/>
        shell,
        
        /// <remarks/>
        siderite,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("siderite concretion")]
        sideriteconcretion,
        
        /// <remarks/>
        silty,
        
        /// <remarks/>
        spicule,
        
        /// <remarks/>
        spicular,
        
        /// <remarks/>
        stylolite,
        
        /// <remarks/>
        stylolitic,
        
        /// <remarks/>
        tuffaceous,
        
        /// <remarks/>
        tuffite,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum RealtimeData {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("length along fiber")]
        lengthalongfiber,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DTS temperature")]
        DTStemperature,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Stokes intensity")]
        Stokesintensity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("anti-Stokes intensity")]
        antiStokesintensity,
        
        /// <remarks/>
        acetylene,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("azimuth corrected")]
        azimuthcorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("azimuth uncorrected")]
        azimuthuncorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit revolutions, cumulative")]
        bitrevolutionscumulative,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("build rate")]
        buildrate,
        
        /// <remarks/>
        caliper,
        
        /// <remarks/>
        cavings,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cation exchange capacity")]
        cationexchangecapacity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cementing cumulative returns")]
        cementingcumulativereturns,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cementing density in (average)")]
        cementingdensityinaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cementing density out (average)")]
        cementingdensityoutaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cementing ECD at casing shoe")]
        cementingECDatcasingshoe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cementing flow rate in (average)")]
        cementingflowrateinaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cementing flow rate in (calculated)")]
        cementingflowrateincalculated,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cementing flow rate out (average)")]
        cementingflowrateoutaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cementing flow rate out (calculated)")]
        cementingflowrateoutcalculated,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cementing flow rate out (relative)")]
        cementingflowrateoutrelative,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cementing fluid type")]
        cementingfluidtype,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cementing job type")]
        cementingjobtype,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cementing plugs")]
        cementingplugs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cementing pump pressure (average)")]
        cementingpumppressureaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cementing stage")]
        cementingstage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cementing temperature in (average)")]
        cementingtemperatureinaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cementing temperature out (average)")]
        cementingtemperatureoutaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cementing volume to bump plug")]
        cementingvolumetobumpplug,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cementing cement volume")]
        cementingcementvolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cementing individual volume")]
        cementingindividualvolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cementing total volume")]
        cementingtotalvolume,
        
        /// <remarks/>
        chkPrAv,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("carbon dioxide (cycle-based)")]
        carbondioxidecyclebased,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("carbon dioxide (average)")]
        carbondioxideaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("carbon dioxide (minimum)")]
        carbondioxideminimum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("carbon dioxide (maximum)")]
        carbondioxidemaximum,
        
        /// <remarks/>
        conductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("conductivity of mud in (average)")]
        conductivityofmudinaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("conductivity of mud out (average)")]
        conductivityofmudoutaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("connections done")]
        connectionsdone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("connections remaining")]
        connectionsremaining,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cost per distance")]
        costperdistance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cost per distance (average)")]
        costperdistanceaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cumulative time on bit")]
        cumulativetimeonbit,
        
        /// <remarks/>
        density,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("density shale")]
        densityshale,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("diameter of bit")]
        diameterofbit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("distance drilled by bit")]
        distancedrilledbybit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dogleg severity")]
        doglegseverity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DST bottom hole pressure")]
        DSTbottomholepressure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DST bottom hole temperature")]
        DSTbottomholetemperature,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DST cumulative gas production")]
        DSTcumulativegasproduction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DST cumulative liquid production")]
        DSTcumulativeliquidproduction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DST cumulative total production")]
        DSTcumulativetotalproduction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DST gas flow rate")]
        DSTgasflowrate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DST hydrogen sulfide (average)")]
        DSThydrogensulfideaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DST identifier")]
        DSTidentifier,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DST liquid flow rate")]
        DSTliquidflowrate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DST surface pressure in casing")]
        DSTsurfacepressureincasing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DST surface pressure in tubing")]
        DSTsurfacepressureintubing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DST surface temperature in tubing")]
        DSTsurfacetemperatureintubing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DST total flow rate")]
        DSTtotalflowrate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DST tool time")]
        DSTtooltime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling exponent (corrected)")]
        drillingexponentcorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ECD at bit depth")]
        ECDatbitdepth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ECD at casing shoe depth")]
        ECDatcasingshoedepth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ECD from MWD tool")]
        ECDfromMWDtool,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ECD at total depth")]
        ECDattotaldepth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("neo-pentane")]
        neopentane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("neo-pentane (average)")]
        neopentaneaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("neo-pentane (minimum)")]
        neopentaneminimum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("neo-pentane (maximum)")]
        neopentanemaximum,
        
        /// <remarks/>
        ethane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ethane (average)")]
        ethaneaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ethane (minimum)")]
        ethaneminimum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ethane (maximum)")]
        ethanemaximum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation fracture pressure gradient")]
        formationfracturepressuregradient,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("flow rate in (average)")]
        flowrateinaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("flow in (relative)")]
        flowinrelative,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("flow rate out (average)")]
        flowrateoutaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("flow out (relative)")]
        flowoutrelative,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("overburden pressure gradient")]
        overburdenpressuregradient,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit jet impact force")]
        bitjetimpactforce,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation pore pressure gradient")]
        formationporepressuregradient,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas total (average)")]
        gastotalaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("connection gas (average)")]
        connectiongasaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("connection gas (last)")]
        connectiongaslast,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("connection gas (maximum)")]
        connectiongasmaximum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("trip gas (last)")]
        tripgaslast,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gamma ray")]
        gammaray,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gamma ray (corrected)")]
        gammaraycorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gravity tool face")]
        gravitytoolface,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gravity X-axis (corrected)")]
        gravityXaxiscorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gravity X-axis (uncorrected)")]
        gravityXaxisuncorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gravity Y-axis (corrected)")]
        gravityYaxiscorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gravity Y-axis (uncorrected)")]
        gravityYaxisuncorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gravity Z-axis (corrected)")]
        gravityZaxiscorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gravity Z-axis (uncorrected)")]
        gravityZaxisuncorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydrogen sulfide")]
        hydrogensulfide,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydrogen sulfide (average)")]
        hydrogensulfideaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydrogen sulfide (minimum)")]
        hydrogensulfideminimum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydrogen sulfide (maximum)")]
        hydrogensulfidemaximum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hookload (average)")]
        hookloadaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hookload (minimum)")]
        hookloadminimum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hookload (maximum)")]
        hookloadmaximum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD magnetometer X (corrected)")]
        MWDmagnetometerXcorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD magnetometer X (raw)")]
        MWDmagnetometerXraw,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD magnetometer Y (corrected)")]
        MWDmagnetometerYcorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD magnetometer Y (raw)")]
        MWDmagnetometerYraw,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD magnetometer Z (corrected)")]
        MWDmagnetometerZcorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD magnetometer Z (raw)")]
        MWDmagnetometerZraw,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("iso-butane")]
        isobutane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("iso-butane (average)")]
        isobutaneaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("iso-butane (minimum)")]
        isobutaneminimum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("iso-butane (maximum)")]
        isobutanemaximum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("iso-hexane")]
        isohexane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("iso-hexane (average)")]
        isohexaneaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("iso-hexane (minimum)")]
        isohexaneminimum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("iso-hexane (maximum)")]
        isohexanemaximum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("inclination (corrected)")]
        inclinationcorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("inclination near bit")]
        inclinationnearbit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("inclination (uncorrected)")]
        inclinationuncorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("iso-pentane")]
        isopentane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("iso-pentane (average)")]
        isopentaneaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("iso-pentane (minimum)")]
        isopentaneminimum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("iso-pentane (maximum)")]
        isopentanemaximum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kick tolerance")]
        kicktolerance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lithology flag")]
        lithologyflag,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD alternator voltage")]
        MWDalternatorvoltage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD bottom hole annulus pressure")]
        MWDbottomholeannuluspressure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD bottom hole internal pressure")]
        MWDbottomholeinternalpressure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit total measured depth")]
        bittotalmeasureddepth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD conductivity")]
        MWDconductivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("measured depth of casing")]
        measureddepthofcasing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("measured depth of DST bottom")]
        measureddepthofDSTbottom,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("measured depth of DST top")]
        measureddepthofDSTtop,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("measured depth of diverter tool")]
        measureddepthofdivertertool,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("measured depth of hole")]
        measureddepthofhole,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("measured depth of returns")]
        measureddepthofreturns,
        
        /// <remarks/>
        methane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("methane (average)")]
        methaneaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("methane (minimum)")]
        methaneminimum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("methane (maximum)")]
        methanemaximum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD derived fracture pressure gradient")]
        MWDderivedfracturepressuregradient,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD derived pore pressure gradient")]
        MWDderivedporepressuregradient,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD fluid resistivity in annulus")]
        MWDfluidresistivityinannulus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD fluid resistivity in pipe")]
        MWDfluidresistivityinpipe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD fluid temperature in annulus")]
        MWDfluidtemperatureinannulus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD fluid temperature in pipe")]
        MWDfluidtemperatureinpipe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD gamma ray")]
        MWDgammaray,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD gamma ray (corrected)")]
        MWDgammaraycorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD motor speed")]
        MWDmotorspeed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD resistivity")]
        MWDresistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD resistivity (corrected)")]
        MWDresistivitycorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("magnetic tool face")]
        magnetictoolface,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD torque (average)")]
        MWDtorqueaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD torque (maximum)")]
        MWDtorquemaximum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD axial vibration")]
        MWDaxialvibration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD lateral vibration")]
        MWDlateralvibration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD torsional vibration")]
        MWDtorsionalvibration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD weight on bit (average)")]
        MWDweightonbitaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD weight on bit (maximum)")]
        MWDweightonbitmaximum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nor-butane")]
        norbutane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nor-butane (average)")]
        norbutaneaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nor-butane (minimum)")]
        norbutaneminimum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nor-butane (maximum)")]
        norbutanemaximum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("neutron density")]
        neutrondensity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nor-hexane")]
        norhexane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nor-hexane (average)")]
        norhexaneaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nor-hexane (minimum)")]
        norhexaneminimum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nor-hexane (maximum)")]
        norhexanemaximum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nor-pentane")]
        norpentane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nor-pentane (average)")]
        norpentaneaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nor-pentane (minimum)")]
        norpentaneminimum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nor-pentane (maximum)")]
        norpentanemaximum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("neutron porosity")]
        neutronporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("neutron porosity (corrected)")]
        neutronporositycorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("neutron porosity ratio")]
        neutronporosityratio,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pass number")]
        passnumber,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("trip number")]
        tripnumber,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("photoelectric effect")]
        photoelectriceffect,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit pressure loss")]
        bitpressureloss,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("block position")]
        blockposition,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydraulic power of bit")]
        hydraulicpowerofbit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydraulic power per area of bit")]
        hydraulicpowerperareaofbit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hydraulic power of pump")]
        hydraulicpowerofpump,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure loss at annulus")]
        pressurelossatannulus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure drop at bit")]
        pressuredropatbit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure loss at bit")]
        pressurelossatbit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure drop (calculated or observed)")]
        pressuredropcalculatedorobserved,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure drop at motor")]
        pressuredropatmotor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure drop at MWD tool")]
        pressuredropatMWDtool,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure drop at string")]
        pressuredropatstring,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure drop at surface")]
        pressuredropatsurface,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure at MWD tool")]
        pressureatMWDtool,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pressure at pump (average)")]
        pressureatpumpaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shut-in pressure (maximum)")]
        shutinpressuremaximum,
        
        /// <remarks/>
        propane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("propane (average)")]
        propaneaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("propane (minimum)")]
        propaneminimum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("propane (maximum)")]
        propanemaximum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("plastic viscosity")]
        plasticviscosity,
        
        /// <remarks/>
        resistivity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("resistivity (corrected)")]
        resistivitycorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rate of penetration (average)")]
        rateofpenetrationaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rate of penetration (intantaneous)")]
        rateofpenetrationintantaneous,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rotation flag")]
        rotationflag,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rotary speed (average)")]
        rotaryspeedaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("running speed down (average)")]
        runningspeeddownaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("running speed down (maximum)")]
        runningspeeddownmaximum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("running speed up (average)")]
        runningspeedupaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("running speed up (maximum)")]
        runningspeedupmaximum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sonic coherence")]
        soniccoherence,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sonic density")]
        sonicdensity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sonic delta-time (corrected)")]
        sonicdeltatimecorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sonic delta-time (uncorrected)")]
        sonicdeltatimeuncorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sonic porosity")]
        sonicporosity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sonic porosity (corrected)")]
        sonicporositycorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stroke rate")]
        strokerate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stroke rate total")]
        strokeratetotal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("state of well")]
        stateofwell,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in-slips status")]
        inslipsstatus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lag strokes")]
        lagstrokes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stroke count (total)")]
        strokecounttotal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stroke count")]
        strokecount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud temperature in (average)")]
        mudtemperatureinaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud temperature out (average)")]
        mudtemperatureoutaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("time in slips")]
        timeinslips,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("time out of slips")]
        timeoutofslips,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("torque (average)")]
        torqueaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("torque for break-out (maximum)")]
        torqueforbreakoutmaximum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("torque for make-up (maximum)")]
        torqueformakeupmaximum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("torque (maximum)")]
        torquemaximum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("trip tank volume")]
        triptankvolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("turn rate")]
        turnrate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("TVD of Bit")]
        TVDofBit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("TVD of casing")]
        TVDofcasing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("TVD of DST bottom")]
        TVDofDSTbottom,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("TVD of DST top")]
        TVDofDSTtop,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("TVD of hole")]
        TVDofhole,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tank volume")]
        tankvolume,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tank volume (active)")]
        tankvolumeactive,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tank volume change")]
        tankvolumechange,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tank volume change (active)")]
        tankvolumechangeactive,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tank volume change total")]
        tankvolumechangetotal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tank volume (total)")]
        tankvolumetotal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("annular velocity (minimum)")]
        annularvelocityminimum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("annular velocity (maximum)")]
        annularvelocitymaximum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("velocity of jet")]
        velocityofjet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fill volume (expected)")]
        fillvolumeexpected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fill volume total (expected)")]
        fillvolumetotalexpected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fill volume (observed)")]
        fillvolumeobserved,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fill volume total (observed)")]
        fillvolumetotalobserved,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("weight on bit (average)")]
        weightonbitaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("weight on bit (maximum)")]
        weightonbitmaximum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud density in (average)")]
        muddensityinaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud density out (average)")]
        muddensityoutaverage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("yield point")]
        yieldpoint,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum RigType {
        
        /// <remarks/>
        barge,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("coiled tubing")]
        coiledtubing,
        
        /// <remarks/>
        floater,
        
        /// <remarks/>
        jackup,
        
        /// <remarks/>
        land,
        
        /// <remarks/>
        platform,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("semi-submersible")]
        semisubmersible,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum RiskAffectedPersonnel {
        
        /// <remarks/>
        cementer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("company man")]
        companyman,
        
        /// <remarks/>
        contractor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("directional driller")]
        directionaldriller,
        
        /// <remarks/>
        driller,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling engineer")]
        drillingengineer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling superintendent")]
        drillingsuperintendent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling team")]
        drillingteam,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("facility engineer")]
        facilityengineer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("field service manager")]
        fieldservicemanager,
        
        /// <remarks/>
        foreman,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("general service supervisor")]
        generalservicesupervisor,
        
        /// <remarks/>
        geologist,
        
        /// <remarks/>
        member,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud engineer")]
        mudengineer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud logger")]
        mudlogger,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD or LWD engineer")]
        MWDorLWDengineer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("perform engineer")]
        performengineer,
        
        /// <remarks/>
        petrophysicist,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("production engineer")]
        productionengineer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("remotely operated vehicle engineer")]
        remotelyoperatedvehicleengineer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("safety manger")]
        safetymanger,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sales engineer")]
        salesengineer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("service supervisor")]
        servicesupervisor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("technical support")]
        technicalsupport,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tool pusher")]
        toolpusher,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wireline engineer")]
        wirelineengineer,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum RiskCategory {
        
        /// <remarks/>
        hydraulics,
        
        /// <remarks/>
        mechanical,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("time related")]
        timerelated,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wellbore stability")]
        wellborestability,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("directional drilling")]
        directionaldrilling,
        
        /// <remarks/>
        bit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("equipment failure")]
        equipmentfailure,
        
        /// <remarks/>
        completion,
        
        /// <remarks/>
        casing,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        HSE,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum RiskSubCategory {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas kick")]
        gaskick,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shallow water influx")]
        shallowwaterinflux,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("other influx or kicks")]
        otherinfluxorkicks,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("loss circulation")]
        losscirculation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("poor hole cleaning")]
        poorholecleaning,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("good hole cleaning at high ROP")]
        goodholecleaningathighROP,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("high mud weight")]
        highmudweight,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("special additives needed")]
        specialadditivesneeded,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gumbo problems")]
        gumboproblems,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("high ECD - rheology related")]
        highECDrheologyrelated,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("excessive circulation")]
        excessivecirculation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("performing a kill")]
        performingakill,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud weight change")]
        mudweightchange,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("excessive pipe cement scaling")]
        excessivepipecementscaling,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pit gain or loss")]
        pitgainorloss,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mud stability problems")]
        mudstabilityproblems,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shallow gas flow")]
        shallowgasflow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("twist off")]
        twistoff,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stuck pipe")]
        stuckpipe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wireline stuck in hole")]
        wirelinestuckinhole,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stick and slip")]
        stickandslip,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("vibration - axial")]
        vibrationaxial,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("vibration - torsional")]
        vibrationtorsional,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("vibration - transverse")]
        vibrationtransverse,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("vibration unknown or rough drilling")]
        vibrationunknownorroughdrilling,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("uneven wear of BHA")]
        unevenwearofBHA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("uneven wear of drillstring")]
        unevenwearofdrillstring,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("excessive torque")]
        excessivetorque,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("excessive drag")]
        excessivedrag,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("reaming greater than 2 hours")]
        reaminggreaterthan2hours,
        
        /// <remarks/>
        washouts,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tight hole or overPull")]
        tightholeoroverPull,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("failed inspections or fatigue wear")]
        failedinspectionsorfatiguewear,
        
        /// <remarks/>
        mechanical,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling greater than 1000 feet/day")]
        drillinggreaterthan1000feetday,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling greater than 2000 feet/day")]
        drillinggreaterthan2000feetday,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling less than 20 feet/day")]
        drillinglessthan20feetday,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("trips greater than 24 hours")]
        tripsgreaterthan24hours,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("excessive time for BHA makeup")]
        excessivetimeforBHAmakeup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("waiting on decisions")]
        waitingondecisions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("waiting on weather")]
        waitingonweather,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("waiting on tools")]
        waitingontools,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sloughing or packoffs")]
        sloughingorpackoffs,
        
        /// <remarks/>
        ballooning,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fracture problems")]
        fractureproblems,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("unstable zones")]
        unstablezones,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation integrity test")]
        formationintegritytest,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("leak-off test")]
        leakofftest,
        
        /// <remarks/>
        tectonics,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pore pressure")]
        porepressure,
        
        /// <remarks/>
        breakouts,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bed parallel")]
        bedparallel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wellbore stability")]
        wellborestability,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("excessive doglegs")]
        excessivedoglegs,
        
        /// <remarks/>
        sidetrack,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("BHA change for directional")]
        BHAchangefordirectional,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wrong total flow area")]
        wrongtotalflowarea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well collision - actual")]
        wellcollisionactual,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("well collision - technical")]
        wellcollisiontechnical,
        
        /// <remarks/>
        geosteering,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("abnormal tendency changes")]
        abnormaltendencychanges,
        
        /// <remarks/>
        resurveying,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in-field referencing (IFR) actions")]
        infieldreferencingIFRactions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit or BHA performance")]
        bitorBHAperformance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drilling optimization")]
        drillingoptimization,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit balling")]
        bitballing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lost cones or broken cutters")]
        lostconesorbrokencutters,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("excessive bit wear or gauge")]
        excessivebitwearorgauge,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("low rate of bit penetration")]
        lowrateofbitpenetration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("high rate of bit penetration")]
        highrateofbitpenetration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("downhole tool")]
        downholetool,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("surface system")]
        surfacesystem,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("motor or rotary steerable system failure")]
        motororrotarysteerablesystemfailure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("topdrive failure")]
        topdrivefailure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hoisting equipment failure")]
        hoistingequipmentfailure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("circulating equipment failure")]
        circulatingequipmentfailure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("electrical system failure")]
        electricalsystemfailure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("blow out preventer events")]
        blowoutpreventerevents,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("surface instrumentation problems")]
        surfaceinstrumentationproblems,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig communications")]
        rigcommunications,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("completion equipment failure")]
        completionequipmentfailure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("miscellaneous rig equipment")]
        miscellaneousrigequipment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tool or equipment failure")]
        toolorequipmentfailure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("squeeze jobs")]
        squeezejobs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing surge losses")]
        casingsurgelosses,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stuck casing or completion")]
        stuckcasingorcompletion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("shoe failures")]
        shoefailures,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("early cement setup")]
        earlycementsetup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing collapse")]
        casingcollapse,
        
        /// <remarks/>
        milling,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("excessive casing wear or cuttings")]
        excessivecasingwearorcuttings,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("excessive formation damage or skin")]
        excessiveformationdamageorskin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing rotation or reciprocation rqd")]
        casingrotationorreciprocationrqd,
        
        /// <remarks/>
        broaching,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("completion or casing")]
        completionorcasing,
        
        /// <remarks/>
        stratigraphy,
        
        /// <remarks/>
        fishing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("junk in hole")]
        junkinhole,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("delay due to political unrest")]
        delayduetopoliticalunrest,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rig move")]
        rigmove,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas hydrates")]
        gashydrates,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pending analysis")]
        pendinganalysis,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("riser disconnect")]
        riserdisconnect,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        personnel,
        
        /// <remarks/>
        environmental,
        
        /// <remarks/>
        automotive,
        
        /// <remarks/>
        asset,
        
        /// <remarks/>
        information,
        
        /// <remarks/>
        time,
        
        /// <remarks/>
        HSE,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum RiskType {
        
        /// <remarks/>
        risk,
        
        /// <remarks/>
        @event,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("near miss")]
        nearmiss,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("best practice")]
        bestpractice,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lessons learned")]
        lessonslearned,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum ScrType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("string annulus")]
        stringannulus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("string kill line")]
        stringkillline,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("string choke line")]
        stringchokeline,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum ShowFluorescence {
        
        /// <remarks/>
        faint,
        
        /// <remarks/>
        bright,
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum ShowLevel {
        
        /// <remarks/>
        blooming,
        
        /// <remarks/>
        streaming,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum ShowRating {
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("very poor")]
        verypoor,
        
        /// <remarks/>
        poor,
        
        /// <remarks/>
        fair,
        
        /// <remarks/>
        good,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("very good")]
        verygood,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum ShowSpeed {
        
        /// <remarks/>
        slow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("moderately fast")]
        moderatelyfast,
        
        /// <remarks/>
        fast,
        
        /// <remarks/>
        instantaneous,
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum SupportCraft {
        
        /// <remarks/>
        barge,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("standby boat")]
        standbyboat,
        
        /// <remarks/>
        helicopter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("supply boat")]
        supplyboat,
        
        /// <remarks/>
        truck,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("crew vehicle")]
        crewvehicle,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tug boat")]
        tugboat,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum SurfEquipType {
        
        /// <remarks/>
        IADC,
        
        /// <remarks/>
        custom,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("coiled tubing")]
        coiledtubing,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum TargetCategory {
        
        /// <remarks/>
        geological,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum TargetScope {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3D volume")]
        Item3Dvolume,
        
        /// <remarks/>
        ellipsoid,
        
        /// <remarks/>
        elliptical,
        
        /// <remarks/>
        hardLine,
        
        /// <remarks/>
        irregular,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lease line")]
        leaseline,
        
        /// <remarks/>
        line,
        
        /// <remarks/>
        plane,
        
        /// <remarks/>
        point,
        
        /// <remarks/>
        rectangular,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum TargetSectionScope {
        
        /// <remarks/>
        arc,
        
        /// <remarks/>
        line,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum TrajStationStatus {
        
        /// <remarks/>
        locked,
        
        /// <remarks/>
        open,
        
        /// <remarks/>
        rejected,
        
        /// <remarks/>
        valid,
        
        /// <remarks/>
        position,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum TrajStationType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("azimuth on plane")]
        azimuthonplane,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("buildrate to delta-MD")]
        buildratetodeltaMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("buildrate to INCL")]
        buildratetoINCL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("buildrate to MD")]
        buildratetoMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("buildrate and turnrate to AZI")]
        buildrateandturnratetoAZI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("buildrate and turnrate to delta-MD")]
        buildrateandturnratetodeltaMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("buildrate and turnrate to INCL")]
        buildrateandturnratetoINCL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("buildrate and turnrate to INCL and AZI")]
        buildrateandturnratetoINCLandAZI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("buildrate and turnrate to MD")]
        buildrateandturnratetoMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("buildrate and turnrate to TVD")]
        buildrateandturnratetoTVD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("buildrate TVD")]
        buildrateTVD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing MD")]
        casingMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing TVD")]
        casingTVD,
        
        /// <remarks/>
        DLS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS to AZI and MD")]
        DLStoAZIandMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS to AZI-TVD")]
        DLStoAZITVD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS to INCL")]
        DLStoINCL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS to INCL and AZI")]
        DLStoINCLandAZI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS to INCL and MD")]
        DLStoINCLandMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS to INCL and TVD")]
        DLStoINCLandTVD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS to NS, EW and TVD")]
        DLStoNSEWandTVD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS and toolface to AZI")]
        DLSandtoolfacetoAZI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS and toolface to delta-MD")]
        DLSandtoolfacetodeltaMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS and toolface to INCL")]
        DLSandtoolfacetoINCL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS and toolface to INCL-AZI")]
        DLSandtoolfacetoINCLAZI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS and toolface to MD")]
        DLSandtoolfacetoMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DLS and toolface to TVD")]
        DLSandtoolfacetoTVD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation MD")]
        formationMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("formation TVD")]
        formationTVD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gyro inertial")]
        gyroinertial,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gyro MWD")]
        gyroMWD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gyro north seeking")]
        gyronorthseeking,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hold to delta-MD")]
        holdtodeltaMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hold to MD")]
        holdtoMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hold to TVD")]
        holdtoTVD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("INCL, AZI and TVD")]
        INCLAZIandTVD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("magnetic multi-shot")]
        magneticmultishot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("magnetic MWD")]
        magneticMWD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("magnetic single shot")]
        magneticsingleshot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("marker MD")]
        markerMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("marker TVD")]
        markerTVD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NS, EW and TVD")]
        NSEWandTVD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("target center")]
        targetcenter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("target offset")]
        targetoffset,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tie in point")]
        tieinpoint,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("turnrate to AZI")]
        turnratetoAZI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("turnrate to delta-MD")]
        turnratetodeltaMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("turnrate to MD")]
        turnratetoMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("turnrate to TVD")]
        turnratetoTVD,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum TubularAssembly {
        
        /// <remarks/>
        drilling,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("directional drilling")]
        directionaldrilling,
        
        /// <remarks/>
        fishing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("condition mud")]
        conditionmud,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tubing conveyed logging")]
        tubingconveyedlogging,
        
        /// <remarks/>
        cementing,
        
        /// <remarks/>
        casing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("clean out")]
        cleanout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("completion or testing")]
        completionortesting,
        
        /// <remarks/>
        coring,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hole opening or underreaming")]
        holeopeningorunderreaming,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("milling or dressing or cutting")]
        millingordressingorcutting,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("wiper or check or reaming")]
        wiperorcheckorreaming,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum TubularComponent {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("non-magnetic stabilizer")]
        nonmagneticstabilizer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("non-magnetic collar")]
        nonmagneticcollar,
        
        /// <remarks/>
        stabilizer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("adjustable kickoff")]
        adjustablekickoff,
        
        /// <remarks/>
        accelerator,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rotary steering tool")]
        rotarysteeringtool,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-bar catcher")]
        subbarcatcher,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-bent")]
        subbent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit core diamond")]
        bitcorediamond,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit core PDC")]
        bitcorePDC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit diamond fixed cut")]
        bitdiamondfixedcut,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit insert roller cone")]
        bitinsertrollercone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit mill tooth roller cone")]
        bitmilltoothrollercone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit PDC fixed cutter")]
        bitPDCfixedcutter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-bit")]
        subbit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bridge plug")]
        bridgeplug,
        
        /// <remarks/>
        bullnose,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bull plug")]
        bullplug,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-bumper")]
        subbumper,
        
        /// <remarks/>
        casing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing cutter")]
        casingcutter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hanger casing subsea")]
        hangercasingsubsea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hanger casing surface")]
        hangercasingsurface,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing head")]
        casinghead,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("catch assembly")]
        catchassembly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-catcher")]
        subcatcher,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-circulation")]
        subcirculation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("coiled tubing in hole")]
        coiledtubinginhole,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("coiled tubing on coil")]
        coiledtubingoncoil,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drill pipe compressive")]
        drillpipecompressive,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-cone")]
        subcone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("core barrel")]
        corebarrel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("core orientation barrel")]
        coreorientationbarrel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-crossover")]
        subcrossover,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing crossover")]
        casingcrossover,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-dart")]
        subdart,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("die collar")]
        diecollar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("die collar LH")]
        diecollarLH,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("directional guidance system")]
        directionalguidancesystem,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drill collar")]
        drillcollar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drill pipe")]
        drillpipe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drill pipe LH")]
        drillpipeLH,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drill stem test BHA")]
        drillstemtestBHA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drive pipe")]
        drivepipe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dual catch assembly")]
        dualcatchassembly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("extension bowl overshot")]
        extensionbowlovershot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("extension sub-overshot")]
        extensionsubovershot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("float collar")]
        floatcollar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("float shoe")]
        floatshoe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-float")]
        subfloat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("flow head")]
        flowhead,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("guide shoe")]
        guideshoe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD hang off sub")]
        MWDhangoffsub,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("heavy weight drill pipe")]
        heavyweightdrillpipe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("heavy weight drill pipe LH")]
        heavyweightdrillpipeLH,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("riser high pressure")]
        riserhighpressure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit hole opener")]
        bitholeopener,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing inflatable packer")]
        casinginflatablepacker,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("motor instrumented")]
        motorinstrumented,
        
        /// <remarks/>
        jar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-jetting")]
        subjetting,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("junk basket")]
        junkbasket,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("junk basket reverse circulation")]
        junkbasketreversecirculation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-junk")]
        subjunk,
        
        /// <remarks/>
        kelly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("keyseat wiper tool")]
        keyseatwipertool,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("landing float collar")]
        landingfloatcollar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lead impression block")]
        leadimpressionblock,
        
        /// <remarks/>
        liner,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hanger liner")]
        hangerliner,
        
        /// <remarks/>
        magnet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("riser marine")]
        risermarine,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mill dress")]
        milldress,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mill flat bottom")]
        millflatbottom,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mill hollow")]
        millhollow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mill polish")]
        millpolish,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mill section")]
        millsection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mill taper")]
        milltaper,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mill washover")]
        millwashover,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mill packer picker assembly")]
        millpackerpickerassembly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("millout extension")]
        milloutextension,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("multilateral hanger running tool")]
        multilateralhangerrunningtool,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hanger mud line")]
        hangermudline,
        
        /// <remarks/>
        motor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mule shoe")]
        muleshoe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("logging while drilling tool")]
        loggingwhiledrillingtool,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stabilizer near bit roller reamer")]
        stabilizernearbitrollerreamer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stabilizer near bit")]
        stabilizernearbit,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stabilizer non-rotating")]
        stabilizernonrotating,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-orienting")]
        suborienting,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        overshot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("overshot LH")]
        overshotLH,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oversize lip guide overshot")]
        oversizelipguideovershot,
        
        /// <remarks/>
        packer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("polished bore receptacle")]
        polishedborereceptacle,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mill pilot")]
        millpilot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pipe cutter")]
        pipecutter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ported stinger")]
        portedstinger,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-ported")]
        subported,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("prepacked screens")]
        prepackedscreens,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-pressure relief")]
        subpressurerelief,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("riser production")]
        riserproduction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MWD pulser")]
        MWDpulser,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-pump out")]
        subpumpout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-restrictor")]
        subrestrictor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("packer retrieve TT squeeze")]
        packerretrieveTTsqueeze,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("reversing tool")]
        reversingtool,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stabilizer string roller reamer")]
        stabilizerstringrollerreamer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("packer RTTS")]
        packerRTTS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("running tool")]
        runningtool,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("safety joint")]
        safetyjoint,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("safety joint LH")]
        safetyjointLH,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-saver")]
        subsaver,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("scab liner bit guide")]
        scablinerbitguide,
        
        /// <remarks/>
        scraper,
        
        /// <remarks/>
        scratchers,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("casing shoe screw-in")]
        casingshoescrewin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-shock")]
        subshock,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("drill collar short")]
        drillcollarshort,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-side entry")]
        subsideentry,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("slotted liner")]
        slottedliner,
        
        /// <remarks/>
        spear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stage cement collar")]
        stagecementcollar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("motor steerable")]
        motorsteerable,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("packer storm valve RTTS")]
        packerstormvalveRTTS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stabilizer string")]
        stabilizerstring,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("surface pipe")]
        surfacepipe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("taper tap")]
        tapertap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("taper tap LH")]
        tapertapLH,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tubing-conveyed perforating gun")]
        tubingconveyedperforatinggun,
        
        /// <remarks/>
        thruster,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tieback polished bore receptacle")]
        tiebackpolishedborereceptacle,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tieback stinger")]
        tiebackstinger,
        
        /// <remarks/>
        tubing,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("hanger tubing")]
        hangertubing,
        
        /// <remarks/>
        turbine,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bit under reamer")]
        bitunderreamer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stabilizer variable blade")]
        stabilizervariableblade,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("washover pipe")]
        washoverpipe,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mill watermelon")]
        millwatermelon,
        
        /// <remarks/>
        whipstock,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("whipstock anchor")]
        whipstockanchor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stabilizer turbo back")]
        stabilizerturboback,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stabilizer inline")]
        stabilizerinline,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stabilizer steerable")]
        stabilizersteerable,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-stop")]
        substop,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sub-filter")]
        subfilter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mill casing cutting")]
        millcasingcutting,
        
        /// <remarks/>
        reamer,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum TypeSurveyTool {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("magnetic MWD")]
        magneticMWD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gyroscopic  MWD")]
        gyroscopicMWD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gyroscopic north seeking")]
        gyroscopicnorthseeking,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gyroscopic inertial")]
        gyroscopicinertial,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("magnetic single-shot")]
        magneticsingleshot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("magnetic multiple-shot")]
        magneticmultipleshot,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum WellDirection {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("huff-n-puff")]
        huffnpuff,
        
        /// <remarks/>
        injector,
        
        /// <remarks/>
        producer,
        
        /// <remarks/>
        uncertain,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum WellFluid {
        
        /// <remarks/>
        air,
        
        /// <remarks/>
        condensate,
        
        /// <remarks/>
        dry,
        
        /// <remarks/>
        gas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("gas-water")]
        gaswater,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("non HC gas")]
        nonHCgas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("non HC gas -- CO2")]
        nonHCgasCO2,
        
        /// <remarks/>
        oil,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oil-gas")]
        oilgas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oil-water")]
        oilwater,
        
        /// <remarks/>
        steam,
        
        /// <remarks/>
        water,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("water -- brine")]
        waterbrine,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("water -- fresh water")]
        waterfreshwater,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum WellboreShape {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("build and hold")]
        buildandhold,
        
        /// <remarks/>
        deviated,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("double kickoff")]
        doublekickoff,
        
        /// <remarks/>
        horizontal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("S-shaped")]
        Sshaped,
        
        /// <remarks/>
        vertical,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum WellboreType {
        
        /// <remarks/>
        bypass,
        
        /// <remarks/>
        initial,
        
        /// <remarks/>
        redrill,
        
        /// <remarks/>
        reentry,
        
        /// <remarks/>
        respud,
        
        /// <remarks/>
        sidetrack,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum WellPurpose {
        
        /// <remarks/>
        appraisal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("appraisal -- confirmation appraisal")]
        appraisalconfirmationappraisal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("appraisal -- exploratory appraisal")]
        appraisalexploratoryappraisal,
        
        /// <remarks/>
        exploration,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("exploration -- deeper-pool wildcat")]
        explorationdeeperpoolwildcat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("exploration -- new-field wildcat")]
        explorationnewfieldwildcat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("exploration -- new-pool wildcat")]
        explorationnewpoolwildcat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("exploration -- outpost wildcat")]
        explorationoutpostwildcat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("exploration -- shallower-pool wildcat")]
        explorationshallowerpoolwildcat,
        
        /// <remarks/>
        development,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("development -- infill development")]
        developmentinfilldevelopment,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("development -- injector")]
        developmentinjector,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("development -- producer")]
        developmentproducer,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fluid storage")]
        fluidstorage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fluid storage -- gas storage")]
        fluidstoragegasstorage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("general srvc")]
        generalsrvc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("general srvc -- borehole re-acquisition")]
        generalsrvcboreholereacquisition,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("general srvc -- observation")]
        generalsrvcobservation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("general srvc -- relief")]
        generalsrvcrelief,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("general srvc -- research")]
        generalsrvcresearch,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("general srvc -- research -- drill test")]
        generalsrvcresearchdrilltest,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("general srvc -- research -- strat test")]
        generalsrvcresearchstrattest,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("general srvc -- waste disposal")]
        generalsrvcwastedisposal,
        
        /// <remarks/>
        mineral,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum WellStatus {
        
        /// <remarks/>
        abandoned,
        
        /// <remarks/>
        active,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("active -- injecting")]
        activeinjecting,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("active -- producing")]
        activeproducing,
        
        /// <remarks/>
        completed,
        
        /// <remarks/>
        drilling,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("partially plugged")]
        partiallyplugged,
        
        /// <remarks/>
        permitted,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("plugged and abandoned")]
        pluggedandabandoned,
        
        /// <remarks/>
        proposed,
        
        /// <remarks/>
        sold,
        
        /// <remarks/>
        suspended,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("temporarily abandoned")]
        temporarilyabandoned,
        
        /// <remarks/>
        testing,
        
        /// <remarks/>
        tight,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("working over")]
        workingover,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/api/131")]
    [System.Xml.Serialization.XmlRootAttribute("capClients", Namespace="http://www.witsml.org/api/131", IsNullable=false)]
    public partial class obj_capClients {
        
        private obj_capClient capClientField;
        
        private string versionField;
        
        public obj_capClients() {
            this.versionField = "1.3.1";
        }
        
        /// <remarks/>
        /// <summary>Defines the singular Client Capabilities (capClient) element; only one can be specified.</summary>
        [System.ComponentModel.DescriptionAttribute("Defines the singular Client Capabilities (capClient) element; only one can be spe" +
            "cified.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("capClient", DataType="obj_capClient")]
        public obj_capClient capClient {
            get {
                return this.capClientField;
            }
            set {
                this.capClientField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>API schema version.  It is optional. If the version is specified, its value must be set equal to the value specified by the  version's fixed attribute. Note that this is different from the data schema version.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("API schema version.  It is optional. If the version is specified, its value must " +
            "be set equal to the value specified by the  version\'s fixed attribute. Note that" +
            " this is different from the data schema version.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="str16")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/api/131")]
    public partial class obj_capClient {
        
        private cs_contact contactField;
        
        private string descriptionField;
        
        private string nameField;
        
        private string vendorField;
        
        private string versionField;
        
        private string schemaVersionField;
        
        private string apiVersField;
        
        /// <remarks/>
        /// <summary>Contact information for Client.</summary>
        [System.ComponentModel.DescriptionAttribute("Contact information for Client.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("contact", DataType="cs_contact")]
        public cs_contact contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of Client.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4096)]
        [System.ComponentModel.DescriptionAttribute("Description of Client.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="str4096")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of the Client.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of the Client.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="str64")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Vendor of the Client software.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Vendor of the Client software.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("vendor", DataType="str64")]
        public string vendor {
            get {
                return this.vendorField;
            }
            set {
                this.vendorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Client software Executable Program version (identification only; use apiVers to determine Client's API Capability).</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Client software Executable Program version (identification only; use apiVers to d" +
            "etermine Client\'s API Capability).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="str64")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A comma separated list of schema versions (without spaces) that are supported  by the cllient. The oldest version should be listed first, followed by the next  oldest, etc.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A comma separated list of schema versions (without spaces) that are supported  by" +
            " the cllient. The oldest version should be listed first, followed by the next  o" +
            "ldest, etc.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("schemaVersion", DataType="str64")]
        public string schemaVersion {
            get {
                return this.schemaVersionField;
            }
            set {
                this.schemaVersionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Version of the API specification to which this Publisher conforms.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Version of the API specification to which this Publisher conforms.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("apiVers", DataType="str16")]
        public string apiVers {
            get {
                return this.apiVersField;
            }
            set {
                this.apiVersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/api/131")]
    public partial class cs_contact {
        
        private string nameField;
        
        private string emailField;
        
        private string phoneField;
        
        /// <remarks/>
        /// <summary>Name of contact.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of contact.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="str64")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Email address of contact.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("Email address of contact.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("email", DataType="str256")]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Phone number of contact.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Phone number of contact.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("phone", DataType="str64")]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/api/131")]
    [System.Xml.Serialization.XmlRootAttribute("capPublishers", Namespace="http://www.witsml.org/api/131", IsNullable=false)]
    public partial class obj_capPublishers {
        
        private obj_capPublisher capPublisherField;
        
        private string versionField;
        
        public obj_capPublishers() {
            this.versionField = "1.3.1";
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("capPublisher", DataType="obj_capPublisher")]
        public obj_capPublisher capPublisher {
            get {
                return this.capPublisherField;
            }
            set {
                this.capPublisherField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>API schema version.  It is optional. If the version is specified, its value must be set equal to the value specified by the  version's fixed attribute. Note that this is different from the data schema version.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("API schema version.  It is optional. If the version is specified, its value must " +
            "be set equal to the value specified by the  version\'s fixed attribute. Note that" +
            " this is different from the data schema version.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="str16")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/api/131")]
    public partial class obj_capPublisher {
        
        private cs_contact contactField;
        
        private string descriptionField;
        
        private string nameField;
        
        private string vendorField;
        
        private string versionField;
        
        private string schemaVersionField;
        
        private cs_function[] functionField;
        
        private string apiVersField;
        
        /// <remarks/>
        /// <summary>Contact information for Publisher.</summary>
        [System.ComponentModel.DescriptionAttribute("Contact information for Publisher.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("contact", DataType="cs_contact")]
        public cs_contact contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of Publisher.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4096)]
        [System.ComponentModel.DescriptionAttribute("Description of Publisher.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="str4096")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of the Publisher.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of the Publisher.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="str64")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Vendor of the Publisher software.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Vendor of the Publisher software.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("vendor", DataType="str64")]
        public string vendor {
            get {
                return this.vendorField;
            }
            set {
                this.vendorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Publisher software Executable Program version (identification only; use apiVers to determine Publisher's API Capability).</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Publisher software Executable Program version (identification only; use apiVers t" +
            "o determine Publisher\'s API Capability).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="str64")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The data schema version that is represented by each object in "function".</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The data schema version that is represented by each object in \"function\".")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("schemaVersion", DataType="str64")]
        public string schemaVersion {
            get {
                return this.schemaVersionField;
            }
            set {
                this.schemaVersionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A WITSML data object (well, wellbore, etc) which this Publisher can publish.</summary>
        [System.Xml.Serialization.XmlElementAttribute("function")]
        [System.ComponentModel.DescriptionAttribute("A WITSML data object (well, wellbore, etc) which this Publisher can publish.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("function", DataType="cs_function")]
        public cs_function[] function {
            get {
                return this.functionField;
            }
            set {
                this.functionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Version of the API specification to which this Publisher conforms.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Version of the API specification to which this Publisher conforms.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("apiVers", DataType="str16")]
        public string apiVers {
            get {
                return this.apiVersField;
            }
            set {
                this.apiVersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/api/131")]
    public partial class cs_function {
        
        private string[] dataObjectField;
        
        private string nameField;
        
        /// <remarks/>
        /// <summary>A WITSML data object (well, wellbore, etc)  which is supported by this Server/Publisher for this function.</summary>
        [System.Xml.Serialization.XmlElementAttribute("dataObject")]
        [System.ComponentModel.DescriptionAttribute("A WITSML data object (well, wellbore, etc)  which is supported by this Server/Pub" +
            "lisher for this function.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dataObject", DataType="str64")]
        public string[] dataObject {
            get {
                return this.dataObjectField;
            }
            set {
                this.dataObjectField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of function, (WMLS_GetFromStore, etc)</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Name of function, (WMLS_GetFromStore, etc)")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="str16")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/api/131")]
    [System.Xml.Serialization.XmlRootAttribute("capServers", Namespace="http://www.witsml.org/api/131", IsNullable=false)]
    public partial class obj_capServers {
        
        private obj_capServer capServerField;
        
        private string versionField;
        
        public obj_capServers() {
            this.versionField = "1.3.1";
        }
        
        /// <remarks/>
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("capServer", DataType="obj_capServer")]
        public obj_capServer capServer {
            get {
                return this.capServerField;
            }
            set {
                this.capServerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>API schema version.  It is optional. If the version is specified, its value must be set equal to the value specified by the  version's fixed attribute. Note that this is different from the data schema version.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("API schema version.  It is optional. If the version is specified, its value must " +
            "be set equal to the value specified by the  version\'s fixed attribute. Note that" +
            " this is different from the data schema version.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="str16")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/api/131")]
    public partial class obj_capServer {
        
        private cs_contact contactField;
        
        private string descriptionField;
        
        private string nameField;
        
        private string vendorField;
        
        private string versionField;
        
        private string schemaVersionField;
        
        private cs_function[] functionField;
        
        private string apiVersField;
        
        /// <remarks/>
        /// <summary>Contact information for Server.</summary>
        [System.ComponentModel.DescriptionAttribute("Contact information for Server.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("contact", DataType="cs_contact")]
        public cs_contact contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of Server.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4096)]
        [System.ComponentModel.DescriptionAttribute("Description of Server.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="str4096")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of the Server.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of the Server.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="str64")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Vendor of the Server software.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Vendor of the Server software.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("vendor", DataType="str64")]
        public string vendor {
            get {
                return this.vendorField;
            }
            set {
                this.vendorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Server software Executable Program version (identification only;  use apiVers to determine Server's API Capability).</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Server software Executable Program version (identification only;  use apiVers to " +
            "determine Server\'s API Capability).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="str64")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The data schema version that is represented by each object in "function".</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The data schema version that is represented by each object in \"function\".")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("schemaVersion", DataType="str64")]
        public string schemaVersion {
            get {
                return this.schemaVersionField;
            }
            set {
                this.schemaVersionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Specifies server function capabilities.</summary>
        [System.Xml.Serialization.XmlElementAttribute("function")]
        [System.ComponentModel.DescriptionAttribute("Specifies server function capabilities.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("function", DataType="cs_function")]
        public cs_function[] function {
            get {
                return this.functionField;
            }
            set {
                this.functionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Version of the API specification to which this Publisher conforms.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Version of the API specification to which this Publisher conforms.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("apiVers", DataType="str16")]
        public string apiVers {
            get {
                return this.apiVersField;
            }
            set {
                this.apiVersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/api/131")]
    [System.Xml.Serialization.XmlRootAttribute("capSubscribers", Namespace="http://www.witsml.org/api/131", IsNullable=false)]
    public partial class obj_capSubscribers {
        
        private obj_capSubscriber capSubscriberField;
        
        private string versionField;
        
        public obj_capSubscribers() {
            this.versionField = "1.3.1";
        }
        
        /// <remarks/>
        /// <summary>Defines the singular Subscriber Capabilities  (capSubscriber) element; only one can be specified.</summary>
        [System.ComponentModel.DescriptionAttribute("Defines the singular Subscriber Capabilities  (capSubscriber) element; only one c" +
            "an be specified.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("capSubscriber", DataType="obj_capSubscriber")]
        public obj_capSubscriber capSubscriber {
            get {
                return this.capSubscriberField;
            }
            set {
                this.capSubscriberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>API schema version.  It is optional. If the version is specified, its value must be set equal to the value specified by the  version's fixed attribute. Note that this is different from the data schema version.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("API schema version.  It is optional. If the version is specified, its value must " +
            "be set equal to the value specified by the  version\'s fixed attribute. Note that" +
            " this is different from the data schema version.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="str16")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/api/131")]
    public partial class obj_capSubscriber {
        
        private cs_contact contactField;
        
        private string descriptionField;
        
        private string nameField;
        
        private string vendorField;
        
        private string versionField;
        
        private string schemaVersionField;
        
        private string apiVersField;
        
        /// <remarks/>
        /// <summary>Contact information for Subscriber.</summary>
        [System.ComponentModel.DescriptionAttribute("Contact information for Subscriber.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("contact", DataType="cs_contact")]
        public cs_contact contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of Subscriber.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4096)]
        [System.ComponentModel.DescriptionAttribute("Description of Subscriber.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="str4096")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of the Subscriber.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of the Subscriber.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="str64")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Vendor of the Subscriber software.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Vendor of the Subscriber software.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("vendor", DataType="str64")]
        public string vendor {
            get {
                return this.vendorField;
            }
            set {
                this.vendorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Subscriber software Executable Program version (identification only; use apiVers to determine Subscriber's API Capability).</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Subscriber software Executable Program version (identification only; use apiVers " +
            "to determine Subscriber\'s API Capability).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="str64")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A comma separated list of schema versions (without spaces) that are supported  by the subscriber. The oldest version should be listed first, followed by the next  oldest, etc.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A comma separated list of schema versions (without spaces) that are supported  by" +
            " the subscriber. The oldest version should be listed first, followed by the next" +
            "  oldest, etc.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("schemaVersion", DataType="str64")]
        public string schemaVersion {
            get {
                return this.schemaVersionField;
            }
            set {
                this.schemaVersionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Version of the API specification to which this Publisher conforms.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Version of the API specification to which this Publisher conforms.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("apiVers", DataType="str16")]
        public string apiVers {
            get {
                return this.apiVersField;
            }
            set {
                this.apiVersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/api/131")]
    [System.Xml.Serialization.XmlRootAttribute("subscriptions", Namespace="http://www.witsml.org/api/131", IsNullable=false)]
    public partial class obj_subscriptions {
        
        private obj_subscription[] subscriptionField;
        
        private string versionField;
        
        public obj_subscriptions() {
            this.versionField = "1.3.1";
        }
        
        /// <remarks/>
        /// <summary>Defines the singular subscription object.</summary>
        [System.Xml.Serialization.XmlElementAttribute("subscription")]
        [System.ComponentModel.DescriptionAttribute("Defines the singular subscription object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("subscription", DataType="obj_subscription")]
        public obj_subscription[] subscription {
            get {
                return this.subscriptionField;
            }
            set {
                this.subscriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  It is optional. If the version is specified, its value must be set equal to the value specified by the  version's fixed attribute.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  It is optional. If the version is specified, its val" +
            "ue must be set equal to the value specified by the  version\'s fixed attribute.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="str16")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/api/131")]
    public partial class obj_subscription {
        
        private System.Xml.XmlElement[] anyField;
        
        private string hostField;
        
        private string processField;
        
        private bool encryptField;
        
        private bool encryptFieldSpecified;
        
        private string portField;
        
        private short retryField;
        
        private bool retryFieldSpecified;
        
        private string idPubField;
        
        private string idSubField;
        
        private short retCodeField;
        
        private bool retCodeFieldSpecified;
        
        private SubscriptionAction actionField;
        
        private bool testField;
        
        private bool testFieldSpecified;
        
        private short updateIntervalField;
        
        private bool updateIntervalFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Host name of Subscriber to receive published data over HTTP/S POST.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("Host name of Subscriber to receive published data over HTTP/S POST.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("host", DataType="str256")]
        public string host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Process name on Subscriber that will process published data received over HTTP/S POST.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("Process name on Subscriber that will process published data received over HTTP/S " +
            "POST.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("process", DataType="str256")]
        public string process {
            get {
                return this.processField;
            }
            set {
                this.processField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Specifies whether encryption (HTTPS) is to be used when publishing (POSTing) the data.   Values are "true" (or "1") and "false" ( or "0").</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute("Specifies whether encryption (HTTPS) is to be used when publishing (POSTing) the " +
            "data.   Values are \"true\" (or \"1\") and \"false\" ( or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("encrypt", DataType="logicalBoolean")]
        public bool encrypt {
            get {
                return this.encryptField;
            }
            set {
                this.encryptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool encryptSpecified {
            get {
                return this.encryptFieldSpecified;
            }
            set {
                this.encryptFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The TCP port on which the Subscriber wishes to receive the data over HTTP/S POST.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("The TCP port on which the Subscriber wishes to receive the data over HTTP/S POST." +
            "")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("port", DataType="str16")]
        public string port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of times the Publisher will retry a failed POST to the Subscriber before discarding the data as undeliverable.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute("Number of times the Publisher will retry a failed POST to the Subscriber before d" +
            "iscarding the data as undeliverable.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("retry", DataType="integerCount")]
        public short retry {
            get {
                return this.retryField;
            }
            set {
                this.retryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool retrySpecified {
            get {
                return this.retryFieldSpecified;
            }
            set {
                this.retryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The identifier of the Publisher, as clear, un-encoded text in the format: userid:password Assigned by the Subscriber and sent by the Publisher as BASIC authentication when POSTing data to the Subscriber.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("The identifier of the Publisher, as clear, un-encoded text in the format: userid:" +
            "password Assigned by the Subscriber and sent by the Publisher as BASIC authentic" +
            "ation when POSTing data to the Subscriber.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("idPub", DataType="str256")]
        public string idPub {
            get {
                return this.idPubField;
            }
            set {
                this.idPubField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of the accepted subscription within the context of this Publisher. This identifier is used by the Subscriber when subsequently modifies or cancels the subscription.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("The unique identifier of the accepted subscription within the context of this Pub" +
            "lisher. This identifier is used by the Subscriber when subsequently modifies or " +
            "cancels the subscription.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("idSub", DataType="str256")]
        public string idSub {
            get {
                return this.idSubField;
            }
            set {
                this.idSubField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A return code returned by the Publisher indicating the disposition of the subscription request. A value of 1 indicates the request was accepted.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute("A return code returned by the Publisher indicating the disposition of the subscri" +
            "ption request. A value of 1 indicates the request was accepted.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("retCode", DataType="integerCount")]
        public short retCode {
            get {
                return this.retCodeField;
            }
            set {
                this.retCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool retCodeSpecified {
            get {
                return this.retCodeFieldSpecified;
            }
            set {
                this.retCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Specifies the action to be performed on the subscription request: add, modify, cancel or verify.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Specifies the action to be performed on the subscription request: add, modify, ca" +
            "ncel or verify.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("action", DataType="SubscriptionAction")]
        public SubscriptionAction action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Specifies that a network test will first be performed by the Publisher to make sure the Subscriber system can be contacted. Default is "true"; specify test="false" to bypass the test.  Values are "true" (or "1") and "false" ( or "0").</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute("Specifies that a network test will first be performed by the Publisher to make su" +
            "re the Subscriber system can be contacted. Default is \"true\"; specify test=\"fals" +
            "e\" to bypass the test.  Values are \"true\" (or \"1\") and \"false\" ( or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("test", DataType="logicalBoolean")]
        public bool test {
            get {
                return this.testField;
            }
            set {
                this.testField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool testSpecified {
            get {
                return this.testFieldSpecified;
            }
            set {
                this.testFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The minimum interval between publication of changed data objects matching this subscription request. Changes occurring more frequently than the specified value will not be published. If not specified, the Publisher will publish data objects as frequently as they become available</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"The minimum interval between publication of changed data objects matching this subscription request. Changes occurring more frequently than the specified value will not be published. If not specified, the Publisher will publish data objects as frequently as they become available")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("updateInterval", DataType="integerCount")]
        public short updateInterval {
            get {
                return this.updateIntervalField;
            }
            set {
                this.updateIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool updateIntervalSpecified {
            get {
                return this.updateIntervalFieldSpecified;
            }
            set {
                this.updateIntervalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/api/131")]
    public enum SubscriptionAction {
        
        /// <remarks/>
        add,
        
        /// <remarks/>
        modify,
        
        /// <remarks/>
        cancel,
        
        /// <remarks/>
        verify,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [System.Xml.Serialization.XmlRootAttribute("bhaRuns", Namespace="http://www.witsml.org/schemas/131", IsNullable=false)]
    public partial class obj_bhaRuns {
        
        private cs_documentInfo documentInfoField;
        
        private obj_bhaRun[] bhaRunField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A single bottom hole assembly run.</summary>
        [System.Xml.Serialization.XmlElementAttribute("bhaRun")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A single bottom hole assembly run.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bhaRun", DataType="obj_bhaRun")]
        public obj_bhaRun[] bhaRun {
            get {
                return this.bhaRunField;
            }
            set {
                this.bhaRunField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.3\\.1\\.([1-9]|([1-9][0-9]))")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionString")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_documentInfo {
        
        private nameStruct documentNameField;
        
        private nameStruct[] documentAliasField;
        
        private Energistics.DataAccess.Timestamp documentDateField;
        
        private bool documentDateFieldSpecified;
        
        private nameStruct[] documentClassField;
        
        private fileCreationType fileCreationInformationField;
        
        private securityInfoType[] securityInformationField;
        
        private string disclaimerField;
        
        private eventType[] auditTrailField;
        
        private string ownerField;
        
        private string commentField;
        
        /// <remarks/>
        /// <summary>An identifier for the document. This is  intended to be unique within the context of the NamingSystem.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("An identifier for the document. This is  intended to be unique within the context" +
            " of the NamingSystem.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("DocumentName", DataType="nameStruct")]
        public nameStruct DocumentName {
            get {
                return this.documentNameField;
            }
            set {
                this.documentNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Zero or more alternate names for the document.  These names do not need to be unique within the naming system.</summary>
        [System.Xml.Serialization.XmlElementAttribute("DocumentAlias")]
        [System.ComponentModel.DescriptionAttribute("Zero or more alternate names for the document.  These names do not need to be uni" +
            "que within the naming system.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("DocumentAlias", DataType="nameStruct")]
        public nameStruct[] DocumentAlias {
            get {
                return this.documentAliasField;
            }
            set {
                this.documentAliasField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date of the creation of the document.  This is not the same as the date that the file was created.  For this date, the document is considered to be the set of  information associated with this document information.  For example, the document may be a seismic binset.  This represents the date that the binset was created.  The FileCreation information would capture the date that  the XML file was created to send or exchange the binset.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The date of the creation of the document.  This is not the same as the date that the file was created.  For this date, the document is considered to be the set of  information associated with this document information.  For example, the document may be a seismic binset.  This represents the date that the binset was created.  The FileCreation information would capture the date that  the XML file was created to send or exchange the binset.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("DocumentDate", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp DocumentDate {
            get {
                return this.documentDateField;
            }
            set {
                this.documentDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentDateSpecified {
            get {
                return this.documentDateFieldSpecified;
            }
            set {
                this.documentDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A document class. Examples of classes would be a  metadata classification or a set of keywords.</summary>
        [System.Xml.Serialization.XmlElementAttribute("documentClass")]
        [System.ComponentModel.DescriptionAttribute("A document class. Examples of classes would be a  metadata classification or a se" +
            "t of keywords.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentClass", DataType="nameStruct")]
        public nameStruct[] documentClass {
            get {
                return this.documentClassField;
            }
            set {
                this.documentClassField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The information about the creation of the  exchange file. This is not about the creation of the data within  the file, but the creation of the file itself.</summary>
        [System.ComponentModel.DescriptionAttribute("The information about the creation of the  exchange file. This is not about the c" +
            "reation of the data within  the file, but the creation of the file itself.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("FileCreationInformation", DataType="fileCreationType")]
        public fileCreationType FileCreationInformation {
            get {
                return this.fileCreationInformationField;
            }
            set {
                this.fileCreationInformationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information about the security to be applied to  this file. More than one classification can be given.</summary>
        [System.Xml.Serialization.XmlElementAttribute("SecurityInformation")]
        [System.ComponentModel.DescriptionAttribute("Information about the security to be applied to  this file. More than one classif" +
            "ication can be given.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("SecurityInformation", DataType="securityInfoType")]
        public securityInfoType[] SecurityInformation {
            get {
                return this.securityInformationField;
            }
            set {
                this.securityInformationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A free-form string that allows a disclaimer to  accompany the information.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A free-form string that allows a disclaimer to  accompany the information.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("Disclaimer", DataType="commentString")]
        public string Disclaimer {
            get {
                return this.disclaimerField;
            }
            set {
                this.disclaimerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A collection of events that can document the  history of the data.</summary>
        [System.Xml.Serialization.XmlArrayItemAttribute("Event", IsNullable=false)]
        [System.ComponentModel.DescriptionAttribute("A collection of events that can document the  history of the data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("AuditTrail", DataType="auditType")]
        public eventType[] AuditTrail {
            get {
                return this.auditTrailField;
            }
            set {
                this.auditTrailField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The owner of the data.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The owner of the data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("Owner", DataType="nameString")]
        public string Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An optional comment about the document.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("An optional comment about the document.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("Comment", DataType="commentString")]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class nameStruct {
        
        private string namingSystemField;
        
        private string valueField;
        
        /// <remarks/>
        /// <summary>The naming system within the name is (hopefully) unique.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The naming system within the name is (hopefully) unique.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("namingSystem", DataType="nameString")]
        public string namingSystem {
            get {
                return this.namingSystemField;
            }
            set {
                this.namingSystemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class fileCreationType {
        
        private Energistics.DataAccess.Timestamp fileCreationDateField;
        
        private string softwareNameField;
        
        private string fileCreatorField;
        
        private string commentField;
        
        /// <remarks/>
        /// <summary>The date and time that the file was created.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The date and time that the file was created.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("FileCreationDate", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp FileCreationDate {
            get {
                return this.fileCreationDateField;
            }
            set {
                this.fileCreationDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>If appropriate, the software that created the file.  This is a free form string, and may include whatever information  is deemed relevant.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("If appropriate, the software that created the file.  This is a free form string, " +
            "and may include whatever information  is deemed relevant.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("SoftwareName", DataType="nameString")]
        public string SoftwareName {
            get {
                return this.softwareNameField;
            }
            set {
                this.softwareNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The person or business associate that created  the file.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The person or business associate that created  the file.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("FileCreator", DataType="nameString")]
        public string FileCreator {
            get {
                return this.fileCreatorField;
            }
            set {
                this.fileCreatorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Any comment that would be useful to further  explain the creation of this instance document.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Any comment that would be useful to further  explain the creation of this instanc" +
            "e document.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("Comment", DataType="commentString")]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class securityInfoType {
        
        private string classField;
        
        private string systemField;
        
        private Energistics.DataAccess.Timestamp endDateField;
        
        private bool endDateFieldSpecified;
        
        private string commentField;
        
        /// <remarks/>
        /// <summary>The security class in which this document is  classified. Examples would be confidential, partner confidential,  tight. The meaning of the class is determined by the System in which  it is defined.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [System.ComponentModel.DescriptionAttribute("The security class in which this document is  classified. Examples would be confi" +
            "dential, partner confidential,  tight. The meaning of the class is determined by" +
            " the System in which  it is defined.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("Class", DataType="kindString")]
        public string Class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The security classification system.  This gives context to the meaning of the Class value.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [System.ComponentModel.DescriptionAttribute("The security classification system.  This gives context to the meaning of the Cla" +
            "ss value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("System", DataType="kindString")]
        public string System {
            get {
                return this.systemField;
            }
            set {
                this.systemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date on which this security class is no  longer applicable.</summary>
        [System.ComponentModel.DescriptionAttribute("The date on which this security class is no  longer applicable.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("EndDate", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndDateSpecified {
            get {
                return this.endDateFieldSpecified;
            }
            set {
                this.endDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A general comment to further define the security  class.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A general comment to further define the security  class.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("Comment", DataType="commentString")]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class eventType {
        
        private Energistics.DataAccess.Timestamp eventDateField;
        
        private string responsiblePartyField;
        
        private string commentField;
        
        /// <remarks/>
        /// <summary>The date on which the event took place.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The date on which the event took place.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("EventDate", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp EventDate {
            get {
                return this.eventDateField;
            }
            set {
                this.eventDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The party responsible for the event.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The party responsible for the event.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ResponsibleParty", DataType="nameString")]
        public string ResponsibleParty {
            get {
                return this.responsiblePartyField;
            }
            set {
                this.responsiblePartyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A free form comment that can further  define the event that occurred.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A free form comment that can further  define the event that occurred.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("Comment", DataType="commentString")]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("WITSML", "1.3.1.1")]
    public partial class obj_bhaRun {
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string nameField;
        
        private refNameString tubularField;
        
        private Energistics.DataAccess.Timestamp dTimStartField;
        
        private bool dTimStartFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimStopField;
        
        private bool dTimStopFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimStartDrillingField;
        
        private bool dTimStartDrillingFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimStopDrillingField;
        
        private bool dTimStopDrillingFieldSpecified;
        
        private anglePerLengthMeasure planDoglegField;
        
        private anglePerLengthMeasure actDoglegField;
        
        private anglePerLengthMeasure actDoglegMxField;
        
        private BhaStatus statusBhaField;
        
        private bool statusBhaFieldSpecified;
        
        private string numBitRunField;
        
        private short numStringRunField;
        
        private bool numStringRunFieldSpecified;
        
        private string reasonTripField;
        
        private string objectiveBhaField;
        
        private cs_drillingParams drillingParamsField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidWellboreField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore that contains the bottom hole assembly.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore that contains the bottom hole assembl" +
            "y.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWellbore", DataType="nameString")]
        public string nameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the run.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the run.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>This represents a foreign key to the tubular (assembly)  that was utilized in this run.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("This represents a foreign key to the tubular (assembly)  that was utilized in thi" +
            "s run.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tubular", DataType="refNameString")]
        public refNameString tubular {
            get {
                return this.tubularField;
            }
            set {
                this.tubularField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time that activities started.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time that activities started.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimStartSpecified {
            get {
                return this.dTimStartFieldSpecified;
            }
            set {
                this.dTimStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time that activities stopped.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time that activities stopped.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStop", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStop {
            get {
                return this.dTimStopField;
            }
            set {
                this.dTimStopField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimStopSpecified {
            get {
                return this.dTimStopFieldSpecified;
            }
            set {
                this.dTimStopFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Start on bottom - date and time.</summary>
        [System.ComponentModel.DescriptionAttribute("Start on bottom - date and time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStartDrilling", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStartDrilling {
            get {
                return this.dTimStartDrillingField;
            }
            set {
                this.dTimStartDrillingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimStartDrillingSpecified {
            get {
                return this.dTimStartDrillingFieldSpecified;
            }
            set {
                this.dTimStartDrillingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Start off bottom - date and time.</summary>
        [System.ComponentModel.DescriptionAttribute("Start off bottom - date and time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStopDrilling", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStopDrilling {
            get {
                return this.dTimStopDrillingField;
            }
            set {
                this.dTimStopDrillingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimStopDrillingSpecified {
            get {
                return this.dTimStopDrillingFieldSpecified;
            }
            set {
                this.dTimStopDrillingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Planned dogleg severity.</summary>
        [System.ComponentModel.DescriptionAttribute("Planned dogleg severity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("planDogleg", DataType="anglePerLengthMeasure")]
        public anglePerLengthMeasure planDogleg {
            get {
                return this.planDoglegField;
            }
            set {
                this.planDoglegField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Actual dogleg severity.</summary>
        [System.ComponentModel.DescriptionAttribute("Actual dogleg severity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("actDogleg", DataType="anglePerLengthMeasure")]
        public anglePerLengthMeasure actDogleg {
            get {
                return this.actDoglegField;
            }
            set {
                this.actDoglegField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Actual dogleg severity - Maximum.</summary>
        [System.ComponentModel.DescriptionAttribute("Actual dogleg severity - Maximum.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("actDoglegMx", DataType="anglePerLengthMeasure")]
        public anglePerLengthMeasure actDoglegMx {
            get {
                return this.actDoglegMxField;
            }
            set {
                this.actDoglegMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bottom hole assembly status.</summary>
        [System.ComponentModel.DescriptionAttribute("Bottom hole assembly status.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("statusBha", DataType="BhaStatus")]
        public BhaStatus statusBha {
            get {
                return this.statusBhaField;
            }
            set {
                this.statusBhaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusBhaSpecified {
            get {
                return this.statusBhaFieldSpecified;
            }
            set {
                this.statusBhaFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bit run number.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Bit run number.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numBitRun", DataType="nameString")]
        public string numBitRun {
            get {
                return this.numBitRunField;
            }
            set {
                this.numBitRunField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The BHA (drilling string) run number.</summary>
        [System.ComponentModel.DescriptionAttribute("The BHA (drilling string) run number.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numStringRun", DataType="positiveCount")]
        public short numStringRun {
            get {
                return this.numStringRunField;
            }
            set {
                this.numStringRunField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numStringRunSpecified {
            get {
                return this.numStringRunFieldSpecified;
            }
            set {
                this.numStringRunFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reason for trip.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Reason for trip.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reasonTrip", DataType="commentString")]
        public string reasonTrip {
            get {
                return this.reasonTripField;
            }
            set {
                this.reasonTripField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Objective of bottom hole assembly.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Objective of bottom hole assembly.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("objectiveBha", DataType="commentString")]
        public string objectiveBha {
            get {
                return this.objectiveBhaField;
            }
            set {
                this.objectiveBhaField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Drilling parameters.</summary>
        [System.ComponentModel.DescriptionAttribute("Drilling parameters.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("drillingParams", DataType="cs_drillingParams")]
        public cs_drillingParams drillingParams {
            get {
                return this.drillingParamsField;
            }
            set {
                this.drillingParamsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the wellbore.  This uniquely represents  the wellbore referenced by the (possibly non-unique) nameWellbore.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the wellbore.  This uniquely represents  the wellbore refer" +
            "enced by the (possibly non-unique) nameWellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWellbore", DataType="uidString")]
        public string uidWellbore {
            get {
                return this.uidWellboreField;
            }
            set {
                this.uidWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class refNameString {
        
        private string uidRefField;
        
        private string valueField;
        
        /// <remarks/>
        /// <summary>A reference to the unique identifier (uid attribute) in the node referenced by the name value.  This attribute is required within the context of a WITSML server.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A reference to the unique identifier (uid attribute) in the node referenced by th" +
            "e name value.  This attribute is required within the context of a WITSML server." +
            "")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidRef", DataType="refString")]
        public string uidRef {
            get {
                return this.uidRefField;
            }
            set {
                this.uidRefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class anglePerLengthMeasure : abstractMeasure {
        
        private anglePerLengthUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="anglePerLengthUom")]
        public anglePerLengthUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum anglePerLengthUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rad/m")]
        radm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dega/30ft")]
        dega30ft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dega/ft")]
        degaft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dega/100ft")]
        dega100ft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dega/m")]
        degam,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dega/30m")]
        dega30m,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rad/ft")]
        radft,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(wellElevationCoord))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(wellVerticalDepthCoord))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(measuredDepthCoord))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ratioGenericMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(genericMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(volumePerVolumeMeasurePercent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(yAxisAzimuth))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(temperatureSlopeMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(generalMeasureType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(volumePerVolumeMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(volumeFlowRateMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(volumeMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(velocityMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(timeMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(thermodynamicTemperatureMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(specificVolumeMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(relativePowerMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(pressureMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(powerMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(planeAngleMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(perLengthMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(momentOfForceMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(massPerLengthMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(massMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(massConcentrationMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(magneticInductionMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(magneticFieldStrengthMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(lengthPerLengthMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(lengthMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(illuminanceMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(frequencyMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(forcePerVolumeMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(forcePerLengthMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(forceMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(equivalentPerMassMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(energyPerAreaMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(electricPotentialMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(electricCurrentMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(dynamicViscosityMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(dimensionlessMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(densityMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(areaPerAreaMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(areaMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(anglePerTimeMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(anglePerLengthMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(accelerationLinearMeasure))]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public abstract partial class abstractMeasure {
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class wellElevationCoord : abstractMeasure {
        
        private WellVerticalCoordinateUom uomField;
        
        private string datumField;
        
        /// <remarks/>
        /// <summary>The unit of measure of the quantity value. If not given then the default unit of measure of the explicitly or implicitly given datum must be assumed.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The unit of measure of the quantity value. If not given then the default unit of " +
            "measure of the explicitly or implicitly given datum must be assumed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="WellVerticalCoordinateUom")]
        public WellVerticalCoordinateUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the reference datum for this coordinate  value as defined in WellDatum.  If not given then the default WellDatum must be assumed.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A pointer to the reference datum for this coordinate  value as defined in WellDat" +
            "um.  If not given then the default WellDatum must be assumed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("datum", DataType="refWellDatum")]
        public string datum {
            get {
                return this.datumField;
            }
            set {
                this.datumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum WellVerticalCoordinateUom {
        
        /// <remarks/>
        m,
        
        /// <remarks/>
        ft,
        
        /// <remarks/>
        ftUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ftBr(65)")]
        ftBr65,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class wellVerticalDepthCoord : abstractMeasure {
        
        private WellVerticalCoordinateUom uomField;
        
        private string datumField;
        
        /// <remarks/>
        /// <summary>The unit of measure of the quantity value.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The unit of measure of the quantity value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="WellVerticalCoordinateUom")]
        public WellVerticalCoordinateUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the reference datum for this coordinate  value as defined in WellDatum.  If not given then the default WellDatum must be assumed.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A pointer to the reference datum for this coordinate  value as defined in WellDat" +
            "um.  If not given then the default WellDatum must be assumed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("datum", DataType="refWellDatum")]
        public string datum {
            get {
                return this.datumField;
            }
            set {
                this.datumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class measuredDepthCoord : abstractMeasure {
        
        private MeasuredDepthUom uomField;
        
        private string datumField;
        
        /// <remarks/>
        /// <summary>The unit of measure of the quantity value.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The unit of measure of the quantity value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="MeasuredDepthUom")]
        public MeasuredDepthUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the reference datum for this coordinate  value as defined in WellDatum. This value is assumed to match the uid value in a WellDatum. If not given then the default WellDatum must be assumed.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A pointer to the reference datum for this coordinate  value as defined in WellDat" +
            "um. This value is assumed to match the uid value in a WellDatum. If not given th" +
            "en the default WellDatum must be assumed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("datum", DataType="refWellDatum")]
        public string datum {
            get {
                return this.datumField;
            }
            set {
                this.datumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum MeasuredDepthUom {
        
        /// <remarks/>
        m,
        
        /// <remarks/>
        ft,
        
        /// <remarks/>
        ftUS,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class ratioGenericMeasure : abstractMeasure {
        
        private string uomField;
        
        private double numeratorField;
        
        private bool numeratorFieldSpecified;
        
        private double denominatorField;
        
        private bool denominatorFieldSpecified;
        
        /// <remarks/>
        /// <summary>The unit of measure for the quantity. If for some reason a uom is not appropriate for the quantity, a unit of "Euc" should be used.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(24)]
        [System.ComponentModel.DescriptionAttribute("The unit of measure for the quantity. If for some reason a uom is not appropriate" +
            " for the quantity, a unit of \"Euc\" should be used.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="uomString")]
        public string uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numerator", DataType="unitlessQuantity")]
        public double numerator {
            get {
                return this.numeratorField;
            }
            set {
                this.numeratorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numeratorSpecified {
            get {
                return this.numeratorFieldSpecified;
            }
            set {
                this.numeratorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("denominator", DataType="unitlessQuantity")]
        public double denominator {
            get {
                return this.denominatorField;
            }
            set {
                this.denominatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool denominatorSpecified {
            get {
                return this.denominatorFieldSpecified;
            }
            set {
                this.denominatorFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class genericMeasure : abstractMeasure {
        
        private string uomField;
        
        /// <remarks/>
        /// <summary>The unit of measure for the quantity. The uom is mandatory unless the value represents a unitless quantity.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(24)]
        [System.ComponentModel.DescriptionAttribute("The unit of measure for the quantity. The uom is mandatory unless the value repre" +
            "sents a unitless quantity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="uomString")]
        public string uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class volumePerVolumeMeasurePercent : abstractMeasure {
        
        private PercentUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="PercentUom")]
        public PercentUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum PercentUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("%")]
        Item,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class yAxisAzimuth : abstractMeasure {
        
        private planeAngleUom uomField;
        
        private AziRef northDirectionField;
        
        private bool northDirectionFieldSpecified;
        
        /// <remarks/>
        /// <summary>The unit of measure of the azimuth value.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The unit of measure of the azimuth value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="planeAngleUom")]
        public planeAngleUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Specifies the direction to be considered North for the y axis.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute("Specifies the direction to be considered North for the y axis.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("northDirection", DataType="AziRef")]
        public AziRef northDirection {
            get {
                return this.northDirectionField;
            }
            set {
                this.northDirectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool northDirectionSpecified {
            get {
                return this.northDirectionFieldSpecified;
            }
            set {
                this.northDirectionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum planeAngleUom {
        
        /// <remarks/>
        rad,
        
        /// <remarks/>
        c,
        
        /// <remarks/>
        ccgr,
        
        /// <remarks/>
        cgr,
        
        /// <remarks/>
        dega,
        
        /// <remarks/>
        gon,
        
        /// <remarks/>
        gr,
        
        /// <remarks/>
        Grad,
        
        /// <remarks/>
        krad,
        
        /// <remarks/>
        mila,
        
        /// <remarks/>
        mina,
        
        /// <remarks/>
        mrad,
        
        /// <remarks/>
        Mrad,
        
        /// <remarks/>
        mseca,
        
        /// <remarks/>
        seca,
        
        /// <remarks/>
        urad,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class temperatureSlopeMeasure : abstractMeasure {
        
        private string uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(24)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="uomString")]
        public string uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class generalMeasureType : abstractMeasure {
        
        private string uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(24)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="uomString")]
        public string uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class volumePerVolumeMeasure : abstractMeasure {
        
        private volumePerVolumeUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="volumePerVolumeUom")]
        public volumePerVolumeUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum volumePerVolumeUom {
        
        /// <remarks/>
        Euc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("%")]
        Item,
        
        /// <remarks/>
        permil,
        
        /// <remarks/>
        ppdk,
        
        /// <remarks/>
        ppk,
        
        /// <remarks/>
        ppm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/acre.ft")]
        bblacreft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/bbl")]
        bblbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/ft3")]
        bblft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/100bbl")]
        bbl100bbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/k(ft3)")]
        bblkft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/M(ft3)")]
        bblMft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm3/cm3")]
        cm3cm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm3/m3")]
        cm3m3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dm3/m3")]
        dm3m3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/bbl")]
        ft3bbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/ft3")]
        ft3ft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUS/kgalUS")]
        galUSkgalUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUK/kgalUK")]
        galUKkgalUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUK/ft3")]
        galUKft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUK/Mbbl")]
        galUKMbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUS/bbl")]
        galUSbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUS/10bbl")]
        galUS10bbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUS/ft3")]
        galUSft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUS/Mbbl")]
        galUSMbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000ft3/bbl")]
        Item1000ft3bbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ksm3/sm3")]
        ksm3sm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/10bbl")]
        L10bbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/m3")]
        Lm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/ha.m")]
        m3ham,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/m3")]
        m3m3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("M(ft3)/acre.ft")]
        Mft3acreft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mL/galUK")]
        mLgalUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mL/galUS")]
        mLgalUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mL/mL")]
        mLmL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MMbbl/acre.ft")]
        MMbblacreft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MMscf60/stb60")]
        MMscf60stb60,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mscf60/stb60")]
        Mscf60stb60,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ptUK/Mbbl")]
        ptUKMbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ptUS/10bbl")]
        ptUS10bbl,
        
        /// <remarks/>
        pu,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("scm15/stb60")]
        scm15stb60,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sm3/ksm3")]
        sm3ksm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("sm3/sm3")]
        sm3sm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stb60/MMscf60")]
        stb60MMscf60,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stb60/MMscm15")]
        stb60MMscm15,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stb60/Mscf60")]
        stb60Mscf60,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stb60/Mscm15")]
        stb60Mscm15,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("stb60/scm15")]
        stb60scm15,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class volumeFlowRateMeasure : abstractMeasure {
        
        private volumeFlowRateUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="volumeFlowRateUom")]
        public volumeFlowRateUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum volumeFlowRateUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/s")]
        m3s,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/d")]
        bbld,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/hr")]
        bblhr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/min")]
        bblmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm3/30min")]
        cm330min,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm3/h")]
        cm3h,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm3/min")]
        cm3min,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm3/s")]
        cm3s,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dm3/s")]
        dm3s,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/d")]
        ft3d,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/h")]
        ft3h,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/min")]
        ft3min,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/s")]
        ft3s,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUK/d")]
        galUKd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUK/hr")]
        galUKhr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUK/min")]
        galUKmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUS/d")]
        galUSd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUS/hr")]
        galUShr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUS/min")]
        galUSmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kbbl/d")]
        kbbld,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000ft3/d")]
        Item1000ft3d,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000m3/d")]
        Item1000m3d,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000m3/h")]
        Item1000m3h,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/h")]
        Lh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/min")]
        Lmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/s")]
        Ls,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/d")]
        m3d,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/h")]
        m3h,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/min")]
        m3min,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mbbl/d")]
        Mbbld,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("M(ft3)/d")]
        Mft3d,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("M(m3)/d")]
        Mm3d,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class volumeMeasure : abstractMeasure {
        
        private volumeUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="volumeUom")]
        public volumeUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum volumeUom {
        
        /// <remarks/>
        m3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("acre.ft")]
        acreft,
        
        /// <remarks/>
        bbl,
        
        /// <remarks/>
        bcf,
        
        /// <remarks/>
        cm3,
        
        /// <remarks/>
        dm3,
        
        /// <remarks/>
        flozUK,
        
        /// <remarks/>
        flozUS,
        
        /// <remarks/>
        ft3,
        
        /// <remarks/>
        galUK,
        
        /// <remarks/>
        galUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ha.m")]
        ham,
        
        /// <remarks/>
        hL,
        
        /// <remarks/>
        in3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1000ft3")]
        Item1000ft3,
        
        /// <remarks/>
        km3,
        
        /// <remarks/>
        L,
        
        /// <remarks/>
        Mbbl,
        
        /// <remarks/>
        Mcf,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("M(ft3)")]
        Mft3,
        
        /// <remarks/>
        mi3,
        
        /// <remarks/>
        mL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("M(m3)")]
        Mm3,
        
        /// <remarks/>
        mm3,
        
        /// <remarks/>
        MMbbl,
        
        /// <remarks/>
        ptUK,
        
        /// <remarks/>
        ptUS,
        
        /// <remarks/>
        qtUK,
        
        /// <remarks/>
        qtUS,
        
        /// <remarks/>
        tcf,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("um2.m")]
        um2m,
        
        /// <remarks/>
        yd3,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class velocityMeasure : abstractMeasure {
        
        private velocityUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="velocityUom")]
        public velocityUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum velocityUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/s")]
        ms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm/a")]
        cma,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm/s")]
        cms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dm/s")]
        dms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/d")]
        ftd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/h")]
        fth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/min")]
        ftmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/ms")]
        ftms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/s")]
        fts,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/us")]
        ftus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in/a")]
        ina,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in/min")]
        inmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in/s")]
        ins,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kft/h")]
        kfth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kft/s")]
        kfts,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("km/h")]
        kmh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("km/s")]
        kms,
        
        /// <remarks/>
        knot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/d")]
        md,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/h")]
        mh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/min")]
        mmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/ms")]
        mms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mi/h")]
        mih,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mil/yr")]
        milyr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mm/a")]
        mma,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mm/s")]
        mms1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("nm/s")]
        nms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("um/s")]
        ums,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class timeMeasure : abstractMeasure {
        
        private timeUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="timeUom")]
        public timeUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum timeUom {
        
        /// <remarks/>
        s,
        
        /// <remarks/>
        a,
        
        /// <remarks/>
        cs,
        
        /// <remarks/>
        d,
        
        /// <remarks/>
        Ga,
        
        /// <remarks/>
        h,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("100s")]
        Item100s,
        
        /// <remarks/>
        Ma,
        
        /// <remarks/>
        min,
        
        /// <remarks/>
        ms,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ms/2")]
        ms2,
        
        /// <remarks/>
        ns,
        
        /// <remarks/>
        ps,
        
        /// <remarks/>
        us,
        
        /// <remarks/>
        wk,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("100ka")]
        Item100ka,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class thermodynamicTemperatureMeasure : abstractMeasure {
        
        private thermodynamicTemperatureUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="thermodynamicTemperatureUom")]
        public thermodynamicTemperatureUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum thermodynamicTemperatureUom {
        
        /// <remarks/>
        K,
        
        /// <remarks/>
        degC,
        
        /// <remarks/>
        degF,
        
        /// <remarks/>
        degR,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class specificVolumeMeasure : abstractMeasure {
        
        private specificVolumeUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="specificVolumeUom")]
        public specificVolumeUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum specificVolumeUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/kg")]
        m3kg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/tonUK")]
        bbltonUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bbl/tonUS")]
        bbltonUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm3/g")]
        cm3g,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dm3/kg")]
        dm3kg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dm3/t")]
        dm3t,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/kg")]
        ft3kg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/lbm")]
        ft3lbm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft3/sack94")]
        ft3sack94,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUS/sack94")]
        galUSsack94,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUK/lbm")]
        galUKlbm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUS/lbm")]
        galUSlbm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUS/tonUK")]
        galUStonUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("galUS/tonUS")]
        galUStonUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/100kg")]
        L100kg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/kg")]
        Lkg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/t")]
        Lt,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("L/tonUK")]
        LtonUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/g")]
        m3g,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/t")]
        m3t,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/tonUK")]
        m3tonUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m3/tonUS")]
        m3tonUS,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class relativePowerMeasure : abstractMeasure {
        
        private relativePowerUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="relativePowerUom")]
        public relativePowerUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum relativePowerUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("%")]
        Item,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Btu/bhp.hr")]
        Btubhphr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("W/kW")]
        WkW,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("W/W")]
        WW,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class pressureMeasure : abstractMeasure {
        
        private pressureUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="pressureUom")]
        public pressureUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum pressureUom {
        
        /// <remarks/>
        Pa,
        
        /// <remarks/>
        at,
        
        /// <remarks/>
        atm,
        
        /// <remarks/>
        bar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cmH2O(4degC)")]
        cmH2O4degC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dyne/cm2")]
        dynecm2,
        
        /// <remarks/>
        GPa,
        
        /// <remarks/>
        hbar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("inH2O(39.2F)")]
        inH2O392F,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("inH2O(60F)")]
        inH2O60F,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("inHg(32F)")]
        inHg32F,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("inHg(60F)")]
        inHg60F,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kgf/cm2")]
        kgfcm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kgf/mm2")]
        kgfmm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kN/m2")]
        kNm2,
        
        /// <remarks/>
        kPa,
        
        /// <remarks/>
        kpsi,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf/ft2")]
        lbfft2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf/100ft2")]
        lbf100ft2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf/in2")]
        lbfin2,
        
        /// <remarks/>
        mbar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mmHg(0C)")]
        mmHg0C,
        
        /// <remarks/>
        mPa,
        
        /// <remarks/>
        MPa,
        
        /// <remarks/>
        Mpsi,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("N/m2")]
        Nm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("N/mm2")]
        Nmm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Pa(g)")]
        Pag,
        
        /// <remarks/>
        pPa,
        
        /// <remarks/>
        psi,
        
        /// <remarks/>
        psia,
        
        /// <remarks/>
        psig,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonfUS/ft2")]
        tonfUSft2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonfUS/in2")]
        tonfUSin2,
        
        /// <remarks/>
        torr,
        
        /// <remarks/>
        ubar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("umHg(0C)")]
        umHg0C,
        
        /// <remarks/>
        uPa,
        
        /// <remarks/>
        upsi,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class powerMeasure : abstractMeasure {
        
        private powerUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="powerUom")]
        public powerUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum powerUom {
        
        /// <remarks/>
        W,
        
        /// <remarks/>
        ch,
        
        /// <remarks/>
        CV,
        
        /// <remarks/>
        ehp,
        
        /// <remarks/>
        GW,
        
        /// <remarks/>
        hhp,
        
        /// <remarks/>
        hp,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kcal/h")]
        kcalh,
        
        /// <remarks/>
        kW,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MJ/a")]
        MJa,
        
        /// <remarks/>
        MW,
        
        /// <remarks/>
        mW,
        
        /// <remarks/>
        nW,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ton of refrig")]
        tonofrefrig,
        
        /// <remarks/>
        TW,
        
        /// <remarks/>
        uW,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class planeAngleMeasure : abstractMeasure {
        
        private planeAngleUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="planeAngleUom")]
        public planeAngleUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class perLengthMeasure : abstractMeasure {
        
        private perLengthUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="perLengthUom")]
        public perLengthUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum perLengthUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/m")]
        Item1m,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/angstrom")]
        Item1angstrom,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/cm")]
        Item1cm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/ft")]
        Item1ft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/in")]
        Item1in,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/mi")]
        Item1mi,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/mm")]
        Item1mm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/nm")]
        Item1nm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/yd")]
        Item1yd,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class momentOfForceMeasure : abstractMeasure {
        
        private momentOfForceUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="momentOfForceUom")]
        public momentOfForceUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum momentOfForceUom {
        
        /// <remarks/>
        J,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dN.m")]
        dNm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("daN.m")]
        daNm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft.lbf")]
        ftlbf,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kft.lbf")]
        kftlbf,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kgf.m")]
        kgfm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kN.m")]
        kNm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf.ft")]
        lbfft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf.in")]
        lbfin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm.ft2/s2")]
        lbmft2s2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("N.m")]
        Nm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pdl.ft")]
        pdlft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonfUS.ft")]
        tonfUSft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonfUS.mi")]
        tonfUSmi,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class massPerLengthMeasure : abstractMeasure {
        
        private massPerLengthUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="massPerLengthUom")]
        public massPerLengthUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum massPerLengthUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg/m")]
        kgm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("klbm/in")]
        klbmin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/ft")]
        lbmft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mg/in")]
        Mgin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg.m/cm2")]
        kgmcm2,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class massMeasure : abstractMeasure {
        
        private massUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="massUom")]
        public massUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum massUom {
        
        /// <remarks/>
        kg,
        
        /// <remarks/>
        ag,
        
        /// <remarks/>
        ct,
        
        /// <remarks/>
        cwtUK,
        
        /// <remarks/>
        cwtUS,
        
        /// <remarks/>
        g,
        
        /// <remarks/>
        grain,
        
        /// <remarks/>
        klbm,
        
        /// <remarks/>
        lbm,
        
        /// <remarks/>
        Mg,
        
        /// <remarks/>
        mg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oz(av)")]
        ozav,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("oz(troy)")]
        oztroy,
        
        /// <remarks/>
        ozm,
        
        /// <remarks/>
        sack94,
        
        /// <remarks/>
        t,
        
        /// <remarks/>
        tonUK,
        
        /// <remarks/>
        tonUS,
        
        /// <remarks/>
        ug,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class massConcentrationMeasure : abstractMeasure {
        
        private massConcentrationUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="massConcentrationUom")]
        public massConcentrationUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum massConcentrationUom {
        
        /// <remarks/>
        Euc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("%")]
        Item,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("g/kg")]
        gkg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg/kg")]
        kgkg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg/sack94")]
        kgsack94,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mg/kg")]
        mgkg,
        
        /// <remarks/>
        permil,
        
        /// <remarks/>
        ppdk,
        
        /// <remarks/>
        ppk,
        
        /// <remarks/>
        ppm,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class magneticInductionMeasure : abstractMeasure {
        
        private magneticInductionUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="magneticInductionUom")]
        public magneticInductionUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum magneticInductionUom {
        
        /// <remarks/>
        T,
        
        /// <remarks/>
        gauss,
        
        /// <remarks/>
        mT,
        
        /// <remarks/>
        mgauss,
        
        /// <remarks/>
        nT,
        
        /// <remarks/>
        uT,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class magneticFieldStrengthMeasure : abstractMeasure {
        
        private magneticFieldStrengthUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="magneticFieldStrengthUom")]
        public magneticFieldStrengthUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum magneticFieldStrengthUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("A/m")]
        Am,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("A/mm")]
        Amm,
        
        /// <remarks/>
        gamma,
        
        /// <remarks/>
        Oe,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class lengthPerLengthMeasure : abstractMeasure {
        
        private lengthPerLengthUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="lengthPerLengthUom")]
        public lengthPerLengthUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum lengthPerLengthUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("%")]
        Item,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/100ft")]
        ft100ft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/ft")]
        ftft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/in")]
        ftin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/m")]
        ftm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/mi")]
        ftmi,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("km/cm")]
        kmcm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/30m")]
        m30m,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/cm")]
        mcm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/km")]
        mkm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/m")]
        mm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mi/in")]
        miin,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class lengthMeasure : abstractMeasure {
        
        private lengthUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="lengthUom")]
        public lengthUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum lengthUom {
        
        /// <remarks/>
        m,
        
        /// <remarks/>
        angstrom,
        
        /// <remarks/>
        chBnA,
        
        /// <remarks/>
        chBnB,
        
        /// <remarks/>
        chCla,
        
        /// <remarks/>
        chSe,
        
        /// <remarks/>
        chUS,
        
        /// <remarks/>
        cm,
        
        /// <remarks/>
        dm,
        
        /// <remarks/>
        fathom,
        
        /// <remarks/>
        fm,
        
        /// <remarks/>
        ft,
        
        /// <remarks/>
        ftBnA,
        
        /// <remarks/>
        ftBnB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ftBr(65)")]
        ftBr65,
        
        /// <remarks/>
        ftCla,
        
        /// <remarks/>
        ftGC,
        
        /// <remarks/>
        ftInd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ftInd(37)")]
        ftInd37,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ftInd(62)")]
        ftInd62,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ftInd(75)")]
        ftInd75,
        
        /// <remarks/>
        ftMA,
        
        /// <remarks/>
        ftSe,
        
        /// <remarks/>
        ftUS,
        
        /// <remarks/>
        @in,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in/10")]
        in10,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in/16")]
        in16,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in/32")]
        in32,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in/64")]
        in64,
        
        /// <remarks/>
        inUS,
        
        /// <remarks/>
        km,
        
        /// <remarks/>
        lkBnA,
        
        /// <remarks/>
        lkBnB,
        
        /// <remarks/>
        lkCla,
        
        /// <remarks/>
        lkSe,
        
        /// <remarks/>
        lkUS,
        
        /// <remarks/>
        mGer,
        
        /// <remarks/>
        mi,
        
        /// <remarks/>
        mil,
        
        /// <remarks/>
        miUS,
        
        /// <remarks/>
        mm,
        
        /// <remarks/>
        Mm,
        
        /// <remarks/>
        nautmi,
        
        /// <remarks/>
        nm,
        
        /// <remarks/>
        pm,
        
        /// <remarks/>
        um,
        
        /// <remarks/>
        yd,
        
        /// <remarks/>
        ydBnA,
        
        /// <remarks/>
        ydBnB,
        
        /// <remarks/>
        ydCla,
        
        /// <remarks/>
        ydIm,
        
        /// <remarks/>
        ydInd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ydInd(37)")]
        ydInd37,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ydInd(62)")]
        ydInd62,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ydInd(75)")]
        ydInd75,
        
        /// <remarks/>
        ydSe,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class illuminanceMeasure : abstractMeasure {
        
        private illuminanceUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="illuminanceUom")]
        public illuminanceUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum illuminanceUom {
        
        /// <remarks/>
        lx,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lm/m2")]
        lmm2,
        
        /// <remarks/>
        footcandle,
        
        /// <remarks/>
        klx,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class frequencyMeasure : abstractMeasure {
        
        private frequencyUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="frequencyUom")]
        public frequencyUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum frequencyUom {
        
        /// <remarks/>
        Hz,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("c/s")]
        cs,
        
        /// <remarks/>
        GHz,
        
        /// <remarks/>
        kHz,
        
        /// <remarks/>
        mHz,
        
        /// <remarks/>
        MHz,
        
        /// <remarks/>
        uHz,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/s")]
        Item1s,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/a")]
        Item1a,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/d")]
        Item1d,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/h")]
        Item1h,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/min")]
        Item1min,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1/wk")]
        Item1wk,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kEuc/s")]
        kEucs,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class forcePerVolumeMeasure : abstractMeasure {
        
        private forcePerVolumeUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="forcePerVolumeUom")]
        public forcePerVolumeUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum forcePerVolumeUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("N/m3")]
        Nm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("atm/100m")]
        atm100m,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("atm/m")]
        atmm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bar/km")]
        barkm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("bar/m")]
        barm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("GPa/cm")]
        GPacm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kPa/100m")]
        kPa100m,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kPa/m")]
        kPam,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf/ft3")]
        lbfft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf/galUS")]
        lbfgalUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MPa/m")]
        MPam,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("psi/ft")]
        psift,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("psi/100ft")]
        psi100ft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("psi/kft")]
        psikft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("psi/m")]
        psim,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Pa/m")]
        Pam,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("atm/ft")]
        atmft,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class forcePerLengthMeasure : abstractMeasure {
        
        private forcePerLengthUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="forcePerLengthUom")]
        public forcePerLengthUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum forcePerLengthUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("N/30m")]
        N30m,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("N/m")]
        Nm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dyne/cm")]
        dynecm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kN/m")]
        kNm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kgf/cm")]
        kgfcm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf/100ft")]
        lbf100ft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf/30m")]
        lbf30m,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf/ft")]
        lbfft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf/in")]
        lbfin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mN/km")]
        mNkm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mN/m")]
        mNm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pdl/cm")]
        pdlcm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonfUK/ft")]
        tonfUKft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("tonfUS/ft")]
        tonfUSft,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class forceMeasure : abstractMeasure {
        
        private forceUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="forceUom")]
        public forceUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum forceUom {
        
        /// <remarks/>
        N,
        
        /// <remarks/>
        daN,
        
        /// <remarks/>
        dyne,
        
        /// <remarks/>
        gf,
        
        /// <remarks/>
        kdyne,
        
        /// <remarks/>
        kgf,
        
        /// <remarks/>
        klbf,
        
        /// <remarks/>
        kN,
        
        /// <remarks/>
        lbf,
        
        /// <remarks/>
        Mgf,
        
        /// <remarks/>
        mN,
        
        /// <remarks/>
        MN,
        
        /// <remarks/>
        ozf,
        
        /// <remarks/>
        pdl,
        
        /// <remarks/>
        tonfUK,
        
        /// <remarks/>
        tonfUS,
        
        /// <remarks/>
        uN,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class equivalentPerMassMeasure : abstractMeasure {
        
        private equivalentPerMassUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="equivalentPerMassUom")]
        public equivalentPerMassUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum equivalentPerMassUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("eq/kg")]
        eqkg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("meq/g")]
        meqg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("meq/100g")]
        meq100g,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class energyPerAreaMeasure : abstractMeasure {
        
        private energyPerAreaUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="energyPerAreaUom")]
        public energyPerAreaUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum energyPerAreaUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("N/m")]
        Nm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("erg/cm2")]
        ergcm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("J/cm2")]
        Jcm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("J/m2")]
        Jm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kgf.m/cm2")]
        kgfmcm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf.ft/in2")]
        lbfftin2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mJ/cm2")]
        mJcm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mJ/m2")]
        mJm2,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class electricPotentialMeasure : abstractMeasure {
        
        private electricPotentialUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="electricPotentialUom")]
        public electricPotentialUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum electricPotentialUom {
        
        /// <remarks/>
        V,
        
        /// <remarks/>
        kV,
        
        /// <remarks/>
        mV,
        
        /// <remarks/>
        MV,
        
        /// <remarks/>
        uV,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class electricCurrentMeasure : abstractMeasure {
        
        private electricCurrentUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="electricCurrentUom")]
        public electricCurrentUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum electricCurrentUom {
        
        /// <remarks/>
        A,
        
        /// <remarks/>
        MA,
        
        /// <remarks/>
        kA,
        
        /// <remarks/>
        mA,
        
        /// <remarks/>
        nA,
        
        /// <remarks/>
        pA,
        
        /// <remarks/>
        uA,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class dynamicViscosityMeasure : abstractMeasure {
        
        private dynamicViscosityUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="dynamicViscosityUom")]
        public dynamicViscosityUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum dynamicViscosityUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Pa.s")]
        Pas,
        
        /// <remarks/>
        cP,
        
        /// <remarks/>
        P,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("psi.s")]
        psis,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dyne.s/cm2")]
        dynescm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kgf.s/m2")]
        kgfsm2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf.s/ft2")]
        lbfsft2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbf.s/in2")]
        lbfsin2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mPa.s")]
        mPas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("N.s/m2")]
        Nsm2,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class dimensionlessMeasure : abstractMeasure {
        
        private dimensionlessUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="dimensionlessUom")]
        public dimensionlessUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum dimensionlessUom {
        
        /// <remarks/>
        Euc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("%")]
        Item,
        
        /// <remarks/>
        cEuc,
        
        /// <remarks/>
        mEuc,
        
        /// <remarks/>
        nEuc,
        
        /// <remarks/>
        uEuc,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class densityMeasure : abstractMeasure {
        
        private densityUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="densityUom")]
        public densityUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum densityUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg/m3")]
        kgm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("10Mg/m3")]
        Item10Mgm3,
        
        /// <remarks/>
        dAPI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("g/cm3")]
        gcm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("g/dm3")]
        gdm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("g/galUK")]
        ggalUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("g/galUS")]
        ggalUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("g/L")]
        gL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("g/m3")]
        gm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("grain/ft3")]
        grainft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("grain/galUS")]
        graingalUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("grain/100ft3")]
        grain100ft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg/dm3")]
        kgdm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg/L")]
        kgL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mg/m3")]
        Mgm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/10bbl")]
        lbm10bbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/bbl")]
        lbmbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/ft3")]
        lbmft3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/galUK")]
        lbmgalUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/1000galUK")]
        lbm1000galUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/galUS")]
        lbmgalUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/1000galUS")]
        lbm1000galUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/in3")]
        lbmin3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("lbm/Mbbl")]
        lbmMbbl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mg/dm3")]
        mgdm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mg/galUS")]
        mggalUS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mg/L")]
        mgL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mg/m3")]
        mgm3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ug/cm3")]
        ugcm3,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class areaPerAreaMeasure : abstractMeasure {
        
        private areaPerAreaUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="areaPerAreaUom")]
        public areaPerAreaUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum areaPerAreaUom {
        
        /// <remarks/>
        Euc,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("%")]
        Item,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in2/ft2")]
        in2ft2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in2/in2")]
        in2in2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m2/m2")]
        m2m2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mm2/mm2")]
        mm2mm2,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class areaMeasure : abstractMeasure {
        
        private areaUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="areaUom")]
        public areaUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum areaUom {
        
        /// <remarks/>
        m2,
        
        /// <remarks/>
        acre,
        
        /// <remarks/>
        b,
        
        /// <remarks/>
        cm2,
        
        /// <remarks/>
        ft2,
        
        /// <remarks/>
        ha,
        
        /// <remarks/>
        in2,
        
        /// <remarks/>
        km2,
        
        /// <remarks/>
        mi2,
        
        /// <remarks/>
        miUS2,
        
        /// <remarks/>
        mm2,
        
        /// <remarks/>
        um2,
        
        /// <remarks/>
        yd2,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class anglePerTimeMeasure : abstractMeasure {
        
        private anglePerTimeUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="anglePerTimeUom")]
        public anglePerTimeUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum anglePerTimeUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rad/s")]
        rads,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("c/s")]
        cs,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dega/h")]
        degah,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dega/min")]
        degamin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("dega/s")]
        degas,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("rev/s")]
        revs,
        
        /// <remarks/>
        rpm,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class accelerationLinearMeasure : abstractMeasure {
        
        private accelerationLinearUom uomField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="accelerationLinearUom")]
        public accelerationLinearUom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public enum accelerationLinearUom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m/s2")]
        ms2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cm/s2")]
        cms2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft/s2")]
        fts2,
        
        /// <remarks/>
        Gal,
        
        /// <remarks/>
        mgn,
        
        /// <remarks/>
        gn,
        
        /// <remarks/>
        mGal,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_drillingParams {
        
        private timeMeasure eTimOpBitField;
        
        private measuredDepthCoord mdHoleStartField;
        
        private measuredDepthCoord mdHoleStopField;
        
        private refNameString tubularField;
        
        private forceMeasure hkldRotField;
        
        private forceMeasure overPullField;
        
        private forceMeasure slackOffField;
        
        private forceMeasure hkldUpField;
        
        private forceMeasure hkldDnField;
        
        private momentOfForceMeasure tqOnBotAvField;
        
        private momentOfForceMeasure tqOnBotMxField;
        
        private momentOfForceMeasure tqOnBotMnField;
        
        private momentOfForceMeasure tqOffBotAvField;
        
        private momentOfForceMeasure tqDhAvField;
        
        private forceMeasure wtAboveJarField;
        
        private forceMeasure wtBelowJarField;
        
        private densityMeasure wtMudField;
        
        private volumeFlowRateMeasure flowratePumpField;
        
        private powerMeasure powBitField;
        
        private velocityMeasure velNozzleAvField;
        
        private pressureMeasure presDropBitField;
        
        private timeMeasure cTimHoldField;
        
        private timeMeasure cTimSteeringField;
        
        private timeMeasure cTimDrillRotField;
        
        private timeMeasure cTimDrillSlidField;
        
        private timeMeasure cTimCircField;
        
        private timeMeasure cTimReamField;
        
        private lengthMeasure distDrillRotField;
        
        private lengthMeasure distDrillSlidField;
        
        private lengthMeasure distReamField;
        
        private lengthMeasure distHoldField;
        
        private lengthMeasure distSteeringField;
        
        private anglePerTimeMeasure rpmAvField;
        
        private anglePerTimeMeasure rpmMxField;
        
        private anglePerTimeMeasure rpmMnField;
        
        private anglePerTimeMeasure rpmAvDhField;
        
        private velocityMeasure ropAvField;
        
        private velocityMeasure ropMxField;
        
        private velocityMeasure ropMnField;
        
        private forceMeasure wobAvField;
        
        private forceMeasure wobMxField;
        
        private forceMeasure wobMnField;
        
        private forceMeasure wobAvDhField;
        
        private string reasonTripField;
        
        private string objectiveBhaField;
        
        private planeAngleMeasure aziTopField;
        
        private planeAngleMeasure aziBottomField;
        
        private planeAngleMeasure inclStartField;
        
        private planeAngleMeasure inclMxField;
        
        private planeAngleMeasure inclMnField;
        
        private planeAngleMeasure inclStopField;
        
        private thermodynamicTemperatureMeasure tempMudDhMxField;
        
        private pressureMeasure presPumpAvField;
        
        private volumeFlowRateMeasure flowrateBitField;
        
        private string commentsField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Operating time spent by bit for run.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Operating time spent by bit for run.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eTimOpBit", DataType="timeMeasure")]
        public timeMeasure eTimOpBit {
            get {
                return this.eTimOpBitField;
            }
            set {
                this.eTimOpBitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth at start.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth at start.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdHoleStart", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdHoleStart {
            get {
                return this.mdHoleStartField;
            }
            set {
                this.mdHoleStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth at stop.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Measured depth at stop.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdHoleStop", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdHoleStop {
            get {
                return this.mdHoleStopField;
            }
            set {
                this.mdHoleStopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the tubular assembly.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the tubular assembly.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tubular", DataType="refNameString")]
        public refNameString tubular {
            get {
                return this.tubularField;
            }
            set {
                this.tubularField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hookload - rotating.</summary>
        [System.ComponentModel.DescriptionAttribute("Hookload - rotating.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("hkldRot", DataType="forceMeasure")]
        public forceMeasure hkldRot {
            get {
                return this.hkldRotField;
            }
            set {
                this.hkldRotField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>hkldUp-hkldRot.</summary>
        [System.ComponentModel.DescriptionAttribute("hkldUp-hkldRot.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("overPull", DataType="forceMeasure")]
        public forceMeasure overPull {
            get {
                return this.overPullField;
            }
            set {
                this.overPullField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>hkldRot-hkldDown.</summary>
        [System.ComponentModel.DescriptionAttribute("hkldRot-hkldDown.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("slackOff", DataType="forceMeasure")]
        public forceMeasure slackOff {
            get {
                return this.slackOffField;
            }
            set {
                this.slackOffField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hookload - string moving up.</summary>
        [System.ComponentModel.DescriptionAttribute("Hookload - string moving up.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("hkldUp", DataType="forceMeasure")]
        public forceMeasure hkldUp {
            get {
                return this.hkldUpField;
            }
            set {
                this.hkldUpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hookload - string moving down.</summary>
        [System.ComponentModel.DescriptionAttribute("Hookload - string moving down.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("hkldDn", DataType="forceMeasure")]
        public forceMeasure hkldDn {
            get {
                return this.hkldDnField;
            }
            set {
                this.hkldDnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average Torque - on bottom.</summary>
        [System.ComponentModel.DescriptionAttribute("Average Torque - on bottom.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tqOnBotAv", DataType="momentOfForceMeasure")]
        public momentOfForceMeasure tqOnBotAv {
            get {
                return this.tqOnBotAvField;
            }
            set {
                this.tqOnBotAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum torque - on bottom.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum torque - on bottom.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tqOnBotMx", DataType="momentOfForceMeasure")]
        public momentOfForceMeasure tqOnBotMx {
            get {
                return this.tqOnBotMxField;
            }
            set {
                this.tqOnBotMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum torque - on bottom.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum torque - on bottom.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tqOnBotMn", DataType="momentOfForceMeasure")]
        public momentOfForceMeasure tqOnBotMn {
            get {
                return this.tqOnBotMnField;
            }
            set {
                this.tqOnBotMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average torque - off bottom.</summary>
        [System.ComponentModel.DescriptionAttribute("Average torque - off bottom.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tqOffBotAv", DataType="momentOfForceMeasure")]
        public momentOfForceMeasure tqOffBotAv {
            get {
                return this.tqOffBotAvField;
            }
            set {
                this.tqOffBotAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average torque - downhole.</summary>
        [System.ComponentModel.DescriptionAttribute("Average torque - downhole.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tqDhAv", DataType="momentOfForceMeasure")]
        public momentOfForceMeasure tqDhAv {
            get {
                return this.tqDhAvField;
            }
            set {
                this.tqDhAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Weight above jars.</summary>
        [System.ComponentModel.DescriptionAttribute("Weight above jars.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wtAboveJar", DataType="forceMeasure")]
        public forceMeasure wtAboveJar {
            get {
                return this.wtAboveJarField;
            }
            set {
                this.wtAboveJarField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Weight below jars.</summary>
        [System.ComponentModel.DescriptionAttribute("Weight below jars.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wtBelowJar", DataType="forceMeasure")]
        public forceMeasure wtBelowJar {
            get {
                return this.wtBelowJarField;
            }
            set {
                this.wtBelowJarField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud density.</summary>
        [System.ComponentModel.DescriptionAttribute("Mud density.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wtMud", DataType="densityMeasure")]
        public densityMeasure wtMud {
            get {
                return this.wtMudField;
            }
            set {
                this.wtMudField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pump flow rate.</summary>
        [System.ComponentModel.DescriptionAttribute("Pump flow rate.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowratePump", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure flowratePump {
            get {
                return this.flowratePumpField;
            }
            set {
                this.flowratePumpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bit hydraulic.</summary>
        [System.ComponentModel.DescriptionAttribute("Bit hydraulic.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("powBit", DataType="powerMeasure")]
        public powerMeasure powBit {
            get {
                return this.powBitField;
            }
            set {
                this.powBitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bit nozzle average velocity.</summary>
        [System.ComponentModel.DescriptionAttribute("Bit nozzle average velocity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("velNozzleAv", DataType="velocityMeasure")]
        public velocityMeasure velNozzleAv {
            get {
                return this.velNozzleAvField;
            }
            set {
                this.velNozzleAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pressure drop in bit.</summary>
        [System.ComponentModel.DescriptionAttribute("Pressure drop in bit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presDropBit", DataType="pressureMeasure")]
        public pressureMeasure presDropBit {
            get {
                return this.presDropBitField;
            }
            set {
                this.presDropBitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time spent on hold from start of bit run.</summary>
        [System.ComponentModel.DescriptionAttribute("Time spent on hold from start of bit run.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cTimHold", DataType="timeMeasure")]
        public timeMeasure cTimHold {
            get {
                return this.cTimHoldField;
            }
            set {
                this.cTimHoldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time spent steering from start of bit run.</summary>
        [System.ComponentModel.DescriptionAttribute("Time spent steering from start of bit run.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cTimSteering", DataType="timeMeasure")]
        public timeMeasure cTimSteering {
            get {
                return this.cTimSteeringField;
            }
            set {
                this.cTimSteeringField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time spent rotary drilling from start of bit run.</summary>
        [System.ComponentModel.DescriptionAttribute("Time spent rotary drilling from start of bit run.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cTimDrillRot", DataType="timeMeasure")]
        public timeMeasure cTimDrillRot {
            get {
                return this.cTimDrillRotField;
            }
            set {
                this.cTimDrillRotField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time spent slide drilling from start of bit run.</summary>
        [System.ComponentModel.DescriptionAttribute("Time spent slide drilling from start of bit run.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cTimDrillSlid", DataType="timeMeasure")]
        public timeMeasure cTimDrillSlid {
            get {
                return this.cTimDrillSlidField;
            }
            set {
                this.cTimDrillSlidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time spent circulating from start of bit run.</summary>
        [System.ComponentModel.DescriptionAttribute("Time spent circulating from start of bit run.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cTimCirc", DataType="timeMeasure")]
        public timeMeasure cTimCirc {
            get {
                return this.cTimCircField;
            }
            set {
                this.cTimCircField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time spent reaming from start of bit run.</summary>
        [System.ComponentModel.DescriptionAttribute("Time spent reaming from start of bit run.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cTimReam", DataType="timeMeasure")]
        public timeMeasure cTimReam {
            get {
                return this.cTimReamField;
            }
            set {
                this.cTimReamField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance drilled - rotating.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance drilled - rotating.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("distDrillRot", DataType="lengthMeasure")]
        public lengthMeasure distDrillRot {
            get {
                return this.distDrillRotField;
            }
            set {
                this.distDrillRotField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance drilled - sliding</summary>
        [System.ComponentModel.DescriptionAttribute("Distance drilled - sliding")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("distDrillSlid", DataType="lengthMeasure")]
        public lengthMeasure distDrillSlid {
            get {
                return this.distDrillSlidField;
            }
            set {
                this.distDrillSlidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance reamed.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance reamed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("distReam", DataType="lengthMeasure")]
        public lengthMeasure distReam {
            get {
                return this.distReamField;
            }
            set {
                this.distReamField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance covered while holding angle with a steerable drilling assembly.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance covered while holding angle with a steerable drilling assembly.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("distHold", DataType="lengthMeasure")]
        public lengthMeasure distHold {
            get {
                return this.distHoldField;
            }
            set {
                this.distHoldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance covered while actively steering with a steerable drilling assembly.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance covered while actively steering with a steerable drilling assembly.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("distSteering", DataType="lengthMeasure")]
        public lengthMeasure distSteering {
            get {
                return this.distSteeringField;
            }
            set {
                this.distSteeringField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average turn rate (commonly in rpm) through Interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Average turn rate (commonly in rpm) through Interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rpmAv", DataType="anglePerTimeMeasure")]
        public anglePerTimeMeasure rpmAv {
            get {
                return this.rpmAvField;
            }
            set {
                this.rpmAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum turn rate (commonly in rpm).</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum turn rate (commonly in rpm).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rpmMx", DataType="anglePerTimeMeasure")]
        public anglePerTimeMeasure rpmMx {
            get {
                return this.rpmMxField;
            }
            set {
                this.rpmMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum turn rate (commonly in rpm).</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum turn rate (commonly in rpm).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rpmMn", DataType="anglePerTimeMeasure")]
        public anglePerTimeMeasure rpmMn {
            get {
                return this.rpmMnField;
            }
            set {
                this.rpmMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average turn rate (commonly in rpm) downhole.</summary>
        [System.ComponentModel.DescriptionAttribute("Average turn rate (commonly in rpm) downhole.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rpmAvDh", DataType="anglePerTimeMeasure")]
        public anglePerTimeMeasure rpmAvDh {
            get {
                return this.rpmAvDhField;
            }
            set {
                this.rpmAvDhField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average rate of penetration through Interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Average rate of penetration through Interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ropAv", DataType="velocityMeasure")]
        public velocityMeasure ropAv {
            get {
                return this.ropAvField;
            }
            set {
                this.ropAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum rate of penetration through Interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum rate of penetration through Interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ropMx", DataType="velocityMeasure")]
        public velocityMeasure ropMx {
            get {
                return this.ropMxField;
            }
            set {
                this.ropMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum rate of penetration through Interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum rate of penetration through Interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ropMn", DataType="velocityMeasure")]
        public velocityMeasure ropMn {
            get {
                return this.ropMnField;
            }
            set {
                this.ropMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Surface weight on bit - average through interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Surface weight on bit - average through interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wobAv", DataType="forceMeasure")]
        public forceMeasure wobAv {
            get {
                return this.wobAvField;
            }
            set {
                this.wobAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Weight on bit - maximum.</summary>
        [System.ComponentModel.DescriptionAttribute("Weight on bit - maximum.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wobMx", DataType="forceMeasure")]
        public forceMeasure wobMx {
            get {
                return this.wobMxField;
            }
            set {
                this.wobMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Weight on bit - minimum.</summary>
        [System.ComponentModel.DescriptionAttribute("Weight on bit - minimum.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wobMn", DataType="forceMeasure")]
        public forceMeasure wobMn {
            get {
                return this.wobMnField;
            }
            set {
                this.wobMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Weight on bit - average downhole.</summary>
        [System.ComponentModel.DescriptionAttribute("Weight on bit - average downhole.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wobAvDh", DataType="forceMeasure")]
        public forceMeasure wobAvDh {
            get {
                return this.wobAvDhField;
            }
            set {
                this.wobAvDhField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reason for trip.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Reason for trip.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reasonTrip", DataType="commentString")]
        public string reasonTrip {
            get {
                return this.reasonTripField;
            }
            set {
                this.reasonTripField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Objective of bottom hole assembly.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Objective of bottom hole assembly.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("objectiveBha", DataType="commentString")]
        public string objectiveBha {
            get {
                return this.objectiveBhaField;
            }
            set {
                this.objectiveBhaField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Azimuth at start measured depth.</summary>
        [System.ComponentModel.DescriptionAttribute("Azimuth at start measured depth.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("aziTop", DataType="planeAngleMeasure")]
        public planeAngleMeasure aziTop {
            get {
                return this.aziTopField;
            }
            set {
                this.aziTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Azimuth at stop measured depth.</summary>
        [System.ComponentModel.DescriptionAttribute("Azimuth at stop measured depth.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("aziBottom", DataType="planeAngleMeasure")]
        public planeAngleMeasure aziBottom {
            get {
                return this.aziBottomField;
            }
            set {
                this.aziBottomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inclination at start measured depth.</summary>
        [System.ComponentModel.DescriptionAttribute("Inclination at start measured depth.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("inclStart", DataType="planeAngleMeasure")]
        public planeAngleMeasure inclStart {
            get {
                return this.inclStartField;
            }
            set {
                this.inclStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum inclination.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum inclination.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("inclMx", DataType="planeAngleMeasure")]
        public planeAngleMeasure inclMx {
            get {
                return this.inclMxField;
            }
            set {
                this.inclMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum inclination.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum inclination.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("inclMn", DataType="planeAngleMeasure")]
        public planeAngleMeasure inclMn {
            get {
                return this.inclMnField;
            }
            set {
                this.inclMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inclination at stop measured depth.</summary>
        [System.ComponentModel.DescriptionAttribute("Inclination at stop measured depth.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("inclStop", DataType="planeAngleMeasure")]
        public planeAngleMeasure inclStop {
            get {
                return this.inclStopField;
            }
            set {
                this.inclStopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum mud temperature downhole during run.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum mud temperature downhole during run.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempMudDhMx", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempMudDhMx {
            get {
                return this.tempMudDhMxField;
            }
            set {
                this.tempMudDhMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average pump pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Average pump pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presPumpAv", DataType="pressureMeasure")]
        public pressureMeasure presPumpAv {
            get {
                return this.presPumpAvField;
            }
            set {
                this.presPumpAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Flow rate at bit.</summary>
        [System.ComponentModel.DescriptionAttribute("Flow rate at bit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowrateBit", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure flowrateBit {
            get {
                return this.flowrateBitField;
            }
            set {
                this.flowrateBitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comments and remarks.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Comments and remarks.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comments", DataType="commentString")]
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_commonData {
        
        private string sourceNameField;
        
        private Energistics.DataAccess.Timestamp dTimCreationField;
        
        private bool dTimCreationFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimLastChangeField;
        
        private bool dTimLastChangeFieldSpecified;
        
        private ItemState itemStateField;
        
        private bool itemStateFieldSpecified;
        
        private string commentsField;
        
        /// <remarks/>
        /// <summary>An identifier to indicate the data originator. This identifies the server that originally created  the object and thus most of the uids in the object (but not  necessarily the uids of the parents). This is typically a url.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("An identifier to indicate the data originator. This identifies the server that or" +
            "iginally created  the object and thus most of the uids in the object (but not  n" +
            "ecessarily the uids of the parents). This is typically a url.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sourceName", DataType="nameString")]
        public string sourceName {
            get {
                return this.sourceNameField;
            }
            set {
                this.sourceNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>When the data was created at the persistent data store.</summary>
        [System.ComponentModel.DescriptionAttribute("When the data was created at the persistent data store.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimCreation", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimCreation {
            get {
                return this.dTimCreationField;
            }
            set {
                this.dTimCreationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimCreationSpecified {
            get {
                return this.dTimCreationFieldSpecified;
            }
            set {
                this.dTimCreationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Last change of any element of the data at the persistent data store. The change time is not updated for a growing object while it is growing.</summary>
        [System.ComponentModel.DescriptionAttribute("Last change of any element of the data at the persistent data store. The change t" +
            "ime is not updated for a growing object while it is growing.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimLastChange", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimLastChange {
            get {
                return this.dTimLastChangeField;
            }
            set {
                this.dTimLastChangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimLastChangeSpecified {
            get {
                return this.dTimLastChangeFieldSpecified;
            }
            set {
                this.dTimLastChangeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The item state for the data object.</summary>
        [System.ComponentModel.DescriptionAttribute("The item state for the data object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("itemState", DataType="ItemState")]
        public ItemState itemState {
            get {
                return this.itemStateField;
            }
            set {
                this.itemStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool itemStateSpecified {
            get {
                return this.itemStateFieldSpecified;
            }
            set {
                this.itemStateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comments and remarks.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Comments and remarks.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comments", DataType="commentString")]
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_customData {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [System.Xml.Serialization.XmlRootAttribute("cementJobs", Namespace="http://www.witsml.org/schemas/131", IsNullable=false)]
    public partial class obj_cementJobs {
        
        private cs_documentInfo documentInfoField;
        
        private obj_cementJob[] cementJobField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A single cement job.</summary>
        [System.Xml.Serialization.XmlElementAttribute("cementJob")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A single cement job.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cementJob", DataType="obj_cementJob")]
        public obj_cementJob[] cementJob {
            get {
                return this.cementJobField;
            }
            set {
                this.cementJobField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.3\\.1\\.([1-9]|([1-9][0-9]))")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionString")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("WITSML", "1.3.1.1")]
    public partial class obj_cementJob {
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string nameField;
        
        private CementJobType jobTypeField;
        
        private bool jobTypeFieldSpecified;
        
        private string jobConfigField;
        
        private Energistics.DataAccess.Timestamp dTimJobField;
        
        private bool dTimJobFieldSpecified;
        
        private string nameCementedStringField;
        
        private cs_wbGeometry holeConfigField;
        
        private string nameWorkStringField;
        
        private string contractorField;
        
        private string cementEngrField;
        
        private bool offshoreJobField;
        
        private bool offshoreJobFieldSpecified;
        
        private measuredDepthCoord mdWaterField;
        
        private bool returnsToSeabedField;
        
        private bool returnsToSeabedFieldSpecified;
        
        private bool reciprocatingField;
        
        private bool reciprocatingFieldSpecified;
        
        private timeMeasure wocField;
        
        private measuredDepthCoord mdPlugTopField;
        
        private measuredDepthCoord mdPlugBotField;
        
        private measuredDepthCoord mdHoleField;
        
        private measuredDepthCoord mdShoeField;
        
        private wellVerticalDepthCoord tvdShoeField;
        
        private measuredDepthCoord mdStringSetField;
        
        private wellVerticalDepthCoord tvdStringSetField;
        
        private cs_cementStage[] cementStageField;
        
        private cs_cementTest cementTestField;
        
        private string typePlugField;
        
        private string nameCementStringField;
        
        private Energistics.DataAccess.Timestamp dTimPlugSetField;
        
        private bool dTimPlugSetFieldSpecified;
        
        private bool cementDrillOutField;
        
        private bool cementDrillOutFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimCementDrillOutField;
        
        private bool dTimCementDrillOutFieldSpecified;
        
        private string typeSqueezeField;
        
        private measuredDepthCoord mdSqueezeField;
        
        private Energistics.DataAccess.Timestamp dTimSqueezeField;
        
        private bool dTimSqueezeFieldSpecified;
        
        private string toolCompanyField;
        
        private string typeToolField;
        
        private Energistics.DataAccess.Timestamp dTimPipeRotStartField;
        
        private bool dTimPipeRotStartFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimPipeRotEndField;
        
        private bool dTimPipeRotEndFieldSpecified;
        
        private anglePerTimeMeasure rpmPipeField;
        
        private momentOfForceMeasure tqInitPipeRotField;
        
        private momentOfForceMeasure tqPipeAvField;
        
        private momentOfForceMeasure tqPipeMxField;
        
        private Energistics.DataAccess.Timestamp dTimRecipStartField;
        
        private bool dTimRecipStartFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimRecipEndField;
        
        private bool dTimRecipEndFieldSpecified;
        
        private forceMeasure overPullField;
        
        private forceMeasure slackOffField;
        
        private anglePerTimeMeasure rpmPipeRecipField;
        
        private lengthMeasure lenPipeRecipStrokeField;
        
        private bool coilTubingField;
        
        private bool coilTubingFieldSpecified;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidWellboreField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore that contains the cement job.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore that contains the cement job.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWellbore", DataType="nameString")]
        public string nameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the cement job.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the cement job.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of cement job.</summary>
        [System.ComponentModel.DescriptionAttribute("Type of cement job.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("jobType", DataType="CementJobType")]
        public CementJobType jobType {
            get {
                return this.jobTypeField;
            }
            set {
                this.jobTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool jobTypeSpecified {
            get {
                return this.jobTypeFieldSpecified;
            }
            set {
                this.jobTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Job configuration.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("Job configuration.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("jobConfig", DataType="descriptionString")]
        public string jobConfig {
            get {
                return this.jobConfigField;
            }
            set {
                this.jobConfigField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time of Cement Job.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time of Cement Job.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimJob", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimJob {
            get {
                return this.dTimJobField;
            }
            set {
                this.dTimJobField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimJobSpecified {
            get {
                return this.dTimJobFieldSpecified;
            }
            set {
                this.dTimJobFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name for the cemented string</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Name for the cemented string")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameCementedString", DataType="str32")]
        public string nameCementedString {
            get {
                return this.nameCementedStringField;
            }
            set {
                this.nameCementedStringField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Wellbore Geometry of annulus.</summary>
        [System.ComponentModel.DescriptionAttribute("Wellbore Geometry of annulus.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("holeConfig", DataType="cs_wbGeometry")]
        public cs_wbGeometry holeConfig {
            get {
                return this.holeConfigField;
            }
            set {
                this.holeConfigField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name for the cement work string</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name for the cement work string")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWorkString", DataType="nameString")]
        public string nameWorkString {
            get {
                return this.nameWorkStringField;
            }
            set {
                this.nameWorkStringField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of cementing contractor.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of cementing contractor.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("contractor", DataType="nameString")]
        public string contractor {
            get {
                return this.contractorField;
            }
            set {
                this.contractorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cementing engineer.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Cementing engineer.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cementEngr", DataType="str32")]
        public string cementEngr {
            get {
                return this.cementEngrField;
            }
            set {
                this.cementEngrField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Offshore job? Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Offshore job? Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("offshoreJob", DataType="logicalBoolean")]
        public bool offshoreJob {
            get {
                return this.offshoreJobField;
            }
            set {
                this.offshoreJobField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool offshoreJobSpecified {
            get {
                return this.offshoreJobFieldSpecified;
            }
            set {
                this.offshoreJobFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Water depth if offshore.</summary>
        [System.ComponentModel.DescriptionAttribute("Water depth if offshore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdWater", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdWater {
            get {
                return this.mdWaterField;
            }
            set {
                this.mdWaterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Returns to seabed? Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Returns to seabed? Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("returnsToSeabed", DataType="logicalBoolean")]
        public bool returnsToSeabed {
            get {
                return this.returnsToSeabedField;
            }
            set {
                this.returnsToSeabedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool returnsToSeabedSpecified {
            get {
                return this.returnsToSeabedFieldSpecified;
            }
            set {
                this.returnsToSeabedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pipe being reciprocated.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Pipe being reciprocated.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reciprocating", DataType="logicalBoolean")]
        public bool reciprocating {
            get {
                return this.reciprocatingField;
            }
            set {
                this.reciprocatingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reciprocatingSpecified {
            get {
                return this.reciprocatingFieldSpecified;
            }
            set {
                this.reciprocatingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Duration for waiting on cement to set.</summary>
        [System.ComponentModel.DescriptionAttribute("Duration for waiting on cement to set.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("woc", DataType="timeMeasure")]
        public timeMeasure woc {
            get {
                return this.wocField;
            }
            set {
                this.wocField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>If Plug, measured depth of top of plug.</summary>
        [System.ComponentModel.DescriptionAttribute("If Plug, measured depth of top of plug.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdPlugTop", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdPlugTop {
            get {
                return this.mdPlugTopField;
            }
            set {
                this.mdPlugTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>If Plug, measured depth of bottom of plug.</summary>
        [System.ComponentModel.DescriptionAttribute("If Plug, measured depth of bottom of plug.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdPlugBot", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdPlugBot {
            get {
                return this.mdPlugBotField;
            }
            set {
                this.mdPlugBotField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth at bottom of hole.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth at bottom of hole.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdHole", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdHole {
            get {
                return this.mdHoleField;
            }
            set {
                this.mdHoleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of previous shoe.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of previous shoe.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdShoe", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdShoe {
            get {
                return this.mdShoeField;
            }
            set {
                this.mdShoeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True Vertical Depth of previous shoe.</summary>
        [System.ComponentModel.DescriptionAttribute("True Vertical Depth of previous shoe.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvdShoe", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvdShoe {
            get {
                return this.tvdShoeField;
            }
            set {
                this.tvdShoeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of cement string shoe.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of cement string shoe.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdStringSet", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdStringSet {
            get {
                return this.mdStringSetField;
            }
            set {
                this.mdStringSetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth of cement string shoe.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth of cement string shoe.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvdStringSet", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvdStringSet {
            get {
                return this.tvdStringSetField;
            }
            set {
                this.tvdStringSetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Set of stages for the job (usually 1 or 2).</summary>
        [System.Xml.Serialization.XmlElementAttribute("cementStage")]
        [System.ComponentModel.DescriptionAttribute("Set of stages for the job (usually 1 or 2).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cementStage", DataType="cs_cementStage")]
        public cs_cementStage[] cementStage {
            get {
                return this.cementStageField;
            }
            set {
                this.cementStageField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Test results post-job.</summary>
        [System.ComponentModel.DescriptionAttribute("Test results post-job.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cementTest", DataType="cs_cementTest")]
        public cs_cementTest cementTest {
            get {
                return this.cementTestField;
            }
            set {
                this.cementTestField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Plug type.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Plug type.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typePlug", DataType="str32")]
        public string typePlug {
            get {
                return this.typePlugField;
            }
            set {
                this.typePlugField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name for the cementing string</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name for the cementing string")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameCementString", DataType="nameString")]
        public string nameCementString {
            get {
                return this.nameCementStringField;
            }
            set {
                this.nameCementStringField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time that cement plug was set.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time that cement plug was set.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimPlugSet", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimPlugSet {
            get {
                return this.dTimPlugSetField;
            }
            set {
                this.dTimPlugSetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimPlugSetSpecified {
            get {
                return this.dTimPlugSetFieldSpecified;
            }
            set {
                this.dTimPlugSetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cement drilled out flag. Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Cement drilled out flag. Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cementDrillOut", DataType="logicalBoolean")]
        public bool cementDrillOut {
            get {
                return this.cementDrillOutField;
            }
            set {
                this.cementDrillOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cementDrillOutSpecified {
            get {
                return this.cementDrillOutFieldSpecified;
            }
            set {
                this.cementDrillOutFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time that cement was drilled out.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time that cement was drilled out.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimCementDrillOut", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimCementDrillOut {
            get {
                return this.dTimCementDrillOutField;
            }
            set {
                this.dTimCementDrillOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimCementDrillOutSpecified {
            get {
                return this.dTimCementDrillOutFieldSpecified;
            }
            set {
                this.dTimCementDrillOutFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of squeeze.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Type of squeeze.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeSqueeze", DataType="str32")]
        public string typeSqueeze {
            get {
                return this.typeSqueezeField;
            }
            set {
                this.typeSqueezeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of squeeze.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of squeeze.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdSqueeze", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdSqueeze {
            get {
                return this.mdSqueezeField;
            }
            set {
                this.mdSqueezeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time of squeeze.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time of squeeze.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimSqueeze", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimSqueeze {
            get {
                return this.dTimSqueezeField;
            }
            set {
                this.dTimSqueezeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimSqueezeSpecified {
            get {
                return this.dTimSqueezeFieldSpecified;
            }
            set {
                this.dTimSqueezeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Tool Company.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Tool Company.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("toolCompany", DataType="nameString")]
        public string toolCompany {
            get {
                return this.toolCompanyField;
            }
            set {
                this.toolCompanyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cement tool type.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Cement tool type.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeTool", DataType="nameString")]
        public string typeTool {
            get {
                return this.typeToolField;
            }
            set {
                this.typeToolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pipe rotation start time.</summary>
        [System.ComponentModel.DescriptionAttribute("Pipe rotation start time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimPipeRotStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimPipeRotStart {
            get {
                return this.dTimPipeRotStartField;
            }
            set {
                this.dTimPipeRotStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimPipeRotStartSpecified {
            get {
                return this.dTimPipeRotStartFieldSpecified;
            }
            set {
                this.dTimPipeRotStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pipe rotation end time.</summary>
        [System.ComponentModel.DescriptionAttribute("Pipe rotation end time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimPipeRotEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimPipeRotEnd {
            get {
                return this.dTimPipeRotEndField;
            }
            set {
                this.dTimPipeRotEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimPipeRotEndSpecified {
            get {
                return this.dTimPipeRotEndFieldSpecified;
            }
            set {
                this.dTimPipeRotEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pipe rotation rate (commonly in rpm).</summary>
        [System.ComponentModel.DescriptionAttribute("Pipe rotation rate (commonly in rpm).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rpmPipe", DataType="anglePerTimeMeasure")]
        public anglePerTimeMeasure rpmPipe {
            get {
                return this.rpmPipeField;
            }
            set {
                this.rpmPipeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pipe rotation initial torque.</summary>
        [System.ComponentModel.DescriptionAttribute("Pipe rotation initial torque.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tqInitPipeRot", DataType="momentOfForceMeasure")]
        public momentOfForceMeasure tqInitPipeRot {
            get {
                return this.tqInitPipeRotField;
            }
            set {
                this.tqInitPipeRotField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pipe rotation average torque.</summary>
        [System.ComponentModel.DescriptionAttribute("Pipe rotation average torque.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tqPipeAv", DataType="momentOfForceMeasure")]
        public momentOfForceMeasure tqPipeAv {
            get {
                return this.tqPipeAvField;
            }
            set {
                this.tqPipeAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pipe rotation maximum torque.</summary>
        [System.ComponentModel.DescriptionAttribute("Pipe rotation maximum torque.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tqPipeMx", DataType="momentOfForceMeasure")]
        public momentOfForceMeasure tqPipeMx {
            get {
                return this.tqPipeMxField;
            }
            set {
                this.tqPipeMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time at start of pipe reciprocation.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time at start of pipe reciprocation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimRecipStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimRecipStart {
            get {
                return this.dTimRecipStartField;
            }
            set {
                this.dTimRecipStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimRecipStartSpecified {
            get {
                return this.dTimRecipStartFieldSpecified;
            }
            set {
                this.dTimRecipStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time at end of pipe reciprocation.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time at end of pipe reciprocation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimRecipEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimRecipEnd {
            get {
                return this.dTimRecipEndField;
            }
            set {
                this.dTimRecipEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimRecipEndSpecified {
            get {
                return this.dTimRecipEndFieldSpecified;
            }
            set {
                this.dTimRecipEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>String up weight during reciprocation.</summary>
        [System.ComponentModel.DescriptionAttribute("String up weight during reciprocation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("overPull", DataType="forceMeasure")]
        public forceMeasure overPull {
            get {
                return this.overPullField;
            }
            set {
                this.overPullField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>String down weight during reciprocation.</summary>
        [System.ComponentModel.DescriptionAttribute("String down weight during reciprocation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("slackOff", DataType="forceMeasure")]
        public forceMeasure slackOff {
            get {
                return this.slackOffField;
            }
            set {
                this.slackOffField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pipe reciprocation RPM.</summary>
        [System.ComponentModel.DescriptionAttribute("Pipe reciprocation RPM.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rpmPipeRecip", DataType="anglePerTimeMeasure")]
        public anglePerTimeMeasure rpmPipeRecip {
            get {
                return this.rpmPipeRecipField;
            }
            set {
                this.rpmPipeRecipField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pipe reciprocation stroke length.</summary>
        [System.ComponentModel.DescriptionAttribute("Pipe reciprocation stroke length.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenPipeRecipStroke", DataType="lengthMeasure")]
        public lengthMeasure lenPipeRecipStroke {
            get {
                return this.lenPipeRecipStrokeField;
            }
            set {
                this.lenPipeRecipStrokeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled Tubing Used (true=CTU used).   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Coiled Tubing Used (true=CTU used).   Values are \"true\" (or \"1\") and \"false\" (or " +
            "\"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("coilTubing", DataType="logicalBoolean")]
        public bool coilTubing {
            get {
                return this.coilTubingField;
            }
            set {
                this.coilTubingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool coilTubingSpecified {
            get {
                return this.coilTubingFieldSpecified;
            }
            set {
                this.coilTubingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the wellbore. This uniquely represents  the wellbore referenced by the (possibly non-unique) nameWellbore.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the wellbore. This uniquely represents  the wellbore refere" +
            "nced by the (possibly non-unique) nameWellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWellbore", DataType="uidString")]
        public string uidWellbore {
            get {
                return this.uidWellboreField;
            }
            set {
                this.uidWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_wbGeometry {
        
        private Energistics.DataAccess.Timestamp dTimReportField;
        
        private measuredDepthCoord mdBottomField;
        
        private lengthMeasure gapAirField;
        
        private lengthMeasure depthWaterMeanField;
        
        private cs_wbGeometrySection[] wbGeometrySectionField;
        
        /// <remarks/>
        /// <summary>Time report generated.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Time report generated.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimReport", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimReport {
            get {
                return this.dTimReportField;
            }
            set {
                this.dTimReportField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth at bottom.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth at bottom.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdBottom", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdBottom {
            get {
                return this.mdBottomField;
            }
            set {
                this.mdBottomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Air gap.</summary>
        [System.ComponentModel.DescriptionAttribute("Air gap.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gapAir", DataType="lengthMeasure")]
        public lengthMeasure gapAir {
            get {
                return this.gapAirField;
            }
            set {
                this.gapAirField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Water depth.</summary>
        [System.ComponentModel.DescriptionAttribute("Water depth.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("depthWaterMean", DataType="lengthMeasure")]
        public lengthMeasure depthWaterMean {
            get {
                return this.depthWaterMeanField;
            }
            set {
                this.depthWaterMeanField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Wellbore geometry section object.</summary>
        [System.Xml.Serialization.XmlElementAttribute("wbGeometrySection")]
        [System.ComponentModel.DescriptionAttribute("Wellbore geometry section object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wbGeometrySection", DataType="cs_wbGeometrySection")]
        public cs_wbGeometrySection[] wbGeometrySection {
            get {
                return this.wbGeometrySectionField;
            }
            set {
                this.wbGeometrySectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_wbGeometrySection {
        
        private HoleCasingType typeHoleCasingField;
        
        private bool typeHoleCasingFieldSpecified;
        
        private measuredDepthCoord mdTopField;
        
        private measuredDepthCoord mdBottomField;
        
        private wellVerticalDepthCoord tvdTopField;
        
        private wellVerticalDepthCoord tvdBottomField;
        
        private lengthMeasure idSectionField;
        
        private lengthMeasure odSectionField;
        
        private massPerLengthMeasure wtPerLenField;
        
        private string gradeField;
        
        private bool curveConductorField;
        
        private bool curveConductorFieldSpecified;
        
        private lengthMeasure diaDriftField;
        
        private double factFricField;
        
        private bool factFricFieldSpecified;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Type of fixed component.</summary>
        [System.ComponentModel.DescriptionAttribute("Type of fixed component.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeHoleCasing", DataType="HoleCasingType")]
        public HoleCasingType typeHoleCasing {
            get {
                return this.typeHoleCasingField;
            }
            set {
                this.typeHoleCasingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeHoleCasingSpecified {
            get {
                return this.typeHoleCasingFieldSpecified;
            }
            set {
                this.typeHoleCasingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth at Top of Interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth at Top of Interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdTop", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdTop {
            get {
                return this.mdTopField;
            }
            set {
                this.mdTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth at bottom of the section.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth at bottom of the section.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdBottom", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdBottom {
            get {
                return this.mdBottomField;
            }
            set {
                this.mdBottomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth at top of the section.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth at top of the section.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvdTop", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvdTop {
            get {
                return this.tvdTopField;
            }
            set {
                this.tvdTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth at bottom of the section.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth at bottom of the section.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvdBottom", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvdBottom {
            get {
                return this.tvdBottomField;
            }
            set {
                this.tvdBottomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Inner diameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("idSection", DataType="lengthMeasure")]
        public lengthMeasure idSection {
            get {
                return this.idSectionField;
            }
            set {
                this.idSectionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Outer diameter - Only for casings and risers.</summary>
        [System.ComponentModel.DescriptionAttribute("Outer diameter - Only for casings and risers.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("odSection", DataType="lengthMeasure")]
        public lengthMeasure odSection {
            get {
                return this.odSectionField;
            }
            set {
                this.odSectionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Weight per unit length for casing sections.</summary>
        [System.ComponentModel.DescriptionAttribute("Weight per unit length for casing sections.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wtPerLen", DataType="massPerLengthMeasure")]
        public massPerLengthMeasure wtPerLen {
            get {
                return this.wtPerLenField;
            }
            set {
                this.wtPerLenField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Material grade for the tubular section.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Material grade for the tubular section.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("grade", DataType="str32")]
        public string grade {
            get {
                return this.gradeField;
            }
            set {
                this.gradeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Curved conductor? Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Curved conductor? Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("curveConductor", DataType="logicalBoolean")]
        public bool curveConductor {
            get {
                return this.curveConductorField;
            }
            set {
                this.curveConductorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool curveConductorSpecified {
            get {
                return this.curveConductorFieldSpecified;
            }
            set {
                this.curveConductorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum diameter that can pass through.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum diameter that can pass through.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("diaDrift", DataType="lengthMeasure")]
        public lengthMeasure diaDrift {
            get {
                return this.diaDriftField;
            }
            set {
                this.diaDriftField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Friction factor.</summary>
        [System.ComponentModel.DescriptionAttribute("Friction factor.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("factFric", DataType="unitlessQuantity")]
        public double factFric {
            get {
                return this.factFricField;
            }
            set {
                this.factFricField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool factFricSpecified {
            get {
                return this.factFricFieldSpecified;
            }
            set {
                this.factFricFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_cementStage {
        
        private short numStageField;
        
        private string typeStageField;
        
        private Energistics.DataAccess.Timestamp dTimMixStartField;
        
        private bool dTimMixStartFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimPumpStartField;
        
        private bool dTimPumpStartFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimPumpEndField;
        
        private bool dTimPumpEndFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimDisplaceStartField;
        
        private bool dTimDisplaceStartFieldSpecified;
        
        private measuredDepthCoord mdTopField;
        
        private measuredDepthCoord mdBottomField;
        
        private volumeMeasure volExcessField;
        
        private volumeFlowRateMeasure flowrateDisplaceAvField;
        
        private volumeFlowRateMeasure flowrateDisplaceMxField;
        
        private pressureMeasure presDisplaceField;
        
        private volumeMeasure volReturnsField;
        
        private timeMeasure eTimMudCirculationField;
        
        private volumeFlowRateMeasure flowrateMudCircField;
        
        private pressureMeasure presMudCircField;
        
        private volumeFlowRateMeasure flowrateEndField;
        
        private cs_cementingFluid cementingFluidField;
        
        private bool afterFlowAnnField;
        
        private bool afterFlowAnnFieldSpecified;
        
        private string squeezeObjField;
        
        private bool squeezeObtainedField;
        
        private bool squeezeObtainedFieldSpecified;
        
        private measuredDepthCoord mdStringField;
        
        private measuredDepthCoord mdToolField;
        
        private measuredDepthCoord mdCoilTbgField;
        
        private volumeMeasure volCsgInField;
        
        private volumeMeasure volCsgOutField;
        
        private bool tailPipeUsedField;
        
        private bool tailPipeUsedFieldSpecified;
        
        private lengthMeasure diaTailPipeField;
        
        private bool tailPipePerfField;
        
        private bool tailPipePerfFieldSpecified;
        
        private pressureMeasure presTbgStartField;
        
        private pressureMeasure presTbgEndField;
        
        private pressureMeasure presCsgStartField;
        
        private pressureMeasure presCsgEndField;
        
        private pressureMeasure presBackPressureField;
        
        private pressureMeasure presCoilTbgStartField;
        
        private pressureMeasure presCoilTbgEndField;
        
        private pressureMeasure presBreakDownField;
        
        private volumeFlowRateMeasure flowrateBreakDownField;
        
        private pressureMeasure presSqueezeAvField;
        
        private pressureMeasure presSqueezeEndField;
        
        private bool presSqueezeHeldField;
        
        private bool presSqueezeHeldFieldSpecified;
        
        private pressureMeasure presSqueezeField;
        
        private timeMeasure eTimPresHeldField;
        
        private volumeFlowRateMeasure flowrateSqueezeAvField;
        
        private volumeFlowRateMeasure flowrateSqueezeMxField;
        
        private volumeFlowRateMeasure flowratePumpStartField;
        
        private volumeFlowRateMeasure flowratePumpEndField;
        
        private bool pillBelowPlugField;
        
        private bool pillBelowPlugFieldSpecified;
        
        private bool plugCatcherField;
        
        private bool plugCatcherFieldSpecified;
        
        private measuredDepthCoord mdCircOutField;
        
        private volumeMeasure volCircPriorField;
        
        private string typeOriginalMudField;
        
        private densityMeasure wtMudField;
        
        private timeMeasure visFunnelMudField;
        
        private dynamicViscosityMeasure pvMudField;
        
        private pressureMeasure ypMudField;
        
        private pressureMeasure gel10SecField;
        
        private pressureMeasure gel10MinField;
        
        private thermodynamicTemperatureMeasure tempBHCTField;
        
        private thermodynamicTemperatureMeasure tempBHSTField;
        
        private string volExcessMethodField;
        
        private string mixMethodField;
        
        private string densMeasByField;
        
        private bool annFlowAfterField;
        
        private bool annFlowAfterFieldSpecified;
        
        private bool topPlugField;
        
        private bool topPlugFieldSpecified;
        
        private bool botPlugField;
        
        private bool botPlugFieldSpecified;
        
        private short botPlugNumberField;
        
        private bool botPlugNumberFieldSpecified;
        
        private bool plugBumpedField;
        
        private bool plugBumpedFieldSpecified;
        
        private pressureMeasure presPriorBumpField;
        
        private pressureMeasure presBumpField;
        
        private pressureMeasure presHeldField;
        
        private bool floatHeldField;
        
        private bool floatHeldFieldSpecified;
        
        private volumeMeasure volMudLostField;
        
        private string fluidDisplaceField;
        
        private densityMeasure densDisplaceFluidField;
        
        private volumeMeasure volDisplaceFluidField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Stage number.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Stage number.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numStage", DataType="positiveCount")]
        public short numStage {
            get {
                return this.numStageField;
            }
            set {
                this.numStageField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Stage type.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Stage type.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeStage", DataType="str32")]
        public string typeStage {
            get {
                return this.typeStageField;
            }
            set {
                this.typeStageField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time when mixing started.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time when mixing started.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimMixStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimMixStart {
            get {
                return this.dTimMixStartField;
            }
            set {
                this.dTimMixStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimMixStartSpecified {
            get {
                return this.dTimMixStartFieldSpecified;
            }
            set {
                this.dTimMixStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Datetime at start of pumping cement.</summary>
        [System.ComponentModel.DescriptionAttribute("Datetime at start of pumping cement.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimPumpStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimPumpStart {
            get {
                return this.dTimPumpStartField;
            }
            set {
                this.dTimPumpStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimPumpStartSpecified {
            get {
                return this.dTimPumpStartFieldSpecified;
            }
            set {
                this.dTimPumpStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Datetime at end of pumping cement.</summary>
        [System.ComponentModel.DescriptionAttribute("Datetime at end of pumping cement.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimPumpEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimPumpEnd {
            get {
                return this.dTimPumpEndField;
            }
            set {
                this.dTimPumpEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimPumpEndSpecified {
            get {
                return this.dTimPumpEndFieldSpecified;
            }
            set {
                this.dTimPumpEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time when displacing cement started.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time when displacing cement started.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimDisplaceStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimDisplaceStart {
            get {
                return this.dTimDisplaceStartField;
            }
            set {
                this.dTimDisplaceStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimDisplaceStartSpecified {
            get {
                return this.dTimDisplaceStartFieldSpecified;
            }
            set {
                this.dTimDisplaceStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth at top of interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth at top of interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdTop", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdTop {
            get {
                return this.mdTopField;
            }
            set {
                this.mdTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of base of cement.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of base of cement.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdBottom", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdBottom {
            get {
                return this.mdBottomField;
            }
            set {
                this.mdBottomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Excess volume.</summary>
        [System.ComponentModel.DescriptionAttribute("Excess volume.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volExcess", DataType="volumeMeasure")]
        public volumeMeasure volExcess {
            get {
                return this.volExcessField;
            }
            set {
                this.volExcessField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average displacement rate.</summary>
        [System.ComponentModel.DescriptionAttribute("Average displacement rate.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowrateDisplaceAv", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure flowrateDisplaceAv {
            get {
                return this.flowrateDisplaceAvField;
            }
            set {
                this.flowrateDisplaceAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum displacement rate.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum displacement rate.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowrateDisplaceMx", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure flowrateDisplaceMx {
            get {
                return this.flowrateDisplaceMxField;
            }
            set {
                this.flowrateDisplaceMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Final displacement pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Final displacement pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presDisplace", DataType="pressureMeasure")]
        public pressureMeasure presDisplace {
            get {
                return this.presDisplaceField;
            }
            set {
                this.presDisplaceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume of returns.</summary>
        [System.ComponentModel.DescriptionAttribute("Volume of returns.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volReturns", DataType="volumeMeasure")]
        public volumeMeasure volReturns {
            get {
                return this.volReturnsField;
            }
            set {
                this.volReturnsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud circulation elapsed time before the job.</summary>
        [System.ComponentModel.DescriptionAttribute("Mud circulation elapsed time before the job.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eTimMudCirculation", DataType="timeMeasure")]
        public timeMeasure eTimMudCirculation {
            get {
                return this.eTimMudCirculationField;
            }
            set {
                this.eTimMudCirculationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rate mud circulated during stage.</summary>
        [System.ComponentModel.DescriptionAttribute("Rate mud circulated during stage.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowrateMudCirc", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure flowrateMudCirc {
            get {
                return this.flowrateMudCircField;
            }
            set {
                this.flowrateMudCircField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud circulation pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Mud circulation pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presMudCirc", DataType="pressureMeasure")]
        public pressureMeasure presMudCirc {
            get {
                return this.presMudCircField;
            }
            set {
                this.presMudCircField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Final displacement pump rate.</summary>
        [System.ComponentModel.DescriptionAttribute("Final displacement pump rate.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowrateEnd", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure flowrateEnd {
            get {
                return this.flowrateEndField;
            }
            set {
                this.flowrateEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Displaced Mud, washes and spacers, cements, displacement mud.</summary>
        [System.ComponentModel.DescriptionAttribute("Displaced Mud, washes and spacers, cements, displacement mud.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cementingFluid", DataType="cs_cementingFluid")]
        public cs_cementingFluid cementingFluid {
            get {
                return this.cementingFluidField;
            }
            set {
                this.cementingFluidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Annular flow at the end of displacement.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Annular flow at the end of displacement.  Values are \"true\" (or \"1\") and \"false\" " +
            "(or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("afterFlowAnn", DataType="logicalBoolean")]
        public bool afterFlowAnn {
            get {
                return this.afterFlowAnnField;
            }
            set {
                this.afterFlowAnnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool afterFlowAnnSpecified {
            get {
                return this.afterFlowAnnFieldSpecified;
            }
            set {
                this.afterFlowAnnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Squeeze objective.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Squeeze objective.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("squeezeObj", DataType="str32")]
        public string squeezeObj {
            get {
                return this.squeezeObjField;
            }
            set {
                this.squeezeObjField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Squeeze obtained.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Squeeze obtained.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("squeezeObtained", DataType="logicalBoolean")]
        public bool squeezeObtained {
            get {
                return this.squeezeObtainedField;
            }
            set {
                this.squeezeObtainedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool squeezeObtainedSpecified {
            get {
                return this.squeezeObtainedFieldSpecified;
            }
            set {
                this.squeezeObtainedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of string (multi-stage cement job).</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of string (multi-stage cement job).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdString", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdString {
            get {
                return this.mdStringField;
            }
            set {
                this.mdStringField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of tool (multi-stage cement job.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of tool (multi-stage cement job.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdTool", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdTool {
            get {
                return this.mdToolField;
            }
            set {
                this.mdToolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of CoilTubing (multi-stage cement job.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of CoilTubing (multi-stage cement job.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdCoilTbg", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdCoilTbg {
            get {
                return this.mdCoilTbgField;
            }
            set {
                this.mdCoilTbgField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total volume inside casing.</summary>
        [System.ComponentModel.DescriptionAttribute("Total volume inside casing.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volCsgIn", DataType="volumeMeasure")]
        public volumeMeasure volCsgIn {
            get {
                return this.volCsgInField;
            }
            set {
                this.volCsgInField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total volume outside casing for this stage placement.</summary>
        [System.ComponentModel.DescriptionAttribute("Total volume outside casing for this stage placement.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volCsgOut", DataType="volumeMeasure")]
        public volumeMeasure volCsgOut {
            get {
                return this.volCsgOutField;
            }
            set {
                this.volCsgOutField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Tail pipe used?  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Tail pipe used?  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tailPipeUsed", DataType="logicalBoolean")]
        public bool tailPipeUsed {
            get {
                return this.tailPipeUsedField;
            }
            set {
                this.tailPipeUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tailPipeUsedSpecified {
            get {
                return this.tailPipeUsedFieldSpecified;
            }
            set {
                this.tailPipeUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Tail pipe size (diameter).</summary>
        [System.ComponentModel.DescriptionAttribute("Tail pipe size (diameter).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("diaTailPipe", DataType="lengthMeasure")]
        public lengthMeasure diaTailPipe {
            get {
                return this.diaTailPipeField;
            }
            set {
                this.diaTailPipeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Tail pipe perforated?  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Tail pipe perforated?  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tailPipePerf", DataType="logicalBoolean")]
        public bool tailPipePerf {
            get {
                return this.tailPipePerfField;
            }
            set {
                this.tailPipePerfField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tailPipePerfSpecified {
            get {
                return this.tailPipePerfFieldSpecified;
            }
            set {
                this.tailPipePerfFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Tubing pressure at start of job (not coiled tubing).</summary>
        [System.ComponentModel.DescriptionAttribute("Tubing pressure at start of job (not coiled tubing).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presTbgStart", DataType="pressureMeasure")]
        public pressureMeasure presTbgStart {
            get {
                return this.presTbgStartField;
            }
            set {
                this.presTbgStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Tubing pressure at end of job.</summary>
        [System.ComponentModel.DescriptionAttribute("Tubing pressure at end of job.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presTbgEnd", DataType="pressureMeasure")]
        public pressureMeasure presTbgEnd {
            get {
                return this.presTbgEndField;
            }
            set {
                this.presTbgEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Casing pressure at start of job.</summary>
        [System.ComponentModel.DescriptionAttribute("Casing pressure at start of job.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presCsgStart", DataType="pressureMeasure")]
        public pressureMeasure presCsgStart {
            get {
                return this.presCsgStartField;
            }
            set {
                this.presCsgStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Casing pressure at end of job.</summary>
        [System.ComponentModel.DescriptionAttribute("Casing pressure at end of job.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presCsgEnd", DataType="pressureMeasure")]
        public pressureMeasure presCsgEnd {
            get {
                return this.presCsgEndField;
            }
            set {
                this.presCsgEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Constant back pressure applied while pumping the job (can be supersede by a back pressure per pumping stage)</summary>
        [System.ComponentModel.DescriptionAttribute("Constant back pressure applied while pumping the job (can be supersede by a back " +
            "pressure per pumping stage)")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presBackPressure", DataType="pressureMeasure")]
        public pressureMeasure presBackPressure {
            get {
                return this.presBackPressureField;
            }
            set {
                this.presBackPressureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pressure CTU start.</summary>
        [System.ComponentModel.DescriptionAttribute("Pressure CTU start.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presCoilTbgStart", DataType="pressureMeasure")]
        public pressureMeasure presCoilTbgStart {
            get {
                return this.presCoilTbgStartField;
            }
            set {
                this.presCoilTbgStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pressure CTU end</summary>
        [System.ComponentModel.DescriptionAttribute("Pressure CTU end")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presCoilTbgEnd", DataType="pressureMeasure")]
        public pressureMeasure presCoilTbgEnd {
            get {
                return this.presCoilTbgEndField;
            }
            set {
                this.presCoilTbgEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Breakdown pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Breakdown pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presBreakDown", DataType="pressureMeasure")]
        public pressureMeasure presBreakDown {
            get {
                return this.presBreakDownField;
            }
            set {
                this.presBreakDownField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Breakdown rate.</summary>
        [System.ComponentModel.DescriptionAttribute("Breakdown rate.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowrateBreakDown", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure flowrateBreakDown {
            get {
                return this.flowrateBreakDownField;
            }
            set {
                this.flowrateBreakDownField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Squeeze pressure average.</summary>
        [System.ComponentModel.DescriptionAttribute("Squeeze pressure average.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presSqueezeAv", DataType="pressureMeasure")]
        public pressureMeasure presSqueezeAv {
            get {
                return this.presSqueezeAvField;
            }
            set {
                this.presSqueezeAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Squeeze pressure final.</summary>
        [System.ComponentModel.DescriptionAttribute("Squeeze pressure final.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presSqueezeEnd", DataType="pressureMeasure")]
        public pressureMeasure presSqueezeEnd {
            get {
                return this.presSqueezeEndField;
            }
            set {
                this.presSqueezeEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Squeeze pressure held.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Squeeze pressure held.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presSqueezeHeld", DataType="logicalBoolean")]
        public bool presSqueezeHeld {
            get {
                return this.presSqueezeHeldField;
            }
            set {
                this.presSqueezeHeldField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool presSqueezeHeldSpecified {
            get {
                return this.presSqueezeHeldFieldSpecified;
            }
            set {
                this.presSqueezeHeldFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Squeeze pressure left on pipe.</summary>
        [System.ComponentModel.DescriptionAttribute("Squeeze pressure left on pipe.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presSqueeze", DataType="pressureMeasure")]
        public pressureMeasure presSqueeze {
            get {
                return this.presSqueezeField;
            }
            set {
                this.presSqueezeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time pressure held.</summary>
        [System.ComponentModel.DescriptionAttribute("Time pressure held.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eTimPresHeld", DataType="timeMeasure")]
        public timeMeasure eTimPresHeld {
            get {
                return this.eTimPresHeldField;
            }
            set {
                this.eTimPresHeldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Squeeze job average rate.</summary>
        [System.ComponentModel.DescriptionAttribute("Squeeze job average rate.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowrateSqueezeAv", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure flowrateSqueezeAv {
            get {
                return this.flowrateSqueezeAvField;
            }
            set {
                this.flowrateSqueezeAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Squeeze job maximum rate.</summary>
        [System.ComponentModel.DescriptionAttribute("Squeeze job maximum rate.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowrateSqueezeMx", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure flowrateSqueezeMx {
            get {
                return this.flowrateSqueezeMxField;
            }
            set {
                this.flowrateSqueezeMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pump rate at start of job.</summary>
        [System.ComponentModel.DescriptionAttribute("Pump rate at start of job.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowratePumpStart", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure flowratePumpStart {
            get {
                return this.flowratePumpStartField;
            }
            set {
                this.flowratePumpStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pump rate at end of job.</summary>
        [System.ComponentModel.DescriptionAttribute("Pump rate at end of job.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowratePumpEnd", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure flowratePumpEnd {
            get {
                return this.flowratePumpEndField;
            }
            set {
                this.flowratePumpEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pill below plug.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Pill below plug.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pillBelowPlug", DataType="logicalBoolean")]
        public bool pillBelowPlug {
            get {
                return this.pillBelowPlugField;
            }
            set {
                this.pillBelowPlugField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pillBelowPlugSpecified {
            get {
                return this.pillBelowPlugFieldSpecified;
            }
            set {
                this.pillBelowPlugFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Plug catcher.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Plug catcher.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("plugCatcher", DataType="logicalBoolean")]
        public bool plugCatcher {
            get {
                return this.plugCatcherField;
            }
            set {
                this.plugCatcherField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool plugCatcherSpecified {
            get {
                return this.plugCatcherFieldSpecified;
            }
            set {
                this.plugCatcherFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Circulate out measured depth.</summary>
        [System.ComponentModel.DescriptionAttribute("Circulate out measured depth.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdCircOut", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdCircOut {
            get {
                return this.mdCircOutField;
            }
            set {
                this.mdCircOutField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Circulate prior to start of job.</summary>
        [System.ComponentModel.DescriptionAttribute("Circulate prior to start of job.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volCircPrior", DataType="volumeMeasure")]
        public volumeMeasure volCircPrior {
            get {
                return this.volCircPriorField;
            }
            set {
                this.volCircPriorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of mud in hole.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Type of mud in hole.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeOriginalMud", DataType="str32")]
        public string typeOriginalMud {
            get {
                return this.typeOriginalMudField;
            }
            set {
                this.typeOriginalMudField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud density.</summary>
        [System.ComponentModel.DescriptionAttribute("Mud density.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wtMud", DataType="densityMeasure")]
        public densityMeasure wtMud {
            get {
                return this.wtMudField;
            }
            set {
                this.wtMudField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Funnel viscosity in seconds (in hole at start of job).</summary>
        [System.ComponentModel.DescriptionAttribute("Funnel viscosity in seconds (in hole at start of job).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("visFunnelMud", DataType="timeMeasure")]
        public timeMeasure visFunnelMud {
            get {
                return this.visFunnelMudField;
            }
            set {
                this.visFunnelMudField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Plastic viscosity (in hole at start of job).</summary>
        [System.ComponentModel.DescriptionAttribute("Plastic viscosity (in hole at start of job).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pvMud", DataType="dynamicViscosityMeasure")]
        public dynamicViscosityMeasure pvMud {
            get {
                return this.pvMudField;
            }
            set {
                this.pvMudField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Yield point (in hole at start of job).</summary>
        [System.ComponentModel.DescriptionAttribute("Yield point (in hole at start of job).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ypMud", DataType="pressureMeasure")]
        public pressureMeasure ypMud {
            get {
                return this.ypMudField;
            }
            set {
                this.ypMudField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gels-10Sec (in hole at start of job).</summary>
        [System.ComponentModel.DescriptionAttribute("Gels-10Sec (in hole at start of job).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gel10Sec", DataType="pressureMeasure")]
        public pressureMeasure gel10Sec {
            get {
                return this.gel10SecField;
            }
            set {
                this.gel10SecField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gels-10Min (in hole at start of job).</summary>
        [System.ComponentModel.DescriptionAttribute("Gels-10Min (in hole at start of job).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gel10Min", DataType="pressureMeasure")]
        public pressureMeasure gel10Min {
            get {
                return this.gel10MinField;
            }
            set {
                this.gel10MinField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bottom hole circulating temperature.</summary>
        [System.ComponentModel.DescriptionAttribute("Bottom hole circulating temperature.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempBHCT", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempBHCT {
            get {
                return this.tempBHCTField;
            }
            set {
                this.tempBHCTField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bottom hole temperature static.</summary>
        [System.ComponentModel.DescriptionAttribute("Bottom hole temperature static.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempBHST", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempBHST {
            get {
                return this.tempBHSTField;
            }
            set {
                this.tempBHSTField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Method to estimate excess volume.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Method to estimate excess volume.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volExcessMethod", DataType="str32")]
        public string volExcessMethod {
            get {
                return this.volExcessMethodField;
            }
            set {
                this.volExcessMethodField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mix method.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Mix method.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mixMethod", DataType="str32")]
        public string mixMethod {
            get {
                return this.mixMethodField;
            }
            set {
                this.mixMethodField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Method by which density is measured.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Method by which density is measured.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densMeasBy", DataType="str32")]
        public string densMeasBy {
            get {
                return this.densMeasByField;
            }
            set {
                this.densMeasByField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fluid returns.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Fluid returns.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("annFlowAfter", DataType="logicalBoolean")]
        public bool annFlowAfter {
            get {
                return this.annFlowAfterField;
            }
            set {
                this.annFlowAfterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool annFlowAfterSpecified {
            get {
                return this.annFlowAfterFieldSpecified;
            }
            set {
                this.annFlowAfterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Top plug used?  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Top plug used?  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("topPlug", DataType="logicalBoolean")]
        public bool topPlug {
            get {
                return this.topPlugField;
            }
            set {
                this.topPlugField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool topPlugSpecified {
            get {
                return this.topPlugFieldSpecified;
            }
            set {
                this.topPlugFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bottom plug used.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Bottom plug used.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("botPlug", DataType="logicalBoolean")]
        public bool botPlug {
            get {
                return this.botPlugField;
            }
            set {
                this.botPlugField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool botPlugSpecified {
            get {
                return this.botPlugFieldSpecified;
            }
            set {
                this.botPlugFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Amount of bottom plug used.</summary>
        [System.ComponentModel.DescriptionAttribute("Amount of bottom plug used.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("botPlugNumber", DataType="nonNegativeCount")]
        public short botPlugNumber {
            get {
                return this.botPlugNumberField;
            }
            set {
                this.botPlugNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool botPlugNumberSpecified {
            get {
                return this.botPlugNumberFieldSpecified;
            }
            set {
                this.botPlugNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Plug bumped? Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Plug bumped? Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("plugBumped", DataType="logicalBoolean")]
        public bool plugBumped {
            get {
                return this.plugBumpedField;
            }
            set {
                this.plugBumpedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool plugBumpedSpecified {
            get {
                return this.plugBumpedFieldSpecified;
            }
            set {
                this.plugBumpedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pressure prior to bumping plug / pressure at end of displacement</summary>
        [System.ComponentModel.DescriptionAttribute("Pressure prior to bumping plug / pressure at end of displacement")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presPriorBump", DataType="pressureMeasure")]
        public pressureMeasure presPriorBump {
            get {
                return this.presPriorBumpField;
            }
            set {
                this.presPriorBumpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pressure plug bumped.</summary>
        [System.ComponentModel.DescriptionAttribute("Pressure plug bumped.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presBump", DataType="pressureMeasure")]
        public pressureMeasure presBump {
            get {
                return this.presBumpField;
            }
            set {
                this.presBumpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pressure held to.</summary>
        [System.ComponentModel.DescriptionAttribute("Pressure held to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presHeld", DataType="pressureMeasure")]
        public pressureMeasure presHeld {
            get {
                return this.presHeldField;
            }
            set {
                this.presHeldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Float held?  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Float held?  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("floatHeld", DataType="logicalBoolean")]
        public bool floatHeld {
            get {
                return this.floatHeldField;
            }
            set {
                this.floatHeldField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool floatHeldSpecified {
            get {
                return this.floatHeldFieldSpecified;
            }
            set {
                this.floatHeldFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total mud lost.</summary>
        [System.ComponentModel.DescriptionAttribute("Total mud lost.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volMudLost", DataType="volumeMeasure")]
        public volumeMeasure volMudLost {
            get {
                return this.volMudLostField;
            }
            set {
                this.volMudLostField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Displacement fluid name.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Displacement fluid name.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fluidDisplace", DataType="str32")]
        public string fluidDisplace {
            get {
                return this.fluidDisplaceField;
            }
            set {
                this.fluidDisplaceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Density of displacement fluid.</summary>
        [System.ComponentModel.DescriptionAttribute("Density of displacement fluid.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densDisplaceFluid", DataType="densityMeasure")]
        public densityMeasure densDisplaceFluid {
            get {
                return this.densDisplaceFluidField;
            }
            set {
                this.densDisplaceFluidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume of displacement fluid.</summary>
        [System.ComponentModel.DescriptionAttribute("Volume of displacement fluid.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volDisplaceFluid", DataType="volumeMeasure")]
        public volumeMeasure volDisplaceFluid {
            get {
                return this.volDisplaceFluidField;
            }
            set {
                this.volDisplaceFluidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_cementingFluid {
        
        private string typeFluidField;
        
        private short fluidIndexField;
        
        private bool fluidIndexFieldSpecified;
        
        private string descFluidField;
        
        private string purposeField;
        
        private string classSlurryDryBlendField;
        
        private measuredDepthCoord mdFluidTopField;
        
        private measuredDepthCoord mdFluidBottomField;
        
        private string sourceWaterField;
        
        private volumeMeasure volWaterField;
        
        private volumeMeasure volCementField;
        
        private specificVolumeMeasure ratioMixWaterField;
        
        private volumeMeasure volFluidField;
        
        private cs_cementPumpSchedule cementPumpScheduleField;
        
        private volumePerVolumeMeasure excessPcField;
        
        private specificVolumeMeasure volYieldField;
        
        private densityMeasure densityField;
        
        private volumePerVolumeMeasure solidVolumeFractionField;
        
        private volumeMeasure volPumpedField;
        
        private volumeMeasure volOtherField;
        
        private string fluidRheologicalModelField;
        
        private dynamicViscosityMeasure visField;
        
        private pressureMeasure ypField;
        
        private dimensionlessMeasure nField;
        
        private dimensionlessMeasure kField;
        
        private planeAngleMeasure gel10SecReadingField;
        
        private pressureMeasure gel10SecStrengthField;
        
        private planeAngleMeasure gel1MinReadingField;
        
        private pressureMeasure gel1MinStrengthField;
        
        private planeAngleMeasure gel10MinReadingField;
        
        private pressureMeasure gel10MinStrengthField;
        
        private string typeBaseFluidField;
        
        private densityMeasure densBaseFluidField;
        
        private string dryBlendNameField;
        
        private string dryBlendDescriptionField;
        
        private massMeasure massDryBlendField;
        
        private densityMeasure densDryBlendField;
        
        private massMeasure massSackDryBlendField;
        
        private cs_cementAdditive[] cementAdditiveField;
        
        private bool foamUsedField;
        
        private bool foamUsedFieldSpecified;
        
        private string typeGasFoamField;
        
        private volumeMeasure volGasFoamField;
        
        private volumePerVolumeMeasure ratioConstGasMethodAvField;
        
        private densityMeasure densConstGasMethodField;
        
        private volumePerVolumeMeasure ratioConstGasMethodStartField;
        
        private volumePerVolumeMeasure ratioConstGasMethodEndField;
        
        private densityMeasure densConstGasFoamField;
        
        private timeMeasure eTimThickeningField;
        
        private thermodynamicTemperatureMeasure tempThickeningField;
        
        private pressureMeasure presTestThickeningField;
        
        private dimensionlessMeasure consTestThickeningField;
        
        private volumePerVolumeMeasure pcFreeWaterField;
        
        private thermodynamicTemperatureMeasure tempFreeWaterField;
        
        private volumeMeasure volTestFluidLossField;
        
        private thermodynamicTemperatureMeasure tempFluidLossField;
        
        private pressureMeasure presTestFluidLossField;
        
        private timeMeasure timeFluidLossField;
        
        private volumeMeasure volAPIFluidLossField;
        
        private timeMeasure eTimComprStren1Field;
        
        private timeMeasure eTimComprStren2Field;
        
        private pressureMeasure presComprStren1Field;
        
        private pressureMeasure presComprStren2Field;
        
        private thermodynamicTemperatureMeasure tempComprStren1Field;
        
        private thermodynamicTemperatureMeasure tempComprStren2Field;
        
        private densityMeasure densAtPresField;
        
        private volumeMeasure volReservedField;
        
        private volumeMeasure volTotSlurryField;
        
        /// <remarks/>
        /// <summary>Fluid type: Mud, Wash, Spacer, Slurry.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Fluid type: Mud, Wash, Spacer, Slurry.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeFluid", DataType="str16")]
        public string typeFluid {
            get {
                return this.typeFluidField;
            }
            set {
                this.typeFluidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fluid Index: 1: first fluid pumped (=original mud),  (last-1)=Tail cement, last= displacement mud</summary>
        [System.ComponentModel.DescriptionAttribute("Fluid Index: 1: first fluid pumped (=original mud),  (last-1)=Tail cement, last= " +
            "displacement mud")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fluidIndex", DataType="positiveCount")]
        public short fluidIndex {
            get {
                return this.fluidIndexField;
            }
            set {
                this.fluidIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fluidIndexSpecified {
            get {
                return this.fluidIndexFieldSpecified;
            }
            set {
                this.fluidIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fluid description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Fluid description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("descFluid", DataType="shortDescriptionString")]
        public string descFluid {
            get {
                return this.descFluidField;
            }
            set {
                this.descFluidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Purpose description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Purpose description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("purpose", DataType="str32")]
        public string purpose {
            get {
                return this.purposeField;
            }
            set {
                this.purposeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Slurry class.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Slurry class.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("classSlurryDryBlend", DataType="str16")]
        public string classSlurryDryBlend {
            get {
                return this.classSlurryDryBlendField;
            }
            set {
                this.classSlurryDryBlendField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth at top of slurry placement.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth at top of slurry placement.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdFluidTop", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdFluidTop {
            get {
                return this.mdFluidTopField;
            }
            set {
                this.mdFluidTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth at bottom of slurry placement.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth at bottom of slurry placement.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdFluidBottom", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdFluidBottom {
            get {
                return this.mdFluidBottomField;
            }
            set {
                this.mdFluidBottomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Water Source Description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Water Source Description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sourceWater", DataType="str32")]
        public string sourceWater {
            get {
                return this.sourceWaterField;
            }
            set {
                this.sourceWaterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Water volume.</summary>
        [System.ComponentModel.DescriptionAttribute("Water volume.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volWater", DataType="volumeMeasure")]
        public volumeMeasure volWater {
            get {
                return this.volWaterField;
            }
            set {
                this.volWaterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume of cement.</summary>
        [System.ComponentModel.DescriptionAttribute("Volume of cement.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volCement", DataType="volumeMeasure")]
        public volumeMeasure volCement {
            get {
                return this.volCementField;
            }
            set {
                this.volCementField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mix Water Ratio.</summary>
        [System.ComponentModel.DescriptionAttribute("Mix Water Ratio.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ratioMixWater", DataType="specificVolumeMeasure")]
        public specificVolumeMeasure ratioMixWater {
            get {
                return this.ratioMixWaterField;
            }
            set {
                this.ratioMixWaterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fluid/Slurry Volume.</summary>
        [System.ComponentModel.DescriptionAttribute("Fluid/Slurry Volume.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volFluid", DataType="volumeMeasure")]
        public volumeMeasure volFluid {
            get {
                return this.volFluidField;
            }
            set {
                this.volFluidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Set of (Time / Rate / Back Pressure).</summary>
        [System.ComponentModel.DescriptionAttribute("Set of (Time / Rate / Back Pressure).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cementPumpSchedule", DataType="cs_cementPumpSchedule")]
        public cs_cementPumpSchedule cementPumpSchedule {
            get {
                return this.cementPumpScheduleField;
            }
            set {
                this.cementPumpScheduleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Excess Percent.</summary>
        [System.ComponentModel.DescriptionAttribute("Excess Percent.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("excessPc", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure excessPc {
            get {
                return this.excessPcField;
            }
            set {
                this.excessPcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Slurry Yield.</summary>
        [System.ComponentModel.DescriptionAttribute("Slurry Yield.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volYield", DataType="specificVolumeMeasure")]
        public specificVolumeMeasure volYield {
            get {
                return this.volYieldField;
            }
            set {
                this.volYieldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fluid density.</summary>
        [System.ComponentModel.DescriptionAttribute("Fluid density.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("density", DataType="densityMeasure")]
        public densityMeasure density {
            get {
                return this.densityField;
            }
            set {
                this.densityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Equals 1 - Porosity.</summary>
        [System.ComponentModel.DescriptionAttribute("Equals 1 - Porosity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("solidVolumeFraction", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure solidVolumeFraction {
            get {
                return this.solidVolumeFractionField;
            }
            set {
                this.solidVolumeFractionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume Pumped.</summary>
        [System.ComponentModel.DescriptionAttribute("Volume Pumped.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volPumped", DataType="volumeMeasure")]
        public volumeMeasure volPumped {
            get {
                return this.volPumpedField;
            }
            set {
                this.volPumpedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Other Volume.</summary>
        [System.ComponentModel.DescriptionAttribute("Other Volume.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volOther", DataType="volumeMeasure")]
        public volumeMeasure volOther {
            get {
                return this.volOtherField;
            }
            set {
                this.volOtherField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Newtonian/Bingham/Power Law/Herschel Bulkley.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Newtonian/Bingham/Power Law/Herschel Bulkley.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fluidRheologicalModel", DataType="str16")]
        public string fluidRheologicalModel {
            get {
                return this.fluidRheologicalModelField;
            }
            set {
                this.fluidRheologicalModelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Viscosity (Newtonian) or Plastic Viscosity if Bingham.</summary>
        [System.ComponentModel.DescriptionAttribute("Viscosity (Newtonian) or Plastic Viscosity if Bingham.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("vis", DataType="dynamicViscosityMeasure")]
        public dynamicViscosityMeasure vis {
            get {
                return this.visField;
            }
            set {
                this.visField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Yield point (Bingham and Herschel Bulkley models).</summary>
        [System.ComponentModel.DescriptionAttribute("Yield point (Bingham and Herschel Bulkley models).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("yp", DataType="pressureMeasure")]
        public pressureMeasure yp {
            get {
                return this.ypField;
            }
            set {
                this.ypField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Power Law index (Power Law and HB).</summary>
        [System.ComponentModel.DescriptionAttribute("Power Law index (Power Law and HB).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("n", DataType="dimensionlessMeasure")]
        public dimensionlessMeasure n {
            get {
                return this.nField;
            }
            set {
                this.nField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Consistency index (Power Law and HB).</summary>
        [System.ComponentModel.DescriptionAttribute("Consistency index (Power Law and HB).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("k", DataType="dimensionlessMeasure")]
        public dimensionlessMeasure k {
            get {
                return this.kField;
            }
            set {
                this.kField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gel reading after 10 seconds.</summary>
        [System.ComponentModel.DescriptionAttribute("Gel reading after 10 seconds.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gel10SecReading", DataType="planeAngleMeasure")]
        public planeAngleMeasure gel10SecReading {
            get {
                return this.gel10SecReadingField;
            }
            set {
                this.gel10SecReadingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gel strength after 10 seconds.</summary>
        [System.ComponentModel.DescriptionAttribute("Gel strength after 10 seconds.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gel10SecStrength", DataType="pressureMeasure")]
        public pressureMeasure gel10SecStrength {
            get {
                return this.gel10SecStrengthField;
            }
            set {
                this.gel10SecStrengthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gel reading after 1 minute.</summary>
        [System.ComponentModel.DescriptionAttribute("Gel reading after 1 minute.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gel1MinReading", DataType="planeAngleMeasure")]
        public planeAngleMeasure gel1MinReading {
            get {
                return this.gel1MinReadingField;
            }
            set {
                this.gel1MinReadingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gel strength after 1 minute.</summary>
        [System.ComponentModel.DescriptionAttribute("Gel strength after 1 minute.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gel1MinStrength", DataType="pressureMeasure")]
        public pressureMeasure gel1MinStrength {
            get {
                return this.gel1MinStrengthField;
            }
            set {
                this.gel1MinStrengthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gel reading after 10 minutes.</summary>
        [System.ComponentModel.DescriptionAttribute("Gel reading after 10 minutes.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gel10MinReading", DataType="planeAngleMeasure")]
        public planeAngleMeasure gel10MinReading {
            get {
                return this.gel10MinReadingField;
            }
            set {
                this.gel10MinReadingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gel strength after 10 minutes.</summary>
        [System.ComponentModel.DescriptionAttribute("Gel strength after 10 minutes.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gel10MinStrength", DataType="pressureMeasure")]
        public pressureMeasure gel10MinStrength {
            get {
                return this.gel10MinStrengthField;
            }
            set {
                this.gel10MinStrengthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of base fluid: Fresh water, Sea water, Brine, Brackish water.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Type of base fluid: Fresh water, Sea water, Brine, Brackish water.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeBaseFluid", DataType="str16")]
        public string typeBaseFluid {
            get {
                return this.typeBaseFluidField;
            }
            set {
                this.typeBaseFluidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Density of base fluid.</summary>
        [System.ComponentModel.DescriptionAttribute("Density of base fluid.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densBaseFluid", DataType="densityMeasure")]
        public densityMeasure densBaseFluid {
            get {
                return this.densBaseFluidField;
            }
            set {
                this.densBaseFluidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of dry blend.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Name of dry blend.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dryBlendName", DataType="str32")]
        public string dryBlendName {
            get {
                return this.dryBlendNameField;
            }
            set {
                this.dryBlendNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of dry blend.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Description of dry blend.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dryBlendDescription", DataType="shortDescriptionString")]
        public string dryBlendDescription {
            get {
                return this.dryBlendDescriptionField;
            }
            set {
                this.dryBlendDescriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mass of dry blend: the blend is made of different solid additives: the volume is not constant.</summary>
        [System.ComponentModel.DescriptionAttribute("Mass of dry blend: the blend is made of different solid additives: the volume is " +
            "not constant.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("massDryBlend", DataType="massMeasure")]
        public massMeasure massDryBlend {
            get {
                return this.massDryBlendField;
            }
            set {
                this.massDryBlendField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Density of Dry blend.</summary>
        [System.ComponentModel.DescriptionAttribute("Density of Dry blend.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densDryBlend", DataType="densityMeasure")]
        public densityMeasure densDryBlend {
            get {
                return this.densDryBlendField;
            }
            set {
                this.densDryBlendField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Weight of a sack of dry blend.</summary>
        [System.ComponentModel.DescriptionAttribute("Weight of a sack of dry blend.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("massSackDryBlend", DataType="massMeasure")]
        public massMeasure massSackDryBlend {
            get {
                return this.massSackDryBlendField;
            }
            set {
                this.massSackDryBlendField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Additives can be added in slurry but also in spacers, washes, mud.</summary>
        [System.Xml.Serialization.XmlElementAttribute("cementAdditive")]
        [System.ComponentModel.DescriptionAttribute("Additives can be added in slurry but also in spacers, washes, mud.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cementAdditive", DataType="cs_cementAdditive")]
        public cs_cementAdditive[] cementAdditive {
            get {
                return this.cementAdditiveField;
            }
            set {
                this.cementAdditiveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Foam used indicator.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Foam used indicator.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("foamUsed", DataType="logicalBoolean")]
        public bool foamUsed {
            get {
                return this.foamUsedField;
            }
            set {
                this.foamUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool foamUsedSpecified {
            get {
                return this.foamUsedFieldSpecified;
            }
            set {
                this.foamUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gas type used for foam job.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Gas type used for foam job.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeGasFoam", DataType="str32")]
        public string typeGasFoam {
            get {
                return this.typeGasFoamField;
            }
            set {
                this.typeGasFoamField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume of gas used for foam job.</summary>
        [System.ComponentModel.DescriptionAttribute("Volume of gas used for foam job.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volGasFoam", DataType="volumeMeasure")]
        public volumeMeasure volGasFoam {
            get {
                return this.volGasFoamField;
            }
            set {
                this.volGasFoamField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Constant gas ratio method ratio</summary>
        [System.ComponentModel.DescriptionAttribute("Constant gas ratio method ratio")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ratioConstGasMethodAv", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure ratioConstGasMethodAv {
            get {
                return this.ratioConstGasMethodAvField;
            }
            set {
                this.ratioConstGasMethodAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Constant gas ratio method average density.</summary>
        [System.ComponentModel.DescriptionAttribute("Constant gas ratio method average density.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densConstGasMethod", DataType="densityMeasure")]
        public densityMeasure densConstGasMethod {
            get {
                return this.densConstGasMethodField;
            }
            set {
                this.densConstGasMethodField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Constant gas ratio method initial method ratio.</summary>
        [System.ComponentModel.DescriptionAttribute("Constant gas ratio method initial method ratio.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ratioConstGasMethodStart", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure ratioConstGasMethodStart {
            get {
                return this.ratioConstGasMethodStartField;
            }
            set {
                this.ratioConstGasMethodStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Constant gas ratio method final method ratio.</summary>
        [System.ComponentModel.DescriptionAttribute("Constant gas ratio method final method ratio.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ratioConstGasMethodEnd", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure ratioConstGasMethodEnd {
            get {
                return this.ratioConstGasMethodEndField;
            }
            set {
                this.ratioConstGasMethodEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Constant gas ratio method average density.</summary>
        [System.ComponentModel.DescriptionAttribute("Constant gas ratio method average density.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densConstGasFoam", DataType="densityMeasure")]
        public densityMeasure densConstGasFoam {
            get {
                return this.densConstGasFoamField;
            }
            set {
                this.densConstGasFoamField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Test thickening time.</summary>
        [System.ComponentModel.DescriptionAttribute("Test thickening time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eTimThickening", DataType="timeMeasure")]
        public timeMeasure eTimThickening {
            get {
                return this.eTimThickeningField;
            }
            set {
                this.eTimThickeningField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Test thickening temperature.</summary>
        [System.ComponentModel.DescriptionAttribute("Test thickening temperature.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempThickening", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempThickening {
            get {
                return this.tempThickeningField;
            }
            set {
                this.tempThickeningField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Test thickening pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Test thickening pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presTestThickening", DataType="pressureMeasure")]
        public pressureMeasure presTestThickening {
            get {
                return this.presTestThickeningField;
            }
            set {
                this.presTestThickeningField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Test thickening consistency/slurry viscosity - Bearden Consistency (Bc) 0 to 100.</summary>
        [System.ComponentModel.DescriptionAttribute("Test thickening consistency/slurry viscosity - Bearden Consistency (Bc) 0 to 100." +
            "")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("consTestThickening", DataType="dimensionlessMeasure")]
        public dimensionlessMeasure consTestThickening {
            get {
                return this.consTestThickeningField;
            }
            set {
                this.consTestThickeningField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Test free water na: = mL/250ML.</summary>
        [System.ComponentModel.DescriptionAttribute("Test free water na: = mL/250ML.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pcFreeWater", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure pcFreeWater {
            get {
                return this.pcFreeWaterField;
            }
            set {
                this.pcFreeWaterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Test free water temperature.</summary>
        [System.ComponentModel.DescriptionAttribute("Test free water temperature.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempFreeWater", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempFreeWater {
            get {
                return this.tempFreeWaterField;
            }
            set {
                this.tempFreeWaterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Test fluid loss.</summary>
        [System.ComponentModel.DescriptionAttribute("Test fluid loss.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volTestFluidLoss", DataType="volumeMeasure")]
        public volumeMeasure volTestFluidLoss {
            get {
                return this.volTestFluidLossField;
            }
            set {
                this.volTestFluidLossField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Test fluid loss temperature.</summary>
        [System.ComponentModel.DescriptionAttribute("Test fluid loss temperature.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempFluidLoss", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempFluidLoss {
            get {
                return this.tempFluidLossField;
            }
            set {
                this.tempFluidLossField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Test Fluid loss pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Test Fluid loss pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presTestFluidLoss", DataType="pressureMeasure")]
        public pressureMeasure presTestFluidLoss {
            get {
                return this.presTestFluidLossField;
            }
            set {
                this.presTestFluidLossField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Test Fluid loss: dehydrating test period, used to compute the API Fluid Loss.</summary>
        [System.ComponentModel.DescriptionAttribute("Test Fluid loss: dehydrating test period, used to compute the API Fluid Loss.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("timeFluidLoss", DataType="timeMeasure")]
        public timeMeasure timeFluidLoss {
            get {
                return this.timeFluidLossField;
            }
            set {
                this.timeFluidLossField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>API Fluid Loss = 2 * volTestFluidLoss * SQRT(30/timefluidloss).</summary>
        [System.ComponentModel.DescriptionAttribute("API Fluid Loss = 2 * volTestFluidLoss * SQRT(30/timefluidloss).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volAPIFluidLoss", DataType="volumeMeasure")]
        public volumeMeasure volAPIFluidLoss {
            get {
                return this.volAPIFluidLossField;
            }
            set {
                this.volAPIFluidLossField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Compressive strength time 1.</summary>
        [System.ComponentModel.DescriptionAttribute("Compressive strength time 1.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eTimComprStren1", DataType="timeMeasure")]
        public timeMeasure eTimComprStren1 {
            get {
                return this.eTimComprStren1Field;
            }
            set {
                this.eTimComprStren1Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Compressive strength time 2.</summary>
        [System.ComponentModel.DescriptionAttribute("Compressive strength time 2.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eTimComprStren2", DataType="timeMeasure")]
        public timeMeasure eTimComprStren2 {
            get {
                return this.eTimComprStren2Field;
            }
            set {
                this.eTimComprStren2Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Compressive strength pressure 1.</summary>
        [System.ComponentModel.DescriptionAttribute("Compressive strength pressure 1.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presComprStren1", DataType="pressureMeasure")]
        public pressureMeasure presComprStren1 {
            get {
                return this.presComprStren1Field;
            }
            set {
                this.presComprStren1Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Compressive strength pressure 2.</summary>
        [System.ComponentModel.DescriptionAttribute("Compressive strength pressure 2.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presComprStren2", DataType="pressureMeasure")]
        public pressureMeasure presComprStren2 {
            get {
                return this.presComprStren2Field;
            }
            set {
                this.presComprStren2Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Compressive strength temperature 1.</summary>
        [System.ComponentModel.DescriptionAttribute("Compressive strength temperature 1.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempComprStren1", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempComprStren1 {
            get {
                return this.tempComprStren1Field;
            }
            set {
                this.tempComprStren1Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Compressive strength temperature 2.</summary>
        [System.ComponentModel.DescriptionAttribute("Compressive strength temperature 2.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempComprStren2", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempComprStren2 {
            get {
                return this.tempComprStren2Field;
            }
            set {
                this.tempComprStren2Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Slurry density at pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Slurry density at pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densAtPres", DataType="densityMeasure")]
        public densityMeasure densAtPres {
            get {
                return this.densAtPresField;
            }
            set {
                this.densAtPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume reserved.</summary>
        [System.ComponentModel.DescriptionAttribute("Volume reserved.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volReserved", DataType="volumeMeasure")]
        public volumeMeasure volReserved {
            get {
                return this.volReservedField;
            }
            set {
                this.volReservedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total Slurry Volume.</summary>
        [System.ComponentModel.DescriptionAttribute("Total Slurry Volume.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volTotSlurry", DataType="volumeMeasure")]
        public volumeMeasure volTotSlurry {
            get {
                return this.volTotSlurryField;
            }
            set {
                this.volTotSlurryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_cementPumpSchedule {
        
        private timeMeasure eTimPumpField;
        
        private volumeFlowRateMeasure ratePumpField;
        
        private volumeMeasure volPumpField;
        
        private short strokePumpField;
        
        private bool strokePumpFieldSpecified;
        
        private pressureMeasure presBackField;
        
        private timeMeasure eTimShutdownField;
        
        private string commentsField;
        
        /// <remarks/>
        /// <summary>(Elapsed time period during the fluid is pumped.</summary>
        [System.ComponentModel.DescriptionAttribute("(Elapsed time period during the fluid is pumped.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eTimPump", DataType="timeMeasure")]
        public timeMeasure eTimPump {
            get {
                return this.eTimPumpField;
            }
            set {
                this.eTimPumpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rate fluid is pumped. 0 means it is a pause.</summary>
        [System.ComponentModel.DescriptionAttribute("Rate fluid is pumped. 0 means it is a pause.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ratePump", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure ratePump {
            get {
                return this.ratePumpField;
            }
            set {
                this.ratePumpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume pumped = eTimPump * ratePump.</summary>
        [System.ComponentModel.DescriptionAttribute("Volume pumped = eTimPump * ratePump.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volPump", DataType="volumeMeasure")]
        public volumeMeasure volPump {
            get {
                return this.volPumpField;
            }
            set {
                this.volPumpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of pump strokes for the fluid to be pumped (assumes pump output known).</summary>
        [System.ComponentModel.DescriptionAttribute("Number of pump strokes for the fluid to be pumped (assumes pump output known).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("strokePump", DataType="nonNegativeCount")]
        public short strokePump {
            get {
                return this.strokePumpField;
            }
            set {
                this.strokePumpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool strokePumpSpecified {
            get {
                return this.strokePumpFieldSpecified;
            }
            set {
                this.strokePumpFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Back pressure applied during pumping stage.</summary>
        [System.ComponentModel.DescriptionAttribute("Back pressure applied during pumping stage.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presBack", DataType="pressureMeasure")]
        public pressureMeasure presBack {
            get {
                return this.presBackField;
            }
            set {
                this.presBackField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>If shutdown event, the elapsed time duration.</summary>
        [System.ComponentModel.DescriptionAttribute("If shutdown event, the elapsed time duration.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eTimShutdown", DataType="timeMeasure")]
        public timeMeasure eTimShutdown {
            get {
                return this.eTimShutdownField;
            }
            set {
                this.eTimShutdownField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comments and Remarks.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Comments and Remarks.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comments", DataType="commentString")]
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_cementAdditive {
        
        private string nameAddField;
        
        private string typeAddField;
        
        private string formAddField;
        
        private densityMeasure densAddField;
        
        private object[] itemsField;
        
        private massMeasure additiveField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Additive name.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Additive name.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameAdd", DataType="str32")]
        public string nameAdd {
            get {
                return this.nameAddField;
            }
            set {
                this.nameAddField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Additive type or Function (Retarder, Visosifier, Weighting agent).</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Additive type or Function (Retarder, Visosifier, Weighting agent).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeAdd", DataType="str32")]
        public string typeAdd {
            get {
                return this.typeAddField;
            }
            set {
                this.typeAddField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Wet or Dry.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Wet or Dry.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("formAdd", DataType="str16")]
        public string formAdd {
            get {
                return this.formAddField;
            }
            set {
                this.formAddField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Additive density.</summary>
        [System.ComponentModel.DescriptionAttribute("Additive density.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densAdd", DataType="densityMeasure")]
        public densityMeasure densAdd {
            get {
                return this.densAddField;
            }
            set {
                this.densAddField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("concentration", typeof(massConcentrationMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("typeConc", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("volSack", typeof(volumeMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("wtSack", typeof(massMeasure))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wtSack", DataType="massMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volSack", DataType="volumeMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeConc", DataType="str16")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("concentration", DataType="massConcentrationMeasure")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Additive Amount.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Additive Amount.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("additive", DataType="massMeasure")]
        public massMeasure additive {
            get {
                return this.additiveField;
            }
            set {
                this.additiveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_cementTest {
        
        private pressureMeasure presTestField;
        
        private timeMeasure eTimTestField;
        
        private bool cementShoeCollarField;
        
        private bool cementShoeCollarFieldSpecified;
        
        private bool cetRunField;
        
        private bool cetRunFieldSpecified;
        
        private bool cetBondQualField;
        
        private bool cetBondQualFieldSpecified;
        
        private bool cblRunField;
        
        private bool cblRunFieldSpecified;
        
        private bool cblBondQualField;
        
        private bool cblBondQualFieldSpecified;
        
        private pressureMeasure cblPresField;
        
        private bool tempSurveyField;
        
        private bool tempSurveyFieldSpecified;
        
        private timeMeasure eTimCementLogField;
        
        private forcePerVolumeMeasure formPitField;
        
        private string toolCompanyPitField;
        
        private timeMeasure eTimPitStartField;
        
        private measuredDepthCoord mdCementTopField;
        
        private string topCementMethodField;
        
        private bool tocOKField;
        
        private bool tocOKFieldSpecified;
        
        private string jobRatingField;
        
        private bool remedialCementField;
        
        private bool remedialCementFieldSpecified;
        
        private short numRemedialField;
        
        private bool numRemedialFieldSpecified;
        
        private string failureMethodField;
        
        private lengthMeasure linerTopField;
        
        private lengthMeasure linerLapField;
        
        private timeMeasure eTimBeforeTestField;
        
        private string testNegativeToolField;
        
        private densityMeasure testNegativeEmwField;
        
        private string testPositiveToolField;
        
        private densityMeasure testPositiveEmwField;
        
        private bool cementFoundOnToolField;
        
        private bool cementFoundOnToolFieldSpecified;
        
        private measuredDepthCoord mdDVToolField;
        
        /// <remarks/>
        /// <summary>Test pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Test pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presTest", DataType="pressureMeasure")]
        public pressureMeasure presTest {
            get {
                return this.presTestField;
            }
            set {
                this.presTestField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Elapsed tome to perform the test.</summary>
        [System.ComponentModel.DescriptionAttribute("Elapsed tome to perform the test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eTimTest", DataType="timeMeasure")]
        public timeMeasure eTimTest {
            get {
                return this.eTimTestField;
            }
            set {
                this.eTimTestField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cement found between shoe and collar?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Cement found between shoe and collar?   Values are \"true\" (or \"1\") and \"false\" (o" +
            "r \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cementShoeCollar", DataType="logicalBoolean")]
        public bool cementShoeCollar {
            get {
                return this.cementShoeCollarField;
            }
            set {
                this.cementShoeCollarField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cementShoeCollarSpecified {
            get {
                return this.cementShoeCollarFieldSpecified;
            }
            set {
                this.cementShoeCollarFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cement evaluation tool run.   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Cement evaluation tool run.   Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cetRun", DataType="logicalBoolean")]
        public bool cetRun {
            get {
                return this.cetRunField;
            }
            set {
                this.cetRunField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cetRunSpecified {
            get {
                return this.cetRunFieldSpecified;
            }
            set {
                this.cetRunFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cement evaluation tool bond quality.   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Cement evaluation tool bond quality.   Values are \"true\" (or \"1\") and \"false\" (or" +
            " \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cetBondQual", DataType="logicalBoolean")]
        public bool cetBondQual {
            get {
                return this.cetBondQualField;
            }
            set {
                this.cetBondQualField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cetBondQualSpecified {
            get {
                return this.cetBondQualFieldSpecified;
            }
            set {
                this.cetBondQualFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cement bond log run?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Cement bond log run?   Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cblRun", DataType="logicalBoolean")]
        public bool cblRun {
            get {
                return this.cblRunField;
            }
            set {
                this.cblRunField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cblRunSpecified {
            get {
                return this.cblRunFieldSpecified;
            }
            set {
                this.cblRunFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cement bond log quality indication.   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Cement bond log quality indication.   Values are \"true\" (or \"1\") and \"false\" (or " +
            "\"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cblBondQual", DataType="logicalBoolean")]
        public bool cblBondQual {
            get {
                return this.cblBondQualField;
            }
            set {
                this.cblBondQualField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cblBondQualSpecified {
            get {
                return this.cblBondQualFieldSpecified;
            }
            set {
                this.cblBondQualFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cement bond Log under pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Cement bond Log under pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cblPres", DataType="pressureMeasure")]
        public pressureMeasure cblPres {
            get {
                return this.cblPresField;
            }
            set {
                this.cblPresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Temperature survey run.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Temperature survey run.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempSurvey", DataType="logicalBoolean")]
        public bool tempSurvey {
            get {
                return this.tempSurveyField;
            }
            set {
                this.tempSurveyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tempSurveySpecified {
            get {
                return this.tempSurveyFieldSpecified;
            }
            set {
                this.tempSurveyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hours before logging run after cement run.</summary>
        [System.ComponentModel.DescriptionAttribute("Hours before logging run after cement run.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eTimCementLog", DataType="timeMeasure")]
        public timeMeasure eTimCementLog {
            get {
                return this.eTimCementLogField;
            }
            set {
                this.eTimCementLogField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>PIT/LOT formation breakdown gradient or absolute pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("PIT/LOT formation breakdown gradient or absolute pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("formPit", DataType="forcePerVolumeMeasure")]
        public forcePerVolumeMeasure formPit {
            get {
                return this.formPitField;
            }
            set {
                this.formPitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Tool name for PIT.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Tool name for PIT.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("toolCompanyPit", DataType="nameString")]
        public string toolCompanyPit {
            get {
                return this.toolCompanyPitField;
            }
            set {
                this.toolCompanyPitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hours between end of cement job-start of PIT.</summary>
        [System.ComponentModel.DescriptionAttribute("Hours between end of cement job-start of PIT.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eTimPitStart", DataType="timeMeasure")]
        public timeMeasure eTimPitStart {
            get {
                return this.eTimPitStartField;
            }
            set {
                this.eTimPitStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth at top of cement.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth at top of cement.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdCementTop", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdCementTop {
            get {
                return this.mdCementTopField;
            }
            set {
                this.mdCementTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Method to determine cement top.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Method to determine cement top.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("topCementMethod", DataType="str32")]
        public string topCementMethod {
            get {
                return this.topCementMethodField;
            }
            set {
                this.topCementMethodField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is the top of cement sufficient?  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Is the top of cement sufficient?  Values are \"true\" (or \"1\") and \"false\" (or \"0\")" +
            ".")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tocOK", DataType="logicalBoolean")]
        public bool tocOK {
            get {
                return this.tocOKField;
            }
            set {
                this.tocOKField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tocOKSpecified {
            get {
                return this.tocOKFieldSpecified;
            }
            set {
                this.tocOKFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Job rating.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Job rating.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("jobRating", DataType="str16")]
        public string jobRating {
            get {
                return this.jobRatingField;
            }
            set {
                this.jobRatingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Remedial cement required.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Remedial cement required.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("remedialCement", DataType="logicalBoolean")]
        public bool remedialCement {
            get {
                return this.remedialCementField;
            }
            set {
                this.remedialCementField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool remedialCementSpecified {
            get {
                return this.remedialCementFieldSpecified;
            }
            set {
                this.remedialCementFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of remedials.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of remedials.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numRemedial", DataType="nonNegativeCount")]
        public short numRemedial {
            get {
                return this.numRemedialField;
            }
            set {
                this.numRemedialField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numRemedialSpecified {
            get {
                return this.numRemedialFieldSpecified;
            }
            set {
                this.numRemedialFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Method used to determine if cement job unsuccessful.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Method used to determine if cement job unsuccessful.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("failureMethod", DataType="str32")]
        public string failureMethod {
            get {
                return this.failureMethodField;
            }
            set {
                this.failureMethodField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The distance to the top of the liner.</summary>
        [System.ComponentModel.DescriptionAttribute("The distance to the top of the liner.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("linerTop", DataType="lengthMeasure")]
        public lengthMeasure linerTop {
            get {
                return this.linerTopField;
            }
            set {
                this.linerTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Liner overlap length.</summary>
        [System.ComponentModel.DescriptionAttribute("Liner overlap length.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("linerLap", DataType="lengthMeasure")]
        public lengthMeasure linerLap {
            get {
                return this.linerLapField;
            }
            set {
                this.linerLapField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hours before liner top test.</summary>
        [System.ComponentModel.DescriptionAttribute("Hours before liner top test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eTimBeforeTest", DataType="timeMeasure")]
        public timeMeasure eTimBeforeTest {
            get {
                return this.eTimBeforeTestField;
            }
            set {
                this.eTimBeforeTestField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Test negative tool for Liner top seal.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Test negative tool for Liner top seal.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testNegativeTool", DataType="str32")]
        public string testNegativeTool {
            get {
                return this.testNegativeToolField;
            }
            set {
                this.testNegativeToolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Equivalent mud weight. Negative Test?</summary>
        [System.ComponentModel.DescriptionAttribute("Equivalent mud weight. Negative Test?")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testNegativeEmw", DataType="densityMeasure")]
        public densityMeasure testNegativeEmw {
            get {
                return this.testNegativeEmwField;
            }
            set {
                this.testNegativeEmwField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Test Positive Tool for liner top seal.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Test Positive Tool for liner top seal.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testPositiveTool", DataType="str32")]
        public string testPositiveTool {
            get {
                return this.testPositiveToolField;
            }
            set {
                this.testPositiveToolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Equivalent mud weight. Positive Test or absolute pressure .</summary>
        [System.ComponentModel.DescriptionAttribute("Equivalent mud weight. Positive Test or absolute pressure .")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testPositiveEmw", DataType="densityMeasure")]
        public densityMeasure testPositiveEmw {
            get {
                return this.testPositiveEmwField;
            }
            set {
                this.testPositiveEmwField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cement found on tool?  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Cement found on tool?  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cementFoundOnTool", DataType="logicalBoolean")]
        public bool cementFoundOnTool {
            get {
                return this.cementFoundOnToolField;
            }
            set {
                this.cementFoundOnToolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cementFoundOnToolSpecified {
            get {
                return this.cementFoundOnToolFieldSpecified;
            }
            set {
                this.cementFoundOnToolFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth to diverter tool.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth to diverter tool.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdDVTool", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdDVTool {
            get {
                return this.mdDVToolField;
            }
            set {
                this.mdDVToolField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [System.Xml.Serialization.XmlRootAttribute("convCores", Namespace="http://www.witsml.org/schemas/131", IsNullable=false)]
    public partial class obj_convCores {
        
        private cs_documentInfo documentInfoField;
        
        private obj_convCore[] convCoreField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A single conventional core.</summary>
        [System.Xml.Serialization.XmlElementAttribute("convCore")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A single conventional core.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("convCore", DataType="obj_convCore")]
        public obj_convCore[] convCore {
            get {
                return this.convCoreField;
            }
            set {
                this.convCoreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.3\\.1\\.([1-9]|([1-9][0-9]))")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionString")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("WITSML", "1.3.1.1")]
    public partial class obj_convCore {
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string nameField;
        
        private measuredDepthCoord mdCoreTopField;
        
        private measuredDepthCoord mdCoreBottomField;
        
        private Energistics.DataAccess.Timestamp dTimCoreStartField;
        
        private bool dTimCoreStartFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimCoreEndField;
        
        private bool dTimCoreEndFieldSpecified;
        
        private string coreReferenceField;
        
        private string coringContractorField;
        
        private string analysisContractorField;
        
        private string coreBarrelField;
        
        private bool innerBarrelUsedField;
        
        private bool innerBarrelUsedFieldSpecified;
        
        private string innerBarrelTypeField;
        
        private lengthMeasure lenBarrelField;
        
        private string coreBitTypeField;
        
        private lengthMeasure diaBitField;
        
        private lengthMeasure diaCoreField;
        
        private lengthMeasure lenCoredField;
        
        private lengthMeasure lenRecoveredField;
        
        private volumePerVolumeMeasure recoverPcField;
        
        private planeAngleMeasure inclHoleField;
        
        private bool coreOrientationField;
        
        private bool coreOrientationFieldSpecified;
        
        private string coreMethodField;
        
        private string coreTreatmentMethodField;
        
        private string coreFluidUsedField;
        
        private string nameFormationField;
        
        private cs_geologyInterval geologyIntervalField;
        
        private string coreDescriptionField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidWellboreField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore that contains the conventional core.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore that contains the conventional core.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWellbore", DataType="nameString")]
        public string nameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the conventional core.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the conventional core.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Top depth of core interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Top depth of core interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdCoreTop", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdCoreTop {
            get {
                return this.mdCoreTopField;
            }
            set {
                this.mdCoreTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bottom depth of core interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Bottom depth of core interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdCoreBottom", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdCoreBottom {
            get {
                return this.mdCoreBottomField;
            }
            set {
                this.mdCoreBottomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time when coring commenced (cutting new core).</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time when coring commenced (cutting new core).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimCoreStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimCoreStart {
            get {
                return this.dTimCoreStartField;
            }
            set {
                this.dTimCoreStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimCoreStartSpecified {
            get {
                return this.dTimCoreStartFieldSpecified;
            }
            set {
                this.dTimCoreStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time when coring complete (end of cutting new core).</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time when coring complete (end of cutting new core).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimCoreEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimCoreEnd {
            get {
                return this.dTimCoreEndField;
            }
            set {
                this.dTimCoreEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimCoreEndSpecified {
            get {
                return this.dTimCoreEndFieldSpecified;
            }
            set {
                this.dTimCoreEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturer core reference.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Manufacturer core reference.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("coreReference", DataType="str32")]
        public string coreReference {
            get {
                return this.coreReferenceField;
            }
            set {
                this.coreReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of coring contractor.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of coring contractor.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("coringContractor", DataType="nameString")]
        public string coringContractor {
            get {
                return this.coringContractorField;
            }
            set {
                this.coringContractorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of analysis company.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of analysis company.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("analysisContractor", DataType="nameString")]
        public string analysisContractor {
            get {
                return this.analysisContractorField;
            }
            set {
                this.analysisContractorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Core barrel type.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Core barrel type.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("coreBarrel", DataType="str32")]
        public string coreBarrel {
            get {
                return this.coreBarrelField;
            }
            set {
                this.coreBarrelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner barrel used? Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Inner barrel used? Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("innerBarrelUsed", DataType="logicalBoolean")]
        public bool innerBarrelUsed {
            get {
                return this.innerBarrelUsedField;
            }
            set {
                this.innerBarrelUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool innerBarrelUsedSpecified {
            get {
                return this.innerBarrelUsedFieldSpecified;
            }
            set {
                this.innerBarrelUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Core inner barrel type.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Core inner barrel type.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("innerBarrelType", DataType="str32")]
        public string innerBarrelType {
            get {
                return this.innerBarrelTypeField;
            }
            set {
                this.innerBarrelTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of core barrel.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of core barrel.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenBarrel", DataType="lengthMeasure")]
        public lengthMeasure lenBarrel {
            get {
                return this.lenBarrelField;
            }
            set {
                this.lenBarrelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Core bit type.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Core bit type.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("coreBitType", DataType="str32")]
        public string coreBitType {
            get {
                return this.coreBitTypeField;
            }
            set {
                this.coreBitTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Core bit outer diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Core bit outer diameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("diaBit", DataType="lengthMeasure")]
        public lengthMeasure diaBit {
            get {
                return this.diaBitField;
            }
            set {
                this.diaBitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Core cut diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Core cut diameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("diaCore", DataType="lengthMeasure")]
        public lengthMeasure diaCore {
            get {
                return this.diaCoreField;
            }
            set {
                this.diaCoreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cored interval length.</summary>
        [System.ComponentModel.DescriptionAttribute("Cored interval length.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenCored", DataType="lengthMeasure")]
        public lengthMeasure lenCored {
            get {
                return this.lenCoredField;
            }
            set {
                this.lenCoredField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of core recovered.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of core recovered.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenRecovered", DataType="lengthMeasure")]
        public lengthMeasure lenRecovered {
            get {
                return this.lenRecoveredField;
            }
            set {
                this.lenRecoveredField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calculate recovery (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Calculate recovery (commonly in percent).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("recoverPc", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure recoverPc {
            get {
                return this.recoverPcField;
            }
            set {
                this.recoverPcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Wellbore inclination over cored interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Wellbore inclination over cored interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("inclHole", DataType="planeAngleMeasure")]
        public planeAngleMeasure inclHole {
            get {
                return this.inclHoleField;
            }
            set {
                this.inclHoleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True if the core can be re-oriented in space after  extraction when a tool-face has been used. Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("True if the core can be re-oriented in space after  extraction when a tool-face h" +
            "as been used. Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("coreOrientation", DataType="logicalBoolean")]
        public bool coreOrientation {
            get {
                return this.coreOrientationField;
            }
            set {
                this.coreOrientationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool coreOrientationSpecified {
            get {
                return this.coreOrientationFieldSpecified;
            }
            set {
                this.coreOrientationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Method to catch core - fiberglass barrel, conventional, etc.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Method to catch core - fiberglass barrel, conventional, etc.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("coreMethod", DataType="str32")]
        public string coreMethod {
            get {
                return this.coreMethodField;
            }
            set {
                this.coreMethodField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Preservation method description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Preservation method description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("coreTreatmentMethod", DataType="str32")]
        public string coreTreatmentMethod {
            get {
                return this.coreTreatmentMethodField;
            }
            set {
                this.coreTreatmentMethodField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud type in use when cutting core.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Mud type in use when cutting core.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("coreFluidUsed", DataType="str32")]
        public string coreFluidUsed {
            get {
                return this.coreFluidUsedField;
            }
            set {
                this.coreFluidUsedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of formation penetrated.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Name of formation penetrated.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameFormation", DataType="str32")]
        public string nameFormation {
            get {
                return this.nameFormationField;
            }
            set {
                this.nameFormationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Set of Geological intervals, descriptions, gas readings for the cored  interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Set of Geological intervals, descriptions, gas readings for the cored  interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("geologyInterval", DataType="cs_geologyInterval")]
        public cs_geologyInterval geologyInterval {
            get {
                return this.geologyIntervalField;
            }
            set {
                this.geologyIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>General core description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("General core description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("coreDescription", DataType="commentString")]
        public string coreDescription {
            get {
                return this.coreDescriptionField;
            }
            set {
                this.coreDescriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the wellbore. This uniquely represents  the wellbore referenced by the (possibly non-unique) nameWellbore.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the wellbore. This uniquely represents  the wellbore refere" +
            "nced by the (possibly non-unique) nameWellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWellbore", DataType="uidString")]
        public string uidWellbore {
            get {
                return this.uidWellboreField;
            }
            set {
                this.uidWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_geologyInterval {
        
        private LithologySource typeLithologyField;
        
        private measuredDepthCoord mdTopField;
        
        private measuredDepthCoord mdBottomField;
        
        private Energistics.DataAccess.Timestamp dTimField;
        
        private bool dTimFieldSpecified;
        
        private wellVerticalDepthCoord tvdTopField;
        
        private wellVerticalDepthCoord tvdBaseField;
        
        private velocityMeasure ropAvField;
        
        private velocityMeasure ropMnField;
        
        private velocityMeasure ropMxField;
        
        private forceMeasure wobAvField;
        
        private momentOfForceMeasure tqAvField;
        
        private electricCurrentMeasure currentAvField;
        
        private anglePerTimeMeasure rpmAvField;
        
        private densityMeasure wtMudAvField;
        
        private densityMeasure ecdTdAvField;
        
        private double dxcAvField;
        
        private bool dxcAvFieldSpecified;
        
        private cs_lithology[] lithologyField;
        
        private cs_show showField;
        
        private cs_chromatograph chromatographField;
        
        private cs_mudGas mudGasField;
        
        private densityMeasure densBulkField;
        
        private densityMeasure densShaleField;
        
        private volumePerVolumeMeasure calciteField;
        
        private volumePerVolumeMeasure dolomiteField;
        
        private equivalentPerMassMeasure cecField;
        
        private illuminanceMeasure qftField;
        
        private volumePerVolumeMeasure calcStabField;
        
        private string[] nameFormationField;
        
        private string[] lithostratigraphicField;
        
        private string[] chronostratigraphicField;
        
        private lengthMeasure sizeMnField;
        
        private lengthMeasure sizeMxField;
        
        private lengthMeasure lenPlugField;
        
        private string descriptionField;
        
        private string cuttingFluidField;
        
        private string cleaningMethodField;
        
        private string dryingMethodField;
        
        private string commentsField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The type of lithology declaration.  An interpreted type will specify one lithology for the whole interval (i.e., the percentage is 100%). A cuttings or core type may specify one or more lithologies for the interval based on a visual inspection of the cuttings or core and a relative percentage will be assigned to each lithology.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"The type of lithology declaration.  An interpreted type will specify one lithology for the whole interval (i.e., the percentage is 100%). A cuttings or core type may specify one or more lithologies for the interval based on a visual inspection of the cuttings or core and a relative percentage will be assigned to each lithology.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeLithology", DataType="LithologySource")]
        public LithologySource typeLithology {
            get {
                return this.typeLithologyField;
            }
            set {
                this.typeLithologyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth at top of interval.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Measured depth at top of interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdTop", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdTop {
            get {
                return this.mdTopField;
            }
            set {
                this.mdTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth at base of interval. A point interval should be indicated by setting mdTop=mdBottom.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Measured depth at base of interval. A point interval should be indicated by setti" +
            "ng mdTop=mdBottom.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdBottom", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdBottom {
            get {
                return this.mdBottomField;
            }
            set {
                this.mdBottomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time the information is related to.  The time refers to the top of the interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time the information is related to.  The time refers to the top of the i" +
            "nterval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimSpecified {
            get {
                return this.dTimFieldSpecified;
            }
            set {
                this.dTimFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth at top of the section.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth at top of the section.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvdTop", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvdTop {
            get {
                return this.tvdTopField;
            }
            set {
                this.tvdTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth at base of interval.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth at base of interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvdBase", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvdBase {
            get {
                return this.tvdBaseField;
            }
            set {
                this.tvdBaseField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average rate of penetration through Interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Average rate of penetration through Interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ropAv", DataType="velocityMeasure")]
        public velocityMeasure ropAv {
            get {
                return this.ropAvField;
            }
            set {
                this.ropAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum rate of penetration through Interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum rate of penetration through Interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ropMn", DataType="velocityMeasure")]
        public velocityMeasure ropMn {
            get {
                return this.ropMnField;
            }
            set {
                this.ropMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum rate of penetration through Interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum rate of penetration through Interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ropMx", DataType="velocityMeasure")]
        public velocityMeasure ropMx {
            get {
                return this.ropMxField;
            }
            set {
                this.ropMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Surface weight on bit - average through interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Surface weight on bit - average through interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wobAv", DataType="forceMeasure")]
        public forceMeasure wobAv {
            get {
                return this.wobAvField;
            }
            set {
                this.wobAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average torque through interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Average torque through interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tqAv", DataType="momentOfForceMeasure")]
        public momentOfForceMeasure tqAv {
            get {
                return this.tqAvField;
            }
            set {
                this.tqAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average current through interval.  This is the raw measurement from which the average torque could be calculated.</summary>
        [System.ComponentModel.DescriptionAttribute("Average current through interval.  This is the raw measurement from which the ave" +
            "rage torque could be calculated.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("currentAv", DataType="electricCurrentMeasure")]
        public electricCurrentMeasure currentAv {
            get {
                return this.currentAvField;
            }
            set {
                this.currentAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average turn rate through interval (commonly in rpm).</summary>
        [System.ComponentModel.DescriptionAttribute("Average turn rate through interval (commonly in rpm).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rpmAv", DataType="anglePerTimeMeasure")]
        public anglePerTimeMeasure rpmAv {
            get {
                return this.rpmAvField;
            }
            set {
                this.rpmAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average mud density in through interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Average mud density in through interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wtMudAv", DataType="densityMeasure")]
        public densityMeasure wtMudAv {
            get {
                return this.wtMudAvField;
            }
            set {
                this.wtMudAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average effective circulating density at TD through Interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Average effective circulating density at TD through Interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ecdTdAv", DataType="densityMeasure")]
        public densityMeasure ecdTdAv {
            get {
                return this.ecdTdAvField;
            }
            set {
                this.ecdTdAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average drilling exponent through Interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Average drilling exponent through Interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dxcAv", DataType="unitlessQuantity")]
        public double dxcAv {
            get {
                return this.dxcAvField;
            }
            set {
                this.dxcAvField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dxcAvSpecified {
            get {
                return this.dxcAvFieldSpecified;
            }
            set {
                this.dxcAvFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Set of lithology records for the Interval.</summary>
        [System.Xml.Serialization.XmlElementAttribute("lithology")]
        [System.ComponentModel.DescriptionAttribute("Set of lithology records for the Interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lithology", DataType="cs_lithology")]
        public cs_lithology[] lithology {
            get {
                return this.lithologyField;
            }
            set {
                this.lithologyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Show record through the Interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Show record through the Interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("show", DataType="cs_show")]
        public cs_show show {
            get {
                return this.showField;
            }
            set {
                this.showField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Chromatographic break down for the interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Chromatographic break down for the interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("chromatograph", DataType="cs_chromatograph")]
        public cs_chromatograph chromatograph {
            get {
                return this.chromatographField;
            }
            set {
                this.chromatographField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total gas readings associated with this interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Total gas readings associated with this interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mudGas", DataType="cs_mudGas")]
        public cs_mudGas mudGas {
            get {
                return this.mudGasField;
            }
            set {
                this.mudGasField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Sample bulk density for the interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Sample bulk density for the interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densBulk", DataType="densityMeasure")]
        public densityMeasure densBulk {
            get {
                return this.densBulkField;
            }
            set {
                this.densBulkField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Shale density for the interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Shale density for the interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densShale", DataType="densityMeasure")]
        public densityMeasure densShale {
            get {
                return this.densShaleField;
            }
            set {
                this.densShaleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calcimetry calcite percentage.</summary>
        [System.ComponentModel.DescriptionAttribute("Calcimetry calcite percentage.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("calcite", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure calcite {
            get {
                return this.calciteField;
            }
            set {
                this.calciteField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calcimetry dolomite percentage.</summary>
        [System.ComponentModel.DescriptionAttribute("Calcimetry dolomite percentage.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dolomite", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure dolomite {
            get {
                return this.dolomiteField;
            }
            set {
                this.dolomiteField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cuttings cationic exchange capacity.</summary>
        [System.ComponentModel.DescriptionAttribute("Cuttings cationic exchange capacity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cec", DataType="equivalentPerMassMeasure")]
        public equivalentPerMassMeasure cec {
            get {
                return this.cecField;
            }
            set {
                this.cecField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fluorescence as measured using a device licensed for the  Quantitative Fluorescence Technique.</summary>
        [System.ComponentModel.DescriptionAttribute("Fluorescence as measured using a device licensed for the  Quantitative Fluorescen" +
            "ce Technique.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("qft", DataType="illuminanceMeasure")]
        public illuminanceMeasure qft {
            get {
                return this.qftField;
            }
            set {
                this.qftField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calcimetry stabilized percentage.</summary>
        [System.ComponentModel.DescriptionAttribute("Calcimetry stabilized percentage.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("calcStab", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure calcStab {
            get {
                return this.calcStabField;
            }
            set {
                this.calcStabField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of formation penetrated.</summary>
        [System.Xml.Serialization.XmlElementAttribute("nameFormation")]
        [System.ComponentModel.DescriptionAttribute("Name of formation penetrated.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameFormation", DataType="nameString")]
        public string[] nameFormation {
            get {
                return this.nameFormationField;
            }
            set {
                this.nameFormationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of formation, regionally dependent.</summary>
        [System.Xml.Serialization.XmlElementAttribute("lithostratigraphic")]
        [System.ComponentModel.DescriptionAttribute("Name of formation, regionally dependent.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lithostratigraphic", DataType="nameString")]
        public string[] lithostratigraphic {
            get {
                return this.lithostratigraphicField;
            }
            set {
                this.lithostratigraphicField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Chronostratigraphic classification.</summary>
        [System.Xml.Serialization.XmlElementAttribute("chronostratigraphic")]
        [System.ComponentModel.DescriptionAttribute("Chronostratigraphic classification.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("chronostratigraphic", DataType="nameString")]
        public string[] chronostratigraphic {
            get {
                return this.chronostratigraphicField;
            }
            set {
                this.chronostratigraphicField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum size.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum size.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sizeMn", DataType="lengthMeasure")]
        public lengthMeasure sizeMn {
            get {
                return this.sizeMnField;
            }
            set {
                this.sizeMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum size.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum size.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sizeMx", DataType="lengthMeasure")]
        public lengthMeasure sizeMx {
            get {
                return this.sizeMxField;
            }
            set {
                this.sizeMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Plug length.</summary>
        [System.ComponentModel.DescriptionAttribute("Plug length.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenPlug", DataType="lengthMeasure")]
        public lengthMeasure lenPlug {
            get {
                return this.lenPlugField;
            }
            set {
                this.lenPlugField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of item and details.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Description of item and details.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="commentString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Sample treatment : cutting fluid.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Sample treatment : cutting fluid.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cuttingFluid", DataType="str32")]
        public string cuttingFluid {
            get {
                return this.cuttingFluidField;
            }
            set {
                this.cuttingFluidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Sample treatment : cleaning method.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Sample treatment : cleaning method.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cleaningMethod", DataType="str32")]
        public string cleaningMethod {
            get {
                return this.cleaningMethodField;
            }
            set {
                this.cleaningMethodField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Sample treatment : drying method.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Sample treatment : drying method.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dryingMethod", DataType="str32")]
        public string dryingMethod {
            get {
                return this.dryingMethodField;
            }
            set {
                this.dryingMethodField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comments and remarks.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Comments and remarks.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comments", DataType="commentString")]
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_lithology {
        
        private LithologyType typeField;
        
        private bool typeFieldSpecified;
        
        private string codeLithField;
        
        private volumePerVolumeMeasurePercent lithPcField;
        
        private string descriptionField;
        
        private string lithClassField;
        
        private string grainTypeField;
        
        private string dunhamClassField;
        
        private string colorField;
        
        private string textureField;
        
        private string hardnessField;
        
        private string sizeGrainField;
        
        private string roundnessField;
        
        private string sortingField;
        
        private string matrixCementField;
        
        private string porosityVisibleField;
        
        private string permeabilityField;
        
        private densityMeasure densShaleField;
        
        private cs_qualifier[] qualifierField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The type of lithology.</summary>
        [System.ComponentModel.DescriptionAttribute("The type of lithology.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("type", DataType="LithologyType")]
        public LithologyType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Lithology official codes if desired. Operator typically  to define what the codes are.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Lithology official codes if desired. Operator typically  to define what the codes" +
            " are.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("codeLith", DataType="str16")]
        public string codeLith {
            get {
                return this.codeLithField;
            }
            set {
                this.codeLithField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The lithology represents what portion of the sampled interval. The total of the lithologies within an interval should add up to 100 percent. The "undifferentiated" code should be used to fill out to 100.</summary>
        [System.ComponentModel.DescriptionAttribute("The lithology represents what portion of the sampled interval. The total of the l" +
            "ithologies within an interval should add up to 100 percent. The \"undifferentiate" +
            "d\" code should be used to fill out to 100.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lithPc", DataType="volumePerVolumeMeasurePercent")]
        public volumePerVolumeMeasurePercent lithPc {
            get {
                return this.lithPcField;
            }
            set {
                this.lithPcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of item and details.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Description of item and details.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="commentString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Lithology classification description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Lithology classification description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lithClass", DataType="str32")]
        public string lithClass {
            get {
                return this.lithClassField;
            }
            set {
                this.lithClassField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Granulometry.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Granulometry.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("grainType", DataType="str32")]
        public string grainType {
            get {
                return this.grainTypeField;
            }
            set {
                this.grainTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Dunham limestone classification.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Dunham limestone classification.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dunhamClass", DataType="str32")]
        public string dunhamClass {
            get {
                return this.dunhamClassField;
            }
            set {
                this.dunhamClassField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Lithology color description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Lithology color description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("color", DataType="str16")]
        public string color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Lithology texture description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Lithology texture description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("texture", DataType="str32")]
        public string texture {
            get {
                return this.textureField;
            }
            set {
                this.textureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Lithology hardness description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Lithology hardness description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("hardness", DataType="str32")]
        public string hardness {
            get {
                return this.hardnessField;
            }
            set {
                this.hardnessField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Lithology grain size description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Lithology grain size description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sizeGrain", DataType="str32")]
        public string sizeGrain {
            get {
                return this.sizeGrainField;
            }
            set {
                this.sizeGrainField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Lithology roundness description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Lithology roundness description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("roundness", DataType="str32")]
        public string roundness {
            get {
                return this.roundnessField;
            }
            set {
                this.roundnessField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Lithology sorting description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Lithology sorting description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sorting", DataType="str32")]
        public string sorting {
            get {
                return this.sortingField;
            }
            set {
                this.sortingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Lithology matrix/cement description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Lithology matrix/cement description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("matrixCement", DataType="str32")]
        public string matrixCement {
            get {
                return this.matrixCementField;
            }
            set {
                this.matrixCementField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Lithology visible porosity description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Lithology visible porosity description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("porosityVisible", DataType="str32")]
        public string porosityVisible {
            get {
                return this.porosityVisibleField;
            }
            set {
                this.porosityVisibleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Lithology permeability description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Lithology permeability description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("permeability", DataType="str32")]
        public string permeability {
            get {
                return this.permeabilityField;
            }
            set {
                this.permeabilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Shale density for the interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Shale density for the interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densShale", DataType="densityMeasure")]
        public densityMeasure densShale {
            get {
                return this.densShaleField;
            }
            set {
                this.densShaleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A single qualifier. In mudlogging terms, a qualifier is a graphical symbol in the Interpreted Lithology column of the Formation Evaluation Log (aka "the mudlog"). In addition to the major lithologies (e.g., sand, shale, etc) existing in the sample, other minerals (present as accessories or inclusions e.g. chert, pyrite, glauconite) and fossils (forams, oyster shells, bryozoans, etc) may exist and their abundance is generally categorized using ranges  such as Trace (less than 10%), Common (10-25%) and Abundant (greater than 25%). These additional minerals and fossils can be of disproportionately great diagnostic and descriptive value. For example, qualifiers can be used to indicate facies changes, marker beds or something that impacted drilling conditions.  These qualifiers (representing accessories, inclusions and/or fossils) are used to rapidly and graphically indicate to the recipient of the mudlog that a significant lithological event was encountered while drilling the well.</summary>
        [System.Xml.Serialization.XmlElementAttribute("qualifier")]
        [System.ComponentModel.DescriptionAttribute(@"A single qualifier. In mudlogging terms, a qualifier is a graphical symbol in the Interpreted Lithology column of the Formation Evaluation Log (aka ""the mudlog""). In addition to the major lithologies (e.g., sand, shale, etc) existing in the sample, other minerals (present as accessories or inclusions e.g. chert, pyrite, glauconite) and fossils (forams, oyster shells, bryozoans, etc) may exist and their abundance is generally categorized using ranges  such as Trace (less than 10%), Common (10-25%) and Abundant (greater than 25%). These additional minerals and fossils can be of disproportionately great diagnostic and descriptive value. For example, qualifiers can be used to indicate facies changes, marker beds or something that impacted drilling conditions.  These qualifiers (representing accessories, inclusions and/or fossils) are used to rapidly and graphically indicate to the recipient of the mudlog that a significant lithological event was encountered while drilling the well.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("qualifier", DataType="cs_qualifier")]
        public cs_qualifier[] qualifier {
            get {
                return this.qualifierField;
            }
            set {
                this.qualifierField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_qualifier {
        
        private QualifierType typeField;
        
        private measuredDepthCoord mdTopField;
        
        private measuredDepthCoord mdBottomField;
        
        private volumePerVolumeMeasurePercent abundanceField;
        
        private string abundanceCodeField;
        
        private string descriptionField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The type of qualifier.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The type of qualifier.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("type", DataType="QualifierType")]
        public QualifierType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth at the top of the interval represented  by the qualifier. This must be within the range of the parent geologic interval.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth at the top of the interval represented  by the qualifier. This" +
            " must be within the range of the parent geologic interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdTop", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdTop {
            get {
                return this.mdTopField;
            }
            set {
                this.mdTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth at the bottom of the interval represented by the qualifier. A point can be indicated by specifying bottom=top. This must be within the range of the parent geologic interval.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth at the bottom of the interval represented by the qualifier. A " +
            "point can be indicated by specifying bottom=top. This must be within the range o" +
            "f the parent geologic interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdBottom", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdBottom {
            get {
                return this.mdBottomField;
            }
            set {
                this.mdBottomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The relative abundance of the qualifier. This is usually estimated based on a "visual area" basis by inspecting the cuttings  spread out on the shaker table. This either represents a point value or the  upperbound of a range (e.g., 0% to 10%).</summary>
        [System.ComponentModel.DescriptionAttribute("The relative abundance of the qualifier. This is usually estimated based on a \"vi" +
            "sual area\" basis by inspecting the cuttings  spread out on the shaker table. Thi" +
            "s either represents a point value or the  upperbound of a range (e.g., 0% to 10%" +
            ").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("abundance", DataType="volumePerVolumeMeasurePercent")]
        public volumePerVolumeMeasurePercent abundance {
            get {
                return this.abundanceField;
            }
            set {
                this.abundanceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A code associated with the relative abundance of the qualifier. For example, "trace", "common" or "abundant".  This is generally a proprietary code. The interoperable semantics are provided by the above abundance value. The presumption is that the value range associated with a code is mapped to a single value. On the other end of an exchange, the single value is mapped to the range associated with the local codes on that end.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [System.ComponentModel.DescriptionAttribute(@"A code associated with the relative abundance of the qualifier. For example, ""trace"", ""common"" or ""abundant"".  This is generally a proprietary code. The interoperable semantics are provided by the above abundance value. The presumption is that the value range associated with a code is mapped to a single value. On the other end of an exchange, the single value is mapped to the range associated with the local codes on that end.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("abundanceCode", DataType="kindString")]
        public string abundanceCode {
            get {
                return this.abundanceCodeField;
            }
            set {
                this.abundanceCodeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A textual description of the qualifier.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("A textual description of the qualifier.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="descriptionString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_show {
        
        private ShowRating showRatField;
        
        private bool showRatFieldSpecified;
        
        private string stainColorField;
        
        private string stainDistrField;
        
        private areaPerAreaMeasure stainPcField;
        
        private string natFlorColorField;
        
        private areaPerAreaMeasure natFlorPcField;
        
        private ShowFluorescence natFlorLevelField;
        
        private bool natFlorLevelFieldSpecified;
        
        private string natFlorDescField;
        
        private string cutColorField;
        
        private ShowSpeed cutSpeedField;
        
        private bool cutSpeedFieldSpecified;
        
        private string cutStrengthField;
        
        private ShowLevel cutFormField;
        
        private bool cutFormFieldSpecified;
        
        private string cutLevelField;
        
        private string cutFlorColorField;
        
        private ShowSpeed cutFlorSpeedField;
        
        private bool cutFlorSpeedFieldSpecified;
        
        private string cutFlorStrengthField;
        
        private ShowLevel cutFlorFormField;
        
        private bool cutFlorFormFieldSpecified;
        
        private ShowFluorescence cutFlorLevelField;
        
        private bool cutFlorLevelFieldSpecified;
        
        private string residueColorField;
        
        private string showDescField;
        
        private string impregnatedLithoField;
        
        private string odorField;
        
        /// <remarks/>
        /// <summary>Show Rating.</summary>
        [System.ComponentModel.DescriptionAttribute("Show Rating.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("showRat", DataType="ShowRating")]
        public ShowRating showRat {
            get {
                return this.showRatField;
            }
            set {
                this.showRatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool showRatSpecified {
            get {
                return this.showRatFieldSpecified;
            }
            set {
                this.showRatFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Visible Stain Color.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Visible Stain Color.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stainColor", DataType="str16")]
        public string stainColor {
            get {
                return this.stainColorField;
            }
            set {
                this.stainColorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Visible Stain Distribution.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Visible Stain Distribution.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stainDistr", DataType="str16")]
        public string stainDistr {
            get {
                return this.stainDistrField;
            }
            set {
                this.stainDistrField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Visible Stain (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Visible Stain (commonly in percent).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stainPc", DataType="areaPerAreaMeasure")]
        public areaPerAreaMeasure stainPc {
            get {
                return this.stainPcField;
            }
            set {
                this.stainPcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Natural Fluorescence Color.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Natural Fluorescence Color.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("natFlorColor", DataType="str16")]
        public string natFlorColor {
            get {
                return this.natFlorColorField;
            }
            set {
                this.natFlorColorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Natural fluorescence (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Natural fluorescence (commonly in percent).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("natFlorPc", DataType="areaPerAreaMeasure")]
        public areaPerAreaMeasure natFlorPc {
            get {
                return this.natFlorPcField;
            }
            set {
                this.natFlorPcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Natural fluorescence level.</summary>
        [System.ComponentModel.DescriptionAttribute("Natural fluorescence level.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("natFlorLevel", DataType="ShowFluorescence")]
        public ShowFluorescence natFlorLevel {
            get {
                return this.natFlorLevelField;
            }
            set {
                this.natFlorLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool natFlorLevelSpecified {
            get {
                return this.natFlorLevelFieldSpecified;
            }
            set {
                this.natFlorLevelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Natural fluorescence description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Natural fluorescence description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("natFlorDesc", DataType="shortDescriptionString")]
        public string natFlorDesc {
            get {
                return this.natFlorDescField;
            }
            set {
                this.natFlorDescField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cut color.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Cut color.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cutColor", DataType="str16")]
        public string cutColor {
            get {
                return this.cutColorField;
            }
            set {
                this.cutColorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cut speed.</summary>
        [System.ComponentModel.DescriptionAttribute("Cut speed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cutSpeed", DataType="ShowSpeed")]
        public ShowSpeed cutSpeed {
            get {
                return this.cutSpeedField;
            }
            set {
                this.cutSpeedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cutSpeedSpecified {
            get {
                return this.cutSpeedFieldSpecified;
            }
            set {
                this.cutSpeedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cut strength.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Cut strength.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cutStrength", DataType="str16")]
        public string cutStrength {
            get {
                return this.cutStrengthField;
            }
            set {
                this.cutStrengthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cut formulation.</summary>
        [System.ComponentModel.DescriptionAttribute("Cut formulation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cutForm", DataType="ShowLevel")]
        public ShowLevel cutForm {
            get {
                return this.cutFormField;
            }
            set {
                this.cutFormField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cutFormSpecified {
            get {
                return this.cutFormFieldSpecified;
            }
            set {
                this.cutFormFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cut level (Faint, Bright, etc.).</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Cut level (Faint, Bright, etc.).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cutLevel", DataType="str16")]
        public string cutLevel {
            get {
                return this.cutLevelField;
            }
            set {
                this.cutLevelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cut fluorescence color.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Cut fluorescence color.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cutFlorColor", DataType="str16")]
        public string cutFlorColor {
            get {
                return this.cutFlorColorField;
            }
            set {
                this.cutFlorColorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cut fluorescence speed.</summary>
        [System.ComponentModel.DescriptionAttribute("Cut fluorescence speed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cutFlorSpeed", DataType="ShowSpeed")]
        public ShowSpeed cutFlorSpeed {
            get {
                return this.cutFlorSpeedField;
            }
            set {
                this.cutFlorSpeedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cutFlorSpeedSpecified {
            get {
                return this.cutFlorSpeedFieldSpecified;
            }
            set {
                this.cutFlorSpeedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cut fluorescence strength.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Cut fluorescence strength.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cutFlorStrength", DataType="str16")]
        public string cutFlorStrength {
            get {
                return this.cutFlorStrengthField;
            }
            set {
                this.cutFlorStrengthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cut fluorescence form.</summary>
        [System.ComponentModel.DescriptionAttribute("Cut fluorescence form.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cutFlorForm", DataType="ShowLevel")]
        public ShowLevel cutFlorForm {
            get {
                return this.cutFlorFormField;
            }
            set {
                this.cutFlorFormField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cutFlorFormSpecified {
            get {
                return this.cutFlorFormFieldSpecified;
            }
            set {
                this.cutFlorFormFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cut fluorescence level.</summary>
        [System.ComponentModel.DescriptionAttribute("Cut fluorescence level.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cutFlorLevel", DataType="ShowFluorescence")]
        public ShowFluorescence cutFlorLevel {
            get {
                return this.cutFlorLevelField;
            }
            set {
                this.cutFlorLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cutFlorLevelSpecified {
            get {
                return this.cutFlorLevelFieldSpecified;
            }
            set {
                this.cutFlorLevelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Residue color.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Residue color.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("residueColor", DataType="str16")]
        public string residueColor {
            get {
                return this.residueColorField;
            }
            set {
                this.residueColorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Free format show description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Free format show description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("showDesc", DataType="commentString")]
        public string showDesc {
            get {
                return this.showDescField;
            }
            set {
                this.showDescField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Impregnated lithology.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Impregnated lithology.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("impregnatedLitho", DataType="str32")]
        public string impregnatedLitho {
            get {
                return this.impregnatedLithoField;
            }
            set {
                this.impregnatedLithoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of any hydrocarbon type odors smelled.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Description of any hydrocarbon type odors smelled.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("odor", DataType="str32")]
        public string odor {
            get {
                return this.odorField;
            }
            set {
                this.odorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_chromatograph {
        
        private Energistics.DataAccess.Timestamp dTimField;
        
        private bool dTimFieldSpecified;
        
        private measuredDepthCoord mdTopField;
        
        private measuredDepthCoord mdBottomField;
        
        private densityMeasure wtMudInField;
        
        private densityMeasure wtMudOutField;
        
        private string chromTypeField;
        
        private timeMeasure eTimChromCycleField;
        
        private Energistics.DataAccess.Timestamp chromIntRptField;
        
        private bool chromIntRptFieldSpecified;
        
        private volumePerVolumeMeasure methAvField;
        
        private volumePerVolumeMeasure methMnField;
        
        private volumePerVolumeMeasure methMxField;
        
        private volumePerVolumeMeasure ethAvField;
        
        private volumePerVolumeMeasure ethMnField;
        
        private volumePerVolumeMeasure ethMxField;
        
        private volumePerVolumeMeasure propAvField;
        
        private volumePerVolumeMeasure propMnField;
        
        private volumePerVolumeMeasure propMxField;
        
        private volumePerVolumeMeasure ibutAvField;
        
        private volumePerVolumeMeasure ibutMnField;
        
        private volumePerVolumeMeasure ibutMxField;
        
        private volumePerVolumeMeasure nbutAvField;
        
        private volumePerVolumeMeasure nbutMnField;
        
        private volumePerVolumeMeasure nbutMxField;
        
        private volumePerVolumeMeasure ipentAvField;
        
        private volumePerVolumeMeasure ipentMnField;
        
        private volumePerVolumeMeasure ipentMxField;
        
        private volumePerVolumeMeasure npentAvField;
        
        private volumePerVolumeMeasure npentMnField;
        
        private volumePerVolumeMeasure npentMxField;
        
        private volumePerVolumeMeasure epentAvField;
        
        private volumePerVolumeMeasure epentMnField;
        
        private volumePerVolumeMeasure epentMxField;
        
        private volumePerVolumeMeasure ihexAvField;
        
        private volumePerVolumeMeasure ihexMnField;
        
        private volumePerVolumeMeasure ihexMxField;
        
        private volumePerVolumeMeasure nhexAvField;
        
        private volumePerVolumeMeasure nhexMnField;
        
        private volumePerVolumeMeasure nhexMxField;
        
        private volumePerVolumeMeasure co2AvField;
        
        private volumePerVolumeMeasure co2MnField;
        
        private volumePerVolumeMeasure co2MxField;
        
        private volumePerVolumeMeasure h2sAvField;
        
        private volumePerVolumeMeasure h2sMnField;
        
        private volumePerVolumeMeasure h2sMxField;
        
        private volumePerVolumeMeasure acetyleneField;
        
        /// <remarks/>
        /// <summary>The date and time at which the gas sample was processed.</summary>
        [System.ComponentModel.DescriptionAttribute("The date and time at which the gas sample was processed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimSpecified {
            get {
                return this.dTimFieldSpecified;
            }
            set {
                this.dTimFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth at top of Interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth at top of Interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdTop", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdTop {
            get {
                return this.mdTopField;
            }
            set {
                this.mdTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth at base of interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth at base of interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdBottom", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdBottom {
            get {
                return this.mdBottomField;
            }
            set {
                this.mdBottomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud density in (active pits).</summary>
        [System.ComponentModel.DescriptionAttribute("Mud density in (active pits).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wtMudIn", DataType="densityMeasure")]
        public densityMeasure wtMudIn {
            get {
                return this.wtMudInField;
            }
            set {
                this.wtMudInField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud density out (flowline).</summary>
        [System.ComponentModel.DescriptionAttribute("Mud density out (flowline).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wtMudOut", DataType="densityMeasure")]
        public densityMeasure wtMudOut {
            get {
                return this.wtMudOutField;
            }
            set {
                this.wtMudOutField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Chromatograph type.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Chromatograph type.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("chromType", DataType="str16")]
        public string chromType {
            get {
                return this.chromTypeField;
            }
            set {
                this.chromTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Chromatograph cycle time. Commonly in seconds.</summary>
        [System.ComponentModel.DescriptionAttribute("Chromatograph cycle time. Commonly in seconds.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eTimChromCycle", DataType="timeMeasure")]
        public timeMeasure eTimChromCycle {
            get {
                return this.eTimChromCycleField;
            }
            set {
                this.eTimChromCycleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Chromatograph integrator report time, format may be variable due to recording equipment</summary>
        [System.ComponentModel.DescriptionAttribute("Chromatograph integrator report time, format may be variable due to recording equ" +
            "ipment")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("chromIntRpt", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp chromIntRpt {
            get {
                return this.chromIntRptField;
            }
            set {
                this.chromIntRptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool chromIntRptSpecified {
            get {
                return this.chromIntRptFieldSpecified;
            }
            set {
                this.chromIntRptFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Methane (C1) ppm (average).</summary>
        [System.ComponentModel.DescriptionAttribute("Methane (C1) ppm (average).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("methAv", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure methAv {
            get {
                return this.methAvField;
            }
            set {
                this.methAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Methane (C1) ppm (minimum).</summary>
        [System.ComponentModel.DescriptionAttribute("Methane (C1) ppm (minimum).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("methMn", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure methMn {
            get {
                return this.methMnField;
            }
            set {
                this.methMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Methane (C1) ppm (maximum).</summary>
        [System.ComponentModel.DescriptionAttribute("Methane (C1) ppm (maximum).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("methMx", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure methMx {
            get {
                return this.methMxField;
            }
            set {
                this.methMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Ethane (C2) ppm (average).</summary>
        [System.ComponentModel.DescriptionAttribute("Ethane (C2) ppm (average).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ethAv", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure ethAv {
            get {
                return this.ethAvField;
            }
            set {
                this.ethAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Ethane (C2) ppm (minimum).</summary>
        [System.ComponentModel.DescriptionAttribute("Ethane (C2) ppm (minimum).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ethMn", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure ethMn {
            get {
                return this.ethMnField;
            }
            set {
                this.ethMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Ethane (C2) ppm (maximum).</summary>
        [System.ComponentModel.DescriptionAttribute("Ethane (C2) ppm (maximum).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ethMx", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure ethMx {
            get {
                return this.ethMxField;
            }
            set {
                this.ethMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Propane (C3) ppm (average).</summary>
        [System.ComponentModel.DescriptionAttribute("Propane (C3) ppm (average).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("propAv", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure propAv {
            get {
                return this.propAvField;
            }
            set {
                this.propAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Propane (C3) ppm (minimum).</summary>
        [System.ComponentModel.DescriptionAttribute("Propane (C3) ppm (minimum).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("propMn", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure propMn {
            get {
                return this.propMnField;
            }
            set {
                this.propMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Propane (C3) ppm (maximum).</summary>
        [System.ComponentModel.DescriptionAttribute("Propane (C3) ppm (maximum).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("propMx", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure propMx {
            get {
                return this.propMxField;
            }
            set {
                this.propMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>iso-Butane (iC4) ppm (average).</summary>
        [System.ComponentModel.DescriptionAttribute("iso-Butane (iC4) ppm (average).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ibutAv", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure ibutAv {
            get {
                return this.ibutAvField;
            }
            set {
                this.ibutAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>iso-Butane (iC4) ppm (minimum).</summary>
        [System.ComponentModel.DescriptionAttribute("iso-Butane (iC4) ppm (minimum).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ibutMn", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure ibutMn {
            get {
                return this.ibutMnField;
            }
            set {
                this.ibutMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>iso-Butane (iC4) ppm (maximum).</summary>
        [System.ComponentModel.DescriptionAttribute("iso-Butane (iC4) ppm (maximum).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ibutMx", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure ibutMx {
            get {
                return this.ibutMxField;
            }
            set {
                this.ibutMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>nor-Butane (nC4) ppm (average).</summary>
        [System.ComponentModel.DescriptionAttribute("nor-Butane (nC4) ppm (average).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nbutAv", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure nbutAv {
            get {
                return this.nbutAvField;
            }
            set {
                this.nbutAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>nor-Butane (nC4) ppm (minimum).</summary>
        [System.ComponentModel.DescriptionAttribute("nor-Butane (nC4) ppm (minimum).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nbutMn", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure nbutMn {
            get {
                return this.nbutMnField;
            }
            set {
                this.nbutMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>nor-Butane (nC4) ppm (maximum).</summary>
        [System.ComponentModel.DescriptionAttribute("nor-Butane (nC4) ppm (maximum).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nbutMx", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure nbutMx {
            get {
                return this.nbutMxField;
            }
            set {
                this.nbutMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>iso-Pentane (iC5) ppm (average).</summary>
        [System.ComponentModel.DescriptionAttribute("iso-Pentane (iC5) ppm (average).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ipentAv", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure ipentAv {
            get {
                return this.ipentAvField;
            }
            set {
                this.ipentAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>iso-Pentane (iC5) ppm (minimum).</summary>
        [System.ComponentModel.DescriptionAttribute("iso-Pentane (iC5) ppm (minimum).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ipentMn", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure ipentMn {
            get {
                return this.ipentMnField;
            }
            set {
                this.ipentMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>iso-Pentane (iC5) ppm (maximum).</summary>
        [System.ComponentModel.DescriptionAttribute("iso-Pentane (iC5) ppm (maximum).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ipentMx", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure ipentMx {
            get {
                return this.ipentMxField;
            }
            set {
                this.ipentMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>nor-Pentane (nC5) ppm (average).</summary>
        [System.ComponentModel.DescriptionAttribute("nor-Pentane (nC5) ppm (average).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("npentAv", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure npentAv {
            get {
                return this.npentAvField;
            }
            set {
                this.npentAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>nor-Pentane (nC5) ppm (minimum).</summary>
        [System.ComponentModel.DescriptionAttribute("nor-Pentane (nC5) ppm (minimum).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("npentMn", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure npentMn {
            get {
                return this.npentMnField;
            }
            set {
                this.npentMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>nor-Pentane (nC5) ppm (maximum).</summary>
        [System.ComponentModel.DescriptionAttribute("nor-Pentane (nC5) ppm (maximum).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("npentMx", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure npentMx {
            get {
                return this.npentMxField;
            }
            set {
                this.npentMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>neo-Pentane (eC5) ppm (average).</summary>
        [System.ComponentModel.DescriptionAttribute("neo-Pentane (eC5) ppm (average).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("epentAv", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure epentAv {
            get {
                return this.epentAvField;
            }
            set {
                this.epentAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>neo-Pentane (eC5) ppm (minimum).</summary>
        [System.ComponentModel.DescriptionAttribute("neo-Pentane (eC5) ppm (minimum).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("epentMn", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure epentMn {
            get {
                return this.epentMnField;
            }
            set {
                this.epentMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>neo-Pentane (eC5) ppm (maximum).</summary>
        [System.ComponentModel.DescriptionAttribute("neo-Pentane (eC5) ppm (maximum).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("epentMx", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure epentMx {
            get {
                return this.epentMxField;
            }
            set {
                this.epentMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>iso-Hexane (iC6) ppm (average).</summary>
        [System.ComponentModel.DescriptionAttribute("iso-Hexane (iC6) ppm (average).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ihexAv", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure ihexAv {
            get {
                return this.ihexAvField;
            }
            set {
                this.ihexAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>iso-Hexane (iC6) ppm (minimum).</summary>
        [System.ComponentModel.DescriptionAttribute("iso-Hexane (iC6) ppm (minimum).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ihexMn", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure ihexMn {
            get {
                return this.ihexMnField;
            }
            set {
                this.ihexMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>iso-Hexane (iC6) ppm (maximum).</summary>
        [System.ComponentModel.DescriptionAttribute("iso-Hexane (iC6) ppm (maximum).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ihexMx", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure ihexMx {
            get {
                return this.ihexMxField;
            }
            set {
                this.ihexMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>nor-Hexane (nC6) ppm (average).</summary>
        [System.ComponentModel.DescriptionAttribute("nor-Hexane (nC6) ppm (average).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nhexAv", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure nhexAv {
            get {
                return this.nhexAvField;
            }
            set {
                this.nhexAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>nor-Hexane (nC6) ppm (minimum).</summary>
        [System.ComponentModel.DescriptionAttribute("nor-Hexane (nC6) ppm (minimum).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nhexMn", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure nhexMn {
            get {
                return this.nhexMnField;
            }
            set {
                this.nhexMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>nor-Hexane (nC6) ppm (maximum).</summary>
        [System.ComponentModel.DescriptionAttribute("nor-Hexane (nC6) ppm (maximum).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nhexMx", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure nhexMx {
            get {
                return this.nhexMxField;
            }
            set {
                this.nhexMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Carbon Dioxide ppm (average).</summary>
        [System.ComponentModel.DescriptionAttribute("Carbon Dioxide ppm (average).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("co2Av", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure co2Av {
            get {
                return this.co2AvField;
            }
            set {
                this.co2AvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Carbon Dioxide ppm (minimum).</summary>
        [System.ComponentModel.DescriptionAttribute("Carbon Dioxide ppm (minimum).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("co2Mn", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure co2Mn {
            get {
                return this.co2MnField;
            }
            set {
                this.co2MnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Carbon Dioxide ppm (maximum).</summary>
        [System.ComponentModel.DescriptionAttribute("Carbon Dioxide ppm (maximum).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("co2Mx", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure co2Mx {
            get {
                return this.co2MxField;
            }
            set {
                this.co2MxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hydrogen Sulfide (average) ppm.</summary>
        [System.ComponentModel.DescriptionAttribute("Hydrogen Sulfide (average) ppm.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("h2sAv", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure h2sAv {
            get {
                return this.h2sAvField;
            }
            set {
                this.h2sAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hydrogen Sulfide (minimum) ppm.</summary>
        [System.ComponentModel.DescriptionAttribute("Hydrogen Sulfide (minimum) ppm.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("h2sMn", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure h2sMn {
            get {
                return this.h2sMnField;
            }
            set {
                this.h2sMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hydrogen Sulfide (maximum) ppm.</summary>
        [System.ComponentModel.DescriptionAttribute("Hydrogen Sulfide (maximum) ppm.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("h2sMx", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure h2sMx {
            get {
                return this.h2sMxField;
            }
            set {
                this.h2sMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Acetylene.</summary>
        [System.ComponentModel.DescriptionAttribute("Acetylene.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("acetylene", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure acetylene {
            get {
                return this.acetyleneField;
            }
            set {
                this.acetyleneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_mudGas {
        
        private volumePerVolumeMeasure gasAvField;
        
        private volumePerVolumeMeasure gasPeakField;
        
        private GasPeakType gasPeakTypeField;
        
        private bool gasPeakTypeFieldSpecified;
        
        private volumePerVolumeMeasure gasBackgndField;
        
        private volumePerVolumeMeasure gasConAvField;
        
        private volumePerVolumeMeasure gasConMxField;
        
        private volumePerVolumeMeasure gasTripField;
        
        /// <remarks/>
        /// <summary>Average total gas.</summary>
        [System.ComponentModel.DescriptionAttribute("Average total gas.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasAv", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure gasAv {
            get {
                return this.gasAvField;
            }
            set {
                this.gasAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Peak gas reading.</summary>
        [System.ComponentModel.DescriptionAttribute("Peak gas reading.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasPeak", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure gasPeak {
            get {
                return this.gasPeakField;
            }
            set {
                this.gasPeakField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of gas peak.</summary>
        [System.ComponentModel.DescriptionAttribute("Type of gas peak.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasPeakType", DataType="GasPeakType")]
        public GasPeakType gasPeakType {
            get {
                return this.gasPeakTypeField;
            }
            set {
                this.gasPeakTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gasPeakTypeSpecified {
            get {
                return this.gasPeakTypeFieldSpecified;
            }
            set {
                this.gasPeakTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Background gas reading.</summary>
        [System.ComponentModel.DescriptionAttribute("Background gas reading.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasBackgnd", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure gasBackgnd {
            get {
                return this.gasBackgndField;
            }
            set {
                this.gasBackgndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Connection gas (average).</summary>
        [System.ComponentModel.DescriptionAttribute("Connection gas (average).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasConAv", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure gasConAv {
            get {
                return this.gasConAvField;
            }
            set {
                this.gasConAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Connection gas (maximum).</summary>
        [System.ComponentModel.DescriptionAttribute("Connection gas (maximum).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasConMx", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure gasConMx {
            get {
                return this.gasConMxField;
            }
            set {
                this.gasConMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Trip gas last reading.</summary>
        [System.ComponentModel.DescriptionAttribute("Trip gas last reading.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gasTrip", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure gasTrip {
            get {
                return this.gasTripField;
            }
            set {
                this.gasTripField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [System.Xml.Serialization.XmlRootAttribute("dtsInstalledSystems", Namespace="http://www.witsml.org/schemas/131", IsNullable=false)]
    public partial class obj_dtsInstalledSystems {
        
        private cs_documentInfo documentInfoField;
        
        private obj_dtsInstalledSystem[] dtsInstalledSystemField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Main wrapper for all the distributed temperature survey  information about the installed system. Note that this can serve as a standalone  object for messages that are not part of the WITSML server architecture.</summary>
        [System.Xml.Serialization.XmlElementAttribute("dtsInstalledSystem")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Main wrapper for all the distributed temperature survey  information about the in" +
            "stalled system. Note that this can serve as a standalone  object for messages th" +
            "at are not part of the WITSML server architecture.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dtsInstalledSystem", DataType="obj_dtsInstalledSystem")]
        public obj_dtsInstalledSystem[] dtsInstalledSystem {
            get {
                return this.dtsInstalledSystemField;
            }
            set {
                this.dtsInstalledSystemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.3\\.1\\.([1-9]|([1-9][0-9]))")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionString")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("WITSML", "1.3.1.1")]
    public partial class obj_dtsInstalledSystem {
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string nameField;
        
        private bool isPlannedField;
        
        private bool isPlannedFieldSpecified;
        
        private cs_fiberInformation fiberInformationField;
        
        private cs_boxInformation instrumentBoxInformationField;
        
        private string fiberConfigurationField;
        
        private cs_fiberEndPoint[] fiberEndPointField;
        
        private lengthMeasure fiberLengthField;
        
        private cs_singleInstalledPoint[] wellboreFiberSchematicField;
        
        private generalMeasureType opticalBudgetField;
        
        private cs_pumpActivity pumpActivityField;
        
        private cs_otdr[] otdrInstallationTestField;
        
        private cs_calibration[] installationCalibrationField;
        
        private refNameString basedOnInstalledFiberField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidWellboreField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore that contains the installed system.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore that contains the installed system.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWellbore", DataType="nameString")]
        public string nameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the dts.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the dts.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is this a planned installation in a well, or has the  installation already occurred. Note that the default value is 'false',  which states that this is an actual installation.</summary>
        [System.ComponentModel.DescriptionAttribute("Is this a planned installation in a well, or has the  installation already occurr" +
            "ed. Note that the default value is \'false\',  which states that this is an actual" +
            " installation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("isPlanned", DataType="logicalBoolean")]
        public bool isPlanned {
            get {
                return this.isPlannedField;
            }
            set {
                this.isPlannedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isPlannedSpecified {
            get {
                return this.isPlannedFieldSpecified;
            }
            set {
                this.isPlannedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information about the fiber used, and its installation.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the fiber used, and its installation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fiberInformation", DataType="cs_fiberInformation")]
        public cs_fiberInformation fiberInformation {
            get {
                return this.fiberInformationField;
            }
            set {
                this.fiberInformationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information about the instrument box used, and its installation.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the instrument box used, and its installation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("instrumentBoxInformation", DataType="cs_boxInformation")]
        public cs_boxInformation instrumentBoxInformation {
            get {
                return this.instrumentBoxInformationField;
            }
            set {
                this.instrumentBoxInformationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The configuration of the fiber installation. Example values  would be linear, linear with gauge, J, U.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [System.ComponentModel.DescriptionAttribute("The configuration of the fiber installation. Example values  would be linear, lin" +
            "ear with gauge, J, U.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fiberConfiguration", DataType="kindString")]
        public string fiberConfiguration {
            get {
                return this.fiberConfigurationField;
            }
            set {
                this.fiberConfigurationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A fiber installed with a "U" configuration will have two ends  available for hookup to an instrument box. In order to record which end is  cabled to the instrument box on a particular measurement run, it is necessary  to identify the two ends. This complex type allows a name and description for  each end, so that it may be identified in a later use. This may also be useful  when multiple fibers in multiple wellbores converge at the same wellhead.</summary>
        [System.Xml.Serialization.XmlElementAttribute("fiberEndPoint")]
        [System.ComponentModel.DescriptionAttribute(@"A fiber installed with a ""U"" configuration will have two ends  available for hookup to an instrument box. In order to record which end is  cabled to the instrument box on a particular measurement run, it is necessary  to identify the two ends. This complex type allows a name and description for  each end, so that it may be identified in a later use. This may also be useful  when multiple fibers in multiple wellbores converge at the same wellhead.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fiberEndPoint", DataType="cs_fiberEndPoint")]
        public cs_fiberEndPoint[] fiberEndPoint {
            get {
                return this.fiberEndPointField;
            }
            set {
                this.fiberEndPointField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The length of the fiber installed in the wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("The length of the fiber installed in the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fiberLength", DataType="lengthMeasure")]
        public lengthMeasure fiberLength {
            get {
                return this.fiberLengthField;
            }
            set {
                this.fiberLengthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A table of values along the length along the fiber.</summary>
        [System.Xml.Serialization.XmlArrayItemAttribute("installedPoint", IsNullable=false)]
        [System.ComponentModel.DescriptionAttribute("A table of values along the length along the fiber.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellboreFiberSchematic", DataType="cs_fiberInstalledPoints")]
        public cs_singleInstalledPoint[] wellboreFiberSchematic {
            get {
                return this.wellboreFiberSchematicField;
            }
            set {
                this.wellboreFiberSchematicField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total light budget available for the installation. This is  generally measured in decibels, and indicates the total power loss for two-way  travel of the light in the installed fiber.</summary>
        [System.ComponentModel.DescriptionAttribute("Total light budget available for the installation. This is  generally measured in" +
            " decibels, and indicates the total power loss for two-way  travel of the light i" +
            "n the installed fiber.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("opticalBudget", DataType="generalMeasureType")]
        public generalMeasureType opticalBudget {
            get {
                return this.opticalBudgetField;
            }
            set {
                this.opticalBudgetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The activity of pumping the fiber downhole</summary>
        [System.ComponentModel.DescriptionAttribute("The activity of pumping the fiber downhole")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pumpActivity", DataType="cs_pumpActivity")]
        public cs_pumpActivity pumpActivity {
            get {
                return this.pumpActivityField;
            }
            set {
                this.pumpActivityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>This captures the data from the pre-installation and post-installation  OTDR tests run on the fiber. A standard quality control program would include these  two, but the schema allows for more than two if additional runs associated with the  installation of the fiber are performed. OTDR runs associated with a measurement are  given as a child of the measurementInformation element.</summary>
        [System.Xml.Serialization.XmlElementAttribute("otdrInstallationTest")]
        [System.ComponentModel.DescriptionAttribute(@"This captures the data from the pre-installation and post-installation  OTDR tests run on the fiber. A standard quality control program would include these  two, but the schema allows for more than two if additional runs associated with the  installation of the fiber are performed. OTDR runs associated with a measurement are  given as a child of the measurementInformation element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("otdrInstallationTest", DataType="cs_otdr")]
        public cs_otdr[] otdrInstallationTest {
            get {
                return this.otdrInstallationTestField;
            }
            set {
                this.otdrInstallationTestField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Any calibration other than the ones explicitly given may be  recorded here. This is a general calibration type, which is populated with name/value pairs.</summary>
        [System.Xml.Serialization.XmlElementAttribute("installationCalibration")]
        [System.ComponentModel.DescriptionAttribute("Any calibration other than the ones explicitly given may be  recorded here. This " +
            "is a general calibration type, which is populated with name/value pairs.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("installationCalibration", DataType="cs_calibration")]
        public cs_calibration[] installationCalibration {
            get {
                return this.installationCalibrationField;
            }
            set {
                this.installationCalibrationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>If an instrument box is changed, for example, but the  fiber remains the same, this instance of installed fiber is given to record  that change. This element refers to a previous installed fiber, on which  this one is based. For example, the wellboreFiberSchematic is unchanged, and  may be obtained from the previous instance of installed fiber that is  referenced here.</summary>
        [System.ComponentModel.DescriptionAttribute(@"If an instrument box is changed, for example, but the  fiber remains the same, this instance of installed fiber is given to record  that change. This element refers to a previous installed fiber, on which  this one is based. For example, the wellboreFiberSchematic is unchanged, and  may be obtained from the previous instance of installed fiber that is  referenced here.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("basedOnInstalledFiber", DataType="refNameString")]
        public refNameString basedOnInstalledFiber {
            get {
                return this.basedOnInstalledFiberField;
            }
            set {
                this.basedOnInstalledFiberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the wellbore. This uniquely represents  the wellbore referenced by the (possibly non-unique) nameWellbore.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the wellbore. This uniquely represents  the wellbore refere" +
            "nced by the (possibly non-unique) nameWellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWellbore", DataType="uidString")]
        public string uidWellbore {
            get {
                return this.uidWellboreField;
            }
            set {
                this.uidWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_fiberInformation {
        
        private string installationDateField;
        
        private string installationCompanyField;
        
        private string deInstallationDateField;
        
        private lengthMeasure capillaryTubeDiameterField;
        
        private cs_fiber[] fiberField;
        
        /// <remarks/>
        /// <summary>The date the fiber is installed.</summary>
        [System.ComponentModel.DescriptionAttribute("The date the fiber is installed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("installationDate", DataType="anyDate")]
        public string installationDate {
            get {
                return this.installationDateField;
            }
            set {
                this.installationDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The company that installed the fiber in the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The company that installed the fiber in the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("installationCompany", DataType="nameString")]
        public string installationCompany {
            get {
                return this.installationCompanyField;
            }
            set {
                this.installationCompanyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date the fiber was de-installed from the wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("The date the fiber was de-installed from the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("deInstallationDate", DataType="anyDate")]
        public string deInstallationDate {
            get {
                return this.deInstallationDateField;
            }
            set {
                this.deInstallationDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The diameter of the capillary tube into which one or more fibers  will be installed. If the installation has fibers that go to different wellbores,  only those fibers installed in the parent wellbore should be included in this instance.</summary>
        [System.ComponentModel.DescriptionAttribute("The diameter of the capillary tube into which one or more fibers  will be install" +
            "ed. If the installation has fibers that go to different wellbores,  only those f" +
            "ibers installed in the parent wellbore should be included in this instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("capillaryTubeDiameter", DataType="lengthMeasure")]
        public lengthMeasure capillaryTubeDiameter {
            get {
                return this.capillaryTubeDiameterField;
            }
            set {
                this.capillaryTubeDiameterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The properties of the fiber or fibers installed in the wellbore.</summary>
        [System.Xml.Serialization.XmlElementAttribute("fiber")]
        [System.ComponentModel.DescriptionAttribute("The properties of the fiber or fibers installed in the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fiber", DataType="cs_fiber")]
        public cs_fiber[] fiber {
            get {
                return this.fiberField;
            }
            set {
                this.fiberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_fiber {
        
        private string nameField;
        
        private FiberMode modeField;
        
        private typeOptionalClassString[] typeField;
        
        private string coatingField;
        
        private string jacketField;
        
        private lengthMeasure coreDiameterField;
        
        private lengthMeasure claddedDiameterField;
        
        private lengthMeasure outsideDiameterField;
        
        private cs_refractiveIndex[] refractiveIndexField;
        
        private cs_oneWayLoss[] oneWayLossField;
        
        private indexedObject[] parameterField;
        
        private string spoolNumberTagField;
        
        private lengthMeasure spoolLengthField;
        
        private string supplyDateField;
        
        private string supplierField;
        
        private string supplierModelNumberField;
        
        private cs_calibration[] factoryCalibrationField;
        
        private refNameString[] installationHistoryField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>A human understandable name for the fiber. This is used for  identification of the instance.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A human understandable name for the fiber. This is used for  identification of th" +
            "e instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The mode of fiber.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The mode of fiber.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mode", DataType="FiberMode")]
        public FiberMode mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Zero or more instances that allow other classifications  to be assigned to the fiber.</summary>
        [System.Xml.Serialization.XmlElementAttribute("type")]
        [System.ComponentModel.DescriptionAttribute("Zero or more instances that allow other classifications  to be assigned to the fi" +
            "ber.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("type", DataType="typeOptionalClassString")]
        public typeOptionalClassString[] type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of coating on the fiber.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [System.ComponentModel.DescriptionAttribute("The type of coating on the fiber.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("coating", DataType="kindString")]
        public string coating {
            get {
                return this.coatingField;
            }
            set {
                this.coatingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of jacket covering the fiber.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [System.ComponentModel.DescriptionAttribute("The type of jacket covering the fiber.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("jacket", DataType="kindString")]
        public string jacket {
            get {
                return this.jacketField;
            }
            set {
                this.jacketField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The inner diameter of the core, generally measured in microns (um).</summary>
        [System.ComponentModel.DescriptionAttribute("The inner diameter of the core, generally measured in microns (um).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("coreDiameter", DataType="lengthMeasure")]
        public lengthMeasure coreDiameter {
            get {
                return this.coreDiameterField;
            }
            set {
                this.coreDiameterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The diameter of the core plus the cladding, generally measured in microns (um).</summary>
        [System.ComponentModel.DescriptionAttribute("The diameter of the core plus the cladding, generally measured in microns (um).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("claddedDiameter", DataType="lengthMeasure")]
        public lengthMeasure claddedDiameter {
            get {
                return this.claddedDiameterField;
            }
            set {
                this.claddedDiameterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The diameter of the cable and all its sheathing, generally  measured in microns (um). This is intended to be the diameter of the cable on the spool.</summary>
        [System.ComponentModel.DescriptionAttribute("The diameter of the cable and all its sheathing, generally  measured in microns (" +
            "um). This is intended to be the diameter of the cable on the spool.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("outsideDiameter", DataType="lengthMeasure")]
        public lengthMeasure outsideDiameter {
            get {
                return this.outsideDiameterField;
            }
            set {
                this.outsideDiameterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The refractive index of the fiber. Also included is the frequency  in Hz for which this refractive index is valid. There may be multiple instances of this element.</summary>
        [System.Xml.Serialization.XmlElementAttribute("refractiveIndex")]
        [System.ComponentModel.DescriptionAttribute("The refractive index of the fiber. Also included is the frequency  in Hz for whic" +
            "h this refractive index is valid. There may be multiple instances of this elemen" +
            "t.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("refractiveIndex", DataType="cs_refractiveIndex")]
        public cs_refractiveIndex[] refractiveIndex {
            get {
                return this.refractiveIndexField;
            }
            set {
                this.refractiveIndexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The power loss (usually in decibels) per unit of length of  the fiber. Also included is the frequency for which this loss is measured.  There ay be multiple instances of this element.</summary>
        [System.Xml.Serialization.XmlElementAttribute("oneWayLoss")]
        [System.ComponentModel.DescriptionAttribute("The power loss (usually in decibels) per unit of length of  the fiber. Also inclu" +
            "ded is the frequency for which this loss is measured.  There ay be multiple inst" +
            "ances of this element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oneWayLoss", DataType="cs_oneWayLoss")]
        public cs_oneWayLoss[] oneWayLoss {
            get {
                return this.oneWayLossField;
            }
            set {
                this.oneWayLossField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Additional parameters to define the fiber as a material.  These should not be parameters to define the installation of the fiber in a  well, or other system. This element should be used only if an appropriate  parameter is not available as an element, or in the calibration operation.</summary>
        [System.Xml.Serialization.XmlElementAttribute("parameter")]
        [System.ComponentModel.DescriptionAttribute(@"Additional parameters to define the fiber as a material.  These should not be parameters to define the installation of the fiber in a  well, or other system. This element should be used only if an appropriate  parameter is not available as an element, or in the calibration operation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("parameter", DataType="indexedObject")]
        public indexedObject[] parameter {
            get {
                return this.parameterField;
            }
            set {
                this.parameterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The spool number located on the particular spool.  The spool number may contain alphanumeric characters.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [System.ComponentModel.DescriptionAttribute("The spool number located on the particular spool.  The spool number may contain a" +
            "lphanumeric characters.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("spoolNumberTag", DataType="kindString")]
        public string spoolNumberTag {
            get {
                return this.spoolNumberTagField;
            }
            set {
                this.spoolNumberTagField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The length of the fiber on the spool when purchased.</summary>
        [System.ComponentModel.DescriptionAttribute("The length of the fiber on the spool when purchased.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("spoolLength", DataType="lengthMeasure")]
        public lengthMeasure spoolLength {
            get {
                return this.spoolLengthField;
            }
            set {
                this.spoolLengthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A fiber may go through several manufacturers for its various  parts. The supplier is the final company in the chain that supplies the fiber  to the end user.</summary>
        [System.ComponentModel.DescriptionAttribute("A fiber may go through several manufacturers for its various  parts. The supplier" +
            " is the final company in the chain that supplies the fiber  to the end user.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("supplyDate", DataType="anyDate")]
        public string supplyDate {
            get {
                return this.supplyDateField;
            }
            set {
                this.supplyDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A fiber may go through several manufacturers for its various  parts. The supplier is the final company in the chain that supplies the fiber  to the end user.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A fiber may go through several manufacturers for its various  parts. The supplier" +
            " is the final company in the chain that supplies the fiber  to the end user.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("supplier", DataType="nameString")]
        public string supplier {
            get {
                return this.supplierField;
            }
            set {
                this.supplierField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The model number (alphanumeric) that is used by the supplier  to reference the type of fiber that is supplied to the user.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The model number (alphanumeric) that is used by the supplier  to reference the ty" +
            "pe of fiber that is supplied to the user.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("supplierModelNumber", DataType="nameString")]
        public string supplierModelNumber {
            get {
                return this.supplierModelNumberField;
            }
            set {
                this.supplierModelNumberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information about calibrations and quality checks that were  performed on the cable at the factory. This is not to include calibrations that  are run at installation time and at measurement time.</summary>
        [System.Xml.Serialization.XmlElementAttribute("factoryCalibration")]
        [System.ComponentModel.DescriptionAttribute("Information about calibrations and quality checks that were  performed on the cab" +
            "le at the factory. This is not to include calibrations that  are run at installa" +
            "tion time and at measurement time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("factoryCalibration", DataType="cs_calibration")]
        public cs_calibration[] factoryCalibration {
            get {
                return this.factoryCalibrationField;
            }
            set {
                this.factoryCalibrationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A reference to a dtsInstalledSytem object that previously  used the fiber.</summary>
        [System.Xml.Serialization.XmlElementAttribute("installationHistory")]
        [System.ComponentModel.DescriptionAttribute("A reference to a dtsInstalledSytem object that previously  used the fiber.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("installationHistory", DataType="refNameString")]
        public refNameString[] installationHistory {
            get {
                return this.installationHistoryField;
            }
            set {
                this.installationHistoryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class typeOptionalClassString {
        
        private string classTypeField;
        
        private string valueField;
        
        /// <remarks/>
        /// <summary>This identifies the classification system to  which the class belongs.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [System.ComponentModel.DescriptionAttribute("This identifies the classification system to  which the class belongs.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("classType", DataType="kindString")]
        public string classType {
            get {
                return this.classTypeField;
            }
            set {
                this.classTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_refractiveIndex {
        
        private double valueField;
        
        private frequencyMeasure frequencyField;
        
        private lengthMeasure wavelengthField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The value of the refractive index.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The value of the refractive index.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("value", DataType="unitlessQuantity")]
        public double value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The frequency (and uom) for which the refractive index is measured.</summary>
        [System.ComponentModel.DescriptionAttribute("The frequency (and uom) for which the refractive index is measured.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("frequency", DataType="frequencyMeasure")]
        public frequencyMeasure frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The wavelength (and uom) for which the refractive index is  measured. The reported wavelength should be the wavelength of the light in a vacuum.</summary>
        [System.ComponentModel.DescriptionAttribute("The wavelength (and uom) for which the refractive index is  measured. The reporte" +
            "d wavelength should be the wavelength of the light in a vacuum.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wavelength", DataType="lengthMeasure")]
        public lengthMeasure wavelength {
            get {
                return this.wavelengthField;
            }
            set {
                this.wavelengthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_oneWayLoss {
        
        private generalMeasureType valueField;
        
        private frequencyMeasure frequencyField;
        
        private lengthMeasure wavelengthField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The value of the one way loss per unit of length.  The usual uom is decibels per kilometre (dB/km), although this might vary depending on the  calibration method used.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The value of the one way loss per unit of length.  The usual uom is decibels per " +
            "kilometre (dB/km), although this might vary depending on the  calibration method" +
            " used.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("value", DataType="generalMeasureType")]
        public generalMeasureType value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The frequency (and uom) for which the one-way loss is measured.</summary>
        [System.ComponentModel.DescriptionAttribute("The frequency (and uom) for which the one-way loss is measured.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("frequency", DataType="frequencyMeasure")]
        public frequencyMeasure frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The wavelength (and uom) for which the one-way loss is  measured. The reported wavelength should be the wavelength of the light in a vacuum.</summary>
        [System.ComponentModel.DescriptionAttribute("The wavelength (and uom) for which the one-way loss is  measured. The reported wa" +
            "velength should be the wavelength of the light in a vacuum.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wavelength", DataType="lengthMeasure")]
        public lengthMeasure wavelength {
            get {
                return this.wavelengthField;
            }
            set {
                this.wavelengthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class indexedObject {
        
        private short indexField;
        
        private string nameField;
        
        private string uomField;
        
        private string descriptionField;
        
        private string valueField;
        
        /// <remarks/>
        /// <summary>Indexes things with the same name.  That is the first one, the second one, etc.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Indexes things with the same name.  That is the first one, the second one, etc.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("index", DataType="positiveCount")]
        public short index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="kindString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(24)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="uomString")]
        public string uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="descriptionString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_calibration {
        
        private System.DateTime dTimCalibrationField;
        
        private bool dTimCalibrationFieldSpecified;
        
        private string calibratedByField;
        
        private string calibrationProtocolField;
        
        private cs_calibrationParameter[] parameterField;
        
        private string remarksField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The date of the calibration</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DescriptionAttribute("The date of the calibration")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimCalibration", DataType="date")]
        public System.DateTime dTimCalibration {
            get {
                return this.dTimCalibrationField;
            }
            set {
                this.dTimCalibrationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimCalibrationSpecified {
            get {
                return this.dTimCalibrationFieldSpecified;
            }
            set {
                this.dTimCalibrationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The business associate that performed the calibration.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The business associate that performed the calibration.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("calibratedBy", DataType="nameString")]
        public string calibratedBy {
            get {
                return this.calibratedByField;
            }
            set {
                this.calibratedByField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>This may be a standard protocol, or a software application.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("This may be a standard protocol, or a software application.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("calibrationProtocol", DataType="nameString")]
        public string calibrationProtocol {
            get {
                return this.calibrationProtocolField;
            }
            set {
                this.calibrationProtocolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Attribute name is the name of the parameter. Optional attribute  uom is the unit of measure of the parameter. The value of the element is the value  of the parameter. Note that a string value may appear as a parameter.</summary>
        [System.Xml.Serialization.XmlElementAttribute("parameter")]
        [System.ComponentModel.DescriptionAttribute("Attribute name is the name of the parameter. Optional attribute  uom is the unit " +
            "of measure of the parameter. The value of the element is the value  of the param" +
            "eter. Note that a string value may appear as a parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("parameter", DataType="cs_calibrationParameter")]
        public cs_calibrationParameter[] parameter {
            get {
                return this.parameterField;
            }
            set {
                this.parameterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Any remarks that may be useful, regarding the calibration information.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Any remarks that may be useful, regarding the calibration information.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("remarks", DataType="commentString")]
        public string remarks {
            get {
                return this.remarksField;
            }
            set {
                this.remarksField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_calibrationParameter {
        
        private string uomField;
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        /// <summary>The unit of measure of the parameter value.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(24)]
        [System.ComponentModel.DescriptionAttribute("The unit of measure of the parameter value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="uomString")]
        public string uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the parameter.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_boxInformation {
        
        private string installationDateField;
        
        private string installationCompanyField;
        
        private string deInstallationDateField;
        
        private cs_instrumentBox instrumentBoxField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The date the instrument box was installed.</summary>
        [System.ComponentModel.DescriptionAttribute("The date the instrument box was installed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("installationDate", DataType="anyDate")]
        public string installationDate {
            get {
                return this.installationDateField;
            }
            set {
                this.installationDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The company that installed the instrument box in the wellbore  measurement system.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The company that installed the instrument box in the wellbore  measurement system" +
            ".")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("installationCompany", DataType="nameString")]
        public string installationCompany {
            get {
                return this.installationCompanyField;
            }
            set {
                this.installationCompanyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date the instrument box was de-installed from the wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("The date the instrument box was de-installed from the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("deInstallationDate", DataType="anyDate")]
        public string deInstallationDate {
            get {
                return this.deInstallationDateField;
            }
            set {
                this.deInstallationDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The properties of the instrument box.</summary>
        [System.ComponentModel.DescriptionAttribute("The properties of the instrument box.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("instrumentBox", DataType="cs_instrumentBox")]
        public cs_instrumentBox instrumentBox {
            get {
                return this.instrumentBoxField;
            }
            set {
                this.instrumentBoxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_instrumentBox {
        
        private string nameField;
        
        private string manufacturerField;
        
        private string manufacturingDateField;
        
        private string typeField;
        
        private cs_nameTag[] nameTagField;
        
        private string softwareVersionField;
        
        private cs_instrumentBoxCalibration[] factoryCalibrationField;
        
        private lengthMeasure internalOvenLocationNearField;
        
        private lengthMeasure internalOvenLocationFarField;
        
        private thermodynamicTemperatureMeasure ovenSetPointField;
        
        private string testCableField;
        
        private string offsetField;
        
        private generalMeasureType differentialLossSettingField;
        
        private indexedObject[] parameterField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>A name for the instrument box. This can be used to access  the instrument box.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A name for the instrument box. This can be used to access  the instrument box.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The ultimate manufacturer of the instrument box.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The ultimate manufacturer of the instrument box.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("manufacturer", DataType="nameString")]
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date the manufacturing of the instrument box was completed.</summary>
        [System.ComponentModel.DescriptionAttribute("The date the manufacturing of the instrument box was completed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("manufacturingDate", DataType="anyDate")]
        public string manufacturingDate {
            get {
                return this.manufacturingDateField;
            }
            set {
                this.manufacturingDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of instrument box used.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [System.ComponentModel.DescriptionAttribute("The type of instrument box used.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("type", DataType="kindString")]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An identification tag for the instrument box. A serial number is a type of identification tag however some tags contain many pieces of information. This structure just identifies the tag and does not describe the contents.</summary>
        [System.Xml.Serialization.XmlElementAttribute("nameTag")]
        [System.ComponentModel.DescriptionAttribute("An identification tag for the instrument box. A serial number is a type of identi" +
            "fication tag however some tags contain many pieces of information. This structur" +
            "e just identifies the tag and does not describe the contents.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameTag", DataType="cs_nameTag")]
        public cs_nameTag[] nameTag {
            get {
                return this.nameTagField;
            }
            set {
                this.nameTagField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The version of the software installed in the instrument box.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The version of the software installed in the instrument box.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("softwareVersion", DataType="nameString")]
        public string softwareVersion {
            get {
                return this.softwareVersionField;
            }
            set {
                this.softwareVersionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information about the calibration of the instrument box that  was performed. This includes factory calibrations before shipping, and bench  calibrations. This does not include calibrations made in preparation for  taking measurements.</summary>
        [System.Xml.Serialization.XmlElementAttribute("factoryCalibration")]
        [System.ComponentModel.DescriptionAttribute("Information about the calibration of the instrument box that  was performed. This" +
            " includes factory calibrations before shipping, and bench  calibrations. This do" +
            "es not include calibrations made in preparation for  taking measurements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("factoryCalibration", DataType="cs_instrumentBoxCalibration")]
        public cs_instrumentBoxCalibration[] factoryCalibration {
            get {
                return this.factoryCalibrationField;
            }
            set {
                this.factoryCalibrationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Near distance of the oven from the beginning of the fiber.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Near distance of the oven from the beginning of the fiber.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("internalOvenLocationNear", DataType="lengthMeasure")]
        public lengthMeasure internalOvenLocationNear {
            get {
                return this.internalOvenLocationNearField;
            }
            set {
                this.internalOvenLocationNearField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Far distance of the oven from the beginning of the fiber.</summary>
        [System.ComponentModel.DescriptionAttribute("Far distance of the oven from the beginning of the fiber.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("internalOvenLocationFar", DataType="lengthMeasure")]
        public lengthMeasure internalOvenLocationFar {
            get {
                return this.internalOvenLocationFarField;
            }
            set {
                this.internalOvenLocationFarField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The temperature of the oven.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The temperature of the oven.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ovenSetPoint", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure ovenSetPoint {
            get {
                return this.ovenSetPointField;
            }
            set {
                this.ovenSetPointField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The cable used to test the instrument box.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The cable used to test the instrument box.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("testCable", DataType="nameString")]
        public string testCable {
            get {
                return this.testCableField;
            }
            set {
                this.testCableField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The offset setting applied to the instrument box based on  the factory or bench calibration.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The offset setting applied to the instrument box based on  the factory or bench c" +
            "alibration.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("offset", DataType="nameString")]
        public string offset {
            get {
                return this.offsetField;
            }
            set {
                this.offsetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The power loss over the length of the cable.</summary>
        [System.ComponentModel.DescriptionAttribute("The power loss over the length of the cable.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("differentialLossSetting", DataType="generalMeasureType")]
        public generalMeasureType differentialLossSetting {
            get {
                return this.differentialLossSettingField;
            }
            set {
                this.differentialLossSettingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Additional parameters to define the instrument box as a  piece of equipment. These should not be parameters to define the installation  or use of the box in the wellbore, or other system. This element should be used  only if an appropriate parameter is not available as an element, or in the  calibration operation.</summary>
        [System.Xml.Serialization.XmlElementAttribute("parameter")]
        [System.ComponentModel.DescriptionAttribute(@"Additional parameters to define the instrument box as a  piece of equipment. These should not be parameters to define the installation  or use of the box in the wellbore, or other system. This element should be used  only if an appropriate parameter is not available as an element, or in the  calibration operation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("parameter", DataType="indexedObject")]
        public indexedObject[] parameter {
            get {
                return this.parameterField;
            }
            set {
                this.parameterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_nameTag {
        
        private string nameField;
        
        private NameTagNumberingScheme numberingSchemeField;
        
        private NameTagTechnology technologyField;
        
        private bool technologyFieldSpecified;
        
        private NameTagLocation locationField;
        
        private bool locationFieldSpecified;
        
        private Energistics.DataAccess.Timestamp installationDateField;
        
        private bool installationDateFieldSpecified;
        
        private string installationCompanyField;
        
        private string mountingCodeField;
        
        private string commentField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The physical identification string of the equipment tag.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [System.ComponentModel.DescriptionAttribute("The physical identification string of the equipment tag.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="kindString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The format or encoding specification of the equipment tag.  The tag may contain may different pieces of information and knowledge of that  information is inherent in the specification.  The "identification string" is a mandatory part of the information in a tag.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"The format or encoding specification of the equipment tag.  The tag may contain may different pieces of information and knowledge of that  information is inherent in the specification.  The ""identification string"" is a mandatory part of the information in a tag.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numberingScheme", DataType="NameTagNumberingScheme")]
        public NameTagNumberingScheme numberingScheme {
            get {
                return this.numberingSchemeField;
            }
            set {
                this.numberingSchemeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Identifies the general type of identifier on an item.  If multiple identifiers exist on an item, a separate description set for each identifier should be created.   For example, a joint of casing may have a barcode label on it along with a painted-on code and an RFID tag attached or embedded into the coupling.  The barcode label may in turn be an RFID equipped label. This particular scenario would require populating five nameTags to fully describe and decode all the possible identifiers as follows: 'tagged' - RFID tag embedded in the coupling, 'label'  - Serial number printed on the label, 'tagged' - RFID tag embedded into the label, 'label'  - Barcode printed on the label, 'painted'- Mill number painted on the pipe body.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Identifies the general type of identifier on an item.  If multiple identifiers exist on an item, a separate description set for each identifier should be created.   For example, a joint of casing may have a barcode label on it along with a painted-on code and an RFID tag attached or embedded into the coupling.  The barcode label may in turn be an RFID equipped label. This particular scenario would require populating five nameTags to fully describe and decode all the possible identifiers as follows: 'tagged' - RFID tag embedded in the coupling, 'label'  - Serial number printed on the label, 'tagged' - RFID tag embedded into the label, 'label'  - Barcode printed on the label, 'painted'- Mill number painted on the pipe body.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("technology", DataType="NameTagTechnology")]
        public NameTagTechnology technology {
            get {
                return this.technologyField;
            }
            set {
                this.technologyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool technologySpecified {
            get {
                return this.technologyFieldSpecified;
            }
            set {
                this.technologyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An indicator of where the tag is attached to the item. This is used to assist the user in finding where an identifier is located on an item.  This optional field also helps to differentiate where an identifier is located when multiple identifiers exist on an item. Most downhole components have a box (female thread) and pin (male thread) end as well as a pipe body in between the ends. Where multiple identifiers are used on an item, it is convenient to have a reference as to which end, or somewhere in the middle, an identifier may be closer to. Some items may have an identifier on a non-standard location, such as on the arm of a hole opener.  'other', by exclusion, tells a user to look elsewhere than on the body or near the ends of an item.  Most non-downhole tools will use either 'body', 'other' or not specified as the location tends to lose value with smaller or non threaded items.</summary>
        [System.ComponentModel.DescriptionAttribute(@"An indicator of where the tag is attached to the item. This is used to assist the user in finding where an identifier is located on an item.  This optional field also helps to differentiate where an identifier is located when multiple identifiers exist on an item. Most downhole components have a box (female thread) and pin (male thread) end as well as a pipe body in between the ends. Where multiple identifiers are used on an item, it is convenient to have a reference as to which end, or somewhere in the middle, an identifier may be closer to. Some items may have an identifier on a non-standard location, such as on the arm of a hole opener.  'other', by exclusion, tells a user to look elsewhere than on the body or near the ends of an item.  Most non-downhole tools will use either 'body', 'other' or not specified as the location tends to lose value with smaller or non threaded items.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("location", DataType="NameTagLocation")]
        public NameTagLocation location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool locationSpecified {
            get {
                return this.locationFieldSpecified;
            }
            set {
                this.locationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>When the tag was installed in or on the item.</summary>
        [System.ComponentModel.DescriptionAttribute("When the tag was installed in or on the item.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("installationDate", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp installationDate {
            get {
                return this.installationDateField;
            }
            set {
                this.installationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool installationDateSpecified {
            get {
                return this.installationDateFieldSpecified;
            }
            set {
                this.installationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the company that installed the tag.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the company that installed the tag.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("installationCompany", DataType="nameString")]
        public string installationCompany {
            get {
                return this.installationCompanyField;
            }
            set {
                this.installationCompanyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reference to a manufacturers or installers installation  description, code, or method.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [System.ComponentModel.DescriptionAttribute("Reference to a manufacturers or installers installation  description, code, or me" +
            "thod.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mountingCode", DataType="kindString")]
        public string mountingCode {
            get {
                return this.mountingCodeField;
            }
            set {
                this.mountingCodeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A comment or remark about the tag.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A comment or remark about the tag.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_instrumentBoxCalibration {
        
        private System.DateTime dTimCalibrationField;
        
        private bool dTimCalibrationFieldSpecified;
        
        private string calibratedByField;
        
        private string calibrationProtocolField;
        
        private cs_calibrationParameter[] parameterField;
        
        private string remarksField;
        
        private thermodynamicTemperatureMeasure offsetTemperatureCalibrationField;
        
        private temperatureSlopeMeasure slopeCalibrationField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The date of the calibration</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        [System.ComponentModel.DescriptionAttribute("The date of the calibration")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimCalibration", DataType="date")]
        public System.DateTime dTimCalibration {
            get {
                return this.dTimCalibrationField;
            }
            set {
                this.dTimCalibrationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimCalibrationSpecified {
            get {
                return this.dTimCalibrationFieldSpecified;
            }
            set {
                this.dTimCalibrationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The business associate that performed the calibration.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The business associate that performed the calibration.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("calibratedBy", DataType="nameString")]
        public string calibratedBy {
            get {
                return this.calibratedByField;
            }
            set {
                this.calibratedByField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>This may be a standard protocol, or a software application.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("This may be a standard protocol, or a software application.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("calibrationProtocol", DataType="nameString")]
        public string calibrationProtocol {
            get {
                return this.calibrationProtocolField;
            }
            set {
                this.calibrationProtocolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Attribute name is the name of the parameter. Optional attribute  uom is the unit of measure of the parameter. The value of the element is the value  of the parameter. Note that a string value may appear as a parameter.</summary>
        [System.Xml.Serialization.XmlElementAttribute("parameter")]
        [System.ComponentModel.DescriptionAttribute("Attribute name is the name of the parameter. Optional attribute  uom is the unit " +
            "of measure of the parameter. The value of the element is the value  of the param" +
            "eter. Note that a string value may appear as a parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("parameter", DataType="cs_calibrationParameter")]
        public cs_calibrationParameter[] parameter {
            get {
                return this.parameterField;
            }
            set {
                this.parameterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Any remarks that may be useful, regarding the calibration information.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Any remarks that may be useful, regarding the calibration information.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("remarks", DataType="commentString")]
        public string remarks {
            get {
                return this.remarksField;
            }
            set {
                this.remarksField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The temperature offset correction that is applied to the  dts instrument box.</summary>
        [System.ComponentModel.DescriptionAttribute("The temperature offset correction that is applied to the  dts instrument box.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("offsetTemperatureCalibration", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure offsetTemperatureCalibration {
            get {
                return this.offsetTemperatureCalibrationField;
            }
            set {
                this.offsetTemperatureCalibrationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The temperature slope correction that is applied to the  dts instrument box.</summary>
        [System.ComponentModel.DescriptionAttribute("The temperature slope correction that is applied to the  dts instrument box.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("slopeCalibration", DataType="temperatureSlopeMeasure")]
        public temperatureSlopeMeasure slopeCalibration {
            get {
                return this.slopeCalibrationField;
            }
            set {
                this.slopeCalibrationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_fiberEndPoint {
        
        private string nameField;
        
        private string descriptionField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>A name, unique within the context of the well, for an  instrument box cable to hook to.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A name, unique within the context of the well, for an  instrument box cable to ho" +
            "ok to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Any description of the node that may be useful in  identifying the hookup.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Any description of the node that may be useful in  identifying the hookup.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="commentString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_singleInstalledPoint {
        
        private measuredDepthCoord mdField;
        
        private lengthMeasure lengthAlongFiberField;
        
        private InstalledFiberPoint typeField;
        
        private bool typeFieldSpecified;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The measured depth of the installed point of the fiber.  This is optional, because the sender may want to record points that are  outside the well.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth of the installed point of the fiber.  This is optional, becaus" +
            "e the sender may want to record points that are  outside the well.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("md", DataType="measuredDepthCoord")]
        public measuredDepthCoord md {
            get {
                return this.mdField;
            }
            set {
                this.mdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The length along the fiber, from the zero point, for  this particular point.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The length along the fiber, from the zero point, for  this particular point.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lengthAlongFiber", DataType="lengthMeasure")]
        public lengthMeasure lengthAlongFiber {
            get {
                return this.lengthAlongFiberField;
            }
            set {
                this.lengthAlongFiberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of point that is being recorded.</summary>
        [System.ComponentModel.DescriptionAttribute("The type of point that is being recorded.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("type", DataType="InstalledFiberPoint")]
        public InstalledFiberPoint type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_pumpActivity {
        
        private string nameField;
        
        private refNameString installedFiberField;
        
        private string pumpingDateField;
        
        private string engineerNameField;
        
        private string serviceCompanyField;
        
        private string pumpFluidTypeField;
        
        private string controlLineFluidField;
        
        private string pumpDirectionField;
        
        private string fiberEndSealField;
        
        private string cableMeterTypeField;
        
        private string cableMeterSerialNumberField;
        
        private string cableMeterCalibrationDateField;
        
        private object[] itemsField;
        
        private lengthMeasure excessFiberRecoveredField;
        
        private cs_pumpLogRow[] pumpLogField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>A name which can be used to reference the pumping activity.  In general, a pumping activity does not have a natural name, so that this element  will not be often used.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A name which can be used to reference the pumping activity.  In general, a pumpin" +
            "g activity does not have a natural name, so that this element  will not be often" +
            " used.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the InstalledFiberInstance that this activity relates to.</summary>
        [System.ComponentModel.DescriptionAttribute("The name of the InstalledFiberInstance that this activity relates to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("installedFiber", DataType="refNameString")]
        public refNameString installedFiber {
            get {
                return this.installedFiberField;
            }
            set {
                this.installedFiberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date, or dateTime of the pumping activity.</summary>
        [System.ComponentModel.DescriptionAttribute("The date, or dateTime of the pumping activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pumpingDate", DataType="anyDate")]
        public string pumpingDate {
            get {
                return this.pumpingDateField;
            }
            set {
                this.pumpingDateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The person in charge of the pumping activity.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The person in charge of the pumping activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("engineerName", DataType="nameString")]
        public string engineerName {
            get {
                return this.engineerNameField;
            }
            set {
                this.engineerNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The company that performed the pumping activity.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The company that performed the pumping activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("serviceCompany", DataType="nameString")]
        public string serviceCompany {
            get {
                return this.serviceCompanyField;
            }
            set {
                this.serviceCompanyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of fluid used in the pump.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [System.ComponentModel.DescriptionAttribute("The type of fluid used in the pump.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pumpFluidType", DataType="kindString")]
        public string pumpFluidType {
            get {
                return this.pumpFluidTypeField;
            }
            set {
                this.pumpFluidTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of fluid used in the control line.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [System.ComponentModel.DescriptionAttribute("The type of fluid used in the control line.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("controlLineFluid", DataType="kindString")]
        public string controlLineFluid {
            get {
                return this.controlLineFluidField;
            }
            set {
                this.controlLineFluidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The direction of the pumping.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [System.ComponentModel.DescriptionAttribute("The direction of the pumping.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pumpDirection", DataType="kindString")]
        public string pumpDirection {
            get {
                return this.pumpDirectionField;
            }
            set {
                this.pumpDirectionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of end seal on the fiber.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [System.ComponentModel.DescriptionAttribute("The type of end seal on the fiber.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fiberEndSeal", DataType="kindString")]
        public string fiberEndSeal {
            get {
                return this.fiberEndSealField;
            }
            set {
                this.fiberEndSealField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of cable meter.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [System.ComponentModel.DescriptionAttribute("The type of cable meter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cableMeterType", DataType="kindString")]
        public string cableMeterType {
            get {
                return this.cableMeterTypeField;
            }
            set {
                this.cableMeterTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The serial number of the cable meter.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The serial number of the cable meter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cableMeterSerialNumber", DataType="nameString")]
        public string cableMeterSerialNumber {
            get {
                return this.cableMeterSerialNumberField;
            }
            set {
                this.cableMeterSerialNumberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The date the cable meter was calibrated.</summary>
        [System.ComponentModel.DescriptionAttribute("The date the cable meter was calibrated.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cableMeterCalibrationDate", DataType="anyDate")]
        public string cableMeterCalibrationDate {
            get {
                return this.cableMeterCalibrationDateField;
            }
            set {
                this.cableMeterCalibrationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("OTDRPerformed", typeof(refNameString))]
        [System.Xml.Serialization.XmlElementAttribute("wasDriftRunPerformed", typeof(bool))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wasDriftRunPerformed", DataType="logicalBoolean")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("OTDRPerformed", DataType="refNameString")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The length of the excess fiber that was removed.</summary>
        [System.ComponentModel.DescriptionAttribute("The length of the excess fiber that was removed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("excessFiberRecovered", DataType="lengthMeasure")]
        public lengthMeasure excessFiberRecovered {
            get {
                return this.excessFiberRecoveredField;
            }
            set {
                this.excessFiberRecoveredField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information about the pumping activity, that is captured in the pump log.</summary>
        [System.Xml.Serialization.XmlArrayItemAttribute("tableRow", IsNullable=false)]
        [System.ComponentModel.DescriptionAttribute("Information about the pumping activity, that is captured in the pump log.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pumpLog", DataType="cs_pumpLogTable")]
        public cs_pumpLogRow[] pumpLog {
            get {
                return this.pumpLogField;
            }
            set {
                this.pumpLogField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_pumpLogRow {
        
        private velocityMeasure cableSpeedField;
        
        private lengthMeasure fiberPumpedLengthField;
        
        private pressureMeasure pumpPressureField;
        
        private string pumpFluidField;
        
        private thermodynamicTemperatureMeasure temperatureInField;
        
        private thermodynamicTemperatureMeasure temperatureOutField;
        
        private string remarksField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The speed of the cable.</summary>
        [System.ComponentModel.DescriptionAttribute("The speed of the cable.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cableSpeed", DataType="velocityMeasure")]
        public velocityMeasure cableSpeed {
            get {
                return this.cableSpeedField;
            }
            set {
                this.cableSpeedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The length of fiber pumped into the wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("The length of fiber pumped into the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fiberPumpedLength", DataType="lengthMeasure")]
        public lengthMeasure fiberPumpedLength {
            get {
                return this.fiberPumpedLengthField;
            }
            set {
                this.fiberPumpedLengthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The operating pressure of the pump.</summary>
        [System.ComponentModel.DescriptionAttribute("The operating pressure of the pump.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pumpPressure", DataType="pressureMeasure")]
        public pressureMeasure pumpPressure {
            get {
                return this.pumpPressureField;
            }
            set {
                this.pumpPressureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The fluid used in the pumping operation.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [System.ComponentModel.DescriptionAttribute("The fluid used in the pumping operation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pumpFluid", DataType="kindString")]
        public string pumpFluid {
            get {
                return this.pumpFluidField;
            }
            set {
                this.pumpFluidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The temperature going into the wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("The temperature going into the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("temperatureIn", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure temperatureIn {
            get {
                return this.temperatureInField;
            }
            set {
                this.temperatureInField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The temperature at the end of the operation</summary>
        [System.ComponentModel.DescriptionAttribute("The temperature at the end of the operation")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("temperatureOut", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure temperatureOut {
            get {
                return this.temperatureOutField;
            }
            set {
                this.temperatureOutField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Any general remarks about the pumping operation.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Any general remarks about the pumping operation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("remarks", DataType="commentString")]
        public string remarks {
            get {
                return this.remarksField;
            }
            set {
                this.remarksField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_otdr {
        
        private OTDRReason reasonForRunField;
        
        private Energistics.DataAccess.Timestamp dTimRunField;
        
        private bool dTimRunFieldSpecified;
        
        private refNameString dataInWellLogField;
        
        private refNameString fiberEndConncectedField;
        
        private string commentField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The reason the OTDR test was run. The three main reasons are  'pre-installation', which is before the installation of the fiber; 'post-installation',  which is used to validate a successful fiber installation; and 'DTS run', which is  a quality check of the fiber prior to a DTS run. A fourth permitted value is 'other'.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"The reason the OTDR test was run. The three main reasons are  'pre-installation', which is before the installation of the fiber; 'post-installation',  which is used to validate a successful fiber installation; and 'DTS run', which is  a quality check of the fiber prior to a DTS run. A fourth permitted value is 'other'.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reasonForRun", DataType="OTDRReason")]
        public OTDRReason reasonForRun {
            get {
                return this.reasonForRunField;
            }
            set {
                this.reasonForRunField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The dateTime of the run.</summary>
        [System.ComponentModel.DescriptionAttribute("The dateTime of the run.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimRun", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimRun {
            get {
                return this.dTimRunField;
            }
            set {
                this.dTimRunField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimRunSpecified {
            get {
                return this.dTimRunFieldSpecified;
            }
            set {
                this.dTimRunFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A reference to the well log used to record the table of data.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A reference to the well log used to record the table of data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dataInWellLog", DataType="refNameString")]
        public refNameString dataInWellLog {
            get {
                return this.dataInWellLogField;
            }
            set {
                this.dataInWellLogField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the fiber connection node. If more than one node  is available for a well/wellbore, this element is used to specify which node is  connected to the instrument box. This name should correspond to the fiberEndPoint/name  that is recorded in the installed system object.</summary>
        [System.ComponentModel.DescriptionAttribute(@"A pointer to the fiber connection node. If more than one node  is available for a well/wellbore, this element is used to specify which node is  connected to the instrument box. This name should correspond to the fiberEndPoint/name  that is recorded in the installed system object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fiberEndConncected", DataType="refNameString")]
        public refNameString fiberEndConncected {
            get {
                return this.fiberEndConncectedField;
            }
            set {
                this.fiberEndConncectedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A general comment about the OTDR run.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A general comment about the OTDR run.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [System.Xml.Serialization.XmlRootAttribute("dtsMeasurements", Namespace="http://www.witsml.org/schemas/131", IsNullable=false)]
    public partial class obj_dtsMeasurements {
        
        private cs_documentInfo documentInfoField;
        
        private obj_dtsMeasurement[] dtsMeasurementField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Main wrapper for all the distributed temperature survey information about the measurement. Note that this object must be accompanied by a wellLog object in order to be complete.</summary>
        [System.Xml.Serialization.XmlElementAttribute("dtsMeasurement")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Main wrapper for all the distributed temperature survey information about the mea" +
            "surement. Note that this object must be accompanied by a wellLog object in order" +
            " to be complete.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dtsMeasurement", DataType="obj_dtsMeasurement")]
        public obj_dtsMeasurement[] dtsMeasurement {
            get {
                return this.dtsMeasurementField;
            }
            set {
                this.dtsMeasurementField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.3\\.1\\.([1-9]|([1-9][0-9]))")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionString")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("WITSML", "1.3.1.1")]
    public partial class obj_dtsMeasurement {
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string nameField;
        
        private timeMeasure runDurationField;
        
        private refNameString installedSystemUsedField;
        
        private refNameString dataInWellLogField;
        
        private refNameString connectedToFiberField;
        
        private refNameString fiberEndConnectedField;
        
        private cs_singleInstalledPoint fiberDefinedPointField;
        
        private cs_errorReport[] errorReportField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidWellboreField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore that contains the dts.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore that contains the dts.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWellbore", DataType="nameString")]
        public string nameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the dts.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the dts.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The length of time that the instrument box was operating  while collecting DTS data.</summary>
        [System.ComponentModel.DescriptionAttribute("The length of time that the instrument box was operating  while collecting DTS da" +
            "ta.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("runDuration", DataType="timeMeasure")]
        public timeMeasure runDuration {
            get {
                return this.runDurationField;
            }
            set {
                this.runDurationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A reference to the installed system that was used to make the measurements.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A reference to the installed system that was used to make the measurements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("installedSystemUsed", DataType="refNameString")]
        public refNameString installedSystemUsed {
            get {
                return this.installedSystemUsedField;
            }
            set {
                this.installedSystemUsedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A reference to the well log used to record the table of data.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A reference to the well log used to record the table of data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dataInWellLog", DataType="refNameString")]
        public refNameString dataInWellLog {
            get {
                return this.dataInWellLogField;
            }
            set {
                this.dataInWellLogField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A reference to the fiber used to record the table of data.  This is necessary only in the cases in which a dtsInstalledSystem has a multi-fiber  installation. If there is only a single installed fiber, this element is unnecessary.</summary>
        [System.ComponentModel.DescriptionAttribute("A reference to the fiber used to record the table of data.  This is necessary onl" +
            "y in the cases in which a dtsInstalledSystem has a multi-fiber  installation. If" +
            " there is only a single installed fiber, this element is unnecessary.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("connectedToFiber", DataType="refNameString")]
        public refNameString connectedToFiber {
            get {
                return this.connectedToFiberField;
            }
            set {
                this.connectedToFiberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the fiber connection node. If more than one node  is available for a well/wellbore, this element is used to specify which node  is connected to the instrument box. This name should correspond to the  fiberEndPoint/name that is recorded in the installed system object.</summary>
        [System.ComponentModel.DescriptionAttribute(@"A pointer to the fiber connection node. If more than one node  is available for a well/wellbore, this element is used to specify which node  is connected to the instrument box. This name should correspond to the  fiberEndPoint/name that is recorded in the installed system object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fiberEndConnected", DataType="refNameString")]
        public refNameString fiberEndConnected {
            get {
                return this.fiberEndConnectedField;
            }
            set {
                this.fiberEndConnectedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A known point of the fiber. This point should correspond  to one that is given in the wellboreFiberSchematic, so that the relationship  between the length of fiber values in the wellboreFiberSchematic can be related  to the values in the measurement table.</summary>
        [System.ComponentModel.DescriptionAttribute(@"A known point of the fiber. This point should correspond  to one that is given in the wellboreFiberSchematic, so that the relationship  between the length of fiber values in the wellboreFiberSchematic can be related  to the values in the measurement table.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fiberDefinedPoint", DataType="cs_singleInstalledPoint")]
        public cs_singleInstalledPoint fiberDefinedPoint {
            get {
                return this.fiberDefinedPointField;
            }
            set {
                this.fiberDefinedPointField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An error that occurred during the measurement.</summary>
        [System.Xml.Serialization.XmlElementAttribute("errorReport")]
        [System.ComponentModel.DescriptionAttribute("An error that occurred during the measurement.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("errorReport", DataType="cs_errorReport")]
        public cs_errorReport[] errorReport {
            get {
                return this.errorReportField;
            }
            set {
                this.errorReportField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the wellbore. This uniquely represents  the wellbore referenced by the (possibly non-unique) nameWellbore.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the wellbore. This uniquely represents  the wellbore refere" +
            "nced by the (possibly non-unique) nameWellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWellbore", DataType="uidString")]
        public string uidWellbore {
            get {
                return this.uidWellboreField;
            }
            set {
                this.uidWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_errorReport {
        
        private string nameField;
        
        private string idField;
        
        private string descriptionField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>A name of the error.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A name of the error.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A code, or other id, for the error.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [System.ComponentModel.DescriptionAttribute("A code, or other id, for the error.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("id", DataType="kindString")]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A description of the error.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A description of the error.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="commentString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [System.Xml.Serialization.XmlRootAttribute("fluidsReports", Namespace="http://www.witsml.org/schemas/131", IsNullable=false)]
    public partial class obj_fluidsReports {
        
        private cs_documentInfo documentInfoField;
        
        private obj_fluidsReport[] fluidsReportField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A single fluids report.</summary>
        [System.Xml.Serialization.XmlElementAttribute("fluidsReport")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A single fluids report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fluidsReport", DataType="obj_fluidsReport")]
        public obj_fluidsReport[] fluidsReport {
            get {
                return this.fluidsReportField;
            }
            set {
                this.fluidsReportField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.3\\.1\\.([1-9]|([1-9][0-9]))")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionString")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("WITSML", "1.3.1.1")]
    public partial class obj_fluidsReport {
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string nameField;
        
        private Energistics.DataAccess.Timestamp dTimField;
        
        private measuredDepthCoord mdField;
        
        private wellVerticalDepthCoord tvdField;
        
        private short numReportField;
        
        private bool numReportFieldSpecified;
        
        private cs_fluid[] fluidField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidWellboreField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore that contains the fluids report.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore that contains the fluids report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWellbore", DataType="nameString")]
        public string nameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the fluids report.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the fluids report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time the information is related to.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Date and time the information is related to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Along hole measured depth of measurement from the drill datum.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Along hole measured depth of measurement from the drill datum.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("md", DataType="measuredDepthCoord")]
        public measuredDepthCoord md {
            get {
                return this.mdField;
            }
            set {
                this.mdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Vertical depth of the measurements.</summary>
        [System.ComponentModel.DescriptionAttribute("Vertical depth of the measurements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvd", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvd {
            get {
                return this.tvdField;
            }
            set {
                this.tvdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fluids report number.</summary>
        [System.ComponentModel.DescriptionAttribute("Fluids report number.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numReport", DataType="positiveCount")]
        public short numReport {
            get {
                return this.numReportField;
            }
            set {
                this.numReportField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numReportSpecified {
            get {
                return this.numReportFieldSpecified;
            }
            set {
                this.numReportFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A Fluid record.</summary>
        [System.Xml.Serialization.XmlElementAttribute("fluid")]
        [System.ComponentModel.DescriptionAttribute("A Fluid record.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fluid", DataType="cs_fluid")]
        public cs_fluid[] fluid {
            get {
                return this.fluidField;
            }
            set {
                this.fluidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the wellbore. This uniquely represents  the wellbore referenced by the (possibly non-unique) nameWellbore.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the wellbore. This uniquely represents  the wellbore refere" +
            "nced by the (possibly non-unique) nameWellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWellbore", DataType="uidString")]
        public string uidWellbore {
            get {
                return this.uidWellboreField;
            }
            set {
                this.uidWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_fluid {
        
        private string typeField;
        
        private string locationSampleField;
        
        private Energistics.DataAccess.Timestamp dTimField;
        
        private bool dTimFieldSpecified;
        
        private measuredDepthCoord mdField;
        
        private densityMeasure densityField;
        
        private timeMeasure visFunnelField;
        
        private thermodynamicTemperatureMeasure tempVisField;
        
        private dynamicViscosityMeasure pvField;
        
        private pressureMeasure ypField;
        
        private pressureMeasure gel10SecField;
        
        private pressureMeasure gel10MinField;
        
        private pressureMeasure gel30MinField;
        
        private lengthMeasure filterCakeLtlpField;
        
        private volumeMeasure filtrateLtlpField;
        
        private thermodynamicTemperatureMeasure tempHthpField;
        
        private pressureMeasure presHthpField;
        
        private volumeMeasure filtrateHthpField;
        
        private lengthMeasure filterCakeHthpField;
        
        private volumePerVolumeMeasure solidsPcField;
        
        private volumePerVolumeMeasure waterPcField;
        
        private volumePerVolumeMeasure oilPcField;
        
        private volumePerVolumeMeasure sandPcField;
        
        private volumePerVolumeMeasure solidsLowGravPcField;
        
        private volumePerVolumeMeasure solidsCalcPcField;
        
        private volumePerVolumeMeasure baritePcField;
        
        private densityMeasure lcmField;
        
        private equivalentPerMassMeasure mbtField;
        
        private double phField;
        
        private bool phFieldSpecified;
        
        private thermodynamicTemperatureMeasure tempPhField;
        
        private volumeMeasure pmField;
        
        private volumeMeasure pmFiltrateField;
        
        private volumeMeasure mfField;
        
        private volumeMeasure alkalinityP1Field;
        
        private volumeMeasure alkalinityP2Field;
        
        private densityMeasure chlorideField;
        
        private densityMeasure calciumField;
        
        private densityMeasure magnesiumField;
        
        private densityMeasure potassiumField;
        
        private cs_rheometer[] rheometerField;
        
        private volumePerVolumeMeasure brinePcField;
        
        private densityMeasure limeField;
        
        private electricPotentialMeasure electStabField;
        
        private densityMeasure calciumChlorideField;
        
        private string companyField;
        
        private string engineerField;
        
        private double asgField;
        
        private bool asgFieldSpecified;
        
        private volumePerVolumeMeasure solidsHiGravPcField;
        
        private volumePerVolumeMeasure polymerField;
        
        private string polyTypeField;
        
        private volumePerVolumeMeasure solCorPcField;
        
        private massConcentrationMeasure oilCtgField;
        
        private massConcentrationMeasure hardnessCaField;
        
        private densityMeasure sulfideField;
        
        private string commentsField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Description for the type of object.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Description for the type of object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("type", DataType="str32")]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Sample location.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Sample location.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("locationSample", DataType="str32")]
        public string locationSample {
            get {
                return this.locationSampleField;
            }
            set {
                this.locationSampleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The time when fluid readings were recorded.</summary>
        [System.ComponentModel.DescriptionAttribute("The time when fluid readings were recorded.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimSpecified {
            get {
                return this.dTimFieldSpecified;
            }
            set {
                this.dTimFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth when fluid readings were recorded.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth when fluid readings were recorded.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("md", DataType="measuredDepthCoord")]
        public measuredDepthCoord md {
            get {
                return this.mdField;
            }
            set {
                this.mdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fluid density.</summary>
        [System.ComponentModel.DescriptionAttribute("Fluid density.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("density", DataType="densityMeasure")]
        public densityMeasure density {
            get {
                return this.densityField;
            }
            set {
                this.densityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Funnel viscosity in seconds.</summary>
        [System.ComponentModel.DescriptionAttribute("Funnel viscosity in seconds.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("visFunnel", DataType="timeMeasure")]
        public timeMeasure visFunnel {
            get {
                return this.visFunnelField;
            }
            set {
                this.visFunnelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Funnel viscosity temperature.</summary>
        [System.ComponentModel.DescriptionAttribute("Funnel viscosity temperature.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempVis", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempVis {
            get {
                return this.tempVisField;
            }
            set {
                this.tempVisField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Plastic viscosity.</summary>
        [System.ComponentModel.DescriptionAttribute("Plastic viscosity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pv", DataType="dynamicViscosityMeasure")]
        public dynamicViscosityMeasure pv {
            get {
                return this.pvField;
            }
            set {
                this.pvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Yield point (Bingham and Herschel Bulkley models).</summary>
        [System.ComponentModel.DescriptionAttribute("Yield point (Bingham and Herschel Bulkley models).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("yp", DataType="pressureMeasure")]
        public pressureMeasure yp {
            get {
                return this.ypField;
            }
            set {
                this.ypField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>10 second gels.</summary>
        [System.ComponentModel.DescriptionAttribute("10 second gels.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gel10Sec", DataType="pressureMeasure")]
        public pressureMeasure gel10Sec {
            get {
                return this.gel10SecField;
            }
            set {
                this.gel10SecField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>10 minute gels.</summary>
        [System.ComponentModel.DescriptionAttribute("10 minute gels.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gel10Min", DataType="pressureMeasure")]
        public pressureMeasure gel10Min {
            get {
                return this.gel10MinField;
            }
            set {
                this.gel10MinField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>30 minute gels.</summary>
        [System.ComponentModel.DescriptionAttribute("30 minute gels.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gel30Min", DataType="pressureMeasure")]
        public pressureMeasure gel30Min {
            get {
                return this.gel30MinField;
            }
            set {
                this.gel30MinField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Filter cake thickness at low (normal) temperature and pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Filter cake thickness at low (normal) temperature and pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("filterCakeLtlp", DataType="lengthMeasure")]
        public lengthMeasure filterCakeLtlp {
            get {
                return this.filterCakeLtlpField;
            }
            set {
                this.filterCakeLtlpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>API water loss (low temperature and pressure mud filtrate measurement) (ml/30min)</summary>
        [System.ComponentModel.DescriptionAttribute("API water loss (low temperature and pressure mud filtrate measurement) (ml/30min)" +
            "")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("filtrateLtlp", DataType="volumeMeasure")]
        public volumeMeasure filtrateLtlp {
            get {
                return this.filtrateLtlpField;
            }
            set {
                this.filtrateLtlpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>High temperature high pressure (HTHP) temperature.</summary>
        [System.ComponentModel.DescriptionAttribute("High temperature high pressure (HTHP) temperature.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempHthp", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempHthp {
            get {
                return this.tempHthpField;
            }
            set {
                this.tempHthpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>High temperature high pressure (HTHP) pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("High temperature high pressure (HTHP) pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presHthp", DataType="pressureMeasure")]
        public pressureMeasure presHthp {
            get {
                return this.presHthpField;
            }
            set {
                this.presHthpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>High temperature high pressure (HTHP) filtrate (volume per 30min).</summary>
        [System.ComponentModel.DescriptionAttribute("High temperature high pressure (HTHP) filtrate (volume per 30min).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("filtrateHthp", DataType="volumeMeasure")]
        public volumeMeasure filtrateHthp {
            get {
                return this.filtrateHthpField;
            }
            set {
                this.filtrateHthpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>High temperature high pressure (HTHP) Filter cake thickness.</summary>
        [System.ComponentModel.DescriptionAttribute("High temperature high pressure (HTHP) Filter cake thickness.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("filterCakeHthp", DataType="lengthMeasure")]
        public lengthMeasure filterCakeHthp {
            get {
                return this.filterCakeHthpField;
            }
            set {
                this.filterCakeHthpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Solids percentage from retort (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Solids percentage from retort (commonly in percent).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("solidsPc", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure solidsPc {
            get {
                return this.solidsPcField;
            }
            set {
                this.solidsPcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Water content (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Water content (commonly in percent).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("waterPc", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure waterPc {
            get {
                return this.waterPcField;
            }
            set {
                this.waterPcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Oil content from retort (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Oil content from retort (commonly in percent).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilPc", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure oilPc {
            get {
                return this.oilPcField;
            }
            set {
                this.oilPcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Sand content (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Sand content (commonly in percent).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sandPc", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure sandPc {
            get {
                return this.sandPcField;
            }
            set {
                this.sandPcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Low gravity solids (%).</summary>
        [System.ComponentModel.DescriptionAttribute("Low gravity solids (%).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("solidsLowGravPc", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure solidsLowGravPc {
            get {
                return this.solidsLowGravPcField;
            }
            set {
                this.solidsLowGravPcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Solids content (calculated) (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Solids content (calculated) (commonly in percent).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("solidsCalcPc", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure solidsCalcPc {
            get {
                return this.solidsCalcPcField;
            }
            set {
                this.solidsCalcPcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Barite content (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Barite content (commonly in percent).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("baritePc", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure baritePc {
            get {
                return this.baritePcField;
            }
            set {
                this.baritePcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Lost circulation material.</summary>
        [System.ComponentModel.DescriptionAttribute("Lost circulation material.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lcm", DataType="densityMeasure")]
        public densityMeasure lcm {
            get {
                return this.lcmField;
            }
            set {
                this.lcmField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cation exchange capacity (CEC) of the mud sample as measured by methylene blue titration (MBT).</summary>
        [System.ComponentModel.DescriptionAttribute("Cation exchange capacity (CEC) of the mud sample as measured by methylene blue ti" +
            "tration (MBT).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mbt", DataType="equivalentPerMassMeasure")]
        public equivalentPerMassMeasure mbt {
            get {
                return this.mbtField;
            }
            set {
                this.mbtField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud pH.</summary>
        [System.ComponentModel.DescriptionAttribute("Mud pH.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ph", DataType="unitlessQuantity")]
        public double ph {
            get {
                return this.phField;
            }
            set {
                this.phField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phSpecified {
            get {
                return this.phFieldSpecified;
            }
            set {
                this.phFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud pH measurement temperature.</summary>
        [System.ComponentModel.DescriptionAttribute("Mud pH measurement temperature.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempPh", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempPh {
            get {
                return this.tempPhField;
            }
            set {
                this.tempPhField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Phenolphthalein alkalinity of whole mud.</summary>
        [System.ComponentModel.DescriptionAttribute("Phenolphthalein alkalinity of whole mud.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pm", DataType="volumeMeasure")]
        public volumeMeasure pm {
            get {
                return this.pmField;
            }
            set {
                this.pmField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Phenolphthalein alkalinity of mud filtrate.</summary>
        [System.ComponentModel.DescriptionAttribute("Phenolphthalein alkalinity of mud filtrate.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pmFiltrate", DataType="volumeMeasure")]
        public volumeMeasure pmFiltrate {
            get {
                return this.pmFiltrateField;
            }
            set {
                this.pmFiltrateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Methyl orange alkalinity of filtrate.</summary>
        [System.ComponentModel.DescriptionAttribute("Methyl orange alkalinity of filtrate.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mf", DataType="volumeMeasure")]
        public volumeMeasure mf {
            get {
                return this.mfField;
            }
            set {
                this.mfField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud alkalinity P1 from alternate alkalinity method (volume in ml of 0.02N acid  to reach the phenolphthalein endpoint).</summary>
        [System.ComponentModel.DescriptionAttribute("Mud alkalinity P1 from alternate alkalinity method (volume in ml of 0.02N acid  t" +
            "o reach the phenolphthalein endpoint).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("alkalinityP1", DataType="volumeMeasure")]
        public volumeMeasure alkalinityP1 {
            get {
                return this.alkalinityP1Field;
            }
            set {
                this.alkalinityP1Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud alkalinity P2 from alternate alkalinity method (volume in ml of 0.02N acid to titrate the reagent mixture to the phenolphthalein endpoint).</summary>
        [System.ComponentModel.DescriptionAttribute("Mud alkalinity P2 from alternate alkalinity method (volume in ml of 0.02N acid to" +
            " titrate the reagent mixture to the phenolphthalein endpoint).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("alkalinityP2", DataType="volumeMeasure")]
        public volumeMeasure alkalinityP2 {
            get {
                return this.alkalinityP2Field;
            }
            set {
                this.alkalinityP2Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Chloride content.</summary>
        [System.ComponentModel.DescriptionAttribute("Chloride content.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("chloride", DataType="densityMeasure")]
        public densityMeasure chloride {
            get {
                return this.chlorideField;
            }
            set {
                this.chlorideField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calcium content.</summary>
        [System.ComponentModel.DescriptionAttribute("Calcium content.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("calcium", DataType="densityMeasure")]
        public densityMeasure calcium {
            get {
                return this.calciumField;
            }
            set {
                this.calciumField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Magnesium content.</summary>
        [System.ComponentModel.DescriptionAttribute("Magnesium content.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("magnesium", DataType="densityMeasure")]
        public densityMeasure magnesium {
            get {
                return this.magnesiumField;
            }
            set {
                this.magnesiumField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Potassium content.</summary>
        [System.ComponentModel.DescriptionAttribute("Potassium content.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("potassium", DataType="densityMeasure")]
        public densityMeasure potassium {
            get {
                return this.potassiumField;
            }
            set {
                this.potassiumField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>One or more sets of rheometer readings at given temperature and pressure.</summary>
        [System.Xml.Serialization.XmlElementAttribute("rheometer")]
        [System.ComponentModel.DescriptionAttribute("One or more sets of rheometer readings at given temperature and pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rheometer", DataType="cs_rheometer")]
        public cs_rheometer[] rheometer {
            get {
                return this.rheometerField;
            }
            set {
                this.rheometerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Brine content (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Brine content (commonly in percent).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("brinePc", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure brinePc {
            get {
                return this.brinePcField;
            }
            set {
                this.brinePcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Lime content.</summary>
        [System.ComponentModel.DescriptionAttribute("Lime content.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lime", DataType="densityMeasure")]
        public densityMeasure lime {
            get {
                return this.limeField;
            }
            set {
                this.limeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measurement of the emulsion stability and oil-wetting capability in oil-based muds.</summary>
        [System.ComponentModel.DescriptionAttribute("Measurement of the emulsion stability and oil-wetting capability in oil-based mud" +
            "s.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("electStab", DataType="electricPotentialMeasure")]
        public electricPotentialMeasure electStab {
            get {
                return this.electStabField;
            }
            set {
                this.electStabField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calcium chloride content.</summary>
        [System.ComponentModel.DescriptionAttribute("Calcium chloride content.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("calciumChloride", DataType="densityMeasure")]
        public densityMeasure calciumChloride {
            get {
                return this.calciumChlorideField;
            }
            set {
                this.calciumChlorideField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of company.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Name of company.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("company", DataType="str32")]
        public string company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Engineer name</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Engineer name")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("engineer", DataType="nameString")]
        public string engineer {
            get {
                return this.engineerField;
            }
            set {
                this.engineerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average specific gravity of solids.</summary>
        [System.ComponentModel.DescriptionAttribute("Average specific gravity of solids.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("asg", DataType="unitlessQuantity")]
        public double asg {
            get {
                return this.asgField;
            }
            set {
                this.asgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool asgSpecified {
            get {
                return this.asgFieldSpecified;
            }
            set {
                this.asgFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Solids high gravity (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Solids high gravity (commonly in percent).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("solidsHiGravPc", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure solidsHiGravPc {
            get {
                return this.solidsHiGravPcField;
            }
            set {
                this.solidsHiGravPcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Polymers present in mud system.</summary>
        [System.ComponentModel.DescriptionAttribute("Polymers present in mud system.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("polymer", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure polymer {
            get {
                return this.polymerField;
            }
            set {
                this.polymerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of polymers present in mud system.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Type of polymers present in mud system.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("polyType", DataType="str32")]
        public string polyType {
            get {
                return this.polyTypeField;
            }
            set {
                this.polyTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Solids corrected for Chloride content (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Solids corrected for Chloride content (commonly in percent).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("solCorPc", DataType="volumePerVolumeMeasure")]
        public volumePerVolumeMeasure solCorPc {
            get {
                return this.solCorPcField;
            }
            set {
                this.solCorPcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Oil on Cuttings.</summary>
        [System.ComponentModel.DescriptionAttribute("Oil on Cuttings.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("oilCtg", DataType="massConcentrationMeasure")]
        public massConcentrationMeasure oilCtg {
            get {
                return this.oilCtgField;
            }
            set {
                this.oilCtgField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total calcium hardness.</summary>
        [System.ComponentModel.DescriptionAttribute("Total calcium hardness.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("hardnessCa", DataType="massConcentrationMeasure")]
        public massConcentrationMeasure hardnessCa {
            get {
                return this.hardnessCaField;
            }
            set {
                this.hardnessCaField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Sulfide content.</summary>
        [System.ComponentModel.DescriptionAttribute("Sulfide content.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sulfide", DataType="densityMeasure")]
        public densityMeasure sulfide {
            get {
                return this.sulfideField;
            }
            set {
                this.sulfideField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comments and remarks.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Comments and remarks.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comments", DataType="commentString")]
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_rheometer {
        
        private thermodynamicTemperatureMeasure tempRheomField;
        
        private pressureMeasure presRheomField;
        
        private double vis3RpmField;
        
        private bool vis3RpmFieldSpecified;
        
        private double vis6RpmField;
        
        private bool vis6RpmFieldSpecified;
        
        private double vis100RpmField;
        
        private bool vis100RpmFieldSpecified;
        
        private double vis200RpmField;
        
        private bool vis200RpmFieldSpecified;
        
        private double vis300RpmField;
        
        private bool vis300RpmFieldSpecified;
        
        private double vis600RpmField;
        
        private bool vis600RpmFieldSpecified;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Rheometer temperature.</summary>
        [System.ComponentModel.DescriptionAttribute("Rheometer temperature.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempRheom", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempRheom {
            get {
                return this.tempRheomField;
            }
            set {
                this.tempRheomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rheometer pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Rheometer pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presRheom", DataType="pressureMeasure")]
        public pressureMeasure presRheom {
            get {
                return this.presRheomField;
            }
            set {
                this.presRheomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>3 RPM viscometer reading</summary>
        [System.ComponentModel.DescriptionAttribute("3 RPM viscometer reading")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("vis3Rpm", DataType="unitlessQuantity")]
        public double vis3Rpm {
            get {
                return this.vis3RpmField;
            }
            set {
                this.vis3RpmField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool vis3RpmSpecified {
            get {
                return this.vis3RpmFieldSpecified;
            }
            set {
                this.vis3RpmFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>6 RPM viscometer reading.</summary>
        [System.ComponentModel.DescriptionAttribute("6 RPM viscometer reading.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("vis6Rpm", DataType="unitlessQuantity")]
        public double vis6Rpm {
            get {
                return this.vis6RpmField;
            }
            set {
                this.vis6RpmField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool vis6RpmSpecified {
            get {
                return this.vis6RpmFieldSpecified;
            }
            set {
                this.vis6RpmFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>100 RPM viscometer reading.</summary>
        [System.ComponentModel.DescriptionAttribute("100 RPM viscometer reading.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("vis100Rpm", DataType="unitlessQuantity")]
        public double vis100Rpm {
            get {
                return this.vis100RpmField;
            }
            set {
                this.vis100RpmField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool vis100RpmSpecified {
            get {
                return this.vis100RpmFieldSpecified;
            }
            set {
                this.vis100RpmFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>200 RPM viscometer reading.</summary>
        [System.ComponentModel.DescriptionAttribute("200 RPM viscometer reading.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("vis200Rpm", DataType="unitlessQuantity")]
        public double vis200Rpm {
            get {
                return this.vis200RpmField;
            }
            set {
                this.vis200RpmField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool vis200RpmSpecified {
            get {
                return this.vis200RpmFieldSpecified;
            }
            set {
                this.vis200RpmFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>300 RPM viscometer reading.</summary>
        [System.ComponentModel.DescriptionAttribute("300 RPM viscometer reading.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("vis300Rpm", DataType="unitlessQuantity")]
        public double vis300Rpm {
            get {
                return this.vis300RpmField;
            }
            set {
                this.vis300RpmField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool vis300RpmSpecified {
            get {
                return this.vis300RpmFieldSpecified;
            }
            set {
                this.vis300RpmFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>600 RPM viscometer reading.</summary>
        [System.ComponentModel.DescriptionAttribute("600 RPM viscometer reading.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("vis600Rpm", DataType="unitlessQuantity")]
        public double vis600Rpm {
            get {
                return this.vis600RpmField;
            }
            set {
                this.vis600RpmField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool vis600RpmSpecified {
            get {
                return this.vis600RpmFieldSpecified;
            }
            set {
                this.vis600RpmFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [System.Xml.Serialization.XmlRootAttribute("formationMarkers", Namespace="http://www.witsml.org/schemas/131", IsNullable=false)]
    public partial class obj_formationMarkers {
        
        private cs_documentInfo documentInfoField;
        
        private obj_formationMarker[] formationMarkerField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A single formation marker.</summary>
        [System.Xml.Serialization.XmlElementAttribute("formationMarker")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A single formation marker.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("formationMarker", DataType="obj_formationMarker")]
        public obj_formationMarker[] formationMarker {
            get {
                return this.formationMarkerField;
            }
            set {
                this.formationMarkerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.3\\.1\\.([1-9]|([1-9][0-9]))")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionString")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("WITSML", "1.3.1.1")]
    public partial class obj_formationMarker {
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string nameField;
        
        private measuredDepthCoord mdPrognosedField;
        
        private wellVerticalDepthCoord tvdPrognosedField;
        
        private measuredDepthCoord mdTopSampleField;
        
        private wellVerticalDepthCoord tvdTopSampleField;
        
        private lengthMeasure thicknessBedField;
        
        private lengthMeasure thicknessApparentField;
        
        private lengthMeasure thicknessPerpenField;
        
        private measuredDepthCoord mdLogSampleField;
        
        private wellVerticalDepthCoord tvdLogSampleField;
        
        private planeAngleMeasure dipField;
        
        private planeAngleMeasure dipDirectionField;
        
        private string chronostratigraphicField;
        
        private string nameFormationField;
        
        private string descriptionField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidWellboreField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore that contains the formation marker.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore that contains the formation marker.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWellbore", DataType="nameString")]
        public string nameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the formation marker.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the formation marker.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Prognosed measured depth.</summary>
        [System.ComponentModel.DescriptionAttribute("Prognosed measured depth.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdPrognosed", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdPrognosed {
            get {
                return this.mdPrognosedField;
            }
            set {
                this.mdPrognosedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Prognosed true vertical depth.</summary>
        [System.ComponentModel.DescriptionAttribute("Prognosed true vertical depth.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvdPrognosed", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvdPrognosed {
            get {
                return this.tvdPrognosedField;
            }
            set {
                this.tvdPrognosedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Sampled measured depth at top of marker.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Sampled measured depth at top of marker.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdTopSample", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdTopSample {
            get {
                return this.mdTopSampleField;
            }
            set {
                this.mdTopSampleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Sampled true vertical depth at top of marker.</summary>
        [System.ComponentModel.DescriptionAttribute("Sampled true vertical depth at top of marker.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvdTopSample", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvdTopSample {
            get {
                return this.tvdTopSampleField;
            }
            set {
                this.tvdTopSampleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bed Thickness.</summary>
        [System.ComponentModel.DescriptionAttribute("Bed Thickness.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("thicknessBed", DataType="lengthMeasure")]
        public lengthMeasure thicknessBed {
            get {
                return this.thicknessBedField;
            }
            set {
                this.thicknessBedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Formation exposed along the wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("Formation exposed along the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("thicknessApparent", DataType="lengthMeasure")]
        public lengthMeasure thicknessApparent {
            get {
                return this.thicknessApparentField;
            }
            set {
                this.thicknessApparentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Perpendicular thickness.</summary>
        [System.ComponentModel.DescriptionAttribute("Perpendicular thickness.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("thicknessPerpen", DataType="lengthMeasure")]
        public lengthMeasure thicknessPerpen {
            get {
                return this.thicknessPerpenField;
            }
            set {
                this.thicknessPerpenField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Logged measured depth at top of marker.</summary>
        [System.ComponentModel.DescriptionAttribute("Logged measured depth at top of marker.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdLogSample", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdLogSample {
            get {
                return this.mdLogSampleField;
            }
            set {
                this.mdLogSampleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Logged true vertical depth at top of marker.</summary>
        [System.ComponentModel.DescriptionAttribute("Logged true vertical depth at top of marker.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvdLogSample", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvdLogSample {
            get {
                return this.tvdLogSampleField;
            }
            set {
                this.tvdLogSampleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Angle of dip with respect to horizontal.</summary>
        [System.ComponentModel.DescriptionAttribute("Angle of dip with respect to horizontal.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dip", DataType="planeAngleMeasure")]
        public planeAngleMeasure dip {
            get {
                return this.dipField;
            }
            set {
                this.dipField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Interpreted downdip direction.</summary>
        [System.ComponentModel.DescriptionAttribute("Interpreted downdip direction.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dipDirection", DataType="planeAngleMeasure")]
        public planeAngleMeasure dipDirection {
            get {
                return this.dipDirectionField;
            }
            set {
                this.dipDirectionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Chronostratigraphic classification.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Chronostratigraphic classification.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("chronostratigraphic", DataType="str32")]
        public string chronostratigraphic {
            get {
                return this.chronostratigraphicField;
            }
            set {
                this.chronostratigraphicField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Formation name.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Formation name.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameFormation", DataType="str32")]
        public string nameFormation {
            get {
                return this.nameFormationField;
            }
            set {
                this.nameFormationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of item and details.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Description of item and details.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="commentString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the wellbore. This uniquely represents  the wellbore referenced by the (possibly non-unique) nameWellbore.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the wellbore. This uniquely represents  the wellbore refere" +
            "nced by the (possibly non-unique) nameWellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWellbore", DataType="uidString")]
        public string uidWellbore {
            get {
                return this.uidWellboreField;
            }
            set {
                this.uidWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [System.Xml.Serialization.XmlRootAttribute("logs", Namespace="http://www.witsml.org/schemas/131", IsNullable=false)]
    public partial class obj_logs {
        
        private cs_documentInfo documentInfoField;
        
        private obj_log[] logField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A single log.</summary>
        [System.Xml.Serialization.XmlElementAttribute("log")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A single log.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("log", DataType="obj_log")]
        public obj_log[] log {
            get {
                return this.logField;
            }
            set {
                this.logField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.3\\.1\\.([1-9]|([1-9][0-9]))")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionString")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("WITSML", "1.3.1.1")]
    public partial class obj_log {
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string nameField;
        
        private bool objectGrowingField;
        
        private bool objectGrowingFieldSpecified;
        
        private int dataRowCountField;
        
        private bool dataRowCountFieldSpecified;
        
        private string serviceCompanyField;
        
        private string runNumberField;
        
        private short bhaRunNumberField;
        
        private bool bhaRunNumberFieldSpecified;
        
        private string passField;
        
        private Energistics.DataAccess.Timestamp creationDateField;
        
        private bool creationDateFieldSpecified;
        
        private string descriptionField;
        
        private LogIndexType indexTypeField;
        
        private genericMeasure startIndexField;
        
        private genericMeasure endIndexField;
        
        private ratioGenericMeasure stepIncrementField;
        
        private Energistics.DataAccess.Timestamp startDateTimeIndexField;
        
        private bool startDateTimeIndexFieldSpecified;
        
        private Energistics.DataAccess.Timestamp endDateTimeIndexField;
        
        private bool endDateTimeIndexFieldSpecified;
        
        private LogIndexDirection directionField;
        
        private bool directionFieldSpecified;
        
        private indexCurve indexCurveField;
        
        private string nullValueField;
        
        private indexedObject[] logParamField;
        
        private cs_logCurveInfo[] logCurveInfoField;
        
        private string[] logDataField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidWellboreField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore that contains the log.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore that contains the log.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWellbore", DataType="nameString")]
        public string nameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the log.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the log.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Whether or not the log is growing.  True ("true" or "1") indicates the that the log is still growing  in size (that is, logData values are still being added). For example, it may be connected to a realtime stream. False ("false" or "0") indicates that the log is  closed (that is, no further logData values will be added). Not given indicates that the status of the log is not known. This value is only relevant within the context of a server.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Whether or not the log is growing.  True (""true"" or ""1"") indicates the that the log is still growing  in size (that is, logData values are still being added). For example, it may be connected to a realtime stream. False (""false"" or ""0"") indicates that the log is  closed (that is, no further logData values will be added). Not given indicates that the status of the log is not known. This value is only relevant within the context of a server.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("objectGrowing", DataType="logicalBoolean")]
        public bool objectGrowing {
            get {
                return this.objectGrowingField;
            }
            set {
                this.objectGrowingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool objectGrowingSpecified {
            get {
                return this.objectGrowingFieldSpecified;
            }
            set {
                this.objectGrowingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The number of data rows in the persistent log.  If a value is specified for this element in a query then the  server will limit the number of data rows in the result but the return value will still be the number of data rows in  the persistent log.</summary>
        [System.ComponentModel.DescriptionAttribute("The number of data rows in the persistent log.  If a value is specified for this " +
            "element in a query then the  server will limit the number of data rows in the re" +
            "sult but the return value will still be the number of data rows in  the persiste" +
            "nt log.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dataRowCount", DataType="positiveBigCount")]
        public int dataRowCount {
            get {
                return this.dataRowCountField;
            }
            set {
                this.dataRowCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dataRowCountSpecified {
            get {
                return this.dataRowCountFieldSpecified;
            }
            set {
                this.dataRowCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of contractor who provided the service.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of contractor who provided the service.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("serviceCompany", DataType="nameString")]
        public string serviceCompany {
            get {
                return this.serviceCompanyField;
            }
            set {
                this.serviceCompanyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Log run number. This should normally be a number; however  some legacy systems encode other information in this value.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Log run number. This should normally be a number; however  some legacy systems en" +
            "code other information in this value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("runNumber", DataType="str16")]
        public string runNumber {
            get {
                return this.runNumberField;
            }
            set {
                this.runNumberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The bottom hole assembly run number associated with this log.</summary>
        [System.ComponentModel.DescriptionAttribute("The bottom hole assembly run number associated with this log.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bhaRunNumber", DataType="positiveCount")]
        public short bhaRunNumber {
            get {
                return this.bhaRunNumberField;
            }
            set {
                this.bhaRunNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bhaRunNumberSpecified {
            get {
                return this.bhaRunNumberFieldSpecified;
            }
            set {
                this.bhaRunNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Identifies the pass within the run.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Identifies the pass within the run.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pass", DataType="str16")]
        public string pass {
            get {
                return this.passField;
            }
            set {
                this.passField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time that the log was created.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time that the log was created.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("creationDate", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp creationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool creationDateSpecified {
            get {
                return this.creationDateFieldSpecified;
            }
            set {
                this.creationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of item and details.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Description of item and details.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="commentString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Primary index type.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Primary index type.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("indexType", DataType="LogIndexType")]
        public LogIndexType indexType {
            get {
                return this.indexTypeField;
            }
            set {
                this.indexTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>When the log header defines the direction as "Increasing",  the startIndex is the starting (minimum) index value at which the first valid data point is located.  When the log header defines the direction as "Decreasing", the startIndex  is the starting (maximum) index value at which the first valid data point is located.</summary>
        [System.ComponentModel.DescriptionAttribute(@"When the log header defines the direction as ""Increasing"",  the startIndex is the starting (minimum) index value at which the first valid data point is located.  When the log header defines the direction as ""Decreasing"", the startIndex  is the starting (maximum) index value at which the first valid data point is located.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("startIndex", DataType="genericMeasure")]
        public genericMeasure startIndex {
            get {
                return this.startIndexField;
            }
            set {
                this.startIndexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>When the log header defines the direction as "Increasing", the endIndex  is the ending (maximum) index value at which the last valid data point is located.   When the log header defines the direction as Decreasing, the endIndex is the ending  (minimum) index value at which the last valid data point is located.</summary>
        [System.ComponentModel.DescriptionAttribute(@"When the log header defines the direction as ""Increasing"", the endIndex  is the ending (maximum) index value at which the last valid data point is located.   When the log header defines the direction as Decreasing, the endIndex is the ending  (minimum) index value at which the last valid data point is located.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("endIndex", DataType="genericMeasure")]
        public genericMeasure endIndex {
            get {
                return this.endIndexField;
            }
            set {
                this.endIndexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The sampling increment. Set to zero for unequal sampling. This would only apply if the curve was sorted on its own values. For curves that are originally sampled at a constant increment, this value should be retained because the calculated values may have cumulative errors.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The sampling increment. Set to zero for unequal sampling. This would only apply if the curve was sorted on its own values. For curves that are originally sampled at a constant increment, this value should be retained because the calculated values may have cumulative errors.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stepIncrement", DataType="ratioGenericMeasure")]
        public ratioGenericMeasure stepIncrement {
            get {
                return this.stepIncrementField;
            }
            set {
                this.stepIncrementField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>When the log header defines the direction as "Increasing",  the startIndex is the starting (minimum) index value at which the first valid data point is located.  When the log header defines the direction as "Decreasing", the startIndex  is the starting (maximum) index value at which the first valid data point is located.</summary>
        [System.ComponentModel.DescriptionAttribute(@"When the log header defines the direction as ""Increasing"",  the startIndex is the starting (minimum) index value at which the first valid data point is located.  When the log header defines the direction as ""Decreasing"", the startIndex  is the starting (maximum) index value at which the first valid data point is located.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("startDateTimeIndex", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp startDateTimeIndex {
            get {
                return this.startDateTimeIndexField;
            }
            set {
                this.startDateTimeIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startDateTimeIndexSpecified {
            get {
                return this.startDateTimeIndexFieldSpecified;
            }
            set {
                this.startDateTimeIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>When the log header defines the direction as "Increasing", the endIndex  is the ending (maximum) index value at which the last valid data point is located.   When the log header defines the direction as Decreasing, the endIndex is the ending  (minimum) index value at which the last valid data point is located.</summary>
        [System.ComponentModel.DescriptionAttribute(@"When the log header defines the direction as ""Increasing"", the endIndex  is the ending (maximum) index value at which the last valid data point is located.   When the log header defines the direction as Decreasing, the endIndex is the ending  (minimum) index value at which the last valid data point is located.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("endDateTimeIndex", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp endDateTimeIndex {
            get {
                return this.endDateTimeIndexField;
            }
            set {
                this.endDateTimeIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endDateTimeIndexSpecified {
            get {
                return this.endDateTimeIndexFieldSpecified;
            }
            set {
                this.endDateTimeIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The sort order of the data row index values in the XML instance. For an "Increasing" direction the index value of consecutive data nodes are ascending. For a "Decreasing" direction the index value of consecutive data nodes are descending. The default direction is "Increasing".  The direction of a log cannot be changed  once it has been created. That is, this value cannot be updated in a server.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The sort order of the data row index values in the XML instance. For an ""Increasing"" direction the index value of consecutive data nodes are ascending. For a ""Decreasing"" direction the index value of consecutive data nodes are descending. The default direction is ""Increasing"".  The direction of a log cannot be changed  once it has been created. That is, this value cannot be updated in a server.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("direction", DataType="LogIndexDirection")]
        public LogIndexDirection direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool directionSpecified {
            get {
                return this.directionFieldSpecified;
            }
            set {
                this.directionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The mnemonic of the index curve plus the column index. A column index of zero indicates an implied trace whose values start at startIndex  and increment by stepIncrement for each row.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The mnemonic of the index curve plus the column index. A column index of zero ind" +
            "icates an implied trace whose values start at startIndex  and increment by stepI" +
            "ncrement for each row.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("indexCurve", DataType="indexCurve")]
        public indexCurve indexCurve {
            get {
                return this.indexCurveField;
            }
            set {
                this.indexCurveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An empty string is the default representation of a null value for a  curve (i.e. when the null value representation is not explicitly defined).  If a null value representation is defined for a log, this becomes the default for all curves in that log (but can be overridden at the curve level).   An empty string is always a valid null value representation in the comma delimited list. An empty string is not a valid null value representation within a space delimited array. Specifying a null value also makes it easier to transform data back to a  legacy format without having to scan the data to insure that the null pattern  does not exist in the data.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute(@"An empty string is the default representation of a null value for a  curve (i.e. when the null value representation is not explicitly defined).  If a null value representation is defined for a log, this becomes the default for all curves in that log (but can be overridden at the curve level).   An empty string is always a valid null value representation in the comma delimited list. An empty string is not a valid null value representation within a space delimited array. Specifying a null value also makes it easier to transform data back to a  legacy format without having to scan the data to insure that the null pattern  does not exist in the data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nullValue", DataType="encodedValueString")]
        public string nullValue {
            get {
                return this.nullValueField;
            }
            set {
                this.nullValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Log parameters.</summary>
        [System.Xml.Serialization.XmlElementAttribute("logParam")]
        [System.ComponentModel.DescriptionAttribute("Log parameters.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("logParam", DataType="indexedObject")]
        public indexedObject[] logParam {
            get {
                return this.logParamField;
            }
            set {
                this.logParamField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Container element for the log curve information.</summary>
        [System.Xml.Serialization.XmlElementAttribute("logCurveInfo")]
        [System.ComponentModel.DescriptionAttribute("Container element for the log curve information.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("logCurveInfo", DataType="cs_logCurveInfo")]
        public cs_logCurveInfo[] logCurveInfo {
            get {
                return this.logCurveInfoField;
            }
            set {
                this.logCurveInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Container for one or more "rows" of log data.</summary>
        [System.Xml.Serialization.XmlArrayItemAttribute("data", IsNullable=false)]
        [System.ComponentModel.DescriptionAttribute("Container for one or more \"rows\" of log data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("logData", DataType="cs_logData")]
        public string[] logData {
            get {
                return this.logDataField;
            }
            set {
                this.logDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the wellbore. This uniquely represents  the wellbore referenced by the (possibly non-unique) nameWellbore.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the wellbore. This uniquely represents  the wellbore refere" +
            "nced by the (possibly non-unique) nameWellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWellbore", DataType="uidString")]
        public string uidWellbore {
            get {
                return this.uidWellboreField;
            }
            set {
                this.uidWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class indexCurve {
        
        private short columnIndexField;
        
        private string valueField;
        
        /// <remarks/>
        /// <summary>The column index of the curve.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The column index of the curve.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("columnIndex", DataType="nonNegativeCount")]
        public short columnIndex {
            get {
                return this.columnIndexField;
            }
            set {
                this.columnIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_logCurveInfo {
        
        private string mnemonicField;
        
        private RealtimeData classWitsmlField;
        
        private bool classWitsmlFieldSpecified;
        
        private string unitField;
        
        private string mnemAliasField;
        
        private string nullValueField;
        
        private bool alternateIndexField;
        
        private bool alternateIndexFieldSpecified;
        
        private refNameString wellDatumField;
        
        private genericMeasure minIndexField;
        
        private genericMeasure maxIndexField;
        
        private Energistics.DataAccess.Timestamp minDateTimeIndexField;
        
        private bool minDateTimeIndexFieldSpecified;
        
        private Energistics.DataAccess.Timestamp maxDateTimeIndexField;
        
        private bool maxDateTimeIndexFieldSpecified;
        
        private short columnIndexField;
        
        private string curveDescriptionField;
        
        private lengthMeasure sensorOffsetField;
        
        private string dataSourceField;
        
        private perLengthMeasure densDataField;
        
        private LogTraceState traceStateField;
        
        private bool traceStateFieldSpecified;
        
        private LogTraceOrigin traceOriginField;
        
        private bool traceOriginFieldSpecified;
        
        private LogDataType typeLogDataField;
        
        private bool typeLogDataFieldSpecified;
        
        private cs_axisDefinition[] axisDefinitionField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The curve name.   This must be unique for all curves in a log.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("The curve name.   This must be unique for all curves in a log.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mnemonic", DataType="str32")]
        public string mnemonic {
            get {
                return this.mnemonicField;
            }
            set {
                this.mnemonicField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The curve classification obtained from a lookup in the vendors  mnemonic catalog.</summary>
        [System.ComponentModel.DescriptionAttribute("The curve classification obtained from a lookup in the vendors  mnemonic catalog." +
            "")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("classWitsml", DataType="RealtimeData")]
        public RealtimeData classWitsml {
            get {
                return this.classWitsmlField;
            }
            set {
                this.classWitsmlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool classWitsmlSpecified {
            get {
                return this.classWitsmlFieldSpecified;
            }
            set {
                this.classWitsmlFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unit of measurement of the data values.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(24)]
        [System.ComponentModel.DescriptionAttribute("Unit of measurement of the data values.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("unit", DataType="uomString")]
        public string unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name alias for this trace.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Name alias for this trace.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mnemAlias", DataType="str32")]
        public string mnemAlias {
            get {
                return this.mnemAliasField;
            }
            set {
                this.mnemAliasField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An empty string is the default representation of a null value for a  curve (i.e. when the null value representation is not explicitly defined).  If a null value is defined in the logCurveInfo, it overrides any null value specified at the  logHeader level. An empty string is always a valid null value representation in the comma delimited list. An empty string is not a valid null value representation within a space delimited array. Specifying a null value also makes it easier to transform data back to a  legacy format without having to scan the data to insure that the null pattern  does not exist in the data.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute(@"An empty string is the default representation of a null value for a  curve (i.e. when the null value representation is not explicitly defined).  If a null value is defined in the logCurveInfo, it overrides any null value specified at the  logHeader level. An empty string is always a valid null value representation in the comma delimited list. An empty string is not a valid null value representation within a space delimited array. Specifying a null value also makes it easier to transform data back to a  legacy format without having to scan the data to insure that the null pattern  does not exist in the data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nullValue", DataType="encodedValueString")]
        public string nullValue {
            get {
                return this.nullValueField;
            }
            set {
                this.nullValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True (true or 1) if this curve is a candidate to be a primary index. False (false or 0) or not given, indicates otherwise. An index curve should monotonically change when sorted on its own values (i.e., no duplicates).</summary>
        [System.ComponentModel.DescriptionAttribute("True (true or 1) if this curve is a candidate to be a primary index. False (false" +
            " or 0) or not given, indicates otherwise. An index curve should monotonically ch" +
            "ange when sorted on its own values (i.e., no duplicates).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("alternateIndex", DataType="logicalBoolean")]
        public bool alternateIndex {
            get {
                return this.alternateIndexField;
            }
            set {
                this.alternateIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool alternateIndexSpecified {
            get {
                return this.alternateIndexFieldSpecified;
            }
            set {
                this.alternateIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the wellDatum that represents the values of this trace. This is only relevant for measured depths, vertical depths or elevations.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the wellDatum that represents the values of this trace. This is only" +
            " relevant for measured depths, vertical depths or elevations.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellDatum", DataType="refNameString")]
        public refNameString wellDatum {
            get {
                return this.wellDatumField;
            }
            set {
                this.wellDatumField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The minimum index value at which the first valid data point is located.  This value will be properly set by the server to reflect data in the returned document.</summary>
        [System.ComponentModel.DescriptionAttribute("The minimum index value at which the first valid data point is located.  This val" +
            "ue will be properly set by the server to reflect data in the returned document.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("minIndex", DataType="genericMeasure")]
        public genericMeasure minIndex {
            get {
                return this.minIndexField;
            }
            set {
                this.minIndexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum index value at which the last valid data point is located. This value will be properly set by the server to reflect data in the returned document.</summary>
        [System.ComponentModel.DescriptionAttribute("The maximum index value at which the last valid data point is located. This value" +
            " will be properly set by the server to reflect data in the returned document.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("maxIndex", DataType="genericMeasure")]
        public genericMeasure maxIndex {
            get {
                return this.maxIndexField;
            }
            set {
                this.maxIndexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The minimum index value at which the first valid data point is located. This value will be properly set by the server to reflect data  in the returned document.</summary>
        [System.ComponentModel.DescriptionAttribute("The minimum index value at which the first valid data point is located. This valu" +
            "e will be properly set by the server to reflect data  in the returned document.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("minDateTimeIndex", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp minDateTimeIndex {
            get {
                return this.minDateTimeIndexField;
            }
            set {
                this.minDateTimeIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool minDateTimeIndexSpecified {
            get {
                return this.minDateTimeIndexFieldSpecified;
            }
            set {
                this.minDateTimeIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum index value at which the last valid data point  is located. This value will be properly set by the server to reflect data  in the returned document.</summary>
        [System.ComponentModel.DescriptionAttribute("The maximum index value at which the last valid data point  is located. This valu" +
            "e will be properly set by the server to reflect data  in the returned document.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("maxDateTimeIndex", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp maxDateTimeIndex {
            get {
                return this.maxDateTimeIndexField;
            }
            set {
                this.maxDateTimeIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxDateTimeIndexSpecified {
            get {
                return this.maxDateTimeIndexFieldSpecified;
            }
            set {
                this.maxDateTimeIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A 1-based index of data in the LOGDATA.DATA section. A value of zero indicates an implied curve with no values in the data record.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A 1-based index of data in the LOGDATA.DATA section. A value of zero indicates an" +
            " implied curve with no values in the data record.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("columnIndex", DataType="nonNegativeCount")]
        public short columnIndex {
            get {
                return this.columnIndexField;
            }
            set {
                this.columnIndexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of the curve.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("Description of the curve.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("curveDescription", DataType="descriptionString")]
        public string curveDescription {
            get {
                return this.curveDescriptionField;
            }
            set {
                this.curveDescriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Offset of sensor from drill bit.   This element is only informative. The measured depth values are at the actual depth (not bit depth from which you must  subtract the offset).</summary>
        [System.ComponentModel.DescriptionAttribute("Offset of sensor from drill bit.   This element is only informative. The measured" +
            " depth values are at the actual depth (not bit depth from which you must  subtra" +
            "ct the offset).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sensorOffset", DataType="lengthMeasure")]
        public lengthMeasure sensorOffset {
            get {
                return this.sensorOffsetField;
            }
            set {
                this.sensorOffsetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data source, could be tool name/id.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Data source, could be tool name/id.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dataSource", DataType="str32")]
        public string dataSource {
            get {
                return this.dataSourceField;
            }
            set {
                this.dataSourceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data density of sample in samples per length unit.</summary>
        [System.ComponentModel.DescriptionAttribute("Data density of sample in samples per length unit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densData", DataType="perLengthMeasure")]
        public perLengthMeasure densData {
            get {
                return this.densDataField;
            }
            set {
                this.densDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>State of trace data.</summary>
        [System.ComponentModel.DescriptionAttribute("State of trace data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("traceState", DataType="LogTraceState")]
        public LogTraceState traceState {
            get {
                return this.traceStateField;
            }
            set {
                this.traceStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool traceStateSpecified {
            get {
                return this.traceStateFieldSpecified;
            }
            set {
                this.traceStateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Origin of trace data.</summary>
        [System.ComponentModel.DescriptionAttribute("Origin of trace data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("traceOrigin", DataType="LogTraceOrigin")]
        public LogTraceOrigin traceOrigin {
            get {
                return this.traceOriginField;
            }
            set {
                this.traceOriginField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool traceOriginSpecified {
            get {
                return this.traceOriginFieldSpecified;
            }
            set {
                this.traceOriginFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Log data type.</summary>
        [System.ComponentModel.DescriptionAttribute("Log data type.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeLogData", DataType="LogDataType")]
        public LogDataType typeLogData {
            get {
                return this.typeLogDataField;
            }
            set {
                this.typeLogDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeLogDataSpecified {
            get {
                return this.typeLogDataFieldSpecified;
            }
            set {
                this.typeLogDataFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Indicates that the curve is an array curve (i.e., multi-valued samples),  and provides meta data by which an axis of the array can be understood.</summary>
        [System.Xml.Serialization.XmlElementAttribute("axisDefinition")]
        [System.ComponentModel.DescriptionAttribute("Indicates that the curve is an array curve (i.e., multi-valued samples),  and pro" +
            "vides meta data by which an axis of the array can be understood.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("axisDefinition", DataType="cs_axisDefinition")]
        public cs_axisDefinition[] axisDefinition {
            get {
                return this.axisDefinitionField;
            }
            set {
                this.axisDefinitionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_axisDefinition {
        
        private short orderField;
        
        private short countField;
        
        private string nameField;
        
        private string propertyTypeField;
        
        private string uomField;
        
        private object itemField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The order of this axis. The order should   begin with one and increment by one for each additional axis.  The order indicates how fast the index of the axis varies  in the serialized list of values.  The index of an axis with an order of one varies the slowest. The index of an axis with an order of two varies the next slowest.  And so on. This is the same ordering that is used in the C programming language. For example, the following array:          [   x axis  ]    |     z11  z12  z13 y axis:  z21  z22  z23    |     z31  z32  z33    |     z41  z42  z43 may be encoded as follows: axisDefinition[order=1].name='x' axisDefinition[order=1].count='3' axisDefinition[order=2].name='y' axisDefinition[order=2].count='4' { z11 z21 z31 z41 z12 z22 z32 z42 z13 z23 z33 z43 } or alternatively: axisDefinition[order=1].name='y' axisDefinition[order=1].count='4' axisDefinition[order=2].name='x' axisDefinition[order=2].count='3' { z11 z12 z13 z21 z22 z23 z31 z32 z33 z41 z42 z43 }</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"The order of this axis. The order should   begin with one and increment by one for each additional axis.  The order indicates how fast the index of the axis varies  in the serialized list of values.  The index of an axis with an order of one varies the slowest. The index of an axis with an order of two varies the next slowest.  And so on. This is the same ordering that is used in the C programming language. For example, the following array:          [   x axis  ]    |     z11  z12  z13 y axis:  z21  z22  z23    |     z31  z32  z33    |     z41  z42  z43 may be encoded as follows: axisDefinition[order=1].name='x' axisDefinition[order=1].count='3' axisDefinition[order=2].name='y' axisDefinition[order=2].count='4' { z11 z21 z31 z41 z12 z22 z32 z42 z13 z23 z33 z43 } or alternatively: axisDefinition[order=1].name='y' axisDefinition[order=1].count='4' axisDefinition[order=2].name='x' axisDefinition[order=2].count='3' { z11 z12 z13 z21 z22 z23 z31 z32 z33 z41 z42 z43 }")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("order", DataType="positiveCount")]
        public short order {
            get {
                return this.orderField;
            }
            set {
                this.orderField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The count of elements along this axis of the array.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The count of elements along this axis of the array.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("count", DataType="positiveCount")]
        public short count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the array axis.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the array axis.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The property type by which the array axis is classified.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The property type by which the array axis is classified.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("propertyType", DataType="nameString")]
        public string propertyType {
            get {
                return this.propertyTypeField;
            }
            set {
                this.propertyTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A string representing the units of measure of the axis values.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(24)]
        [System.ComponentModel.DescriptionAttribute("A string representing the units of measure of the axis values.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="uomString")]
        public string uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("doubleValues", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("stringValues", typeof(string))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("doubleValues", DataType="listOfDouble")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stringValues", DataType="listOfString")]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [System.Xml.Serialization.XmlRootAttribute("messages", Namespace="http://www.witsml.org/schemas/131", IsNullable=false)]
    public partial class obj_messages {
        
        private cs_documentInfo documentInfoField;
        
        private obj_message[] messageField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A single message.</summary>
        [System.Xml.Serialization.XmlElementAttribute("message")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A single message.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("message", DataType="obj_message")]
        public obj_message[] message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.3\\.1\\.([1-9]|([1-9][0-9]))")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionString")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("WITSML", "1.3.1.1")]
    public partial class obj_message {
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string nameField;
        
        private refObjectString objectReferenceField;
        
        private refObjectString subObjectReferenceField;
        
        private Energistics.DataAccess.Timestamp dTimField;
        
        private ActivityCode activityCodeField;
        
        private bool activityCodeFieldSpecified;
        
        private string detailActivityField;
        
        private measuredDepthCoord mdField;
        
        private measuredDepthCoord mdBitField;
        
        private MessageType typeMessageField;
        
        private string messageTextField;
        
        private indexedObject[] paramField;
        
        private MessageSeverity severityField;
        
        private bool severityFieldSpecified;
        
        private MessageProbability warnProbabilityField;
        
        private bool warnProbabilityFieldSpecified;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidWellboreField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore that contains the message.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore that contains the message.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWellbore", DataType="nameString")]
        public string nameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the risk.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the risk.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A reference to an object that is defined within the  context of a wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("A reference to an object that is defined within the  context of a wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("objectReference", DataType="refObjectString")]
        public refObjectString objectReference {
            get {
                return this.objectReferenceField;
            }
            set {
                this.objectReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A reference to an sub-object that is defined within the  context of the object referenced by objectReference. This should only refer to recurring components of a growing object.</summary>
        [System.ComponentModel.DescriptionAttribute("A reference to an sub-object that is defined within the  context of the object re" +
            "ferenced by objectReference. This should only refer to recurring components of a" +
            " growing object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("subObjectReference", DataType="refObjectString")]
        public refObjectString subObjectReference {
            get {
                return this.subObjectReferenceField;
            }
            set {
                this.subObjectReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time the information is related to.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Date and time the information is related to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A code used to define rig activity.</summary>
        [System.ComponentModel.DescriptionAttribute("A code used to define rig activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("activityCode", DataType="ActivityCode")]
        public ActivityCode activityCode {
            get {
                return this.activityCodeField;
            }
            set {
                this.activityCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool activityCodeSpecified {
            get {
                return this.activityCodeFieldSpecified;
            }
            set {
                this.activityCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Custom string to further define an activity.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Custom string to further define an activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("detailActivity", DataType="str32")]
        public string detailActivity {
            get {
                return this.detailActivityField;
            }
            set {
                this.detailActivityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Along hole measured depth of measurement from the drill datum.</summary>
        [System.ComponentModel.DescriptionAttribute("Along hole measured depth of measurement from the drill datum.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("md", DataType="measuredDepthCoord")]
        public measuredDepthCoord md {
            get {
                return this.mdField;
            }
            set {
                this.mdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Along hole measured depth of measurement from the drill datum.</summary>
        [System.ComponentModel.DescriptionAttribute("Along hole measured depth of measurement from the drill datum.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdBit", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdBit {
            get {
                return this.mdBitField;
            }
            set {
                this.mdBitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Message type.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Message type.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeMessage", DataType="MessageType")]
        public MessageType typeMessage {
            get {
                return this.typeMessageField;
            }
            set {
                this.typeMessageField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Message text.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Message text.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("messageText", DataType="commentString")]
        public string messageText {
            get {
                return this.messageTextField;
            }
            set {
                this.messageTextField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Any extra numeric data.</summary>
        [System.Xml.Serialization.XmlElementAttribute("param")]
        [System.ComponentModel.DescriptionAttribute("Any extra numeric data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("param", DataType="indexedObject")]
        public indexedObject[] param {
            get {
                return this.paramField;
            }
            set {
                this.paramField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Severity of incident.</summary>
        [System.ComponentModel.DescriptionAttribute("Severity of incident.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("severity", DataType="MessageSeverity")]
        public MessageSeverity severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool severitySpecified {
            get {
                return this.severityFieldSpecified;
            }
            set {
                this.severityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A warning probability (applies to warning).</summary>
        [System.ComponentModel.DescriptionAttribute("A warning probability (applies to warning).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("warnProbability", DataType="MessageProbability")]
        public MessageProbability warnProbability {
            get {
                return this.warnProbabilityField;
            }
            set {
                this.warnProbabilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool warnProbabilitySpecified {
            get {
                return this.warnProbabilityFieldSpecified;
            }
            set {
                this.warnProbabilityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the wellbore. This uniquely represents  the wellbore referenced by the (possibly non-unique) nameWellbore.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the wellbore. This uniquely represents  the wellbore refere" +
            "nced by the (possibly non-unique) nameWellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWellbore", DataType="uidString")]
        public string uidWellbore {
            get {
                return this.uidWellboreField;
            }
            set {
                this.uidWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class refObjectString {
        
        private string objectField;
        
        private string uidRefField;
        
        private string valueField;
        
        /// <remarks/>
        /// <summary>The name of the singular object being referenced.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The name of the singular object being referenced.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("object", DataType="nameString")]
        public string @object {
            get {
                return this.objectField;
            }
            set {
                this.objectField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A reference to the unique identifier (uid attribute) in the object referenced by the name value.  This attribute is required within the context of a WITSML server.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A reference to the unique identifier (uid attribute) in the object referenced by " +
            "the name value.  This attribute is required within the context of a WITSML serve" +
            "r.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidRef", DataType="refString")]
        public string uidRef {
            get {
                return this.uidRefField;
            }
            set {
                this.uidRefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [System.Xml.Serialization.XmlRootAttribute("mudLogs", Namespace="http://www.witsml.org/schemas/131", IsNullable=false)]
    public partial class obj_mudLogs {
        
        private cs_documentInfo documentInfoField;
        
        private obj_mudLog[] mudLogField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A single mud log.</summary>
        [System.Xml.Serialization.XmlElementAttribute("mudLog")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A single mud log.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mudLog", DataType="obj_mudLog")]
        public obj_mudLog[] mudLog {
            get {
                return this.mudLogField;
            }
            set {
                this.mudLogField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.3\\.1\\.([1-9]|([1-9][0-9]))")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionString")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("WITSML", "1.3.1.1")]
    public partial class obj_mudLog {
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string nameField;
        
        private bool objectGrowingField;
        
        private bool objectGrowingFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimField;
        
        private bool dTimFieldSpecified;
        
        private string mudLogCompanyField;
        
        private string mudLogEngineersField;
        
        private measuredDepthCoord startMdField;
        
        private measuredDepthCoord endMdField;
        
        private refNameString[] relatedLogField;
        
        private cs_mudLogParameter[] parameterField;
        
        private cs_geologyInterval[] geologyIntervalField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidWellboreField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore that contains the mud log.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore that contains the mud log.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWellbore", DataType="nameString")]
        public string nameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the mud log.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the mud log.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Whether or not the mudLog is growing.  True ("true" or "1") indicates the that the mudLog is still growing  in size (that is, geologyInterval or parameter values are still being added). For example, it may be connected to a realtime stream. False ("false" or "0") indicates that the mudLog is  closed (that is, no further geologyInterval or parameter values will be added). Not given indicates that the status of the mudLog is not known. This value is only relevant within the context of a server.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Whether or not the mudLog is growing.  True (""true"" or ""1"") indicates the that the mudLog is still growing  in size (that is, geologyInterval or parameter values are still being added). For example, it may be connected to a realtime stream. False (""false"" or ""0"") indicates that the mudLog is  closed (that is, no further geologyInterval or parameter values will be added). Not given indicates that the status of the mudLog is not known. This value is only relevant within the context of a server.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("objectGrowing", DataType="logicalBoolean")]
        public bool objectGrowing {
            get {
                return this.objectGrowingField;
            }
            set {
                this.objectGrowingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool objectGrowingSpecified {
            get {
                return this.objectGrowingFieldSpecified;
            }
            set {
                this.objectGrowingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time the information is related to.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time the information is related to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimSpecified {
            get {
                return this.dTimFieldSpecified;
            }
            set {
                this.dTimFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of the company recording the information.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of the company recording the information.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mudLogCompany", DataType="nameString")]
        public string mudLogCompany {
            get {
                return this.mudLogCompanyField;
            }
            set {
                this.mudLogCompanyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Concatenated names of mud loggers constructing the log.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("Concatenated names of mud loggers constructing the log.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mudLogEngineers", DataType="descriptionString")]
        public string mudLogEngineers {
            get {
                return this.mudLogEngineersField;
            }
            set {
                this.mudLogEngineersField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The minimum mdTop value in all geologyIntervals for this mud log message. This will be populated by the server to match the values that  were returned as a result of a query.  Used in a query template for specifying the begining range of logs to be retrieved.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The minimum mdTop value in all geologyIntervals for this mud log message. This will be populated by the server to match the values that  were returned as a result of a query.  Used in a query template for specifying the begining range of logs to be retrieved.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("startMd", DataType="measuredDepthCoord")]
        public measuredDepthCoord startMd {
            get {
                return this.startMdField;
            }
            set {
                this.startMdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum mdBottom value in all geologyIntervals for this mud log message. This will be populated by the server to match the values that  were returned as a result of a query.   Used in a query template for specifying the ending range of logs to be retrieved.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The maximum mdBottom value in all geologyIntervals for this mud log message. This will be populated by the server to match the values that  were returned as a result of a query.   Used in a query template for specifying the ending range of logs to be retrieved.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("endMd", DataType="measuredDepthCoord")]
        public measuredDepthCoord endMd {
            get {
                return this.endMdField;
            }
            set {
                this.endMdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A foreign key to a related Log. This is a pointer to a log that is related to the mud log. The log may or may not have been created as a result of  the mudlogging process. The log must represent the same  well and wellbore as the mud log.</summary>
        [System.Xml.Serialization.XmlElementAttribute("relatedLog")]
        [System.ComponentModel.DescriptionAttribute("A foreign key to a related Log. This is a pointer to a log that is related to the" +
            " mud log. The log may or may not have been created as a result of  the mudloggin" +
            "g process. The log must represent the same  well and wellbore as the mud log.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("relatedLog", DataType="refNameString")]
        public refNameString[] relatedLog {
            get {
                return this.relatedLogField;
            }
            set {
                this.relatedLogField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A single mud log parameter.</summary>
        [System.Xml.Serialization.XmlElementAttribute("parameter")]
        [System.ComponentModel.DescriptionAttribute("A single mud log parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("parameter", DataType="cs_mudLogParameter")]
        public cs_mudLogParameter[] parameter {
            get {
                return this.parameterField;
            }
            set {
                this.parameterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Set of geology and drilling information records for the wellbore.</summary>
        [System.Xml.Serialization.XmlElementAttribute("geologyInterval")]
        [System.ComponentModel.DescriptionAttribute("Set of geology and drilling information records for the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("geologyInterval", DataType="cs_geologyInterval")]
        public cs_geologyInterval[] geologyInterval {
            get {
                return this.geologyIntervalField;
            }
            set {
                this.geologyIntervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the wellbore. This uniquely represents  the wellbore referenced by the (possibly non-unique) nameWellbore.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the wellbore. This uniquely represents  the wellbore refere" +
            "nced by the (possibly non-unique) nameWellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWellbore", DataType="uidString")]
        public string uidWellbore {
            get {
                return this.uidWellboreField;
            }
            set {
                this.uidWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_mudLogParameter {
        
        private MudLogParameterType typeField;
        
        private Energistics.DataAccess.Timestamp dTimeField;
        
        private bool dTimeFieldSpecified;
        
        private measuredDepthCoord mdTopField;
        
        private measuredDepthCoord mdBottomField;
        
        private abstractMeasure itemField;
        
        private string textField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The type of the mud log parameter.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The type of the mud log parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("type", DataType="MudLogParameterType")]
        public MudLogParameterType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The data and time related to the parameter.  At least one of dTime or mdTop must be given.  The time refers to the top of the interval.</summary>
        [System.ComponentModel.DescriptionAttribute("The data and time related to the parameter.  At least one of dTime or mdTop must " +
            "be given.  The time refers to the top of the interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTime", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTime {
            get {
                return this.dTimeField;
            }
            set {
                this.dTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimeSpecified {
            get {
                return this.dTimeFieldSpecified;
            }
            set {
                this.dTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth at a point or at the top of an interval.  If it represents the top of an interval then bottom measured depth must also be given. At least one of dTime or mdTop must be given.</summary>
        [System.ComponentModel.DescriptionAttribute("The measured depth at a point or at the top of an interval.  If it represents the" +
            " top of an interval then bottom measured depth must also be given. At least one " +
            "of dTime or mdTop must be given.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdTop", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdTop {
            get {
                return this.mdTopField;
            }
            set {
                this.mdTopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The bottom of an interval along the borehole. The bottom of the interval cannot be given unless the top is also given.</summary>
        [System.ComponentModel.DescriptionAttribute("The bottom of an interval along the borehole. The bottom of the interval cannot b" +
            "e given unless the top is also given.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdBottom", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdBottom {
            get {
                return this.mdBottomField;
            }
            set {
                this.mdBottomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("concentration", typeof(volumePerVolumeMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("equivalentMudWeight", typeof(densityMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("force", typeof(forceMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("pressureGradient", typeof(forcePerVolumeMeasure))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("force", DataType="forceMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("concentration", DataType="volumePerVolumeMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("equivalentMudWeight", DataType="densityMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pressureGradient", DataType="forcePerVolumeMeasure")]
        public abstractMeasure Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A textual parameter value. This value is typically annotation on the log. All spaces, tabs, line feeds and carriage returns are retained in the string.  Characters representing line breaks should be replaced by a line feed or carriage return.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("A textual parameter value. This value is typically annotation on the log. All spa" +
            "ces, tabs, line feeds and carriage returns are retained in the string.  Characte" +
            "rs representing line breaks should be replaced by a line feed or carriage return" +
            ".")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("text", DataType="uncollapsedString")]
        public string text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [System.Xml.Serialization.XmlRootAttribute("opsReports", Namespace="http://www.witsml.org/schemas/131", IsNullable=false)]
    public partial class obj_opsReports {
        
        private cs_documentInfo documentInfoField;
        
        private obj_opsReport[] opsReportField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A single operations report.</summary>
        [System.Xml.Serialization.XmlElementAttribute("opsReport")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A single operations report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("opsReport", DataType="obj_opsReport")]
        public obj_opsReport[] opsReport {
            get {
                return this.opsReportField;
            }
            set {
                this.opsReportField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.3\\.1\\.([1-9]|([1-9][0-9]))")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionString")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("WITSML", "1.3.1.1")]
    public partial class obj_opsReport {
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string nameField;
        
        private refNameString rigField;
        
        private Energistics.DataAccess.Timestamp dTimField;
        
        private timeMeasure eTimStartField;
        
        private timeMeasure eTimSpudField;
        
        private timeMeasure eTimLocField;
        
        private measuredDepthCoord mdReportField;
        
        private wellVerticalDepthCoord tvdReportField;
        
        private lengthMeasure distDrillField;
        
        private timeMeasure eTimDrillField;
        
        private measuredDepthCoord mdPlannedField;
        
        private velocityMeasure ropAvField;
        
        private velocityMeasure ropCurrentField;
        
        private string supervisorField;
        
        private string engineerField;
        
        private string geologistField;
        
        private timeMeasure eTimDrillRotField;
        
        private timeMeasure eTimDrillSlidField;
        
        private timeMeasure eTimCircField;
        
        private timeMeasure eTimReamField;
        
        private timeMeasure eTimHoldField;
        
        private timeMeasure eTimSteeringField;
        
        private lengthMeasure distDrillRotField;
        
        private lengthMeasure distDrillSlidField;
        
        private lengthMeasure distReamField;
        
        private lengthMeasure distHoldField;
        
        private lengthMeasure distSteeringField;
        
        private short numPobField;
        
        private bool numPobFieldSpecified;
        
        private short numContractField;
        
        private bool numContractFieldSpecified;
        
        private short numOperatorField;
        
        private bool numOperatorFieldSpecified;
        
        private short numServiceField;
        
        private bool numServiceFieldSpecified;
        
        private cs_activity[] activityField;
        
        private cs_drillingParams[] drillingParamsField;
        
        private cs_wbGeometry wbGeometryField;
        
        private cs_dayCost[] dayCostField;
        
        private cs_trajectoryStation[] trajectoryStationField;
        
        private cs_fluid[] fluidField;
        
        private cs_scr[] scrField;
        
        private cs_pitVolume[] pitVolumeField;
        
        private cs_mudVolume mudVolumeField;
        
        private cs_inventory[] mudInventoryField;
        
        private cs_inventory[] bulkField;
        
        private cs_rigResponse rigResponseField;
        
        private cs_pumpOp[] pumpOpField;
        
        private cs_shakerOp[] shakerOpField;
        
        private cs_hse hseField;
        
        private cs_personnel[] personnelField;
        
        private cs_supportCraft[] supportCraftField;
        
        private cs_weather[] weatherField;
        
        private string numAFEField;
        
        private cost costDayField;
        
        private cost costDayMudField;
        
        private lengthMeasure diaHoleField;
        
        private string conditionHoleField;
        
        private string lithologyField;
        
        private string nameFormationField;
        
        private lengthMeasure diaCsgLastField;
        
        private measuredDepthCoord mdCsgLastField;
        
        private wellVerticalDepthCoord tvdCsgLastField;
        
        private wellVerticalDepthCoord tvdLotField;
        
        private densityMeasure presLotEmwField;
        
        private pressureMeasure presKickTolField;
        
        private volumeMeasure volKickTolField;
        
        private pressureMeasure maaspField;
        
        private refNameString tubularField;
        
        private string sum24HrField;
        
        private string forecast24HrField;
        
        private string statusCurrentField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidWellboreField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore that contains the operations report.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore that contains the operations report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWellbore", DataType="nameString")]
        public string nameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the operations report.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the operations report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the rig utilized in this reporting period.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the rig utilized in this reporting period.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rig", DataType="refNameString")]
        public refNameString rig {
            get {
                return this.rigField;
            }
            set {
                this.rigField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time the information is related to.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Date and time the information is related to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time from start of Operations (commonly in days).</summary>
        [System.ComponentModel.DescriptionAttribute("Time from start of Operations (commonly in days).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eTimStart", DataType="timeMeasure")]
        public timeMeasure eTimStart {
            get {
                return this.eTimStartField;
            }
            set {
                this.eTimStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time since bit broke ground (commonly in days).</summary>
        [System.ComponentModel.DescriptionAttribute("Time since bit broke ground (commonly in days).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eTimSpud", DataType="timeMeasure")]
        public timeMeasure eTimSpud {
            get {
                return this.eTimSpudField;
            }
            set {
                this.eTimSpudField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time rig on location (commonly in days).</summary>
        [System.ComponentModel.DescriptionAttribute("Time rig on location (commonly in days).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eTimLoc", DataType="timeMeasure")]
        public timeMeasure eTimLoc {
            get {
                return this.eTimLocField;
            }
            set {
                this.eTimLocField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Wellbore Measured Depth.</summary>
        [System.ComponentModel.DescriptionAttribute("Wellbore Measured Depth.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdReport", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdReport {
            get {
                return this.mdReportField;
            }
            set {
                this.mdReportField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Wellbore True Vertical Depth.</summary>
        [System.ComponentModel.DescriptionAttribute("Wellbore True Vertical Depth.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvdReport", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvdReport {
            get {
                return this.tvdReportField;
            }
            set {
                this.tvdReportField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance drilled since last report.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance drilled since last report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("distDrill", DataType="lengthMeasure")]
        public lengthMeasure distDrill {
            get {
                return this.distDrillField;
            }
            set {
                this.distDrillField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Drilling time.</summary>
        [System.ComponentModel.DescriptionAttribute("Drilling time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eTimDrill", DataType="timeMeasure")]
        public timeMeasure eTimDrill {
            get {
                return this.eTimDrillField;
            }
            set {
                this.eTimDrillField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of plan for this day number.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of plan for this day number.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdPlanned", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdPlanned {
            get {
                return this.mdPlannedField;
            }
            set {
                this.mdPlannedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average Rate of Penetration through Interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Average Rate of Penetration through Interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ropAv", DataType="velocityMeasure")]
        public velocityMeasure ropAv {
            get {
                return this.ropAvField;
            }
            set {
                this.ropAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rate of penetration at report time.</summary>
        [System.ComponentModel.DescriptionAttribute("Rate of penetration at report time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ropCurrent", DataType="velocityMeasure")]
        public velocityMeasure ropCurrent {
            get {
                return this.ropCurrentField;
            }
            set {
                this.ropCurrentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of operator rig supervisor.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of operator rig supervisor.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("supervisor", DataType="nameString")]
        public string supervisor {
            get {
                return this.supervisorField;
            }
            set {
                this.supervisorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Nae of Engineer.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Nae of Engineer.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("engineer", DataType="nameString")]
        public string engineer {
            get {
                return this.engineerField;
            }
            set {
                this.engineerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of operator wellsite geologist.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of operator wellsite geologist.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("geologist", DataType="nameString")]
        public string geologist {
            get {
                return this.geologistField;
            }
            set {
                this.geologistField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time spent rotary drilling for report interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Time spent rotary drilling for report interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eTimDrillRot", DataType="timeMeasure")]
        public timeMeasure eTimDrillRot {
            get {
                return this.eTimDrillRotField;
            }
            set {
                this.eTimDrillRotField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time spent slide drilling from start of bit run.</summary>
        [System.ComponentModel.DescriptionAttribute("Time spent slide drilling from start of bit run.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eTimDrillSlid", DataType="timeMeasure")]
        public timeMeasure eTimDrillSlid {
            get {
                return this.eTimDrillSlidField;
            }
            set {
                this.eTimDrillSlidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time spent circulating from start of bit run.</summary>
        [System.ComponentModel.DescriptionAttribute("Time spent circulating from start of bit run.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eTimCirc", DataType="timeMeasure")]
        public timeMeasure eTimCirc {
            get {
                return this.eTimCircField;
            }
            set {
                this.eTimCircField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time spent reaming from start of bit run.</summary>
        [System.ComponentModel.DescriptionAttribute("Time spent reaming from start of bit run.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eTimReam", DataType="timeMeasure")]
        public timeMeasure eTimReam {
            get {
                return this.eTimReamField;
            }
            set {
                this.eTimReamField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time spent with no DD work (commonly in hours).</summary>
        [System.ComponentModel.DescriptionAttribute("Time spent with no DD work (commonly in hours).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eTimHold", DataType="timeMeasure")]
        public timeMeasure eTimHold {
            get {
                return this.eTimHoldField;
            }
            set {
                this.eTimHoldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time spent steering bottom hole assembly (commonly in hours).</summary>
        [System.ComponentModel.DescriptionAttribute("Time spent steering bottom hole assembly (commonly in hours).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eTimSteering", DataType="timeMeasure")]
        public timeMeasure eTimSteering {
            get {
                return this.eTimSteeringField;
            }
            set {
                this.eTimSteeringField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance drilled - rotating.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance drilled - rotating.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("distDrillRot", DataType="lengthMeasure")]
        public lengthMeasure distDrillRot {
            get {
                return this.distDrillRotField;
            }
            set {
                this.distDrillRotField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance drilled - sliding.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance drilled - sliding.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("distDrillSlid", DataType="lengthMeasure")]
        public lengthMeasure distDrillSlid {
            get {
                return this.distDrillSlidField;
            }
            set {
                this.distDrillSlidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance reamed.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance reamed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("distReam", DataType="lengthMeasure")]
        public lengthMeasure distReam {
            get {
                return this.distReamField;
            }
            set {
                this.distReamField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance covered while holding angle with a steerable drilling assembly.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance covered while holding angle with a steerable drilling assembly.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("distHold", DataType="lengthMeasure")]
        public lengthMeasure distHold {
            get {
                return this.distHoldField;
            }
            set {
                this.distHoldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance covered while actively steering with a steerable drilling assembly.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance covered while actively steering with a steerable drilling assembly.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("distSteering", DataType="lengthMeasure")]
        public lengthMeasure distSteering {
            get {
                return this.distSteeringField;
            }
            set {
                this.distSteeringField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total number of personnel on board.</summary>
        [System.ComponentModel.DescriptionAttribute("Total number of personnel on board.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numPob", DataType="nonNegativeCount")]
        public short numPob {
            get {
                return this.numPobField;
            }
            set {
                this.numPobField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numPobSpecified {
            get {
                return this.numPobFieldSpecified;
            }
            set {
                this.numPobFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of contractor personnel on board.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of contractor personnel on board.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numContract", DataType="nonNegativeCount")]
        public short numContract {
            get {
                return this.numContractField;
            }
            set {
                this.numContractField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numContractSpecified {
            get {
                return this.numContractFieldSpecified;
            }
            set {
                this.numContractFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of Operator personnel on board.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of Operator personnel on board.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numOperator", DataType="nonNegativeCount")]
        public short numOperator {
            get {
                return this.numOperatorField;
            }
            set {
                this.numOperatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numOperatorSpecified {
            get {
                return this.numOperatorFieldSpecified;
            }
            set {
                this.numOperatorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of service company personnel on board.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of service company personnel on board.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numService", DataType="nonNegativeCount")]
        public short numService {
            get {
                return this.numServiceField;
            }
            set {
                this.numServiceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numServiceSpecified {
            get {
                return this.numServiceFieldSpecified;
            }
            set {
                this.numServiceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Activity breakdown, multiple for many activities.</summary>
        [System.Xml.Serialization.XmlElementAttribute("activity")]
        [System.ComponentModel.DescriptionAttribute("Activity breakdown, multiple for many activities.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("activity", DataType="cs_activity")]
        public cs_activity[] activity {
            get {
                return this.activityField;
            }
            set {
                this.activityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average bottom hole assembly parameters for report duration or actual instances of bottom hole assembly operations.</summary>
        [System.Xml.Serialization.XmlElementAttribute("drillingParams")]
        [System.ComponentModel.DescriptionAttribute("Average bottom hole assembly parameters for report duration or actual instances o" +
            "f bottom hole assembly operations.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("drillingParams", DataType="cs_drillingParams")]
        public cs_drillingParams[] drillingParams {
            get {
                return this.drillingParamsField;
            }
            set {
                this.drillingParamsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Record of actual hole geometry at report time.</summary>
        [System.ComponentModel.DescriptionAttribute("Record of actual hole geometry at report time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wbGeometry", DataType="cs_wbGeometry")]
        public cs_wbGeometry wbGeometry {
            get {
                return this.wbGeometryField;
            }
            set {
                this.wbGeometryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cost item for the report interval.</summary>
        [System.Xml.Serialization.XmlElementAttribute("dayCost")]
        [System.ComponentModel.DescriptionAttribute("Cost item for the report interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dayCost", DataType="cs_dayCost")]
        public cs_dayCost[] dayCost {
            get {
                return this.dayCostField;
            }
            set {
                this.dayCostField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Survey station recorded during the report interval.</summary>
        [System.Xml.Serialization.XmlElementAttribute("trajectoryStation")]
        [System.ComponentModel.DescriptionAttribute("Survey station recorded during the report interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("trajectoryStation", DataType="cs_trajectoryStation")]
        public cs_trajectoryStation[] trajectoryStation {
            get {
                return this.trajectoryStationField;
            }
            set {
                this.trajectoryStationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>One fluid record.</summary>
        [System.Xml.Serialization.XmlElementAttribute("fluid")]
        [System.ComponentModel.DescriptionAttribute("One fluid record.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fluid", DataType="cs_fluid")]
        public cs_fluid[] fluid {
            get {
                return this.fluidField;
            }
            set {
                this.fluidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Slow circulation rate pressure test for well control operations.</summary>
        [System.Xml.Serialization.XmlElementAttribute("scr")]
        [System.ComponentModel.DescriptionAttribute("Slow circulation rate pressure test for well control operations.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("scr", DataType="cs_scr")]
        public cs_scr[] scr {
            get {
                return this.scrField;
            }
            set {
                this.scrField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pit volume record for the report interval.</summary>
        [System.Xml.Serialization.XmlElementAttribute("pitVolume")]
        [System.ComponentModel.DescriptionAttribute("Pit volume record for the report interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pitVolume", DataType="cs_pitVolume")]
        public cs_pitVolume[] pitVolume {
            get {
                return this.pitVolumeField;
            }
            set {
                this.pitVolumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of mud built, received, etc.</summary>
        [System.ComponentModel.DescriptionAttribute("Description of mud built, received, etc.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mudVolume", DataType="cs_mudVolume")]
        public cs_mudVolume mudVolume {
            get {
                return this.mudVolumeField;
            }
            set {
                this.mudVolumeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud inventory item and cost for the report interval.</summary>
        [System.Xml.Serialization.XmlElementAttribute("mudInventory")]
        [System.ComponentModel.DescriptionAttribute("Mud inventory item and cost for the report interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mudInventory", DataType="cs_inventory")]
        public cs_inventory[] mudInventory {
            get {
                return this.mudInventoryField;
            }
            set {
                this.mudInventoryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bulk item usage and cost.</summary>
        [System.Xml.Serialization.XmlElementAttribute("bulk")]
        [System.ComponentModel.DescriptionAttribute("Bulk item usage and cost.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bulk", DataType="cs_inventory")]
        public cs_inventory[] bulk {
            get {
                return this.bulkField;
            }
            set {
                this.bulkField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average rig response readings for the day.</summary>
        [System.ComponentModel.DescriptionAttribute("Average rig response readings for the day.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rigResponse", DataType="cs_rigResponse")]
        public cs_rigResponse rigResponse {
            get {
                return this.rigResponseField;
            }
            set {
                this.rigResponseField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pump rate/pressure reading.</summary>
        [System.Xml.Serialization.XmlElementAttribute("pumpOp")]
        [System.ComponentModel.DescriptionAttribute("Pump rate/pressure reading.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pumpOp", DataType="cs_pumpOp")]
        public cs_pumpOp[] pumpOp {
            get {
                return this.pumpOpField;
            }
            set {
                this.pumpOpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Container element for shaker operation elements.</summary>
        [System.Xml.Serialization.XmlElementAttribute("shakerOp")]
        [System.ComponentModel.DescriptionAttribute("Container element for shaker operation elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("shakerOp", DataType="cs_shakerOp")]
        public cs_shakerOp[] shakerOp {
            get {
                return this.shakerOpField;
            }
            set {
                this.shakerOpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Health, safety and environmental information.</summary>
        [System.ComponentModel.DescriptionAttribute("Health, safety and environmental information.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("hse", DataType="cs_hse")]
        public cs_hse hse {
            get {
                return this.hseField;
            }
            set {
                this.hseField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Personnel records.</summary>
        [System.Xml.Serialization.XmlElementAttribute("personnel")]
        [System.ComponentModel.DescriptionAttribute("Personnel records.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("personnel", DataType="cs_personnel")]
        public cs_personnel[] personnel {
            get {
                return this.personnelField;
            }
            set {
                this.personnelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Support craft object container element.</summary>
        [System.Xml.Serialization.XmlElementAttribute("supportCraft")]
        [System.ComponentModel.DescriptionAttribute("Support craft object container element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("supportCraft", DataType="cs_supportCraft")]
        public cs_supportCraft[] supportCraft {
            get {
                return this.supportCraftField;
            }
            set {
                this.supportCraftField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Metrological readings for the day.</summary>
        [System.Xml.Serialization.XmlElementAttribute("weather")]
        [System.ComponentModel.DescriptionAttribute("Metrological readings for the day.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("weather", DataType="cs_weather")]
        public cs_weather[] weather {
            get {
                return this.weatherField;
            }
            set {
                this.weatherField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>AFE (authorization for expenditure) number that this cost item applies to.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("AFE (authorization for expenditure) number that this cost item applies to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numAFE", DataType="str32")]
        public string numAFE {
            get {
                return this.numAFEField;
            }
            set {
                this.numAFEField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Daily Cost.</summary>
        [System.ComponentModel.DescriptionAttribute("Daily Cost.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("costDay", DataType="cost")]
        public cost costDay {
            get {
                return this.costDayField;
            }
            set {
                this.costDayField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Daily Mud Cost.</summary>
        [System.ComponentModel.DescriptionAttribute("Daily Mud Cost.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("costDayMud", DataType="cost")]
        public cost costDayMud {
            get {
                return this.costDayMudField;
            }
            set {
                this.costDayMudField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hole diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Hole diameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("diaHole", DataType="lengthMeasure")]
        public lengthMeasure diaHole {
            get {
                return this.diaHoleField;
            }
            set {
                this.diaHoleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hole condition description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Hole condition description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("conditionHole", DataType="str32")]
        public string conditionHole {
            get {
                return this.conditionHoleField;
            }
            set {
                this.conditionHoleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Lithology for the Interval.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Lithology for the Interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lithology", DataType="str32")]
        public string lithology {
            get {
                return this.lithologyField;
            }
            set {
                this.lithologyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of formation.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Name of formation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameFormation", DataType="str32")]
        public string nameFormation {
            get {
                return this.nameFormationField;
            }
            set {
                this.nameFormationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Diameter of last casing.</summary>
        [System.ComponentModel.DescriptionAttribute("Diameter of last casing.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("diaCsgLast", DataType="lengthMeasure")]
        public lengthMeasure diaCsgLast {
            get {
                return this.diaCsgLastField;
            }
            set {
                this.diaCsgLastField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of last casing.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of last casing.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdCsgLast", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdCsgLast {
            get {
                return this.mdCsgLastField;
            }
            set {
                this.mdCsgLastField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth of last casing.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth of last casing.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvdCsgLast", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvdCsgLast {
            get {
                return this.tvdCsgLastField;
            }
            set {
                this.tvdCsgLastField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True vertical depth of leak off test point.</summary>
        [System.ComponentModel.DescriptionAttribute("True vertical depth of leak off test point.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvdLot", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvdLot {
            get {
                return this.tvdLotField;
            }
            set {
                this.tvdLotField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Leak off test equivalent mud weight.</summary>
        [System.ComponentModel.DescriptionAttribute("Leak off test equivalent mud weight.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presLotEmw", DataType="densityMeasure")]
        public densityMeasure presLotEmw {
            get {
                return this.presLotEmwField;
            }
            set {
                this.presLotEmwField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Kick tolerance pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Kick tolerance pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presKickTol", DataType="pressureMeasure")]
        public pressureMeasure presKickTol {
            get {
                return this.presKickTolField;
            }
            set {
                this.presKickTolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Kick tolerance volume.</summary>
        [System.ComponentModel.DescriptionAttribute("Kick tolerance volume.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volKickTol", DataType="volumeMeasure")]
        public volumeMeasure volKickTol {
            get {
                return this.volKickTolField;
            }
            set {
                this.volKickTolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum allowable shut-in casing pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum allowable shut-in casing pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("maasp", DataType="pressureMeasure")]
        public pressureMeasure maasp {
            get {
                return this.maaspField;
            }
            set {
                this.maaspField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the tubular (assembly) used in this report period. This represents a foreign key to tubular.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the tubular (assembly) used in this report period. This represents a" +
            " foreign key to tubular.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tubular", DataType="refNameString")]
        public refNameString tubular {
            get {
                return this.tubularField;
            }
            set {
                this.tubularField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>24 hour summary description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("24 hour summary description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sum24Hr", DataType="descriptionString")]
        public string sum24Hr {
            get {
                return this.sum24HrField;
            }
            set {
                this.sum24HrField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Forecast for next 24 hrs.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("Forecast for next 24 hrs.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("forecast24Hr", DataType="descriptionString")]
        public string forecast24Hr {
            get {
                return this.forecast24HrField;
            }
            set {
                this.forecast24HrField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Current status description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("Current status description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("statusCurrent", DataType="descriptionString")]
        public string statusCurrent {
            get {
                return this.statusCurrentField;
            }
            set {
                this.statusCurrentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the wellbore. This uniquely represents  the wellbore referenced by the (possibly non-unique) nameWellbore.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the wellbore. This uniquely represents  the wellbore refere" +
            "nced by the (possibly non-unique) nameWellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWellbore", DataType="uidString")]
        public string uidWellbore {
            get {
                return this.uidWellboreField;
            }
            set {
                this.uidWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_activity {
        
        private Energistics.DataAccess.Timestamp dTimStartField;
        
        private bool dTimStartFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimEndField;
        
        private bool dTimEndFieldSpecified;
        
        private timeMeasure durationField;
        
        private string phaseField;
        
        private ActivityCode activityCodeField;
        
        private bool activityCodeFieldSpecified;
        
        private string detailActivityField;
        
        private ActivityClassType typeActivityClassField;
        
        private bool typeActivityClassFieldSpecified;
        
        private measuredDepthCoord mdHoleStartField;
        
        private wellVerticalDepthCoord tvdHoleStartField;
        
        private measuredDepthCoord mdHoleEndField;
        
        private wellVerticalDepthCoord tvdHoleEndField;
        
        private measuredDepthCoord mdBitStartField;
        
        private measuredDepthCoord mdBitEndField;
        
        private string stateField;
        
        private string operatorField;
        
        private refNameString tubularField;
        
        private bool optimumField;
        
        private bool optimumFieldSpecified;
        
        private bool productiveField;
        
        private bool productiveFieldSpecified;
        
        private ItemState itemStateField;
        
        private bool itemStateFieldSpecified;
        
        private string commentsField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Date and time that activities started.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time that activities started.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimStartSpecified {
            get {
                return this.dTimStartFieldSpecified;
            }
            set {
                this.dTimStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time that activities were completed.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time that activities were completed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimEndSpecified {
            get {
                return this.dTimEndFieldSpecified;
            }
            set {
                this.dTimEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The activity duration (commonly in hours).</summary>
        [System.ComponentModel.DescriptionAttribute("The activity duration (commonly in hours).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("duration", DataType="timeMeasure")]
        public timeMeasure duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Phase (large activity classification) e.g. Drill Surface Hole.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Phase (large activity classification) e.g. Drill Surface Hole.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("phase", DataType="str16")]
        public string phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A code used to define rig activity.</summary>
        [System.ComponentModel.DescriptionAttribute("A code used to define rig activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("activityCode", DataType="ActivityCode")]
        public ActivityCode activityCode {
            get {
                return this.activityCodeField;
            }
            set {
                this.activityCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool activityCodeSpecified {
            get {
                return this.activityCodeFieldSpecified;
            }
            set {
                this.activityCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Custom string to further define an activity.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Custom string to further define an activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("detailActivity", DataType="str32")]
        public string detailActivity {
            get {
                return this.detailActivityField;
            }
            set {
                this.detailActivityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Classifier (Planned, Unplanned, Downtime).</summary>
        [System.ComponentModel.DescriptionAttribute("Classifier (Planned, Unplanned, Downtime).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeActivityClass", DataType="ActivityClassType")]
        public ActivityClassType typeActivityClass {
            get {
                return this.typeActivityClassField;
            }
            set {
                this.typeActivityClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeActivityClassSpecified {
            get {
                return this.typeActivityClassFieldSpecified;
            }
            set {
                this.typeActivityClassFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured Depth at start of activity.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured Depth at start of activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdHoleStart", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdHoleStart {
            get {
                return this.mdHoleStartField;
            }
            set {
                this.mdHoleStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True Vertical Depth at start of activity</summary>
        [System.ComponentModel.DescriptionAttribute("True Vertical Depth at start of activity")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvdHoleStart", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvdHoleStart {
            get {
                return this.tvdHoleStartField;
            }
            set {
                this.tvdHoleStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured Depth at end of activity.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured Depth at end of activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdHoleEnd", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdHoleEnd {
            get {
                return this.mdHoleEndField;
            }
            set {
                this.mdHoleEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True Vertical Depth at end of activity.</summary>
        [System.ComponentModel.DescriptionAttribute("True Vertical Depth at end of activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvdHoleEnd", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvdHoleEnd {
            get {
                return this.tvdHoleEndField;
            }
            set {
                this.tvdHoleEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of bit at start of activity.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of bit at start of activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdBitStart", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdBitStart {
            get {
                return this.mdBitStartField;
            }
            set {
                this.mdBitStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of bit at end of activity.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of bit at end of activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdBitEnd", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdBitEnd {
            get {
                return this.mdBitEndField;
            }
            set {
                this.mdBitEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Finish, interrupted, failed, etc.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Finish, interrupted, failed, etc.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("state", DataType="str32")]
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Operator company name.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Operator company name.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("operator", DataType="nameString")]
        public string @operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the tubular related to this activity.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the tubular related to this activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tubular", DataType="refNameString")]
        public refNameString tubular {
            get {
                return this.tubularField;
            }
            set {
                this.tubularField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is the activity optimum.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Is the activity optimum.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("optimum", DataType="logicalBoolean")]
        public bool optimum {
            get {
                return this.optimumField;
            }
            set {
                this.optimumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool optimumSpecified {
            get {
                return this.optimumFieldSpecified;
            }
            set {
                this.optimumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Does activity bring closer to objective.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Does activity bring closer to objective.  Values are \"true\" (or \"1\") and \"false\" " +
            "(or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("productive", DataType="logicalBoolean")]
        public bool productive {
            get {
                return this.productiveField;
            }
            set {
                this.productiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool productiveSpecified {
            get {
                return this.productiveFieldSpecified;
            }
            set {
                this.productiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The item state for the data object.</summary>
        [System.ComponentModel.DescriptionAttribute("The item state for the data object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("itemState", DataType="ItemState")]
        public ItemState itemState {
            get {
                return this.itemStateField;
            }
            set {
                this.itemStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool itemStateSpecified {
            get {
                return this.itemStateFieldSpecified;
            }
            set {
                this.itemStateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comments and Remarks.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Comments and Remarks.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comments", DataType="commentString")]
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_dayCost {
        
        private string numAFEField;
        
        private string costGroupField;
        
        private string costClassField;
        
        private string costCodeField;
        
        private string costSubCodeField;
        
        private string costItemDescriptionField;
        
        private cost costPerItemField;
        
        private string itemKindField;
        
        private double itemSizeField;
        
        private bool itemSizeFieldSpecified;
        
        private short qtyItemField;
        
        private bool qtyItemFieldSpecified;
        
        private cost costAmountField;
        
        private string numInvoiceField;
        
        private string numPOField;
        
        private string numTicketField;
        
        private bool isCarryOverField;
        
        private bool isCarryOverFieldSpecified;
        
        private bool isRentalField;
        
        private bool isRentalFieldSpecified;
        
        private cs_nameTag[] nameTagField;
        
        private string numSerialField;
        
        private string nameVendorField;
        
        private string numVendorField;
        
        private string poolField;
        
        private bool estimatedField;
        
        private bool estimatedFieldSpecified;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>AFE number that this cost item applies to.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("AFE number that this cost item applies to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numAFE", DataType="str32")]
        public string numAFE {
            get {
                return this.numAFEField;
            }
            set {
                this.numAFEField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cost group code.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Cost group code.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("costGroup", DataType="str16")]
        public string costGroup {
            get {
                return this.costGroupField;
            }
            set {
                this.costGroupField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cost class code.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Cost class code.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("costClass", DataType="str16")]
        public string costClass {
            get {
                return this.costClassField;
            }
            set {
                this.costClassField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cost code.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Cost code.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("costCode", DataType="str16")]
        public string costCode {
            get {
                return this.costCodeField;
            }
            set {
                this.costCodeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cost subcode.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Cost subcode.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("costSubCode", DataType="str16")]
        public string costSubCode {
            get {
                return this.costSubCodeField;
            }
            set {
                this.costSubCodeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of cost item.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Description of cost item.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("costItemDescription", DataType="shortDescriptionString")]
        public string costItemDescription {
            get {
                return this.costItemDescriptionField;
            }
            set {
                this.costItemDescriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cost per cost item, assume same currency.</summary>
        [System.ComponentModel.DescriptionAttribute("Cost per cost item, assume same currency.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("costPerItem", DataType="cost")]
        public cost costPerItem {
            get {
                return this.costPerItemField;
            }
            set {
                this.costPerItemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The kind of cost item specified (e.g., rig dayrate, joints casing).</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(24)]
        [System.ComponentModel.DescriptionAttribute("The kind of cost item specified (e.g., rig dayrate, joints casing).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("itemKind", DataType="uomString")]
        public string itemKind {
            get {
                return this.itemKindField;
            }
            set {
                this.itemKindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Size of one cost item.</summary>
        [System.ComponentModel.DescriptionAttribute("Size of one cost item.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("itemSize", DataType="unitlessQuantity")]
        public double itemSize {
            get {
                return this.itemSizeField;
            }
            set {
                this.itemSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool itemSizeSpecified {
            get {
                return this.itemSizeFieldSpecified;
            }
            set {
                this.itemSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of cost items used that day e.g. 1 rig dayrate, 30 joints casing.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of cost items used that day e.g. 1 rig dayrate, 30 joints casing.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("qtyItem", DataType="positiveCount")]
        public short qtyItem {
            get {
                return this.qtyItemField;
            }
            set {
                this.qtyItemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qtyItemSpecified {
            get {
                return this.qtyItemFieldSpecified;
            }
            set {
                this.qtyItemFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cost for the item for this record.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Cost for the item for this record.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("costAmount", DataType="cost")]
        public cost costAmount {
            get {
                return this.costAmountField;
            }
            set {
                this.costAmountField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Invoice number for cost item, bill sent to Operator.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Invoice number for cost item, bill sent to Operator.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numInvoice", DataType="str32")]
        public string numInvoice {
            get {
                return this.numInvoiceField;
            }
            set {
                this.numInvoiceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Purchase order number, provided by Operator.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Purchase order number, provided by Operator.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numPO", DataType="str32")]
        public string numPO {
            get {
                return this.numPOField;
            }
            set {
                this.numPOField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Field Ticket number, issued by service company on location.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Field Ticket number, issued by service company on location.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numTicket", DataType="str32")]
        public string numTicket {
            get {
                return this.numTicketField;
            }
            set {
                this.numTicketField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is this item carried from day to day? Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Is this item carried from day to day? Values are \"true\" (or \"1\") and \"false\" (or " +
            "\"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("isCarryOver", DataType="logicalBoolean")]
        public bool isCarryOver {
            get {
                return this.isCarryOverField;
            }
            set {
                this.isCarryOverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isCarryOverSpecified {
            get {
                return this.isCarryOverFieldSpecified;
            }
            set {
                this.isCarryOverFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is this item a rental? Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Is this item a rental? Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("isRental", DataType="logicalBoolean")]
        public bool isRental {
            get {
                return this.isRentalField;
            }
            set {
                this.isRentalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isRentalSpecified {
            get {
                return this.isRentalFieldSpecified;
            }
            set {
                this.isRentalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An identification tag for the item. A serial number is a type of identification tag however some tags contain many pieces of information. This structure just identifies the tag and does not describe the contents.</summary>
        [System.Xml.Serialization.XmlElementAttribute("nameTag")]
        [System.ComponentModel.DescriptionAttribute("An identification tag for the item. A serial number is a type of identification t" +
            "ag however some tags contain many pieces of information. This structure just ide" +
            "ntifies the tag and does not describe the contents.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameTag", DataType="cs_nameTag")]
        public cs_nameTag[] nameTag {
            get {
                return this.nameTagField;
            }
            set {
                this.nameTagField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Serial number.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Serial number.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numSerial", DataType="str32")]
        public string numSerial {
            get {
                return this.numSerialField;
            }
            set {
                this.numSerialField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of vendor.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Name of vendor.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameVendor", DataType="str32")]
        public string nameVendor {
            get {
                return this.nameVendorField;
            }
            set {
                this.nameVendorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Vendor number.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Vendor number.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numVendor", DataType="str16")]
        public string numVendor {
            get {
                return this.numVendorField;
            }
            set {
                this.numVendorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of pool/reservoir that this cost item can be accounted to.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of pool/reservoir that this cost item can be accounted to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pool", DataType="nameString")]
        public string pool {
            get {
                return this.poolField;
            }
            set {
                this.poolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is this an estimated cost? Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Is this an estimated cost? Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("estimated", DataType="logicalBoolean")]
        public bool estimated {
            get {
                return this.estimatedField;
            }
            set {
                this.estimatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool estimatedSpecified {
            get {
                return this.estimatedFieldSpecified;
            }
            set {
                this.estimatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cost {
        
        private string currencyField;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("currency", DataType="kindString")]
        public string currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_trajectoryStation {
        
        private refNameString targetField;
        
        private Energistics.DataAccess.Timestamp dTimStnField;
        
        private bool dTimStnFieldSpecified;
        
        private TrajStationType typeTrajStationField;
        
        private TypeSurveyTool typeSurveyToolField;
        
        private bool typeSurveyToolFieldSpecified;
        
        private measuredDepthCoord mdField;
        
        private wellVerticalDepthCoord tvdField;
        
        private planeAngleMeasure inclField;
        
        private planeAngleMeasure aziField;
        
        private planeAngleMeasure mtfField;
        
        private planeAngleMeasure gtfField;
        
        private lengthMeasure dispNsField;
        
        private lengthMeasure dispEwField;
        
        private lengthMeasure vertSectField;
        
        private anglePerLengthMeasure dlsField;
        
        private anglePerLengthMeasure rateTurnField;
        
        private anglePerLengthMeasure rateBuildField;
        
        private measuredDepthCoord mdDeltaField;
        
        private wellVerticalDepthCoord tvdDeltaField;
        
        private string modelToolErrorField;
        
        private accelerationLinearMeasure gravTotalUncertField;
        
        private planeAngleMeasure dipAngleUncertField;
        
        private magneticInductionMeasure magTotalUncertField;
        
        private bool gravAccelCorUsedField;
        
        private bool gravAccelCorUsedFieldSpecified;
        
        private bool magXAxialCorUsedField;
        
        private bool magXAxialCorUsedFieldSpecified;
        
        private bool sagCorUsedField;
        
        private bool sagCorUsedFieldSpecified;
        
        private bool magDrlstrCorUsedField;
        
        private bool magDrlstrCorUsedFieldSpecified;
        
        private accelerationLinearMeasure gravTotalFieldReferenceField;
        
        private magneticInductionMeasure magTotalFieldReferenceField;
        
        private planeAngleMeasure magDipAngleReferenceField;
        
        private string magModelUsedField;
        
        private string magModelValidField;
        
        private string geoModelUsedField;
        
        private TrajStationStatus statusTrajStationField;
        
        private bool statusTrajStationFieldSpecified;
        
        private cs_stnTrajRawData rawDataField;
        
        private cs_stnTrajCorUsed corUsedField;
        
        private cs_stnTrajValid validField;
        
        private cs_stnTrajMatrixCov matrixCovField;
        
        private cs_location[] locationField;
        
        private cs_refWellboreTrajectoryStation sourceStationField;
        
        private cs_commonData commonDataField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>A pointer to the intended target of this station.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the intended target of this station.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("target", DataType="refNameString")]
        public refNameString target {
            get {
                return this.targetField;
            }
            set {
                this.targetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time the station was measured or created.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time the station was measured or created.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStn", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStn {
            get {
                return this.dTimStnField;
            }
            set {
                this.dTimStnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimStnSpecified {
            get {
                return this.dTimStnFieldSpecified;
            }
            set {
                this.dTimStnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of survey station.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Type of survey station.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeTrajStation", DataType="TrajStationType")]
        public TrajStationType typeTrajStation {
            get {
                return this.typeTrajStationField;
            }
            set {
                this.typeTrajStationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of tool used for the measurements.</summary>
        [System.ComponentModel.DescriptionAttribute("The type of tool used for the measurements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeSurveyTool", DataType="TypeSurveyTool")]
        public TypeSurveyTool typeSurveyTool {
            get {
                return this.typeSurveyToolField;
            }
            set {
                this.typeSurveyToolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSurveyToolSpecified {
            get {
                return this.typeSurveyToolFieldSpecified;
            }
            set {
                this.typeSurveyToolFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of measurement from the drill datum.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Measured depth of measurement from the drill datum.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("md", DataType="measuredDepthCoord")]
        public measuredDepthCoord md {
            get {
                return this.mdField;
            }
            set {
                this.mdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Vertical depth of the measurements.</summary>
        [System.ComponentModel.DescriptionAttribute("Vertical depth of the measurements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvd", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvd {
            get {
                return this.tvdField;
            }
            set {
                this.tvdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hole inclination, measured from vertical.</summary>
        [System.ComponentModel.DescriptionAttribute("Hole inclination, measured from vertical.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("incl", DataType="planeAngleMeasure")]
        public planeAngleMeasure incl {
            get {
                return this.inclField;
            }
            set {
                this.inclField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hole azimuth. Corrected to wells azimuth reference.</summary>
        [System.ComponentModel.DescriptionAttribute("Hole azimuth. Corrected to wells azimuth reference.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("azi", DataType="planeAngleMeasure")]
        public planeAngleMeasure azi {
            get {
                return this.aziField;
            }
            set {
                this.aziField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Toolface angle (magnetic).</summary>
        [System.ComponentModel.DescriptionAttribute("Toolface angle (magnetic).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mtf", DataType="planeAngleMeasure")]
        public planeAngleMeasure mtf {
            get {
                return this.mtfField;
            }
            set {
                this.mtfField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Toolface angle (gravity).</summary>
        [System.ComponentModel.DescriptionAttribute("Toolface angle (gravity).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gtf", DataType="planeAngleMeasure")]
        public planeAngleMeasure gtf {
            get {
                return this.gtfField;
            }
            set {
                this.gtfField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>North-south offset, positive to the North.  This is relative to wellLocation with a North axis orientation of aziRef. If a displacement with respect to a different point is desired then define a localCRS and specify local coordinates in location.</summary>
        [System.ComponentModel.DescriptionAttribute("North-south offset, positive to the North.  This is relative to wellLocation with" +
            " a North axis orientation of aziRef. If a displacement with respect to a differe" +
            "nt point is desired then define a localCRS and specify local coordinates in loca" +
            "tion.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dispNs", DataType="lengthMeasure")]
        public lengthMeasure dispNs {
            get {
                return this.dispNsField;
            }
            set {
                this.dispNsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>East-west offset, positive to the East. This is relative to wellLocation with a North axis orientation of aziRef.  If a displacement with respect to a different point is desired then define a localCRS and specify local coordinates in location.</summary>
        [System.ComponentModel.DescriptionAttribute("East-west offset, positive to the East. This is relative to wellLocation with a N" +
            "orth axis orientation of aziRef.  If a displacement with respect to a different " +
            "point is desired then define a localCRS and specify local coordinates in locatio" +
            "n.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dispEw", DataType="lengthMeasure")]
        public lengthMeasure dispEw {
            get {
                return this.dispEwField;
            }
            set {
                this.dispEwField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance along vertical section azimuth plane.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance along vertical section azimuth plane.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("vertSect", DataType="lengthMeasure")]
        public lengthMeasure vertSect {
            get {
                return this.vertSectField;
            }
            set {
                this.vertSectField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Dogleg severity.</summary>
        [System.ComponentModel.DescriptionAttribute("Dogleg severity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dls", DataType="anglePerLengthMeasure")]
        public anglePerLengthMeasure dls {
            get {
                return this.dlsField;
            }
            set {
                this.dlsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Turn rate, radius of curvature computation.</summary>
        [System.ComponentModel.DescriptionAttribute("Turn rate, radius of curvature computation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rateTurn", DataType="anglePerLengthMeasure")]
        public anglePerLengthMeasure rateTurn {
            get {
                return this.rateTurnField;
            }
            set {
                this.rateTurnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Build Rate, radius of curvature computation.</summary>
        [System.ComponentModel.DescriptionAttribute("Build Rate, radius of curvature computation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rateBuild", DataType="anglePerLengthMeasure")]
        public anglePerLengthMeasure rateBuild {
            get {
                return this.rateBuildField;
            }
            set {
                this.rateBuildField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Delta measured depth from previous station.</summary>
        [System.ComponentModel.DescriptionAttribute("Delta measured depth from previous station.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdDelta", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdDelta {
            get {
                return this.mdDeltaField;
            }
            set {
                this.mdDeltaField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Delta true vertical depth from previous station.</summary>
        [System.ComponentModel.DescriptionAttribute("Delta true vertical depth from previous station.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvdDelta", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvdDelta {
            get {
                return this.tvdDeltaField;
            }
            set {
                this.tvdDeltaField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Tool error model used to compute covariance matrix.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Tool error model used to compute covariance matrix.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("modelToolError", DataType="commentString")]
        public string modelToolError {
            get {
                return this.modelToolErrorField;
            }
            set {
                this.modelToolErrorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Survey tool gravity uncertainty.</summary>
        [System.ComponentModel.DescriptionAttribute("Survey tool gravity uncertainty.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gravTotalUncert", DataType="accelerationLinearMeasure")]
        public accelerationLinearMeasure gravTotalUncert {
            get {
                return this.gravTotalUncertField;
            }
            set {
                this.gravTotalUncertField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Survey tool dip uncertainty.</summary>
        [System.ComponentModel.DescriptionAttribute("Survey tool dip uncertainty.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dipAngleUncert", DataType="planeAngleMeasure")]
        public planeAngleMeasure dipAngleUncert {
            get {
                return this.dipAngleUncertField;
            }
            set {
                this.dipAngleUncertField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Survey tool magnetic uncertainty.</summary>
        [System.ComponentModel.DescriptionAttribute("Survey tool magnetic uncertainty.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("magTotalUncert", DataType="magneticInductionMeasure")]
        public magneticInductionMeasure magTotalUncert {
            get {
                return this.magTotalUncertField;
            }
            set {
                this.magTotalUncertField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Was an accelerometer alignment correction applied to survey computation?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Was an accelerometer alignment correction applied to survey computation?   Values" +
            " are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gravAccelCorUsed", DataType="logicalBoolean")]
        public bool gravAccelCorUsed {
            get {
                return this.gravAccelCorUsedField;
            }
            set {
                this.gravAccelCorUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gravAccelCorUsedSpecified {
            get {
                return this.gravAccelCorUsedFieldSpecified;
            }
            set {
                this.gravAccelCorUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Was a magnetometer alignment correction applied to survey computation?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Was a magnetometer alignment correction applied to survey computation?   Values a" +
            "re \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("magXAxialCorUsed", DataType="logicalBoolean")]
        public bool magXAxialCorUsed {
            get {
                return this.magXAxialCorUsedField;
            }
            set {
                this.magXAxialCorUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool magXAxialCorUsedSpecified {
            get {
                return this.magXAxialCorUsedFieldSpecified;
            }
            set {
                this.magXAxialCorUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Was a bottom hole assembly sag correction applied to the survey computation?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Was a bottom hole assembly sag correction applied to the survey computation?   Va" +
            "lues are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sagCorUsed", DataType="logicalBoolean")]
        public bool sagCorUsed {
            get {
                return this.sagCorUsedField;
            }
            set {
                this.sagCorUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sagCorUsedSpecified {
            get {
                return this.sagCorUsedFieldSpecified;
            }
            set {
                this.sagCorUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Was a drillstring magnetism correction applied to survey computation?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Was a drillstring magnetism correction applied to survey computation?   Values ar" +
            "e \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("magDrlstrCorUsed", DataType="logicalBoolean")]
        public bool magDrlstrCorUsed {
            get {
                return this.magDrlstrCorUsedField;
            }
            set {
                this.magDrlstrCorUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool magDrlstrCorUsedSpecified {
            get {
                return this.magDrlstrCorUsedFieldSpecified;
            }
            set {
                this.magDrlstrCorUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gravitational field theoretical/reference value.</summary>
        [System.ComponentModel.DescriptionAttribute("Gravitational field theoretical/reference value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gravTotalFieldReference", DataType="accelerationLinearMeasure")]
        public accelerationLinearMeasure gravTotalFieldReference {
            get {
                return this.gravTotalFieldReferenceField;
            }
            set {
                this.gravTotalFieldReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Geomagnetic field theoretical/reference value.</summary>
        [System.ComponentModel.DescriptionAttribute("Geomagnetic field theoretical/reference value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("magTotalFieldReference", DataType="magneticInductionMeasure")]
        public magneticInductionMeasure magTotalFieldReference {
            get {
                return this.magTotalFieldReferenceField;
            }
            set {
                this.magTotalFieldReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Magnetic dip angle theoretical/reference value.</summary>
        [System.ComponentModel.DescriptionAttribute("Magnetic dip angle theoretical/reference value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("magDipAngleReference", DataType="planeAngleMeasure")]
        public planeAngleMeasure magDipAngleReference {
            get {
                return this.magDipAngleReferenceField;
            }
            set {
                this.magDipAngleReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Geomagnetic model used.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Geomagnetic model used.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("magModelUsed", DataType="nameString")]
        public string magModelUsed {
            get {
                return this.magModelUsedField;
            }
            set {
                this.magModelUsedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Current valid interval for the geomagnetic model used.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Current valid interval for the geomagnetic model used.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("magModelValid", DataType="nameString")]
        public string magModelValid {
            get {
                return this.magModelValidField;
            }
            set {
                this.magModelValidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gravitational model used.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Gravitational model used.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("geoModelUsed", DataType="nameString")]
        public string geoModelUsed {
            get {
                return this.geoModelUsedField;
            }
            set {
                this.geoModelUsedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Status of the station.</summary>
        [System.ComponentModel.DescriptionAttribute("Status of the station.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("statusTrajStation", DataType="TrajStationStatus")]
        public TrajStationStatus statusTrajStation {
            get {
                return this.statusTrajStationField;
            }
            set {
                this.statusTrajStationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusTrajStationSpecified {
            get {
                return this.statusTrajStationFieldSpecified;
            }
            set {
                this.statusTrajStationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Applies only to measured magnetic stations.</summary>
        [System.ComponentModel.DescriptionAttribute("Applies only to measured magnetic stations.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rawData", DataType="cs_stnTrajRawData")]
        public cs_stnTrajRawData rawData {
            get {
                return this.rawDataField;
            }
            set {
                this.rawDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Applies only to measured magnetic stations.</summary>
        [System.ComponentModel.DescriptionAttribute("Applies only to measured magnetic stations.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("corUsed", DataType="cs_stnTrajCorUsed")]
        public cs_stnTrajCorUsed corUsed {
            get {
                return this.corUsedField;
            }
            set {
                this.corUsedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Applies only to measured magnetic stations.</summary>
        [System.ComponentModel.DescriptionAttribute("Applies only to measured magnetic stations.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("valid", DataType="cs_stnTrajValid")]
        public cs_stnTrajValid valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Covariance matrix for error model.</summary>
        [System.ComponentModel.DescriptionAttribute("Covariance matrix for error model.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("matrixCov", DataType="cs_stnTrajMatrixCov")]
        public cs_stnTrajMatrixCov matrixCov {
            get {
                return this.matrixCovField;
            }
            set {
                this.matrixCovField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The 2D coordinates of the item.  Note that within the context of trajectory, the "original" coordinates are inherently local coordinates as defined above.</summary>
        [System.Xml.Serialization.XmlElementAttribute("location")]
        [System.ComponentModel.DescriptionAttribute("The 2D coordinates of the item.  Note that within the context of trajectory, the " +
            "\"original\" coordinates are inherently local coordinates as defined above.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("location", DataType="cs_location")]
        public cs_location[] location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the trajectoryStation from which this station was derived. The trajectoryStation may be in another wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the trajectoryStation from which this station was derived. The traje" +
            "ctoryStation may be in another wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sourceStation", DataType="cs_refWellboreTrajectoryStation")]
        public cs_refWellboreTrajectoryStation sourceStation {
            get {
                return this.sourceStationField;
            }
            set {
                this.sourceStationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_stnTrajRawData {
        
        private accelerationLinearMeasure gravAxialRawField;
        
        private accelerationLinearMeasure gravTran1RawField;
        
        private accelerationLinearMeasure gravTran2RawField;
        
        private magneticInductionMeasure magAxialRawField;
        
        private magneticInductionMeasure magTran1RawField;
        
        private magneticInductionMeasure magTran2RawField;
        
        /// <remarks/>
        /// <summary>Uncorrected gravitational field strength measured in axial direction.</summary>
        [System.ComponentModel.DescriptionAttribute("Uncorrected gravitational field strength measured in axial direction.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gravAxialRaw", DataType="accelerationLinearMeasure")]
        public accelerationLinearMeasure gravAxialRaw {
            get {
                return this.gravAxialRawField;
            }
            set {
                this.gravAxialRawField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Uncorrected gravitational field strength measured in transverse direction.</summary>
        [System.ComponentModel.DescriptionAttribute("Uncorrected gravitational field strength measured in transverse direction.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gravTran1Raw", DataType="accelerationLinearMeasure")]
        public accelerationLinearMeasure gravTran1Raw {
            get {
                return this.gravTran1RawField;
            }
            set {
                this.gravTran1RawField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Uncorrected gravitational field strength measured in transverse direction,  approximately normal to tran1.</summary>
        [System.ComponentModel.DescriptionAttribute("Uncorrected gravitational field strength measured in transverse direction,  appro" +
            "ximately normal to tran1.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gravTran2Raw", DataType="accelerationLinearMeasure")]
        public accelerationLinearMeasure gravTran2Raw {
            get {
                return this.gravTran2RawField;
            }
            set {
                this.gravTran2RawField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Uncorrected magnetic field strength measured in axial direction.</summary>
        [System.ComponentModel.DescriptionAttribute("Uncorrected magnetic field strength measured in axial direction.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("magAxialRaw", DataType="magneticInductionMeasure")]
        public magneticInductionMeasure magAxialRaw {
            get {
                return this.magAxialRawField;
            }
            set {
                this.magAxialRawField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Uncorrected magnetic field strength measured in transverse direction.</summary>
        [System.ComponentModel.DescriptionAttribute("Uncorrected magnetic field strength measured in transverse direction.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("magTran1Raw", DataType="magneticInductionMeasure")]
        public magneticInductionMeasure magTran1Raw {
            get {
                return this.magTran1RawField;
            }
            set {
                this.magTran1RawField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Uncorrected magnetic field strength measured in transverse direction,  approximately normal to tran1.</summary>
        [System.ComponentModel.DescriptionAttribute("Uncorrected magnetic field strength measured in transverse direction,  approximat" +
            "ely normal to tran1.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("magTran2Raw", DataType="magneticInductionMeasure")]
        public magneticInductionMeasure magTran2Raw {
            get {
                return this.magTran2RawField;
            }
            set {
                this.magTran2RawField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_stnTrajCorUsed {
        
        private accelerationLinearMeasure gravAxialAccelCorField;
        
        private accelerationLinearMeasure gravTran1AccelCorField;
        
        private accelerationLinearMeasure gravTran2AccelCorField;
        
        private magneticInductionMeasure magAxialDrlstrCorField;
        
        private magneticInductionMeasure magTran1DrlstrCorField;
        
        private magneticInductionMeasure magTran2DrlstrCorField;
        
        private planeAngleMeasure sagIncCorField;
        
        private planeAngleMeasure sagAziCorField;
        
        private planeAngleMeasure stnMagDeclUsedField;
        
        private planeAngleMeasure stnGridCorUsedField;
        
        private lengthMeasure dirSensorOffsetField;
        
        /// <remarks/>
        /// <summary>Calculated gravitational field strength correction.</summary>
        [System.ComponentModel.DescriptionAttribute("Calculated gravitational field strength correction.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gravAxialAccelCor", DataType="accelerationLinearMeasure")]
        public accelerationLinearMeasure gravAxialAccelCor {
            get {
                return this.gravAxialAccelCorField;
            }
            set {
                this.gravAxialAccelCorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The correction applied to the X cross-axial component of the earths magnetic field.</summary>
        [System.ComponentModel.DescriptionAttribute("The correction applied to the X cross-axial component of the earths magnetic fiel" +
            "d.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gravTran1AccelCor", DataType="accelerationLinearMeasure")]
        public accelerationLinearMeasure gravTran1AccelCor {
            get {
                return this.gravTran1AccelCorField;
            }
            set {
                this.gravTran1AccelCorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The correction applied to the Y cross-axial component of the earths magnetic field.</summary>
        [System.ComponentModel.DescriptionAttribute("The correction applied to the Y cross-axial component of the earths magnetic fiel" +
            "d.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gravTran2AccelCor", DataType="accelerationLinearMeasure")]
        public accelerationLinearMeasure gravTran2AccelCor {
            get {
                return this.gravTran2AccelCorField;
            }
            set {
                this.gravTran2AccelCorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Axial magnetic drillstring correction.</summary>
        [System.ComponentModel.DescriptionAttribute("Axial magnetic drillstring correction.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("magAxialDrlstrCor", DataType="magneticInductionMeasure")]
        public magneticInductionMeasure magAxialDrlstrCor {
            get {
                return this.magAxialDrlstrCorField;
            }
            set {
                this.magAxialDrlstrCorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cross-axial magnetic correction.</summary>
        [System.ComponentModel.DescriptionAttribute("Cross-axial magnetic correction.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("magTran1DrlstrCor", DataType="magneticInductionMeasure")]
        public magneticInductionMeasure magTran1DrlstrCor {
            get {
                return this.magTran1DrlstrCorField;
            }
            set {
                this.magTran1DrlstrCorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cross-axial magnetic correction.</summary>
        [System.ComponentModel.DescriptionAttribute("Cross-axial magnetic correction.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("magTran2DrlstrCor", DataType="magneticInductionMeasure")]
        public magneticInductionMeasure magTran2DrlstrCor {
            get {
                return this.magTran2DrlstrCorField;
            }
            set {
                this.magTran2DrlstrCorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calculated sag correction to inclination.</summary>
        [System.ComponentModel.DescriptionAttribute("Calculated sag correction to inclination.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sagIncCor", DataType="planeAngleMeasure")]
        public planeAngleMeasure sagIncCor {
            get {
                return this.sagIncCorField;
            }
            set {
                this.sagIncCorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calculated sag correction to azimuth.</summary>
        [System.ComponentModel.DescriptionAttribute("Calculated sag correction to azimuth.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sagAziCor", DataType="planeAngleMeasure")]
        public planeAngleMeasure sagAziCor {
            get {
                return this.sagAziCorField;
            }
            set {
                this.sagAziCorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Magnetic declination used to correct a magnetic survey station.</summary>
        [System.ComponentModel.DescriptionAttribute("Magnetic declination used to correct a magnetic survey station.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stnMagDeclUsed", DataType="planeAngleMeasure")]
        public planeAngleMeasure stnMagDeclUsed {
            get {
                return this.stnMagDeclUsedField;
            }
            set {
                this.stnMagDeclUsedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Grid Correction (Meridian convergence). The angle between  True North and Grid North. Grid Correction is positive when True North  is west of Grid North. The correction is added to the raw observation,  thus yielding a reduced or corrected observation that can go into  the subsequent calculations.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Grid Correction (Meridian convergence). The angle between  True North and Grid North. Grid Correction is positive when True North  is west of Grid North. The correction is added to the raw observation,  thus yielding a reduced or corrected observation that can go into  the subsequent calculations.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stnGridCorUsed", DataType="planeAngleMeasure")]
        public planeAngleMeasure stnGridCorUsed {
            get {
                return this.stnGridCorUsedField;
            }
            set {
                this.stnGridCorUsedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Offset relative to bit.</summary>
        [System.ComponentModel.DescriptionAttribute("Offset relative to bit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dirSensorOffset", DataType="lengthMeasure")]
        public lengthMeasure dirSensorOffset {
            get {
                return this.dirSensorOffsetField;
            }
            set {
                this.dirSensorOffsetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_stnTrajValid {
        
        private magneticInductionMeasure magTotalFieldCalcField;
        
        private planeAngleMeasure magDipAngleCalcField;
        
        private accelerationLinearMeasure gravTotalFieldCalcField;
        
        /// <remarks/>
        /// <summary>Calculated total intensity of the geomagnetic field as sum of BGGM,  IFR and local field.</summary>
        [System.ComponentModel.DescriptionAttribute("Calculated total intensity of the geomagnetic field as sum of BGGM,  IFR and loca" +
            "l field.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("magTotalFieldCalc", DataType="magneticInductionMeasure")]
        public magneticInductionMeasure magTotalFieldCalc {
            get {
                return this.magTotalFieldCalcField;
            }
            set {
                this.magTotalFieldCalcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calculated magnetic dip (inclination), the angle between the horizontal  and the geomagnetic field (positive down, res .001).</summary>
        [System.ComponentModel.DescriptionAttribute("Calculated magnetic dip (inclination), the angle between the horizontal  and the " +
            "geomagnetic field (positive down, res .001).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("magDipAngleCalc", DataType="planeAngleMeasure")]
        public planeAngleMeasure magDipAngleCalc {
            get {
                return this.magDipAngleCalcField;
            }
            set {
                this.magDipAngleCalcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Calculated total gravitational field.</summary>
        [System.ComponentModel.DescriptionAttribute("Calculated total gravitational field.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gravTotalFieldCalc", DataType="accelerationLinearMeasure")]
        public accelerationLinearMeasure gravTotalFieldCalc {
            get {
                return this.gravTotalFieldCalcField;
            }
            set {
                this.gravTotalFieldCalcField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_stnTrajMatrixCov {
        
        private areaMeasure varianceNNField;
        
        private areaMeasure varianceNEField;
        
        private areaMeasure varianceNVertField;
        
        private areaMeasure varianceEEField;
        
        private areaMeasure varianceEVertField;
        
        private areaMeasure varianceVertVertField;
        
        private lengthMeasure biasNField;
        
        private lengthMeasure biasEField;
        
        private lengthMeasure biasVertField;
        
        /// <remarks/>
        /// <summary>Covariance north north.</summary>
        [System.ComponentModel.DescriptionAttribute("Covariance north north.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("varianceNN", DataType="areaMeasure")]
        public areaMeasure varianceNN {
            get {
                return this.varianceNNField;
            }
            set {
                this.varianceNNField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Crossvariance north east.</summary>
        [System.ComponentModel.DescriptionAttribute("Crossvariance north east.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("varianceNE", DataType="areaMeasure")]
        public areaMeasure varianceNE {
            get {
                return this.varianceNEField;
            }
            set {
                this.varianceNEField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Crossvariance north vertical.</summary>
        [System.ComponentModel.DescriptionAttribute("Crossvariance north vertical.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("varianceNVert", DataType="areaMeasure")]
        public areaMeasure varianceNVert {
            get {
                return this.varianceNVertField;
            }
            set {
                this.varianceNVertField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Covariance east east.</summary>
        [System.ComponentModel.DescriptionAttribute("Covariance east east.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("varianceEE", DataType="areaMeasure")]
        public areaMeasure varianceEE {
            get {
                return this.varianceEEField;
            }
            set {
                this.varianceEEField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Crossvariance east vertical.</summary>
        [System.ComponentModel.DescriptionAttribute("Crossvariance east vertical.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("varianceEVert", DataType="areaMeasure")]
        public areaMeasure varianceEVert {
            get {
                return this.varianceEVertField;
            }
            set {
                this.varianceEVertField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Covariance vertical vertical.</summary>
        [System.ComponentModel.DescriptionAttribute("Covariance vertical vertical.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("varianceVertVert", DataType="areaMeasure")]
        public areaMeasure varianceVertVert {
            get {
                return this.varianceVertVertField;
            }
            set {
                this.varianceVertVertField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bias north.</summary>
        [System.ComponentModel.DescriptionAttribute("Bias north.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("biasN", DataType="lengthMeasure")]
        public lengthMeasure biasN {
            get {
                return this.biasNField;
            }
            set {
                this.biasNField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bias east.</summary>
        [System.ComponentModel.DescriptionAttribute("Bias east.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("biasE", DataType="lengthMeasure")]
        public lengthMeasure biasE {
            get {
                return this.biasEField;
            }
            set {
                this.biasEField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bias vertical.</summary>
        [System.ComponentModel.DescriptionAttribute("Bias vertical.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("biasVert", DataType="lengthMeasure")]
        public lengthMeasure biasVert {
            get {
                return this.biasVertField;
            }
            set {
                this.biasVertField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_location {
        
        private refNameString wellCRSField;
        
        private abstractMeasure[] itemsField;
        
        private ItemsChoiceType[] itemsElementNameField;
        
        private bool originalField;
        
        private bool originalFieldSpecified;
        
        private string descriptionField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>A pointer to the wellCRS that defines the CRS for the coordinates.  While optional, it is strongly recommended that this be specified.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the wellCRS that defines the CRS for the coordinates.  While optiona" +
            "l, it is strongly recommended that this be specified.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellCRS", DataType="refNameString")]
        public refNameString wellCRS {
            get {
                return this.wellCRSField;
            }
            set {
                this.wellCRSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("easting", typeof(lengthMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("latitude", typeof(planeAngleMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("localX", typeof(lengthMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("localY", typeof(lengthMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("longitude", typeof(planeAngleMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("northing", typeof(lengthMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("projectedX", typeof(lengthMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("projectedY", typeof(lengthMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("southing", typeof(lengthMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("westing", typeof(lengthMeasure))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("latitude", DataType="planeAngleMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("longitude", DataType="planeAngleMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("easting", DataType="lengthMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("northing", DataType="lengthMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("westing", DataType="lengthMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("southing", DataType="lengthMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("projectedX", DataType="lengthMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("projectedY", DataType="lengthMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("localX", DataType="lengthMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("localY", DataType="lengthMeasure")]
        public abstractMeasure[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Flag indicating (if "true" or "1") that this pair of values was  the original data given for the location. If the pair of values was  calculated from an original pair of values, this flag should be "false" (or "0"),  or not present.</summary>
        [System.ComponentModel.DescriptionAttribute("Flag indicating (if \"true\" or \"1\") that this pair of values was  the original dat" +
            "a given for the location. If the pair of values was  calculated from an original" +
            " pair of values, this flag should be \"false\" (or \"0\"),  or not present.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("original", DataType="logicalBoolean")]
        public bool original {
            get {
                return this.originalField;
            }
            set {
                this.originalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool originalSpecified {
            get {
                return this.originalFieldSpecified;
            }
            set {
                this.originalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A Comment, generally given to help the reader  interpret the coordinates if the CRS and the chosen pair do not make them clear.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("A Comment, generally given to help the reader  interpret the coordinates if the C" +
            "RS and the chosen pair do not make them clear.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="descriptionString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131", IncludeInSchema=false)]
    public enum ItemsChoiceType {
        
        /// <remarks/>
        easting,
        
        /// <remarks/>
        latitude,
        
        /// <remarks/>
        localX,
        
        /// <remarks/>
        localY,
        
        /// <remarks/>
        longitude,
        
        /// <remarks/>
        northing,
        
        /// <remarks/>
        projectedX,
        
        /// <remarks/>
        projectedY,
        
        /// <remarks/>
        southing,
        
        /// <remarks/>
        westing,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_refWellboreTrajectoryStation {
        
        private string stationReferenceField;
        
        private refNameString trajectoryParentField;
        
        private refNameString wellboreParentField;
        
        /// <remarks/>
        /// <summary>A pointer to the trajectoryStation within the parent trajectory. This is a special case where we only use a uid for the pointer. The natural identity of a station is its physical characteristics (e.g., md).</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A pointer to the trajectoryStation within the parent trajectory. This is a specia" +
            "l case where we only use a uid for the pointer. The natural identity of a statio" +
            "n is its physical characteristics (e.g., md).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stationReference", DataType="refString")]
        public string stationReference {
            get {
                return this.stationReferenceField;
            }
            set {
                this.stationReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the trajectory within the parent wellbore. This trajectory contains the trajectoryStation.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A pointer to the trajectory within the parent wellbore. This trajectory contains " +
            "the trajectoryStation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("trajectoryParent", DataType="refNameString")]
        public refNameString trajectoryParent {
            get {
                return this.trajectoryParentField;
            }
            set {
                this.trajectoryParentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the wellbore that contains the trajectory. This is not needed unless the trajectory is outside the  context of a common parent wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the wellbore that contains the trajectory. This is not needed unless" +
            " the trajectory is outside the  context of a common parent wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellboreParent", DataType="refNameString")]
        public refNameString wellboreParent {
            get {
                return this.wellboreParentField;
            }
            set {
                this.wellboreParentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_scr {
        
        private Energistics.DataAccess.Timestamp dTimField;
        
        private refPositiveCount pumpField;
        
        private ScrType typeScrField;
        
        private anglePerTimeMeasure rateStrokeField;
        
        private pressureMeasure presRecordedField;
        
        private measuredDepthCoord mdBitField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Date and time the information is related to.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Date and time the information is related to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>This is a pointer to the corresponding pump on the rig.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("This is a pointer to the corresponding pump on the rig.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pump", DataType="refPositiveCount")]
        public refPositiveCount pump {
            get {
                return this.pumpField;
            }
            set {
                this.pumpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of slow circulation rate.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Type of slow circulation rate.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeScr", DataType="ScrType")]
        public ScrType typeScr {
            get {
                return this.typeScrField;
            }
            set {
                this.typeScrField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pump stroke rate.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Pump stroke rate.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rateStroke", DataType="anglePerTimeMeasure")]
        public anglePerTimeMeasure rateStroke {
            get {
                return this.rateStrokeField;
            }
            set {
                this.rateStrokeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Recorded pump pressure for the stroke rate.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Recorded pump pressure for the stroke rate.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presRecorded", DataType="pressureMeasure")]
        public pressureMeasure presRecorded {
            get {
                return this.presRecordedField;
            }
            set {
                this.presRecordedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Along hole measured depth of measurement from the drill datum.</summary>
        [System.ComponentModel.DescriptionAttribute("Along hole measured depth of measurement from the drill datum.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdBit", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdBit {
            get {
                return this.mdBitField;
            }
            set {
                this.mdBitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class refPositiveCount {
        
        private string uidRefField;
        
        private short valueField;
        
        /// <remarks/>
        /// <summary>A reference to the unique identifier (uid attribute) in the node referenced by the index value.  This attribute is required within the context of a WITSML server.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A reference to the unique identifier (uid attribute) in the node referenced by th" +
            "e index value.  This attribute is required within the context of a WITSML server" +
            ".")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidRef", DataType="refString")]
        public string uidRef {
            get {
                return this.uidRefField;
            }
            set {
                this.uidRefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public short Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_pitVolume {
        
        private refPositiveCount pitField;
        
        private Energistics.DataAccess.Timestamp dTimField;
        
        private bool dTimFieldSpecified;
        
        private volumeMeasure volPitField;
        
        private densityMeasure densFluidField;
        
        private string descFluidField;
        
        private timeMeasure visFunnelField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>This is a pointer to the corresponding pit on the rig.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("This is a pointer to the corresponding pit on the rig.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pit", DataType="refPositiveCount")]
        public refPositiveCount pit {
            get {
                return this.pitField;
            }
            set {
                this.pitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time the information is related to.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time the information is related to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimSpecified {
            get {
                return this.dTimFieldSpecified;
            }
            set {
                this.dTimFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume of fluid in pit.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Volume of fluid in pit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volPit", DataType="volumeMeasure")]
        public volumeMeasure volPit {
            get {
                return this.volPitField;
            }
            set {
                this.volPitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Density of fluid in pit.</summary>
        [System.ComponentModel.DescriptionAttribute("Density of fluid in pit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densFluid", DataType="densityMeasure")]
        public densityMeasure densFluid {
            get {
                return this.densFluidField;
            }
            set {
                this.densFluidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fluid description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Fluid description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("descFluid", DataType="shortDescriptionString")]
        public string descFluid {
            get {
                return this.descFluidField;
            }
            set {
                this.descFluidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Funnel viscosity in seconds.</summary>
        [System.ComponentModel.DescriptionAttribute("Funnel viscosity in seconds.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("visFunnel", DataType="timeMeasure")]
        public timeMeasure visFunnel {
            get {
                return this.visFunnelField;
            }
            set {
                this.visFunnelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_mudVolume {
        
        private volumeMeasure volTotMudStartField;
        
        private volumeMeasure volMudDumpedField;
        
        private volumeMeasure volMudReceivedField;
        
        private volumeMeasure volMudReturnedField;
        
        private cs_mudLosses mudLossesField;
        
        private volumeMeasure volMudBuiltField;
        
        private volumeMeasure volMudStringField;
        
        private volumeMeasure volMudCasingField;
        
        private volumeMeasure volMudHoleField;
        
        private volumeMeasure volMudRiserField;
        
        private volumeMeasure volTotMudEndField;
        
        /// <remarks/>
        /// <summary>Total volume of mud at start of report interval (including pits and hole).</summary>
        [System.ComponentModel.DescriptionAttribute("Total volume of mud at start of report interval (including pits and hole).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volTotMudStart", DataType="volumeMeasure")]
        public volumeMeasure volTotMudStart {
            get {
                return this.volTotMudStartField;
            }
            set {
                this.volTotMudStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume of mud dumped.</summary>
        [System.ComponentModel.DescriptionAttribute("Volume of mud dumped.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volMudDumped", DataType="volumeMeasure")]
        public volumeMeasure volMudDumped {
            get {
                return this.volMudDumpedField;
            }
            set {
                this.volMudDumpedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume of mud received from mud warehouse.</summary>
        [System.ComponentModel.DescriptionAttribute("Volume of mud received from mud warehouse.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volMudReceived", DataType="volumeMeasure")]
        public volumeMeasure volMudReceived {
            get {
                return this.volMudReceivedField;
            }
            set {
                this.volMudReceivedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume of mud returned to mud warehouse.</summary>
        [System.ComponentModel.DescriptionAttribute("Volume of mud returned to mud warehouse.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volMudReturned", DataType="volumeMeasure")]
        public volumeMeasure volMudReturned {
            get {
                return this.volMudReturnedField;
            }
            set {
                this.volMudReturnedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud losses detailed breakdown between Surface and Down Hole.</summary>
        [System.ComponentModel.DescriptionAttribute("Mud losses detailed breakdown between Surface and Down Hole.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mudLosses", DataType="cs_mudLosses")]
        public cs_mudLosses mudLosses {
            get {
                return this.mudLossesField;
            }
            set {
                this.mudLossesField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume of mud built.</summary>
        [System.ComponentModel.DescriptionAttribute("Volume of mud built.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volMudBuilt", DataType="volumeMeasure")]
        public volumeMeasure volMudBuilt {
            get {
                return this.volMudBuiltField;
            }
            set {
                this.volMudBuiltField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume of mud contained within active string.</summary>
        [System.ComponentModel.DescriptionAttribute("Volume of mud contained within active string.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volMudString", DataType="volumeMeasure")]
        public volumeMeasure volMudString {
            get {
                return this.volMudStringField;
            }
            set {
                this.volMudStringField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume of mud contained in casing annulus.</summary>
        [System.ComponentModel.DescriptionAttribute("Volume of mud contained in casing annulus.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volMudCasing", DataType="volumeMeasure")]
        public volumeMeasure volMudCasing {
            get {
                return this.volMudCasingField;
            }
            set {
                this.volMudCasingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume of mud contained in open hole annulus.</summary>
        [System.ComponentModel.DescriptionAttribute("Volume of mud contained in open hole annulus.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volMudHole", DataType="volumeMeasure")]
        public volumeMeasure volMudHole {
            get {
                return this.volMudHoleField;
            }
            set {
                this.volMudHoleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume of mud contained in riser section annulus.</summary>
        [System.ComponentModel.DescriptionAttribute("Volume of mud contained in riser section annulus.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volMudRiser", DataType="volumeMeasure")]
        public volumeMeasure volMudRiser {
            get {
                return this.volMudRiserField;
            }
            set {
                this.volMudRiserField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total volume of mud at the end of the report interval (including pits and hole).</summary>
        [System.ComponentModel.DescriptionAttribute("Total volume of mud at the end of the report interval (including pits and hole).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volTotMudEnd", DataType="volumeMeasure")]
        public volumeMeasure volTotMudEnd {
            get {
                return this.volTotMudEndField;
            }
            set {
                this.volTotMudEndField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_mudLosses {
        
        private volumeMeasure volLostShakerSurfField;
        
        private volumeMeasure volLostMudCleanerSurfField;
        
        private volumeMeasure volLostPitsSurfField;
        
        private volumeMeasure volLostTrippingSurfField;
        
        private volumeMeasure volLostOtherSurfField;
        
        private volumeMeasure volTotMudLostSurfField;
        
        private volumeMeasure volLostCircHoleField;
        
        private volumeMeasure volLostCsgHoleField;
        
        private volumeMeasure volLostCmtHoleField;
        
        private volumeMeasure volLostBhdCsgHoleField;
        
        private volumeMeasure volLostAbandonHoleField;
        
        private volumeMeasure volLostOtherHoleField;
        
        private volumeMeasure volTotMudLostHoleField;
        
        /// <remarks/>
        /// <summary>Volume of mud lost at shakers (at surface).</summary>
        [System.ComponentModel.DescriptionAttribute("Volume of mud lost at shakers (at surface).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volLostShakerSurf", DataType="volumeMeasure")]
        public volumeMeasure volLostShakerSurf {
            get {
                return this.volLostShakerSurfField;
            }
            set {
                this.volLostShakerSurfField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume of mud lost in mud cleaning equipment (at surface).</summary>
        [System.ComponentModel.DescriptionAttribute("Volume of mud lost in mud cleaning equipment (at surface).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volLostMudCleanerSurf", DataType="volumeMeasure")]
        public volumeMeasure volLostMudCleanerSurf {
            get {
                return this.volLostMudCleanerSurfField;
            }
            set {
                this.volLostMudCleanerSurfField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume of mud lost in pit room (at surface).</summary>
        [System.ComponentModel.DescriptionAttribute("Volume of mud lost in pit room (at surface).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volLostPitsSurf", DataType="volumeMeasure")]
        public volumeMeasure volLostPitsSurf {
            get {
                return this.volLostPitsSurfField;
            }
            set {
                this.volLostPitsSurfField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume of mud lost while tripping (at surface).</summary>
        [System.ComponentModel.DescriptionAttribute("Volume of mud lost while tripping (at surface).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volLostTrippingSurf", DataType="volumeMeasure")]
        public volumeMeasure volLostTrippingSurf {
            get {
                return this.volLostTrippingSurfField;
            }
            set {
                this.volLostTrippingSurfField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Surface volume lost other location.</summary>
        [System.ComponentModel.DescriptionAttribute("Surface volume lost other location.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volLostOtherSurf", DataType="volumeMeasure")]
        public volumeMeasure volLostOtherSurf {
            get {
                return this.volLostOtherSurfField;
            }
            set {
                this.volLostOtherSurfField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total volume of mud lost at surface.</summary>
        [System.ComponentModel.DescriptionAttribute("Total volume of mud lost at surface.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volTotMudLostSurf", DataType="volumeMeasure")]
        public volumeMeasure volTotMudLostSurf {
            get {
                return this.volTotMudLostSurfField;
            }
            set {
                this.volTotMudLostSurfField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud volume lost downhole while circulating.</summary>
        [System.ComponentModel.DescriptionAttribute("Mud volume lost downhole while circulating.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volLostCircHole", DataType="volumeMeasure")]
        public volumeMeasure volLostCircHole {
            get {
                return this.volLostCircHoleField;
            }
            set {
                this.volLostCircHoleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud volume lost downhole while running casing.</summary>
        [System.ComponentModel.DescriptionAttribute("Mud volume lost downhole while running casing.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volLostCsgHole", DataType="volumeMeasure")]
        public volumeMeasure volLostCsgHole {
            get {
                return this.volLostCsgHoleField;
            }
            set {
                this.volLostCsgHoleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud volume lost downhole while cementing.</summary>
        [System.ComponentModel.DescriptionAttribute("Mud volume lost downhole while cementing.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volLostCmtHole", DataType="volumeMeasure")]
        public volumeMeasure volLostCmtHole {
            get {
                return this.volLostCmtHoleField;
            }
            set {
                this.volLostCmtHoleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud volume lost downhole behind casing.</summary>
        [System.ComponentModel.DescriptionAttribute("Mud volume lost downhole behind casing.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volLostBhdCsgHole", DataType="volumeMeasure")]
        public volumeMeasure volLostBhdCsgHole {
            get {
                return this.volLostBhdCsgHoleField;
            }
            set {
                this.volLostBhdCsgHoleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud volume lost downhole during abandonment.</summary>
        [System.ComponentModel.DescriptionAttribute("Mud volume lost downhole during abandonment.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volLostAbandonHole", DataType="volumeMeasure")]
        public volumeMeasure volLostAbandonHole {
            get {
                return this.volLostAbandonHoleField;
            }
            set {
                this.volLostAbandonHoleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud volume lost downhole from other location.</summary>
        [System.ComponentModel.DescriptionAttribute("Mud volume lost downhole from other location.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volLostOtherHole", DataType="volumeMeasure")]
        public volumeMeasure volLostOtherHole {
            get {
                return this.volLostOtherHoleField;
            }
            set {
                this.volLostOtherHoleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total volume of mud lost downhole.</summary>
        [System.ComponentModel.DescriptionAttribute("Total volume of mud lost downhole.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volTotMudLostHole", DataType="volumeMeasure")]
        public volumeMeasure volTotMudLostHole {
            get {
                return this.volTotMudLostHoleField;
            }
            set {
                this.volTotMudLostHoleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_inventory {
        
        private string nameField;
        
        private abstractMeasure itemField;
        
        private cost pricePerUnitField;
        
        private short qtyStartField;
        
        private bool qtyStartFieldSpecified;
        
        private int qtyAdjustmentField;
        
        private bool qtyAdjustmentFieldSpecified;
        
        private short qtyReceivedField;
        
        private bool qtyReceivedFieldSpecified;
        
        private short qtyReturnedField;
        
        private bool qtyReturnedFieldSpecified;
        
        private short qtyUsedField;
        
        private bool qtyUsedFieldSpecified;
        
        private cost costItemField;
        
        private short qtyOnLocationField;
        
        private bool qtyOnLocationFieldSpecified;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Name or type of inventory item.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Name or type of inventory item.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="str32")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("itemVolPerUnit", typeof(volumeMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("itemWtPerUnit", typeof(massMeasure))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("itemWtPerUnit", DataType="massMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("itemVolPerUnit", DataType="volumeMeasure")]
        public abstractMeasure Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Price per item unit, assume same currency for all items.</summary>
        [System.ComponentModel.DescriptionAttribute("Price per item unit, assume same currency for all items.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pricePerUnit", DataType="cost")]
        public cost pricePerUnit {
            get {
                return this.pricePerUnitField;
            }
            set {
                this.pricePerUnitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Start quantity for report interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Start quantity for report interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("qtyStart", DataType="nonNegativeCount")]
        public short qtyStart {
            get {
                return this.qtyStartField;
            }
            set {
                this.qtyStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qtyStartSpecified {
            get {
                return this.qtyStartFieldSpecified;
            }
            set {
                this.qtyStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Daily quantity adjustment/correction.</summary>
        [System.ComponentModel.DescriptionAttribute("Daily quantity adjustment/correction.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("qtyAdjustment", DataType="integerCount")]
        public int qtyAdjustment {
            get {
                return this.qtyAdjustmentField;
            }
            set {
                this.qtyAdjustmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qtyAdjustmentSpecified {
            get {
                return this.qtyAdjustmentFieldSpecified;
            }
            set {
                this.qtyAdjustmentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Quantity received at site.</summary>
        [System.ComponentModel.DescriptionAttribute("Quantity received at site.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("qtyReceived", DataType="nonNegativeCount")]
        public short qtyReceived {
            get {
                return this.qtyReceivedField;
            }
            set {
                this.qtyReceivedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qtyReceivedSpecified {
            get {
                return this.qtyReceivedFieldSpecified;
            }
            set {
                this.qtyReceivedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Quantity returned to base from site.</summary>
        [System.ComponentModel.DescriptionAttribute("Quantity returned to base from site.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("qtyReturned", DataType="nonNegativeCount")]
        public short qtyReturned {
            get {
                return this.qtyReturnedField;
            }
            set {
                this.qtyReturnedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qtyReturnedSpecified {
            get {
                return this.qtyReturnedFieldSpecified;
            }
            set {
                this.qtyReturnedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Quantity used for the report period</summary>
        [System.ComponentModel.DescriptionAttribute("Quantity used for the report period")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("qtyUsed", DataType="nonNegativeCount")]
        public short qtyUsed {
            get {
                return this.qtyUsedField;
            }
            set {
                this.qtyUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qtyUsedSpecified {
            get {
                return this.qtyUsedFieldSpecified;
            }
            set {
                this.qtyUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cost for the product for the interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Cost for the product for the interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("costItem", DataType="cost")]
        public cost costItem {
            get {
                return this.costItemField;
            }
            set {
                this.costItemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Amount of item remaining on location after all adjustments for the report interval.</summary>
        [System.ComponentModel.DescriptionAttribute("Amount of item remaining on location after all adjustments for the report interva" +
            "l.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("qtyOnLocation", DataType="nonNegativeCount")]
        public short qtyOnLocation {
            get {
                return this.qtyOnLocationField;
            }
            set {
                this.qtyOnLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qtyOnLocationSpecified {
            get {
                return this.qtyOnLocationFieldSpecified;
            }
            set {
                this.qtyOnLocationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_rigResponse {
        
        private indexedObject[] anchorTensionField;
        
        private indexedObject[] anchorAngleField;
        
        private planeAngleMeasure rigHeadingField;
        
        private lengthMeasure rigHeaveField;
        
        private planeAngleMeasure rigPitchAngleField;
        
        private planeAngleMeasure rigRollAngleField;
        
        private planeAngleMeasure riserAngleField;
        
        private planeAngleMeasure riserDirectionField;
        
        private forceMeasure riserTensionField;
        
        private forceMeasure variableDeckLoadField;
        
        private forceMeasure totalDeckLoadField;
        
        private planeAngleMeasure guideBaseAngleField;
        
        private planeAngleMeasure ballJointAngleField;
        
        private planeAngleMeasure ballJointDirectionField;
        
        private lengthMeasure offsetRigField;
        
        private forceMeasure loadLeg1Field;
        
        private forceMeasure loadLeg2Field;
        
        private forceMeasure loadLeg3Field;
        
        private forceMeasure loadLeg4Field;
        
        private lengthMeasure penetrationLeg1Field;
        
        private lengthMeasure penetrationLeg2Field;
        
        private lengthMeasure penetrationLeg3Field;
        
        private lengthMeasure penetrationLeg4Field;
        
        private lengthMeasure dispRigField;
        
        private lengthMeasure meanDraftField;
        
        /// <remarks/>
        /// <summary>Vector of the tension on anchors #1 to #n.</summary>
        [System.Xml.Serialization.XmlElementAttribute("anchorTension")]
        [System.ComponentModel.DescriptionAttribute("Vector of the tension on anchors #1 to #n.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("anchorTension", DataType="indexedObject")]
        public indexedObject[] anchorTension {
            get {
                return this.anchorTensionField;
            }
            set {
                this.anchorTensionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Vector of the angles of the anchors #1 to #n.</summary>
        [System.Xml.Serialization.XmlElementAttribute("anchorAngle")]
        [System.ComponentModel.DescriptionAttribute("Vector of the angles of the anchors #1 to #n.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("anchorAngle", DataType="indexedObject")]
        public indexedObject[] anchorAngle {
            get {
                return this.anchorAngleField;
            }
            set {
                this.anchorAngleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Direction, relative to true north, to which the rig is facing.</summary>
        [System.ComponentModel.DescriptionAttribute("Direction, relative to true north, to which the rig is facing.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rigHeading", DataType="planeAngleMeasure")]
        public planeAngleMeasure rigHeading {
            get {
                return this.rigHeadingField;
            }
            set {
                this.rigHeadingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum amplitude of the vertical motion of the rig.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum amplitude of the vertical motion of the rig.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rigHeave", DataType="lengthMeasure")]
        public lengthMeasure rigHeave {
            get {
                return this.rigHeaveField;
            }
            set {
                this.rigHeaveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measure of the fore-aft rotational movement of the rig due the combined  effects of wind and waves; measured as the angle from horizontal</summary>
        [System.ComponentModel.DescriptionAttribute("Measure of the fore-aft rotational movement of the rig due the combined  effects " +
            "of wind and waves; measured as the angle from horizontal")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rigPitchAngle", DataType="planeAngleMeasure")]
        public planeAngleMeasure rigPitchAngle {
            get {
                return this.rigPitchAngleField;
            }
            set {
                this.rigPitchAngleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measure of the side-to-side rotational movement of the rig due the combined  effects of wind and waves; measured as the angle from vertical</summary>
        [System.ComponentModel.DescriptionAttribute("Measure of the side-to-side rotational movement of the rig due the combined  effe" +
            "cts of wind and waves; measured as the angle from vertical")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rigRollAngle", DataType="planeAngleMeasure")]
        public planeAngleMeasure rigRollAngle {
            get {
                return this.rigRollAngleField;
            }
            set {
                this.rigRollAngleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Angle of the marine riser with the vertical.</summary>
        [System.ComponentModel.DescriptionAttribute("Angle of the marine riser with the vertical.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("riserAngle", DataType="planeAngleMeasure")]
        public planeAngleMeasure riserAngle {
            get {
                return this.riserAngleField;
            }
            set {
                this.riserAngleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Direction of the marine riser.</summary>
        [System.ComponentModel.DescriptionAttribute("Direction of the marine riser.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("riserDirection", DataType="planeAngleMeasure")]
        public planeAngleMeasure riserDirection {
            get {
                return this.riserDirectionField;
            }
            set {
                this.riserDirectionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Tension of the marine riser.</summary>
        [System.ComponentModel.DescriptionAttribute("Tension of the marine riser.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("riserTension", DataType="forceMeasure")]
        public forceMeasure riserTension {
            get {
                return this.riserTensionField;
            }
            set {
                this.riserTensionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Current temporary load on the rig deck.</summary>
        [System.ComponentModel.DescriptionAttribute("Current temporary load on the rig deck.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("variableDeckLoad", DataType="forceMeasure")]
        public forceMeasure variableDeckLoad {
            get {
                return this.variableDeckLoadField;
            }
            set {
                this.variableDeckLoadField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total deck load.</summary>
        [System.ComponentModel.DescriptionAttribute("Total deck load.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("totalDeckLoad", DataType="forceMeasure")]
        public forceMeasure totalDeckLoad {
            get {
                return this.totalDeckLoadField;
            }
            set {
                this.totalDeckLoadField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Direction of the guide base.</summary>
        [System.ComponentModel.DescriptionAttribute("Direction of the guide base.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("guideBaseAngle", DataType="planeAngleMeasure")]
        public planeAngleMeasure guideBaseAngle {
            get {
                return this.guideBaseAngleField;
            }
            set {
                this.guideBaseAngleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Angle between riser and blow out preventer at the flex joint.</summary>
        [System.ComponentModel.DescriptionAttribute("Angle between riser and blow out preventer at the flex joint.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ballJointAngle", DataType="planeAngleMeasure")]
        public planeAngleMeasure ballJointAngle {
            get {
                return this.ballJointAngleField;
            }
            set {
                this.ballJointAngleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Direction of the ball joint.</summary>
        [System.ComponentModel.DescriptionAttribute("Direction of the ball joint.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ballJointDirection", DataType="planeAngleMeasure")]
        public planeAngleMeasure ballJointDirection {
            get {
                return this.ballJointDirectionField;
            }
            set {
                this.ballJointDirectionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Horizontal displacement of the rig relative to the wellhead.</summary>
        [System.ComponentModel.DescriptionAttribute("Horizontal displacement of the rig relative to the wellhead.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("offsetRig", DataType="lengthMeasure")]
        public lengthMeasure offsetRig {
            get {
                return this.offsetRigField;
            }
            set {
                this.offsetRigField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Load carried by leg of jackup.</summary>
        [System.ComponentModel.DescriptionAttribute("Load carried by leg of jackup.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("loadLeg1", DataType="forceMeasure")]
        public forceMeasure loadLeg1 {
            get {
                return this.loadLeg1Field;
            }
            set {
                this.loadLeg1Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Load carried by leg of jackup.</summary>
        [System.ComponentModel.DescriptionAttribute("Load carried by leg of jackup.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("loadLeg2", DataType="forceMeasure")]
        public forceMeasure loadLeg2 {
            get {
                return this.loadLeg2Field;
            }
            set {
                this.loadLeg2Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Load carried by leg of jackup.</summary>
        [System.ComponentModel.DescriptionAttribute("Load carried by leg of jackup.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("loadLeg3", DataType="forceMeasure")]
        public forceMeasure loadLeg3 {
            get {
                return this.loadLeg3Field;
            }
            set {
                this.loadLeg3Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Load carried by leg of jackup.</summary>
        [System.ComponentModel.DescriptionAttribute("Load carried by leg of jackup.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("loadLeg4", DataType="forceMeasure")]
        public forceMeasure loadLeg4 {
            get {
                return this.loadLeg4Field;
            }
            set {
                this.loadLeg4Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Penetration of leg into seabed.</summary>
        [System.ComponentModel.DescriptionAttribute("Penetration of leg into seabed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("penetrationLeg1", DataType="lengthMeasure")]
        public lengthMeasure penetrationLeg1 {
            get {
                return this.penetrationLeg1Field;
            }
            set {
                this.penetrationLeg1Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Penetration of leg into seabed.</summary>
        [System.ComponentModel.DescriptionAttribute("Penetration of leg into seabed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("penetrationLeg2", DataType="lengthMeasure")]
        public lengthMeasure penetrationLeg2 {
            get {
                return this.penetrationLeg2Field;
            }
            set {
                this.penetrationLeg2Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Penetration of leg into seabed</summary>
        [System.ComponentModel.DescriptionAttribute("Penetration of leg into seabed")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("penetrationLeg3", DataType="lengthMeasure")]
        public lengthMeasure penetrationLeg3 {
            get {
                return this.penetrationLeg3Field;
            }
            set {
                this.penetrationLeg3Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Penetration of leg into seabed</summary>
        [System.ComponentModel.DescriptionAttribute("Penetration of leg into seabed")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("penetrationLeg4", DataType="lengthMeasure")]
        public lengthMeasure penetrationLeg4 {
            get {
                return this.penetrationLeg4Field;
            }
            set {
                this.penetrationLeg4Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Vessel displacement (in water).</summary>
        [System.ComponentModel.DescriptionAttribute("Vessel displacement (in water).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dispRig", DataType="lengthMeasure")]
        public lengthMeasure dispRig {
            get {
                return this.dispRigField;
            }
            set {
                this.dispRigField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mean draft at mid-section.</summary>
        [System.ComponentModel.DescriptionAttribute("Mean draft at mid-section.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("meanDraft", DataType="lengthMeasure")]
        public lengthMeasure meanDraft {
            get {
                return this.meanDraftField;
            }
            set {
                this.meanDraftField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_pumpOp {
        
        private Energistics.DataAccess.Timestamp dTimField;
        
        private bool dTimFieldSpecified;
        
        private refPositiveCount pumpField;
        
        private PumpOpType typeOperationField;
        
        private bool typeOperationFieldSpecified;
        
        private lengthMeasure idLinerField;
        
        private lengthMeasure lenStrokeField;
        
        private anglePerTimeMeasure rateStrokeField;
        
        private pressureMeasure pressureField;
        
        private relativePowerMeasure pcEfficiencyField;
        
        private volumeFlowRateMeasure pumpOutputField;
        
        private measuredDepthCoord mdBitField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Date and time the information is related to.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time the information is related to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimSpecified {
            get {
                return this.dTimFieldSpecified;
            }
            set {
                this.dTimFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>This is a pointer to the corresponding pump on the rig.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("This is a pointer to the corresponding pump on the rig.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pump", DataType="refPositiveCount")]
        public refPositiveCount pump {
            get {
                return this.pumpField;
            }
            set {
                this.pumpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of pump operation.</summary>
        [System.ComponentModel.DescriptionAttribute("Type of pump operation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeOperation", DataType="PumpOpType")]
        public PumpOpType typeOperation {
            get {
                return this.typeOperationField;
            }
            set {
                this.typeOperationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeOperationSpecified {
            get {
                return this.typeOperationFieldSpecified;
            }
            set {
                this.typeOperationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Liner size.</summary>
        [System.ComponentModel.DescriptionAttribute("Liner size.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("idLiner", DataType="lengthMeasure")]
        public lengthMeasure idLiner {
            get {
                return this.idLinerField;
            }
            set {
                this.idLinerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Stroke Length.</summary>
        [System.ComponentModel.DescriptionAttribute("Stroke Length.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenStroke", DataType="lengthMeasure")]
        public lengthMeasure lenStroke {
            get {
                return this.lenStrokeField;
            }
            set {
                this.lenStrokeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pump rate (Strokes per minute).</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Pump rate (Strokes per minute).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rateStroke", DataType="anglePerTimeMeasure")]
        public anglePerTimeMeasure rateStroke {
            get {
                return this.rateStrokeField;
            }
            set {
                this.rateStrokeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pump pressure recorded.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Pump pressure recorded.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pressure", DataType="pressureMeasure")]
        public pressureMeasure pressure {
            get {
                return this.pressureField;
            }
            set {
                this.pressureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pump efficiency.</summary>
        [System.ComponentModel.DescriptionAttribute("Pump efficiency.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pcEfficiency", DataType="relativePowerMeasure")]
        public relativePowerMeasure pcEfficiency {
            get {
                return this.pcEfficiencyField;
            }
            set {
                this.pcEfficiencyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pump output (incl. for efficiency).</summary>
        [System.ComponentModel.DescriptionAttribute("Pump output (incl. for efficiency).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pumpOutput", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure pumpOutput {
            get {
                return this.pumpOutputField;
            }
            set {
                this.pumpOutputField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Along hole measured depth of measurement from the drill datum.</summary>
        [System.ComponentModel.DescriptionAttribute("Along hole measured depth of measurement from the drill datum.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdBit", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdBit {
            get {
                return this.mdBitField;
            }
            set {
                this.mdBitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_shakerOp {
        
        private refNameString shakerField;
        
        private measuredDepthCoord mdHoleField;
        
        private Energistics.DataAccess.Timestamp dTimField;
        
        private bool dTimFieldSpecified;
        
        private timeMeasure hoursRunField;
        
        private areaPerAreaMeasure pcScreenCoveredField;
        
        private cs_shakerScreen shakerScreenField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>A pointer to the shaker that is characterized by this report.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A pointer to the shaker that is characterized by this report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("shaker", DataType="refNameString")]
        public refNameString shaker {
            get {
                return this.shakerField;
            }
            set {
                this.shakerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hole measured depth at time of measurement.</summary>
        [System.ComponentModel.DescriptionAttribute("Hole measured depth at time of measurement.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdHole", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdHole {
            get {
                return this.mdHoleField;
            }
            set {
                this.mdHoleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time the information is related to.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time the information is related to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimSpecified {
            get {
                return this.dTimFieldSpecified;
            }
            set {
                this.dTimFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hours run for this operation.</summary>
        [System.ComponentModel.DescriptionAttribute("Hours run for this operation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("hoursRun", DataType="timeMeasure")]
        public timeMeasure hoursRun {
            get {
                return this.hoursRunField;
            }
            set {
                this.hoursRunField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Percent of screen covered by cuttings.</summary>
        [System.ComponentModel.DescriptionAttribute("Percent of screen covered by cuttings.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pcScreenCovered", DataType="areaPerAreaMeasure")]
        public areaPerAreaMeasure pcScreenCovered {
            get {
                return this.pcScreenCoveredField;
            }
            set {
                this.pcScreenCoveredField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Set of shaker screen records for the operation.</summary>
        [System.ComponentModel.DescriptionAttribute("Set of shaker screen records for the operation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("shakerScreen", DataType="cs_shakerScreen")]
        public cs_shakerScreen shakerScreen {
            get {
                return this.shakerScreenField;
            }
            set {
                this.shakerScreenField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_shakerScreen {
        
        private Energistics.DataAccess.Timestamp dTimStartField;
        
        private bool dTimStartFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimEndField;
        
        private bool dTimEndFieldSpecified;
        
        private short numDeckField;
        
        private bool numDeckFieldSpecified;
        
        private lengthMeasure meshXField;
        
        private lengthMeasure meshYField;
        
        private string manufacturerField;
        
        private string modelField;
        
        private lengthMeasure cutPointField;
        
        /// <remarks/>
        /// <summary>Date and time that activities started.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time that activities started.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimStartSpecified {
            get {
                return this.dTimStartFieldSpecified;
            }
            set {
                this.dTimStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time activities were completed.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time activities were completed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimEndSpecified {
            get {
                return this.dTimEndFieldSpecified;
            }
            set {
                this.dTimEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Deck number mesh installed on.</summary>
        [System.ComponentModel.DescriptionAttribute("Deck number mesh installed on.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numDeck", DataType="positiveCount")]
        public short numDeck {
            get {
                return this.numDeckField;
            }
            set {
                this.numDeckField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numDeckSpecified {
            get {
                return this.numDeckFieldSpecified;
            }
            set {
                this.numDeckFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mesh size in the X direction.</summary>
        [System.ComponentModel.DescriptionAttribute("Mesh size in the X direction.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("meshX", DataType="lengthMeasure")]
        public lengthMeasure meshX {
            get {
                return this.meshXField;
            }
            set {
                this.meshXField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mesh size in the Y direction.</summary>
        [System.ComponentModel.DescriptionAttribute("Mesh size in the Y direction.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("meshY", DataType="lengthMeasure")]
        public lengthMeasure meshY {
            get {
                return this.meshYField;
            }
            set {
                this.meshYField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturer / supplier of the item.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturer / supplier of the item.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("manufacturer", DataType="nameString")]
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturers designated model.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Manufacturers designated model.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("model", DataType="str32")]
        public string model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Shaker screen cut point - the maximum size that  will pass through the screen.</summary>
        [System.ComponentModel.DescriptionAttribute("Shaker screen cut point - the maximum size that  will pass through the screen.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cutPoint", DataType="lengthMeasure")]
        public lengthMeasure cutPoint {
            get {
                return this.cutPointField;
            }
            set {
                this.cutPointField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_hse {
        
        private timeMeasure daysIncFreeField;
        
        private cs_incident[] incidentField;
        
        private Energistics.DataAccess.Timestamp lastCsgPresTestField;
        
        private bool lastCsgPresTestFieldSpecified;
        
        private pressureMeasure presLastCsgField;
        
        private Energistics.DataAccess.Timestamp lastBopPresTestField;
        
        private bool lastBopPresTestFieldSpecified;
        
        private Energistics.DataAccess.Timestamp nextBopPresTestField;
        
        private bool nextBopPresTestFieldSpecified;
        
        private pressureMeasure presStdPipeField;
        
        private pressureMeasure presKellyHoseField;
        
        private pressureMeasure presDiverterField;
        
        private pressureMeasure presAnnularField;
        
        private pressureMeasure presRamsField;
        
        private pressureMeasure presChokeLineField;
        
        private pressureMeasure presChokeManField;
        
        private Energistics.DataAccess.Timestamp lastFireBoatDrillField;
        
        private bool lastFireBoatDrillFieldSpecified;
        
        private Energistics.DataAccess.Timestamp lastAbandonDrillField;
        
        private bool lastAbandonDrillFieldSpecified;
        
        private Energistics.DataAccess.Timestamp lastRigInspectionField;
        
        private bool lastRigInspectionFieldSpecified;
        
        private Energistics.DataAccess.Timestamp lastSafetyMeetingField;
        
        private bool lastSafetyMeetingFieldSpecified;
        
        private Energistics.DataAccess.Timestamp lastSafetyInspectionField;
        
        private bool lastSafetyInspectionFieldSpecified;
        
        private Energistics.DataAccess.Timestamp lastTripDrillField;
        
        private bool lastTripDrillFieldSpecified;
        
        private Energistics.DataAccess.Timestamp lastDiverterDrillField;
        
        private bool lastDiverterDrillFieldSpecified;
        
        private Energistics.DataAccess.Timestamp lastBopDrillField;
        
        private bool lastBopDrillFieldSpecified;
        
        private bool regAgencyInspField;
        
        private bool regAgencyInspFieldSpecified;
        
        private bool nonComplianceIssuedField;
        
        private bool nonComplianceIssuedFieldSpecified;
        
        private short numStopCardsField;
        
        private bool numStopCardsFieldSpecified;
        
        private volumeMeasure fluidDischargedField;
        
        private volumeMeasure volCtgDischargedField;
        
        private volumeMeasure volOilCtgDischargeField;
        
        private volumeMeasure wasteDischargedField;
        
        private string commentsField;
        
        /// <remarks/>
        /// <summary>Incident free duration (commonly in days).</summary>
        [System.ComponentModel.DescriptionAttribute("Incident free duration (commonly in days).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("daysIncFree", DataType="timeMeasure")]
        public timeMeasure daysIncFree {
            get {
                return this.daysIncFreeField;
            }
            set {
                this.daysIncFreeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Incident report occurrences description.</summary>
        [System.Xml.Serialization.XmlElementAttribute("incident")]
        [System.ComponentModel.DescriptionAttribute("Incident report occurrences description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("incident", DataType="cs_incident")]
        public cs_incident[] incident {
            get {
                return this.incidentField;
            }
            set {
                this.incidentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Last casing pressure test date and time.</summary>
        [System.ComponentModel.DescriptionAttribute("Last casing pressure test date and time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lastCsgPresTest", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp lastCsgPresTest {
            get {
                return this.lastCsgPresTestField;
            }
            set {
                this.lastCsgPresTestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastCsgPresTestSpecified {
            get {
                return this.lastCsgPresTestFieldSpecified;
            }
            set {
                this.lastCsgPresTestFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Last casing pressure test pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Last casing pressure test pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presLastCsg", DataType="pressureMeasure")]
        public pressureMeasure presLastCsg {
            get {
                return this.presLastCsgField;
            }
            set {
                this.presLastCsgField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Last blow out preventer pressure test.</summary>
        [System.ComponentModel.DescriptionAttribute("Last blow out preventer pressure test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lastBopPresTest", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp lastBopPresTest {
            get {
                return this.lastBopPresTestField;
            }
            set {
                this.lastBopPresTestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastBopPresTestSpecified {
            get {
                return this.lastBopPresTestFieldSpecified;
            }
            set {
                this.lastBopPresTestFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Next blow out preventer pressure test.</summary>
        [System.ComponentModel.DescriptionAttribute("Next blow out preventer pressure test.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nextBopPresTest", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp nextBopPresTest {
            get {
                return this.nextBopPresTestField;
            }
            set {
                this.nextBopPresTestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool nextBopPresTestSpecified {
            get {
                return this.nextBopPresTestFieldSpecified;
            }
            set {
                this.nextBopPresTestFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Standpipe manifold pressure tested to.</summary>
        [System.ComponentModel.DescriptionAttribute("Standpipe manifold pressure tested to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presStdPipe", DataType="pressureMeasure")]
        public pressureMeasure presStdPipe {
            get {
                return this.presStdPipeField;
            }
            set {
                this.presStdPipeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Kelly hose pressure tested to.</summary>
        [System.ComponentModel.DescriptionAttribute("Kelly hose pressure tested to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presKellyHose", DataType="pressureMeasure")]
        public pressureMeasure presKellyHose {
            get {
                return this.presKellyHoseField;
            }
            set {
                this.presKellyHoseField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Blow out preventer diverter pressure tested to.</summary>
        [System.ComponentModel.DescriptionAttribute("Blow out preventer diverter pressure tested to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presDiverter", DataType="pressureMeasure")]
        public pressureMeasure presDiverter {
            get {
                return this.presDiverterField;
            }
            set {
                this.presDiverterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Blow out preventer annular preventer pressure tested to.</summary>
        [System.ComponentModel.DescriptionAttribute("Blow out preventer annular preventer pressure tested to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presAnnular", DataType="pressureMeasure")]
        public pressureMeasure presAnnular {
            get {
                return this.presAnnularField;
            }
            set {
                this.presAnnularField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Blow out preventer ram pressure tested to.</summary>
        [System.ComponentModel.DescriptionAttribute("Blow out preventer ram pressure tested to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presRams", DataType="pressureMeasure")]
        public pressureMeasure presRams {
            get {
                return this.presRamsField;
            }
            set {
                this.presRamsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Choke line pressure tested to.</summary>
        [System.ComponentModel.DescriptionAttribute("Choke line pressure tested to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presChokeLine", DataType="pressureMeasure")]
        public pressureMeasure presChokeLine {
            get {
                return this.presChokeLineField;
            }
            set {
                this.presChokeLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Choke line manifold pressure tested to.</summary>
        [System.ComponentModel.DescriptionAttribute("Choke line manifold pressure tested to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presChokeMan", DataType="pressureMeasure")]
        public pressureMeasure presChokeMan {
            get {
                return this.presChokeManField;
            }
            set {
                this.presChokeManField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Last fire or boat drill.</summary>
        [System.ComponentModel.DescriptionAttribute("Last fire or boat drill.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lastFireBoatDrill", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp lastFireBoatDrill {
            get {
                return this.lastFireBoatDrillField;
            }
            set {
                this.lastFireBoatDrillField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastFireBoatDrillSpecified {
            get {
                return this.lastFireBoatDrillFieldSpecified;
            }
            set {
                this.lastFireBoatDrillFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Last abandonment drill.</summary>
        [System.ComponentModel.DescriptionAttribute("Last abandonment drill.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lastAbandonDrill", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp lastAbandonDrill {
            get {
                return this.lastAbandonDrillField;
            }
            set {
                this.lastAbandonDrillField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastAbandonDrillSpecified {
            get {
                return this.lastAbandonDrillFieldSpecified;
            }
            set {
                this.lastAbandonDrillFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Last rig inspection/check.</summary>
        [System.ComponentModel.DescriptionAttribute("Last rig inspection/check.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lastRigInspection", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp lastRigInspection {
            get {
                return this.lastRigInspectionField;
            }
            set {
                this.lastRigInspectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastRigInspectionSpecified {
            get {
                return this.lastRigInspectionFieldSpecified;
            }
            set {
                this.lastRigInspectionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Last safety meeting.</summary>
        [System.ComponentModel.DescriptionAttribute("Last safety meeting.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lastSafetyMeeting", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp lastSafetyMeeting {
            get {
                return this.lastSafetyMeetingField;
            }
            set {
                this.lastSafetyMeetingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastSafetyMeetingSpecified {
            get {
                return this.lastSafetyMeetingFieldSpecified;
            }
            set {
                this.lastSafetyMeetingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Last safety inspection.</summary>
        [System.ComponentModel.DescriptionAttribute("Last safety inspection.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lastSafetyInspection", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp lastSafetyInspection {
            get {
                return this.lastSafetyInspectionField;
            }
            set {
                this.lastSafetyInspectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastSafetyInspectionSpecified {
            get {
                return this.lastSafetyInspectionFieldSpecified;
            }
            set {
                this.lastSafetyInspectionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Last trip drill.</summary>
        [System.ComponentModel.DescriptionAttribute("Last trip drill.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lastTripDrill", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp lastTripDrill {
            get {
                return this.lastTripDrillField;
            }
            set {
                this.lastTripDrillField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastTripDrillSpecified {
            get {
                return this.lastTripDrillFieldSpecified;
            }
            set {
                this.lastTripDrillFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Last diverter drill.</summary>
        [System.ComponentModel.DescriptionAttribute("Last diverter drill.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lastDiverterDrill", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp lastDiverterDrill {
            get {
                return this.lastDiverterDrillField;
            }
            set {
                this.lastDiverterDrillField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastDiverterDrillSpecified {
            get {
                return this.lastDiverterDrillFieldSpecified;
            }
            set {
                this.lastDiverterDrillFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Last blow out preventer drill.</summary>
        [System.ComponentModel.DescriptionAttribute("Last blow out preventer drill.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lastBopDrill", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp lastBopDrill {
            get {
                return this.lastBopDrillField;
            }
            set {
                this.lastBopDrillField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastBopDrillSpecified {
            get {
                return this.lastBopDrillFieldSpecified;
            }
            set {
                this.lastBopDrillFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Governmental regulatory inspection agency inspection?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Governmental regulatory inspection agency inspection?   Values are \"true\" (or \"1\"" +
            ") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("regAgencyInsp", DataType="logicalBoolean")]
        public bool regAgencyInsp {
            get {
                return this.regAgencyInspField;
            }
            set {
                this.regAgencyInspField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool regAgencyInspSpecified {
            get {
                return this.regAgencyInspFieldSpecified;
            }
            set {
                this.regAgencyInspFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inspection non-compliance notice served?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Inspection non-compliance notice served?   Values are \"true\" (or \"1\") and \"false\"" +
            " (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nonComplianceIssued", DataType="logicalBoolean")]
        public bool nonComplianceIssued {
            get {
                return this.nonComplianceIssuedField;
            }
            set {
                this.nonComplianceIssuedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool nonComplianceIssuedSpecified {
            get {
                return this.nonComplianceIssuedFieldSpecified;
            }
            set {
                this.nonComplianceIssuedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of Health, Safety and Environment incidents reported.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of Health, Safety and Environment incidents reported.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numStopCards", DataType="nonNegativeCount")]
        public short numStopCards {
            get {
                return this.numStopCardsField;
            }
            set {
                this.numStopCardsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numStopCardsSpecified {
            get {
                return this.numStopCardsFieldSpecified;
            }
            set {
                this.numStopCardsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Daily whole mud discarded.</summary>
        [System.ComponentModel.DescriptionAttribute("Daily whole mud discarded.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fluidDischarged", DataType="volumeMeasure")]
        public volumeMeasure fluidDischarged {
            get {
                return this.fluidDischargedField;
            }
            set {
                this.fluidDischargedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume of cuttings discharged.</summary>
        [System.ComponentModel.DescriptionAttribute("Volume of cuttings discharged.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volCtgDischarged", DataType="volumeMeasure")]
        public volumeMeasure volCtgDischarged {
            get {
                return this.volCtgDischargedField;
            }
            set {
                this.volCtgDischargedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Oil on cuttings daily discharge.</summary>
        [System.ComponentModel.DescriptionAttribute("Oil on cuttings daily discharge.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volOilCtgDischarge", DataType="volumeMeasure")]
        public volumeMeasure volOilCtgDischarge {
            get {
                return this.volOilCtgDischargeField;
            }
            set {
                this.volOilCtgDischargeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Volume of sanitary waste discharged.</summary>
        [System.ComponentModel.DescriptionAttribute("Volume of sanitary waste discharged.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wasteDischarged", DataType="volumeMeasure")]
        public volumeMeasure wasteDischarged {
            get {
                return this.wasteDischargedField;
            }
            set {
                this.wasteDischargedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comments and remarks.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Comments and remarks.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comments", DataType="commentString")]
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_incident {
        
        private Energistics.DataAccess.Timestamp dTimField;
        
        private string reporterField;
        
        private short numMinorInjuryField;
        
        private bool numMinorInjuryFieldSpecified;
        
        private short numMajorInjuryField;
        
        private bool numMajorInjuryFieldSpecified;
        
        private short numFatalityField;
        
        private bool numFatalityFieldSpecified;
        
        private bool isNearMissField;
        
        private bool isNearMissFieldSpecified;
        
        private string descLocationField;
        
        private string descAccidentField;
        
        private string remedialActionDescField;
        
        private string causeDescField;
        
        private timeMeasure eTimLostGrossField;
        
        private cost costLostGrossField;
        
        private string responsibleCompanyField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Date and time the information is related to.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Date and time the information is related to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of person who prepared incident report.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Name of person who prepared incident report.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("reporter", DataType="str32")]
        public string reporter {
            get {
                return this.reporterField;
            }
            set {
                this.reporterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of personnel with minor injuries.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of personnel with minor injuries.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numMinorInjury", DataType="nonNegativeCount")]
        public short numMinorInjury {
            get {
                return this.numMinorInjuryField;
            }
            set {
                this.numMinorInjuryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numMinorInjurySpecified {
            get {
                return this.numMinorInjuryFieldSpecified;
            }
            set {
                this.numMinorInjuryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of personnel with major injuries.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of personnel with major injuries.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numMajorInjury", DataType="nonNegativeCount")]
        public short numMajorInjury {
            get {
                return this.numMajorInjuryField;
            }
            set {
                this.numMajorInjuryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numMajorInjurySpecified {
            get {
                return this.numMajorInjuryFieldSpecified;
            }
            set {
                this.numMajorInjuryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of personnel killed in incident.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of personnel killed in incident.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numFatality", DataType="nonNegativeCount")]
        public short numFatality {
            get {
                return this.numFatalityField;
            }
            set {
                this.numFatalityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numFatalitySpecified {
            get {
                return this.numFatalityFieldSpecified;
            }
            set {
                this.numFatalityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Near miss incident occurrence?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Near miss incident occurrence?   Values are \"true\" (or \"1\") and \"false\" (or \"0\")." +
            "")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("isNearMiss", DataType="logicalBoolean")]
        public bool isNearMiss {
            get {
                return this.isNearMissField;
            }
            set {
                this.isNearMissField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isNearMissSpecified {
            get {
                return this.isNearMissFieldSpecified;
            }
            set {
                this.isNearMissFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Location description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Location description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("descLocation", DataType="shortDescriptionString")]
        public string descLocation {
            get {
                return this.descLocationField;
            }
            set {
                this.descLocationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Accident description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Accident description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("descAccident", DataType="commentString")]
        public string descAccident {
            get {
                return this.descAccidentField;
            }
            set {
                this.descAccidentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Remedial action description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Remedial action description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("remedialActionDesc", DataType="commentString")]
        public string remedialActionDesc {
            get {
                return this.remedialActionDescField;
            }
            set {
                this.remedialActionDescField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cause description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Cause description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("causeDesc", DataType="commentString")]
        public string causeDesc {
            get {
                return this.causeDescField;
            }
            set {
                this.causeDescField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of hours lost due to incident.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of hours lost due to incident.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eTimLostGross", DataType="timeMeasure")]
        public timeMeasure eTimLostGross {
            get {
                return this.eTimLostGrossField;
            }
            set {
                this.eTimLostGrossField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gross estimate of cost incurred due to incident.</summary>
        [System.ComponentModel.DescriptionAttribute("Gross estimate of cost incurred due to incident.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("costLostGross", DataType="cost")]
        public cost costLostGross {
            get {
                return this.costLostGrossField;
            }
            set {
                this.costLostGrossField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of company that caused incident.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of company that caused incident.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("responsibleCompany", DataType="nameString")]
        public string responsibleCompany {
            get {
                return this.responsibleCompanyField;
            }
            set {
                this.responsibleCompanyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_personnel {
        
        private string companyField;
        
        private string typeServiceField;
        
        private short numPeopleField;
        
        private bool numPeopleFieldSpecified;
        
        private timeMeasure totalTimeField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Name of company.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Name of company.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("company", DataType="str32")]
        public string company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Service provided by the company.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Service provided by the company.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeService", DataType="str16")]
        public string typeService {
            get {
                return this.typeServiceField;
            }
            set {
                this.typeServiceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of people on board for that company.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of people on board for that company.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numPeople", DataType="nonNegativeCount")]
        public short numPeople {
            get {
                return this.numPeopleField;
            }
            set {
                this.numPeopleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numPeopleSpecified {
            get {
                return this.numPeopleFieldSpecified;
            }
            set {
                this.numPeopleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total time worked by the company (commonly in hours).</summary>
        [System.ComponentModel.DescriptionAttribute("Total time worked by the company (commonly in hours).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("totalTime", DataType="timeMeasure")]
        public timeMeasure totalTime {
            get {
                return this.totalTimeField;
            }
            set {
                this.totalTimeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_supportCraft {
        
        private string nameField;
        
        private SupportCraft typeSuppCraftField;
        
        private bool typeSuppCraftFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimArrivedField;
        
        private bool dTimArrivedFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimDepartedField;
        
        private bool dTimDepartedFieldSpecified;
        
        private string commentsField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for support craft.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for support craft.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of support craft.</summary>
        [System.ComponentModel.DescriptionAttribute("Type of support craft.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeSuppCraft", DataType="SupportCraft")]
        public SupportCraft typeSuppCraft {
            get {
                return this.typeSuppCraftField;
            }
            set {
                this.typeSuppCraftField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSuppCraftSpecified {
            get {
                return this.typeSuppCraftFieldSpecified;
            }
            set {
                this.typeSuppCraftFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time when vehicle arrived at rig site.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time when vehicle arrived at rig site.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimArrived", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimArrived {
            get {
                return this.dTimArrivedField;
            }
            set {
                this.dTimArrivedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimArrivedSpecified {
            get {
                return this.dTimArrivedFieldSpecified;
            }
            set {
                this.dTimArrivedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time when vehicle departed rig site.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time when vehicle departed rig site.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimDeparted", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimDeparted {
            get {
                return this.dTimDepartedField;
            }
            set {
                this.dTimDepartedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimDepartedSpecified {
            get {
                return this.dTimDepartedFieldSpecified;
            }
            set {
                this.dTimDepartedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comments and remarks.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Comments and remarks.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comments", DataType="commentString")]
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_weather {
        
        private Energistics.DataAccess.Timestamp dTimField;
        
        private string agencyField;
        
        private pressureMeasure barometricPressureField;
        
        private short beaufortScaleNumberField;
        
        private bool beaufortScaleNumberFieldSpecified;
        
        private thermodynamicTemperatureMeasure tempSurfaceMnField;
        
        private thermodynamicTemperatureMeasure tempSurfaceMxField;
        
        private thermodynamicTemperatureMeasure tempWindChillField;
        
        private thermodynamicTemperatureMeasure tempseaField;
        
        private lengthMeasure visibilityField;
        
        private planeAngleMeasure aziWaveField;
        
        private lengthMeasure htWaveField;
        
        private lengthMeasure significantWaveField;
        
        private lengthMeasure maxWaveField;
        
        private timeMeasure periodWaveField;
        
        private planeAngleMeasure aziWindField;
        
        private velocityMeasure velWindField;
        
        private string typePrecipField;
        
        private lengthMeasure amtPrecipField;
        
        private string coverCloudField;
        
        private lengthMeasure ceilingCloudField;
        
        private velocityMeasure currentSeaField;
        
        private planeAngleMeasure aziCurrentSeaField;
        
        private string commentsField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Date and time the information is related to.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Date and time the information is related to.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of company that supplied the data.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Name of company that supplied the data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("agency", DataType="str32")]
        public string agency {
            get {
                return this.agencyField;
            }
            set {
                this.agencyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Atmospheric pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Atmospheric pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("barometricPressure", DataType="pressureMeasure")]
        public pressureMeasure barometricPressure {
            get {
                return this.barometricPressureField;
            }
            set {
                this.barometricPressureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The Beaufort wind scale is a system used to estimate and report wind speeds  when no measuring apparatus is available. It was invented in the early 19th Century by Admiral  Sir Francis Beaufort of the British Navy as a way to interpret winds from conditions.</summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(0D, 12D)]
        [System.ComponentModel.DescriptionAttribute(@"The Beaufort wind scale is a system used to estimate and report wind speeds  when no measuring apparatus is available. It was invented in the early 19th Century by Admiral  Sir Francis Beaufort of the British Navy as a way to interpret winds from conditions.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("beaufortScaleNumber", DataType="beaufortScaleIntegerCode")]
        public short beaufortScaleNumber {
            get {
                return this.beaufortScaleNumberField;
            }
            set {
                this.beaufortScaleNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool beaufortScaleNumberSpecified {
            get {
                return this.beaufortScaleNumberFieldSpecified;
            }
            set {
                this.beaufortScaleNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum temperature above ground. Temperature of the atmosphere.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum temperature above ground. Temperature of the atmosphere.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempSurfaceMn", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempSurfaceMn {
            get {
                return this.tempSurfaceMnField;
            }
            set {
                this.tempSurfaceMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum temperature above ground.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum temperature above ground.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempSurfaceMx", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempSurfaceMx {
            get {
                return this.tempSurfaceMxField;
            }
            set {
                this.tempSurfaceMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A measure of the combined chilling effect of wind and low temperature on  living things, also named chill factor, e.g., according to US weather service table, an air  temperature of 30 degF with a 10 mi/h corresponds to a windchill of 22 degF.</summary>
        [System.ComponentModel.DescriptionAttribute("A measure of the combined chilling effect of wind and low temperature on  living " +
            "things, also named chill factor, e.g., according to US weather service table, an" +
            " air  temperature of 30 degF with a 10 mi/h corresponds to a windchill of 22 deg" +
            "F.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempWindChill", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempWindChill {
            get {
                return this.tempWindChillField;
            }
            set {
                this.tempWindChillField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Sea temperature.</summary>
        [System.ComponentModel.DescriptionAttribute("Sea temperature.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempsea", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempsea {
            get {
                return this.tempseaField;
            }
            set {
                this.tempseaField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Horizontal visibility.</summary>
        [System.ComponentModel.DescriptionAttribute("Horizontal visibility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("visibility", DataType="lengthMeasure")]
        public lengthMeasure visibility {
            get {
                return this.visibilityField;
            }
            set {
                this.visibilityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The direction from which the waves are coming, measured from true north.</summary>
        [System.ComponentModel.DescriptionAttribute("The direction from which the waves are coming, measured from true north.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("aziWave", DataType="planeAngleMeasure")]
        public planeAngleMeasure aziWave {
            get {
                return this.aziWaveField;
            }
            set {
                this.aziWaveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average height of the waves.</summary>
        [System.ComponentModel.DescriptionAttribute("Average height of the waves.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("htWave", DataType="lengthMeasure")]
        public lengthMeasure htWave {
            get {
                return this.htWaveField;
            }
            set {
                this.htWaveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An average of the higher 1/3 of the wave heights passing during a   sample period (typically 20 to 30 minutes).</summary>
        [System.ComponentModel.DescriptionAttribute("An average of the higher 1/3 of the wave heights passing during a   sample period" +
            " (typically 20 to 30 minutes).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("significantWave", DataType="lengthMeasure")]
        public lengthMeasure significantWave {
            get {
                return this.significantWaveField;
            }
            set {
                this.significantWaveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum wave height.</summary>
        [System.ComponentModel.DescriptionAttribute("The maximum wave height.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("maxWave", DataType="lengthMeasure")]
        public lengthMeasure maxWave {
            get {
                return this.maxWaveField;
            }
            set {
                this.maxWaveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The elapsed time between the passing of two wave tops.</summary>
        [System.ComponentModel.DescriptionAttribute("The elapsed time between the passing of two wave tops.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("periodWave", DataType="timeMeasure")]
        public timeMeasure periodWave {
            get {
                return this.periodWaveField;
            }
            set {
                this.periodWaveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The direction from which the wind is blowing, measured from true north.</summary>
        [System.ComponentModel.DescriptionAttribute("The direction from which the wind is blowing, measured from true north.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("aziWind", DataType="planeAngleMeasure")]
        public planeAngleMeasure aziWind {
            get {
                return this.aziWindField;
            }
            set {
                this.aziWindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Wind speed.</summary>
        [System.ComponentModel.DescriptionAttribute("Wind speed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("velWind", DataType="velocityMeasure")]
        public velocityMeasure velWind {
            get {
                return this.velWindField;
            }
            set {
                this.velWindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of precipitation.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Type of precipitation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typePrecip", DataType="str32")]
        public string typePrecip {
            get {
                return this.typePrecipField;
            }
            set {
                this.typePrecipField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Amount of precipitation.</summary>
        [System.ComponentModel.DescriptionAttribute("Amount of precipitation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("amtPrecip", DataType="lengthMeasure")]
        public lengthMeasure amtPrecip {
            get {
                return this.amtPrecipField;
            }
            set {
                this.amtPrecipField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of cloud cover.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Description of cloud cover.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("coverCloud", DataType="str32")]
        public string coverCloud {
            get {
                return this.coverCloudField;
            }
            set {
                this.coverCloudField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Height of cloud cover.</summary>
        [System.ComponentModel.DescriptionAttribute("Height of cloud cover.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ceilingCloud", DataType="lengthMeasure")]
        public lengthMeasure ceilingCloud {
            get {
                return this.ceilingCloudField;
            }
            set {
                this.ceilingCloudField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Current speed.</summary>
        [System.ComponentModel.DescriptionAttribute("Current speed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("currentSea", DataType="velocityMeasure")]
        public velocityMeasure currentSea {
            get {
                return this.currentSeaField;
            }
            set {
                this.currentSeaField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Azimuth of current.</summary>
        [System.ComponentModel.DescriptionAttribute("Azimuth of current.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("aziCurrentSea", DataType="planeAngleMeasure")]
        public planeAngleMeasure aziCurrentSea {
            get {
                return this.aziCurrentSeaField;
            }
            set {
                this.aziCurrentSeaField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comments and remarks.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Comments and remarks.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comments", DataType="commentString")]
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [System.Xml.Serialization.XmlRootAttribute("realtimes", Namespace="http://www.witsml.org/schemas/131", IsNullable=false)]
    public partial class obj_realtimes {
        
        private cs_documentInfo documentInfoField;
        
        private obj_realtime[] realtimeField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A single realtime.</summary>
        [System.Xml.Serialization.XmlElementAttribute("realtime")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A single realtime.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("realtime", DataType="obj_realtime")]
        public obj_realtime[] realtime {
            get {
                return this.realtimeField;
            }
            set {
                this.realtimeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.3\\.1\\.([1-9]|([1-9][0-9]))")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionString")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("WITSML", "1.3.1.1")]
    public partial class obj_realtime {
        
        private Energistics.DataAccess.Timestamp dTimField;
        
        private bool dTimFieldSpecified;
        
        private measuredDepthCoord mdField;
        
        private int sequenceField;
        
        private ActivityCode activityCodeField;
        
        private bool activityCodeFieldSpecified;
        
        private string detailActivityField;
        
        private string dataGroupField;
        
        private cs_realtimeHeader realtimeHeaderField;
        
        private cs_channel[] channelField;
        
        private cs_record[] recordField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidWellboreField;
        
        private string idSubField;
        
        /// <remarks/>
        /// <summary>The time index for the realtime object if the interval type is time-based.   It is the default time index for all data in the realtime object. Both dTim and md can be overridden at the channel level. This value should be given when "dTim" is given with any channel.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The time index for the realtime object if the interval type is time-based.   It is the default time index for all data in the realtime object. Both dTim and md can be overridden at the channel level. This value should be given when ""dTim"" is given with any channel.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimSpecified {
            get {
                return this.dTimFieldSpecified;
            }
            set {
                this.dTimFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Along hole measured depth of measurement from the drill datum.   It is the default depth index for all data in the realtime object. Both dTim and md can be overridden at the channel level. This value should be given when "md" is given with any channel.</summary>
        [System.ComponentModel.DescriptionAttribute("Along hole measured depth of measurement from the drill datum.   It is the defaul" +
            "t depth index for all data in the realtime object. Both dTim and md can be overr" +
            "idden at the channel level. This value should be given when \"md\" is given with a" +
            "ny channel.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("md", DataType="measuredDepthCoord")]
        public measuredDepthCoord md {
            get {
                return this.mdField;
            }
            set {
                this.mdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The one-based sequence of realtime messages for one subscription. The first message for a subscription should have a sequence number of one and each subsequent message for that subscription should increment by one.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The one-based sequence of realtime messages for one subscription. The first messa" +
            "ge for a subscription should have a sequence number of one and each subsequent m" +
            "essage for that subscription should increment by one.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sequence", DataType="positiveBigCount")]
        public int sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A code used to define rig activity.</summary>
        [System.ComponentModel.DescriptionAttribute("A code used to define rig activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("activityCode", DataType="ActivityCode")]
        public ActivityCode activityCode {
            get {
                return this.activityCodeField;
            }
            set {
                this.activityCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool activityCodeSpecified {
            get {
                return this.activityCodeFieldSpecified;
            }
            set {
                this.activityCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Custom string to further define an activity.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Custom string to further define an activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("detailActivity", DataType="str32")]
        public string detailActivity {
            get {
                return this.detailActivityField;
            }
            set {
                this.detailActivityField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The group name of the channels in this realtime. For example, a publisher can publish data from the mudlogger, drilling and MWD systems at the same time. The drilling and mudlogger systems could have channels with the  same mnemonic. The group name is used to distinguish between curves from these different source systems.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The group name of the channels in this realtime. For example, a publisher can publish data from the mudlogger, drilling and MWD systems at the same time. The drilling and mudlogger systems could have channels with the  same mnemonic. The group name is used to distinguish between curves from these different source systems.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dataGroup", DataType="nameString")]
        public string dataGroup {
            get {
                return this.dataGroupField;
            }
            set {
                this.dataGroupField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The information which is constant for all realtimes. This will only be sent with the first realtime for a subscription, when a retransmit is requested or when the header is updated (e.g., when more channels are added).</summary>
        [System.ComponentModel.DescriptionAttribute("The information which is constant for all realtimes. This will only be sent with " +
            "the first realtime for a subscription, when a retransmit is requested or when th" +
            "e header is updated (e.g., when more channels are added).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("realtimeHeader", DataType="cs_realtimeHeader")]
        public cs_realtimeHeader realtimeHeader {
            get {
                return this.realtimeHeaderField;
            }
            set {
                this.realtimeHeaderField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The data associated with a (de-multiplexed) channel.</summary>
        [System.Xml.Serialization.XmlElementAttribute("channel")]
        [System.ComponentModel.DescriptionAttribute("The data associated with a (de-multiplexed) channel.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("channel", DataType="cs_channel")]
        public cs_channel[] channel {
            get {
                return this.channelField;
            }
            set {
                this.channelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The multiplexed data associated with a channel.</summary>
        [System.Xml.Serialization.XmlElementAttribute("record")]
        [System.ComponentModel.DescriptionAttribute("The multiplexed data associated with a channel.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("record", DataType="cs_record")]
        public cs_record[] record {
            get {
                return this.recordField;
            }
            set {
                this.recordField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the wellbore. This uniquely represents  the wellbore referenced by the (possibly non-unique) nameWellbore.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the wellbore. This uniquely represents  the wellbore refere" +
            "nced by the (possibly non-unique) nameWellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWellbore", DataType="uidString")]
        public string uidWellbore {
            get {
                return this.uidWellboreField;
            }
            set {
                this.uidWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the Subscription. This matches the  value of the idSub attribute that is returned in the Subscription Request. The value is only optional so that the a realtime can be retrieved  using the Store interface (possibly after the subscription has retired).  Otherwise, the value must be included when the realtime is returned as a result of a subscription.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"Unique identifier for the Subscription. This matches the  value of the idSub attribute that is returned in the Subscription Request. The value is only optional so that the a realtime can be retrieved  using the Store interface (possibly after the subscription has retired).  Otherwise, the value must be included when the realtime is returned as a result of a subscription.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("idSub", DataType="uidString")]
        public string idSub {
            get {
                return this.idSubField;
            }
            set {
                this.idSubField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_realtimeHeader {
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string serviceCompanyField;
        
        private string runNumberField;
        
        private short bhaRunNumberField;
        
        private bool bhaRunNumberFieldSpecified;
        
        private string passField;
        
        private Energistics.DataAccess.Timestamp creationDateField;
        
        private bool creationDateFieldSpecified;
        
        private string descriptionField;
        
        private cs_groupDefinition[] groupDefinitionField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore that contains the tubular.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore that contains the tubular.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWellbore", DataType="nameString")]
        public string nameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of contractor who provided the service.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of contractor who provided the service.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("serviceCompany", DataType="nameString")]
        public string serviceCompany {
            get {
                return this.serviceCompanyField;
            }
            set {
                this.serviceCompanyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Log run number. This should normally be a number; however  some legacy systems encode other information in this value.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Log run number. This should normally be a number; however  some legacy systems en" +
            "code other information in this value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("runNumber", DataType="str16")]
        public string runNumber {
            get {
                return this.runNumberField;
            }
            set {
                this.runNumberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The bottom hole assembly run number associated with this log.</summary>
        [System.ComponentModel.DescriptionAttribute("The bottom hole assembly run number associated with this log.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bhaRunNumber", DataType="positiveCount")]
        public short bhaRunNumber {
            get {
                return this.bhaRunNumberField;
            }
            set {
                this.bhaRunNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bhaRunNumberSpecified {
            get {
                return this.bhaRunNumberFieldSpecified;
            }
            set {
                this.bhaRunNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Identifies the pass within the run.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Identifies the pass within the run.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pass", DataType="str16")]
        public string pass {
            get {
                return this.passField;
            }
            set {
                this.passField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time that the realtime was created.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time that the realtime was created.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("creationDate", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp creationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool creationDateSpecified {
            get {
                return this.creationDateFieldSpecified;
            }
            set {
                this.creationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comments about the realtime.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Comments about the realtime.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="commentString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The definition of a group of channels.</summary>
        [System.Xml.Serialization.XmlElementAttribute("groupDefinition")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The definition of a group of channels.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("groupDefinition", DataType="cs_groupDefinition")]
        public cs_groupDefinition[] groupDefinition {
            get {
                return this.groupDefinitionField;
            }
            set {
                this.groupDefinitionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_groupDefinition {
        
        private string idField;
        
        private bool multiplexedField;
        
        private cs_interval intervalField;
        
        private refNameString itemField;
        
        private ItemChoiceType itemElementNameField;
        
        private string commentField;
        
        private cs_channelDefinition[] channelDefinitionField;
        
        /// <remarks/>
        /// <summary>The id of this group. The value should match a commonly agreed value.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("The id of this group. The value should match a commonly agreed value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("id", DataType="str32")]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True (value of "1" or "true") indicates that this group will be represented by multiplexed data records. False (value of "0" or "false") indicates that this group will be represented by de-multiplexed data channels.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("True (value of \"1\" or \"true\") indicates that this group will be represented by mu" +
            "ltiplexed data records. False (value of \"0\" or \"false\") indicates that this grou" +
            "p will be represented by de-multiplexed data channels.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("multiplexed", DataType="logicalBoolean")]
        public bool multiplexed {
            get {
                return this.multiplexedField;
            }
            set {
                this.multiplexedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The depth or time interval over which the group data are  requested to be derived.</summary>
        [System.ComponentModel.DescriptionAttribute("The depth or time interval over which the group data are  requested to be derived" +
            ".")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("interval", DataType="cs_interval")]
        public cs_interval interval {
            get {
                return this.intervalField;
            }
            set {
                this.intervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("persistedAsLog", typeof(refNameString))]
        [System.Xml.Serialization.XmlElementAttribute("persistedAsWellLog", typeof(refNameString))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("persistedAsLog", DataType="refNameString")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("persistedAsWellLog", DataType="refNameString")]
        public refNameString Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A comment or remark about this group.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A comment or remark about this group.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The definition of a channel.</summary>
        [System.Xml.Serialization.XmlElementAttribute("channelDefinition")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The definition of a channel.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("channelDefinition", DataType="cs_channelDefinition")]
        public cs_channelDefinition[] channelDefinition {
            get {
                return this.channelDefinitionField;
            }
            set {
                this.channelDefinitionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_interval {
        
        private IntervalType typeField;
        
        private IntervalMethod methodField;
        
        private abstractMeasure itemField;
        
        /// <remarks/>
        /// <summary>The type of interval.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The type of interval.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("type", DataType="IntervalType")]
        public IntervalType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The interval method. Not appropriate for a SpotSample.</summary>
        [System.ComponentModel.DescriptionAttribute("The interval method. Not appropriate for a SpotSample.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("method", DataType="IntervalMethod")]
        public IntervalMethod method {
            get {
                return this.methodField;
            }
            set {
                this.methodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("distanceInterval", typeof(lengthMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("timeInterval", typeof(timeMeasure))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("timeInterval", DataType="timeMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("distanceInterval", DataType="lengthMeasure")]
        public abstractMeasure Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131", IncludeInSchema=false)]
    public enum ItemChoiceType {
        
        /// <remarks/>
        persistedAsLog,
        
        /// <remarks/>
        persistedAsWellLog,
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_channelDefinition {
        
        private string mnemonicField;
        
        private LogDataType dataTypeField;
        
        private bool dataTypeFieldSpecified;
        
        private RealtimeData classWitsmlField;
        
        private bool classWitsmlFieldSpecified;
        
        private short columnIndexField;
        
        private bool columnIndexFieldSpecified;
        
        private string unitField;
        
        private string descriptionField;
        
        private string mnemAliasField;
        
        private lengthMeasure sensorOffsetField;
        
        private string dataSourceField;
        
        private cs_interval intervalField;
        
        private cs_axisDefinition[] axisDefinitionField;
        
        /// <remarks/>
        /// <summary>Used to differentiate between multiples of same sensor type.  The mnemonic must be unique within the context of each group definition.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Used to differentiate between multiples of same sensor type.  The mnemonic must b" +
            "e unique within the context of each group definition.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mnemonic", DataType="str32")]
        public string mnemonic {
            get {
                return this.mnemonicField;
            }
            set {
                this.mnemonicField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Specifies the data encoding of a "value".   If this value is not supplied, the data type is assumed to be double.</summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the data encoding of a \"value\".   If this value is not supplied, the da" +
            "ta type is assumed to be double.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dataType", DataType="LogDataType")]
        public LogDataType dataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dataTypeSpecified {
            get {
                return this.dataTypeFieldSpecified;
            }
            set {
                this.dataTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of channel from realtime catalog.   Although this is optional, it is strongly recommended that it be included. This defines the underlying meaning of the curve (e.g., a porosity). Mnemonic allows multiple channels of the same class to exist in one realtime.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Name of channel from realtime catalog.   Although this is optional, it is strongly recommended that it be included. This defines the underlying meaning of the curve (e.g., a porosity). Mnemonic allows multiple channels of the same class to exist in one realtime.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("classWitsml", DataType="RealtimeData")]
        public RealtimeData classWitsml {
            get {
                return this.classWitsmlField;
            }
            set {
                this.classWitsmlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool classWitsmlSpecified {
            get {
                return this.classWitsmlFieldSpecified;
            }
            set {
                this.classWitsmlFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A 1-based index of curve data in the data records. This can only be specified if multiplexed is true in the group definition.</summary>
        [System.ComponentModel.DescriptionAttribute("A 1-based index of curve data in the data records. This can only be specified if " +
            "multiplexed is true in the group definition.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("columnIndex", DataType="nonNegativeCount")]
        public short columnIndex {
            get {
                return this.columnIndexField;
            }
            set {
                this.columnIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool columnIndexSpecified {
            get {
                return this.columnIndexFieldSpecified;
            }
            set {
                this.columnIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unit of measure for a quantity value. This can only be specified if multiplexed is true in the group definition. For demultiplexed values the unit is carried by each individual value.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(24)]
        [System.ComponentModel.DescriptionAttribute("The unit of measure for a quantity value. This can only be specified if multiplex" +
            "ed is true in the group definition. For demultiplexed values the unit is carried" +
            " by each individual value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("unit", DataType="uomString")]
        public string unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A description of the channel.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("A description of the channel.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="descriptionString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name alias for this trace.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Name alias for this trace.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mnemAlias", DataType="str32")]
        public string mnemAlias {
            get {
                return this.mnemAliasField;
            }
            set {
                this.mnemAliasField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Offset of sensor from a downhole equipment vertical reference (the drill bit, for MWD logs;  the tool zero reference for wireline logs).  This element is only informative (log values are presented at actual depth, not requiring subtraction of an offset).</summary>
        [System.ComponentModel.DescriptionAttribute("Offset of sensor from a downhole equipment vertical reference (the drill bit, for" +
            " MWD logs;  the tool zero reference for wireline logs).  This element is only in" +
            "formative (log values are presented at actual depth, not requiring subtraction o" +
            "f an offset).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sensorOffset", DataType="lengthMeasure")]
        public lengthMeasure sensorOffset {
            get {
                return this.sensorOffsetField;
            }
            set {
                this.sensorOffsetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data source, could be tool name/id.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Data source, could be tool name/id.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dataSource", DataType="str32")]
        public string dataSource {
            get {
                return this.dataSourceField;
            }
            set {
                this.dataSourceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that describes  how data was gathered, computed, and sampled. This can only be specified if multiplexed is false in the group definition. That is, this can only be specified for a de-multiplexed representation.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that describes  how data was gathered, computed, and sampled." +
            " This can only be specified if multiplexed is false in the group definition. Tha" +
            "t is, this can only be specified for a de-multiplexed representation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("interval", DataType="cs_interval")]
        public cs_interval interval {
            get {
                return this.intervalField;
            }
            set {
                this.intervalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Indicates that the channel is an array channel (i.e., multi-valued samples),  and provides meta data by which an axis of the array can be understood.</summary>
        [System.Xml.Serialization.XmlElementAttribute("axisDefinition")]
        [System.ComponentModel.DescriptionAttribute("Indicates that the channel is an array channel (i.e., multi-valued samples),  and" +
            " provides meta data by which an axis of the array can be understood.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("axisDefinition", DataType="cs_axisDefinition")]
        public cs_axisDefinition[] axisDefinition {
            get {
                return this.axisDefinitionField;
            }
            set {
                this.axisDefinitionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_channel {
        
        private string idField;
        
        private string mnemonicField;
        
        private Energistics.DataAccess.Timestamp dTimField;
        
        private bool dTimFieldSpecified;
        
        private measuredDepthCoord mdField;
        
        private encodedArrayString valueField;
        
        private perLengthMeasure densDataField;
        
        private string qualDataField;
        
        private timeMeasure fetField;
        
        /// <remarks/>
        /// <summary>The id of the group that this channel represents.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("The id of the group that this channel represents.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("id", DataType="str32")]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The mnemonic assigned to the channel. This must match  a mnemonic of a channel definition in the header and represents the unique  key of the channel. Multiple (de-multiplexed) channels with the same mnemonic cannot exist  in the same realtime.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("The mnemonic assigned to the channel. This must match  a mnemonic of a channel de" +
            "finition in the header and represents the unique  key of the channel. Multiple (" +
            "de-multiplexed) channels with the same mnemonic cannot exist  in the same realti" +
            "me.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mnemonic", DataType="str32")]
        public string mnemonic {
            get {
                return this.mnemonicField;
            }
            set {
                this.mnemonicField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The time index for the realtime channel if the interval  type is time-based.</summary>
        [System.ComponentModel.DescriptionAttribute("The time index for the realtime channel if the interval  type is time-based.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimSpecified {
            get {
                return this.dTimFieldSpecified;
            }
            set {
                this.dTimFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Along hole measured depth of measurement from the drill datum.</summary>
        [System.ComponentModel.DescriptionAttribute("Along hole measured depth of measurement from the drill datum.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("md", DataType="measuredDepthCoord")]
        public measuredDepthCoord md {
            get {
                return this.mdField;
            }
            set {
                this.mdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Value of the channel. The encoding of the value is defined by "dataType" in the header. For array channels, this will be a space delimited list of values.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Value of the channel. The encoding of the value is defined by \"dataType\" in the h" +
            "eader. For array channels, this will be a space delimited list of values.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("value", DataType="encodedArrayString")]
        public encodedArrayString value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data density of sample in samples per length unit</summary>
        [System.ComponentModel.DescriptionAttribute("Data density of sample in samples per length unit")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densData", DataType="perLengthMeasure")]
        public perLengthMeasure densData {
            get {
                return this.densDataField;
            }
            set {
                this.densDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data quality indicator.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data quality indicator.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("qualData", DataType="str16")]
        public string qualData {
            get {
                return this.qualDataField;
            }
            set {
                this.qualDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Formation exposure time.</summary>
        [System.ComponentModel.DescriptionAttribute("Formation exposure time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fet", DataType="timeMeasure")]
        public timeMeasure fet {
            get {
                return this.fetField;
            }
            set {
                this.fetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class encodedArrayString {
        
        private string uomField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(24)]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uom", DataType="uomString")]
        public string uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_record {
        
        private string idField;
        
        private short seqField;
        
        private Energistics.DataAccess.Timestamp dTimField;
        
        private bool dTimFieldSpecified;
        
        private measuredDepthCoord mdField;
        
        private encodedArrayString valueField;
        
        /// <remarks/>
        /// <summary>The id of the group that this record represents. The combination of id and seq should be unique within a subscription.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("The id of the group that this record represents. The combination of id and seq sh" +
            "ould be unique within a subscription.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("id", DataType="str32")]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The one-based sequence of records for one group in this subscription. The first record for a group should have a sequence number of one and each subsequent record for that group should increment by one.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The one-based sequence of records for one group in this subscription. The first r" +
            "ecord for a group should have a sequence number of one and each subsequent recor" +
            "d for that group should increment by one.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("seq", DataType="positiveCount")]
        public short seq {
            get {
                return this.seqField;
            }
            set {
                this.seqField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The time index for the record if the interval  type is time-based.</summary>
        [System.ComponentModel.DescriptionAttribute("The time index for the record if the interval  type is time-based.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTim", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTim {
            get {
                return this.dTimField;
            }
            set {
                this.dTimField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimSpecified {
            get {
                return this.dTimFieldSpecified;
            }
            set {
                this.dTimFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Along hole measured depth of measurement from the drill datum.</summary>
        [System.ComponentModel.DescriptionAttribute("Along hole measured depth of measurement from the drill datum.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("md", DataType="measuredDepthCoord")]
        public measuredDepthCoord md {
            get {
                return this.mdField;
            }
            set {
                this.mdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The data values for the record. A comma delimited list of data values with one  value for each channel in the group (e.g., "xxx,yyy, zzz"). For array channels, the value of the array channel will be a space delimited list of values that are contained within the commas that delimit the value for that curve (e.g., "xxx,aa bb cc,zzz"). This essentially represents one row of a table where the channel  mnemonics represent the column headings.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"The data values for the record. A comma delimited list of data values with one  value for each channel in the group (e.g., ""xxx,yyy, zzz""). For array channels, the value of the array channel will be a space delimited list of values that are contained within the commas that delimit the value for that curve (e.g., ""xxx,aa bb cc,zzz""). This essentially represents one row of a table where the channel  mnemonics represent the column headings.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("value", DataType="encodedArrayString")]
        public encodedArrayString value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [System.Xml.Serialization.XmlRootAttribute("rigs", Namespace="http://www.witsml.org/schemas/131", IsNullable=false)]
    public partial class obj_rigs {
        
        private cs_documentInfo documentInfoField;
        
        private obj_rig[] rigField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A single rig.</summary>
        [System.Xml.Serialization.XmlElementAttribute("rig")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A single rig.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rig", DataType="obj_rig")]
        public obj_rig[] rig {
            get {
                return this.rigField;
            }
            set {
                this.rigField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.3\\.1\\.([1-9]|([1-9][0-9]))")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionString")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("WITSML", "1.3.1.1")]
    public partial class obj_rig {
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string nameField;
        
        private string ownerField;
        
        private RigType typeRigField;
        
        private bool typeRigFieldSpecified;
        
        private string manufacturerField;
        
        private string yearEntServiceField;
        
        private string classRigField;
        
        private string approvalsField;
        
        private string registrationField;
        
        private string telNumberField;
        
        private string faxNumberField;
        
        private string emailAddressField;
        
        private string nameContactField;
        
        private lengthMeasure ratingDrillDepthField;
        
        private lengthMeasure ratingWaterDepthField;
        
        private bool isOffshoreField;
        
        private bool isOffshoreFieldSpecified;
        
        private lengthMeasure airGapField;
        
        private Energistics.DataAccess.Timestamp dTimStartOpField;
        
        private bool dTimStartOpFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimEndOpField;
        
        private bool dTimEndOpFieldSpecified;
        
        private cs_bop bopField;
        
        private cs_pit[] pitField;
        
        private cs_pump[] pumpField;
        
        private cs_shaker[] shakerField;
        
        private cs_centrifuge[] centrifugeField;
        
        private cs_hydrocyclone[] hydrocycloneField;
        
        private cs_degasser[] degasserField;
        
        private cs_surfaceEquipment surfaceEquipmentField;
        
        private short numDerricksField;
        
        private bool numDerricksFieldSpecified;
        
        private DerrickType typeDerrickField;
        
        private bool typeDerrickFieldSpecified;
        
        private forceMeasure ratingDerrickField;
        
        private lengthMeasure htDerrickField;
        
        private forceMeasure ratingHkldField;
        
        private velocityMeasure capWindDerrickField;
        
        private forceMeasure wtBlockField;
        
        private forceMeasure ratingBlockField;
        
        private short numBlockLinesField;
        
        private bool numBlockLinesFieldSpecified;
        
        private string typeHookField;
        
        private forceMeasure ratingHookField;
        
        private lengthMeasure sizeDrillLineField;
        
        private DrawWorksType typeDrawWorksField;
        
        private bool typeDrawWorksFieldSpecified;
        
        private powerMeasure powerDrawWorksField;
        
        private forceMeasure ratingDrawWorksField;
        
        private string motorDrawWorksField;
        
        private string descBrakeField;
        
        private string typeSwivelField;
        
        private forceMeasure ratingSwivelField;
        
        private DriveType rotSystemField;
        
        private bool rotSystemFieldSpecified;
        
        private string descRotSystemField;
        
        private momentOfForceMeasure ratingTqRotSysField;
        
        private lengthMeasure rotSizeOpeningField;
        
        private forceMeasure ratingRotSystemField;
        
        private string scrSystemField;
        
        private string pipeHandlingSystemField;
        
        private volumeMeasure capBulkMudField;
        
        private volumeMeasure capLiquidMudField;
        
        private volumeMeasure capDrillWaterField;
        
        private volumeMeasure capPotableWaterField;
        
        private volumeMeasure capFuelField;
        
        private volumeMeasure capBulkCementField;
        
        private string mainEngineField;
        
        private string generatorField;
        
        private string cementUnitField;
        
        private short numBunksField;
        
        private bool numBunksFieldSpecified;
        
        private short bunksPerRoomField;
        
        private bool bunksPerRoomFieldSpecified;
        
        private short numCranesField;
        
        private bool numCranesFieldSpecified;
        
        private short numAnchField;
        
        private bool numAnchFieldSpecified;
        
        private string moorTypeField;
        
        private short numGuideTensField;
        
        private bool numGuideTensFieldSpecified;
        
        private short numRiserTensField;
        
        private bool numRiserTensFieldSpecified;
        
        private forceMeasure varDeckLdMxField;
        
        private forceMeasure vdlStormField;
        
        private short numThrustersField;
        
        private bool numThrustersFieldSpecified;
        
        private bool azimuthingField;
        
        private bool azimuthingFieldSpecified;
        
        private forceMeasure motionCompensationMnField;
        
        private forceMeasure motionCompensationMxField;
        
        private lengthMeasure strokeMotionCompensationField;
        
        private planeAngleMeasure riserAngleLimitField;
        
        private lengthMeasure heaveMxField;
        
        private string gantryField;
        
        private string flaresField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidWellboreField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore that contains the rig.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore that contains the rig.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWellbore", DataType="nameString")]
        public string nameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the rig.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the rig.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Contractor/owner.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Contractor/owner.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("owner", DataType="str32")]
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rig type.</summary>
        [System.ComponentModel.DescriptionAttribute("Rig type.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeRig", DataType="RigType")]
        public RigType typeRig {
            get {
                return this.typeRigField;
            }
            set {
                this.typeRigField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeRigSpecified {
            get {
                return this.typeRigFieldSpecified;
            }
            set {
                this.typeRigFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturer / supplier of the item.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturer / supplier of the item.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("manufacturer", DataType="nameString")]
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Year entered service (CCYY).</summary>
        [System.Xml.Serialization.XmlElementAttribute(DataType="gYear")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+")]
        [System.ComponentModel.DescriptionAttribute("Year entered service (CCYY).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("yearEntService", DataType="calendarYear")]
        public string yearEntService {
            get {
                return this.yearEntServiceField;
            }
            set {
                this.yearEntServiceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rig classification.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Rig classification.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("classRig", DataType="str32")]
        public string classRig {
            get {
                return this.classRigField;
            }
            set {
                this.classRigField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rig approvals/certification.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Rig approvals/certification.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("approvals", DataType="nameString")]
        public string approvals {
            get {
                return this.approvalsField;
            }
            set {
                this.approvalsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rig registration location.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Rig registration location.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("registration", DataType="str32")]
        public string registration {
            get {
                return this.registrationField;
            }
            set {
                this.registrationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rig telephone number.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Rig telephone number.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("telNumber", DataType="str32")]
        public string telNumber {
            get {
                return this.telNumberField;
            }
            set {
                this.telNumberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rig fax number.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Rig fax number.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("faxNumber", DataType="str32")]
        public string faxNumber {
            get {
                return this.faxNumberField;
            }
            set {
                this.faxNumberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rig Email address.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Rig Email address.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("emailAddress", DataType="nameString")]
        public string emailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of contact person.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of contact person.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameContact", DataType="nameString")]
        public string nameContact {
            get {
                return this.nameContactField;
            }
            set {
                this.nameContactField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum hole depth rating for the rig.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum hole depth rating for the rig.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ratingDrillDepth", DataType="lengthMeasure")]
        public lengthMeasure ratingDrillDepth {
            get {
                return this.ratingDrillDepthField;
            }
            set {
                this.ratingDrillDepthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Working water depth capability of rig.</summary>
        [System.ComponentModel.DescriptionAttribute("Working water depth capability of rig.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ratingWaterDepth", DataType="lengthMeasure")]
        public lengthMeasure ratingWaterDepth {
            get {
                return this.ratingWaterDepthField;
            }
            set {
                this.ratingWaterDepthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Flag to indicate that rig is an offshore rig (Drill Ship, Semi, Jack-up, Platform, TADU).   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate that rig is an offshore rig (Drill Ship, Semi, Jack-up, Platform" +
            ", TADU).   Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("isOffshore", DataType="logicalBoolean")]
        public bool isOffshore {
            get {
                return this.isOffshoreField;
            }
            set {
                this.isOffshoreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isOffshoreSpecified {
            get {
                return this.isOffshoreFieldSpecified;
            }
            set {
                this.isOffshoreFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Air gap from Rig Floor to ground or mean sea level depending on location.</summary>
        [System.ComponentModel.DescriptionAttribute("Air gap from Rig Floor to ground or mean sea level depending on location.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("airGap", DataType="lengthMeasure")]
        public lengthMeasure airGap {
            get {
                return this.airGapField;
            }
            set {
                this.airGapField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time rig operations started, or date and time object created.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time rig operations started, or date and time object created.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStartOp", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStartOp {
            get {
                return this.dTimStartOpField;
            }
            set {
                this.dTimStartOpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimStartOpSpecified {
            get {
                return this.dTimStartOpFieldSpecified;
            }
            set {
                this.dTimStartOpFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time rig operations ended (May be NULL for active rig).</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time rig operations ended (May be NULL for active rig).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimEndOp", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimEndOp {
            get {
                return this.dTimEndOpField;
            }
            set {
                this.dTimEndOpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimEndOpSpecified {
            get {
                return this.dTimEndOpFieldSpecified;
            }
            set {
                this.dTimEndOpFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Blow out preventer description and components.</summary>
        [System.ComponentModel.DescriptionAttribute("Blow out preventer description and components.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bop", DataType="cs_bop")]
        public cs_bop bop {
            get {
                return this.bopField;
            }
            set {
                this.bopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pit equipment for the rig.</summary>
        [System.Xml.Serialization.XmlElementAttribute("pit")]
        [System.ComponentModel.DescriptionAttribute("Pit equipment for the rig.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pit", DataType="cs_pit")]
        public cs_pit[] pit {
            get {
                return this.pitField;
            }
            set {
                this.pitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Drilling fluid (mud/cement) pumping units for the rig.</summary>
        [System.Xml.Serialization.XmlElementAttribute("pump")]
        [System.ComponentModel.DescriptionAttribute("Drilling fluid (mud/cement) pumping units for the rig.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pump", DataType="cs_pump")]
        public cs_pump[] pump {
            get {
                return this.pumpField;
            }
            set {
                this.pumpField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud cleaning shaker equipment for the rig.</summary>
        [System.Xml.Serialization.XmlElementAttribute("shaker")]
        [System.ComponentModel.DescriptionAttribute("Mud cleaning shaker equipment for the rig.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("shaker", DataType="cs_shaker")]
        public cs_shaker[] shaker {
            get {
                return this.shakerField;
            }
            set {
                this.shakerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud cleaning centrifuge equipment for the rig.</summary>
        [System.Xml.Serialization.XmlElementAttribute("centrifuge")]
        [System.ComponentModel.DescriptionAttribute("Mud cleaning centrifuge equipment for the rig.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("centrifuge", DataType="cs_centrifuge")]
        public cs_centrifuge[] centrifuge {
            get {
                return this.centrifugeField;
            }
            set {
                this.centrifugeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud cleaning hydrocyclone equipment for the rig.</summary>
        [System.Xml.Serialization.XmlElementAttribute("hydrocyclone")]
        [System.ComponentModel.DescriptionAttribute("Mud cleaning hydrocyclone equipment for the rig.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("hydrocyclone", DataType="cs_hydrocyclone")]
        public cs_hydrocyclone[] hydrocyclone {
            get {
                return this.hydrocycloneField;
            }
            set {
                this.hydrocycloneField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mud de-gasser equipment for the rig.</summary>
        [System.Xml.Serialization.XmlElementAttribute("degasser")]
        [System.ComponentModel.DescriptionAttribute("Mud de-gasser equipment for the rig.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("degasser", DataType="cs_degasser")]
        public cs_degasser[] degasser {
            get {
                return this.degasserField;
            }
            set {
                this.degasserField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing specific equipment configuration.</summary>
        [System.ComponentModel.DescriptionAttribute("Coiled tubing specific equipment configuration.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("surfaceEquipment", DataType="cs_surfaceEquipment")]
        public cs_surfaceEquipment surfaceEquipment {
            get {
                return this.surfaceEquipmentField;
            }
            set {
                this.surfaceEquipmentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of derricks on the rig.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of derricks on the rig.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numDerricks", DataType="nonNegativeCount")]
        public short numDerricks {
            get {
                return this.numDerricksField;
            }
            set {
                this.numDerricksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numDerricksSpecified {
            get {
                return this.numDerricksFieldSpecified;
            }
            set {
                this.numDerricksFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Derrick type.</summary>
        [System.ComponentModel.DescriptionAttribute("Derrick type.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeDerrick", DataType="DerrickType")]
        public DerrickType typeDerrick {
            get {
                return this.typeDerrickField;
            }
            set {
                this.typeDerrickField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeDerrickSpecified {
            get {
                return this.typeDerrickFieldSpecified;
            }
            set {
                this.typeDerrickFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum support load applied to derrick structure.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum support load applied to derrick structure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ratingDerrick", DataType="forceMeasure")]
        public forceMeasure ratingDerrick {
            get {
                return this.ratingDerrickField;
            }
            set {
                this.ratingDerrickField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Height of derrick.</summary>
        [System.ComponentModel.DescriptionAttribute("Height of derrick.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("htDerrick", DataType="lengthMeasure")]
        public lengthMeasure htDerrick {
            get {
                return this.htDerrickField;
            }
            set {
                this.htDerrickField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum hookload rating.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum hookload rating.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ratingHkld", DataType="forceMeasure")]
        public forceMeasure ratingHkld {
            get {
                return this.ratingHkldField;
            }
            set {
                this.ratingHkldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Derrick wind capacity.</summary>
        [System.ComponentModel.DescriptionAttribute("Derrick wind capacity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("capWindDerrick", DataType="velocityMeasure")]
        public velocityMeasure capWindDerrick {
            get {
                return this.capWindDerrickField;
            }
            set {
                this.capWindDerrickField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Block weight.</summary>
        [System.ComponentModel.DescriptionAttribute("Block weight.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wtBlock", DataType="forceMeasure")]
        public forceMeasure wtBlock {
            get {
                return this.wtBlockField;
            }
            set {
                this.wtBlockField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Weight rating of the travelling block.</summary>
        [System.ComponentModel.DescriptionAttribute("Weight rating of the travelling block.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ratingBlock", DataType="forceMeasure")]
        public forceMeasure ratingBlock {
            get {
                return this.ratingBlockField;
            }
            set {
                this.ratingBlockField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of block lines.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of block lines.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numBlockLines", DataType="nonNegativeCount")]
        public short numBlockLines {
            get {
                return this.numBlockLinesField;
            }
            set {
                this.numBlockLinesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numBlockLinesSpecified {
            get {
                return this.numBlockLinesFieldSpecified;
            }
            set {
                this.numBlockLinesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of hook.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Type of hook.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeHook", DataType="str32")]
        public string typeHook {
            get {
                return this.typeHookField;
            }
            set {
                this.typeHookField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Weight rating of the hook.</summary>
        [System.ComponentModel.DescriptionAttribute("Weight rating of the hook.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ratingHook", DataType="forceMeasure")]
        public forceMeasure ratingHook {
            get {
                return this.ratingHookField;
            }
            set {
                this.ratingHookField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Drill line diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Drill line diameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sizeDrillLine", DataType="lengthMeasure")]
        public lengthMeasure sizeDrillLine {
            get {
                return this.sizeDrillLineField;
            }
            set {
                this.sizeDrillLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Draw-works type.</summary>
        [System.ComponentModel.DescriptionAttribute("Draw-works type.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeDrawWorks", DataType="DrawWorksType")]
        public DrawWorksType typeDrawWorks {
            get {
                return this.typeDrawWorksField;
            }
            set {
                this.typeDrawWorksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeDrawWorksSpecified {
            get {
                return this.typeDrawWorksFieldSpecified;
            }
            set {
                this.typeDrawWorksFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Draw works horse power.</summary>
        [System.ComponentModel.DescriptionAttribute("Draw works horse power.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("powerDrawWorks", DataType="powerMeasure")]
        public powerMeasure powerDrawWorks {
            get {
                return this.powerDrawWorksField;
            }
            set {
                this.powerDrawWorksField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Weight rating of the drawworks.</summary>
        [System.ComponentModel.DescriptionAttribute("Weight rating of the drawworks.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ratingDrawWorks", DataType="forceMeasure")]
        public forceMeasure ratingDrawWorks {
            get {
                return this.ratingDrawWorksField;
            }
            set {
                this.ratingDrawWorksField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of the drawworks motor.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Description of the drawworks motor.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("motorDrawWorks", DataType="str32")]
        public string motorDrawWorks {
            get {
                return this.motorDrawWorksField;
            }
            set {
                this.motorDrawWorksField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rig brake description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Rig brake description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("descBrake", DataType="str32")]
        public string descBrake {
            get {
                return this.descBrakeField;
            }
            set {
                this.descBrakeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of Swivel.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Type of Swivel.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeSwivel", DataType="str32")]
        public string typeSwivel {
            get {
                return this.typeSwivelField;
            }
            set {
                this.typeSwivelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum swivel rating.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum swivel rating.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ratingSwivel", DataType="forceMeasure")]
        public forceMeasure ratingSwivel {
            get {
                return this.ratingSwivelField;
            }
            set {
                this.ratingSwivelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Work string drive type.</summary>
        [System.ComponentModel.DescriptionAttribute("Work string drive type.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rotSystem", DataType="DriveType")]
        public DriveType rotSystem {
            get {
                return this.rotSystemField;
            }
            set {
                this.rotSystemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rotSystemSpecified {
            get {
                return this.rotSystemFieldSpecified;
            }
            set {
                this.rotSystemFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of rotating system.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Description of rotating system.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("descRotSystem", DataType="str32")]
        public string descRotSystem {
            get {
                return this.descRotSystemField;
            }
            set {
                this.descRotSystemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Work string rotational torque rating.</summary>
        [System.ComponentModel.DescriptionAttribute("Work string rotational torque rating.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ratingTqRotSys", DataType="momentOfForceMeasure")]
        public momentOfForceMeasure ratingTqRotSys {
            get {
                return this.ratingTqRotSysField;
            }
            set {
                this.ratingTqRotSysField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rotary size opening.</summary>
        [System.ComponentModel.DescriptionAttribute("Rotary size opening.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rotSizeOpening", DataType="lengthMeasure")]
        public lengthMeasure rotSizeOpening {
            get {
                return this.rotSizeOpeningField;
            }
            set {
                this.rotSizeOpeningField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Work string rotational torque rating.</summary>
        [System.ComponentModel.DescriptionAttribute("Work string rotational torque rating.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ratingRotSystem", DataType="forceMeasure")]
        public forceMeasure ratingRotSystem {
            get {
                return this.ratingRotSystemField;
            }
            set {
                this.ratingRotSystemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of slow circulation rates system.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Description of slow circulation rates system.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("scrSystem", DataType="str32")]
        public string scrSystem {
            get {
                return this.scrSystemField;
            }
            set {
                this.scrSystemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of pipe handling system.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Name of pipe handling system.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pipeHandlingSystem", DataType="str32")]
        public string pipeHandlingSystem {
            get {
                return this.pipeHandlingSystemField;
            }
            set {
                this.pipeHandlingSystemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bulk/dry mud storage capacity.</summary>
        [System.ComponentModel.DescriptionAttribute("Bulk/dry mud storage capacity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("capBulkMud", DataType="volumeMeasure")]
        public volumeMeasure capBulkMud {
            get {
                return this.capBulkMudField;
            }
            set {
                this.capBulkMudField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Liquid mud storage capacity.</summary>
        [System.ComponentModel.DescriptionAttribute("Liquid mud storage capacity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("capLiquidMud", DataType="volumeMeasure")]
        public volumeMeasure capLiquidMud {
            get {
                return this.capLiquidMudField;
            }
            set {
                this.capLiquidMudField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Drill water capacity.</summary>
        [System.ComponentModel.DescriptionAttribute("Drill water capacity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("capDrillWater", DataType="volumeMeasure")]
        public volumeMeasure capDrillWater {
            get {
                return this.capDrillWaterField;
            }
            set {
                this.capDrillWaterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Potable water capacity.</summary>
        [System.ComponentModel.DescriptionAttribute("Potable water capacity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("capPotableWater", DataType="volumeMeasure")]
        public volumeMeasure capPotableWater {
            get {
                return this.capPotableWaterField;
            }
            set {
                this.capPotableWaterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fuel capacity.</summary>
        [System.ComponentModel.DescriptionAttribute("Fuel capacity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("capFuel", DataType="volumeMeasure")]
        public volumeMeasure capFuel {
            get {
                return this.capFuelField;
            }
            set {
                this.capFuelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Capacity of builk cement.</summary>
        [System.ComponentModel.DescriptionAttribute("Capacity of builk cement.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("capBulkCement", DataType="volumeMeasure")]
        public volumeMeasure capBulkCement {
            get {
                return this.capBulkCementField;
            }
            set {
                this.capBulkCementField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Power system.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Power system.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mainEngine", DataType="nameString")]
        public string mainEngine {
            get {
                return this.mainEngineField;
            }
            set {
                this.mainEngineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of the electrical power generating system.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Description of the electrical power generating system.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("generator", DataType="shortDescriptionString")]
        public string generator {
            get {
                return this.generatorField;
            }
            set {
                this.generatorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of cement unit on the rig.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Name of cement unit on the rig.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cementUnit", DataType="str32")]
        public string cementUnit {
            get {
                return this.cementUnitField;
            }
            set {
                this.cementUnitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of beds available on the rig.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of beds available on the rig.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numBunks", DataType="nonNegativeCount")]
        public short numBunks {
            get {
                return this.numBunksField;
            }
            set {
                this.numBunksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numBunksSpecified {
            get {
                return this.numBunksFieldSpecified;
            }
            set {
                this.numBunksFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of bunks per room.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of bunks per room.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bunksPerRoom", DataType="nonNegativeCount")]
        public short bunksPerRoom {
            get {
                return this.bunksPerRoomField;
            }
            set {
                this.bunksPerRoomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bunksPerRoomSpecified {
            get {
                return this.bunksPerRoomFieldSpecified;
            }
            set {
                this.bunksPerRoomFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of cranes on the rig.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of cranes on the rig.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numCranes", DataType="nonNegativeCount")]
        public short numCranes {
            get {
                return this.numCranesField;
            }
            set {
                this.numCranesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numCranesSpecified {
            get {
                return this.numCranesFieldSpecified;
            }
            set {
                this.numCranesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of anchors.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of anchors.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numAnch", DataType="nonNegativeCount")]
        public short numAnch {
            get {
                return this.numAnchField;
            }
            set {
                this.numAnchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numAnchSpecified {
            get {
                return this.numAnchFieldSpecified;
            }
            set {
                this.numAnchFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Mooring type.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Mooring type.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("moorType", DataType="str32")]
        public string moorType {
            get {
                return this.moorTypeField;
            }
            set {
                this.moorTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of guideline tensioners.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of guideline tensioners.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numGuideTens", DataType="nonNegativeCount")]
        public short numGuideTens {
            get {
                return this.numGuideTensField;
            }
            set {
                this.numGuideTensField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numGuideTensSpecified {
            get {
                return this.numGuideTensFieldSpecified;
            }
            set {
                this.numGuideTensFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of riser tensioners.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of riser tensioners.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numRiserTens", DataType="nonNegativeCount")]
        public short numRiserTens {
            get {
                return this.numRiserTensField;
            }
            set {
                this.numRiserTensField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numRiserTensSpecified {
            get {
                return this.numRiserTensFieldSpecified;
            }
            set {
                this.numRiserTensFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Variable deck load maximum (offshore rigs only).</summary>
        [System.ComponentModel.DescriptionAttribute("Variable deck load maximum (offshore rigs only).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("varDeckLdMx", DataType="forceMeasure")]
        public forceMeasure varDeckLdMx {
            get {
                return this.varDeckLdMxField;
            }
            set {
                this.varDeckLdMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Variable deck load storm rating (offshore rigs only).</summary>
        [System.ComponentModel.DescriptionAttribute("Variable deck load storm rating (offshore rigs only).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("vdlStorm", DataType="forceMeasure")]
        public forceMeasure vdlStorm {
            get {
                return this.vdlStormField;
            }
            set {
                this.vdlStormField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of thrusters.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of thrusters.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numThrusters", DataType="nonNegativeCount")]
        public short numThrusters {
            get {
                return this.numThrustersField;
            }
            set {
                this.numThrustersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numThrustersSpecified {
            get {
                return this.numThrustersFieldSpecified;
            }
            set {
                this.numThrustersFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Are the thrusters azimuth.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Are the thrusters azimuth.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("azimuthing", DataType="logicalBoolean")]
        public bool azimuthing {
            get {
                return this.azimuthingField;
            }
            set {
                this.azimuthingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool azimuthingSpecified {
            get {
                return this.azimuthingFieldSpecified;
            }
            set {
                this.azimuthingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum motion compensation.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum motion compensation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("motionCompensationMn", DataType="forceMeasure")]
        public forceMeasure motionCompensationMn {
            get {
                return this.motionCompensationMnField;
            }
            set {
                this.motionCompensationMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum motion compensation.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum motion compensation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("motionCompensationMx", DataType="forceMeasure")]
        public forceMeasure motionCompensationMx {
            get {
                return this.motionCompensationMxField;
            }
            set {
                this.motionCompensationMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of motion compensation provided by equipment.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of motion compensation provided by equipment.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("strokeMotionCompensation", DataType="lengthMeasure")]
        public lengthMeasure strokeMotionCompensation {
            get {
                return this.strokeMotionCompensationField;
            }
            set {
                this.strokeMotionCompensationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Riser angle limit.</summary>
        [System.ComponentModel.DescriptionAttribute("Riser angle limit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("riserAngleLimit", DataType="planeAngleMeasure")]
        public planeAngleMeasure riserAngleLimit {
            get {
                return this.riserAngleLimitField;
            }
            set {
                this.riserAngleLimitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum allowable heave.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum allowable heave.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("heaveMx", DataType="lengthMeasure")]
        public lengthMeasure heaveMx {
            get {
                return this.heaveMxField;
            }
            set {
                this.heaveMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of gantry.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Description of gantry.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gantry", DataType="shortDescriptionString")]
        public string gantry {
            get {
                return this.gantryField;
            }
            set {
                this.gantryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of flare.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Description of flare.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flares", DataType="shortDescriptionString")]
        public string flares {
            get {
                return this.flaresField;
            }
            set {
                this.flaresField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the wellbore. This uniquely represents  the wellbore referenced by the (possibly non-unique) nameWellbore.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the wellbore. This uniquely represents  the wellbore refere" +
            "nced by the (possibly non-unique) nameWellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWellbore", DataType="uidString")]
        public string uidWellbore {
            get {
                return this.uidWellboreField;
            }
            set {
                this.uidWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_bop {
        
        private string manufacturerField;
        
        private string modelField;
        
        private Energistics.DataAccess.Timestamp dTimInstallField;
        
        private bool dTimInstallFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimRemoveField;
        
        private bool dTimRemoveFieldSpecified;
        
        private cs_nameTag[] nameTagField;
        
        private string typeConnectionBopField;
        
        private lengthMeasure sizeConnectionBopField;
        
        private pressureMeasure presBopRatingField;
        
        private lengthMeasure sizeBopSysField;
        
        private bool rotBopField;
        
        private bool rotBopFieldSpecified;
        
        private lengthMeasure idBoosterLineField;
        
        private lengthMeasure odBoosterLineField;
        
        private lengthMeasure lenBoosterLineField;
        
        private lengthMeasure idSurfLineField;
        
        private lengthMeasure odSurfLineField;
        
        private lengthMeasure lenSurfLineField;
        
        private lengthMeasure idChkLineField;
        
        private lengthMeasure odChkLineField;
        
        private lengthMeasure lenChkLineField;
        
        private lengthMeasure idKillLineField;
        
        private lengthMeasure odKillLineField;
        
        private lengthMeasure lenKillLineField;
        
        private cs_bopComponent[] bopComponentField;
        
        private string typeDiverterField;
        
        private lengthMeasure diaDiverterField;
        
        private pressureMeasure presWorkDiverterField;
        
        private string accumulatorField;
        
        private volumeMeasure capAccFluidField;
        
        private pressureMeasure presAccPreChargeField;
        
        private volumeMeasure volAccPreChargeField;
        
        private pressureMeasure presAccOpRatingField;
        
        private string typeControlManifoldField;
        
        private string descControlManifoldField;
        
        private string typeChokeManifoldField;
        
        private pressureMeasure presChokeManifoldField;
        
        /// <remarks/>
        /// <summary>Manufacturer / supplier of the item.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturer / supplier of the item.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("manufacturer", DataType="nameString")]
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturers designated model.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Manufacturers designated model.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("model", DataType="str32")]
        public string model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time of installation.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time of installation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimInstall", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimInstall {
            get {
                return this.dTimInstallField;
            }
            set {
                this.dTimInstallField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimInstallSpecified {
            get {
                return this.dTimInstallFieldSpecified;
            }
            set {
                this.dTimInstallFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Removal Date.</summary>
        [System.ComponentModel.DescriptionAttribute("Removal Date.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimRemove", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimRemove {
            get {
                return this.dTimRemoveField;
            }
            set {
                this.dTimRemoveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimRemoveSpecified {
            get {
                return this.dTimRemoveFieldSpecified;
            }
            set {
                this.dTimRemoveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An identification tag for the blow out preventer. A serial number is a type of identification tag however some tags contain many pieces of information. This structure just identifies the tag and does not describe the contents.</summary>
        [System.Xml.Serialization.XmlElementAttribute("nameTag")]
        [System.ComponentModel.DescriptionAttribute("An identification tag for the blow out preventer. A serial number is a type of id" +
            "entification tag however some tags contain many pieces of information. This stru" +
            "cture just identifies the tag and does not describe the contents.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameTag", DataType="cs_nameTag")]
        public cs_nameTag[] nameTag {
            get {
                return this.nameTagField;
            }
            set {
                this.nameTagField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of connection to Blow Out Preventer.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Type of connection to Blow Out Preventer.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeConnectionBop", DataType="str32")]
        public string typeConnectionBop {
            get {
                return this.typeConnectionBopField;
            }
            set {
                this.typeConnectionBopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Size of connection to Blow Out Preventer.</summary>
        [System.ComponentModel.DescriptionAttribute("Size of connection to Blow Out Preventer.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sizeConnectionBop", DataType="lengthMeasure")]
        public lengthMeasure sizeConnectionBop {
            get {
                return this.sizeConnectionBopField;
            }
            set {
                this.sizeConnectionBopField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum Pressure rating of Blow Out Preventer.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Maximum Pressure rating of Blow Out Preventer.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presBopRating", DataType="pressureMeasure")]
        public pressureMeasure presBopRating {
            get {
                return this.presBopRatingField;
            }
            set {
                this.presBopRatingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum tubulars passable through Blow Out Preventer.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Maximum tubulars passable through Blow Out Preventer.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sizeBopSys", DataType="lengthMeasure")]
        public lengthMeasure sizeBopSys {
            get {
                return this.sizeBopSysField;
            }
            set {
                this.sizeBopSysField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is this a Rotating Blow Out Preventer? Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Is this a Rotating Blow Out Preventer? Values are \"true\" (or \"1\") and \"false\" (or" +
            " \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rotBop", DataType="logicalBoolean")]
        public bool rotBop {
            get {
                return this.rotBopField;
            }
            set {
                this.rotBopField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rotBopSpecified {
            get {
                return this.rotBopFieldSpecified;
            }
            set {
                this.rotBopFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner diameter of Booster Line.</summary>
        [System.ComponentModel.DescriptionAttribute("Inner diameter of Booster Line.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("idBoosterLine", DataType="lengthMeasure")]
        public lengthMeasure idBoosterLine {
            get {
                return this.idBoosterLineField;
            }
            set {
                this.idBoosterLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Outer diameter of Booster Line.</summary>
        [System.ComponentModel.DescriptionAttribute("Outer diameter of Booster Line.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("odBoosterLine", DataType="lengthMeasure")]
        public lengthMeasure odBoosterLine {
            get {
                return this.odBoosterLineField;
            }
            set {
                this.odBoosterLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of Booster Line along riser.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of Booster Line along riser.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenBoosterLine", DataType="lengthMeasure")]
        public lengthMeasure lenBoosterLine {
            get {
                return this.lenBoosterLineField;
            }
            set {
                this.lenBoosterLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner diameter of Surface Line.</summary>
        [System.ComponentModel.DescriptionAttribute("Inner diameter of Surface Line.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("idSurfLine", DataType="lengthMeasure")]
        public lengthMeasure idSurfLine {
            get {
                return this.idSurfLineField;
            }
            set {
                this.idSurfLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Outer diameter of Surface Line.</summary>
        [System.ComponentModel.DescriptionAttribute("Outer diameter of Surface Line.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("odSurfLine", DataType="lengthMeasure")]
        public lengthMeasure odSurfLine {
            get {
                return this.odSurfLineField;
            }
            set {
                this.odSurfLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of Choke Line along riser.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of Choke Line along riser.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenSurfLine", DataType="lengthMeasure")]
        public lengthMeasure lenSurfLine {
            get {
                return this.lenSurfLineField;
            }
            set {
                this.lenSurfLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner diameter of Choke Line.</summary>
        [System.ComponentModel.DescriptionAttribute("Inner diameter of Choke Line.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("idChkLine", DataType="lengthMeasure")]
        public lengthMeasure idChkLine {
            get {
                return this.idChkLineField;
            }
            set {
                this.idChkLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Outer diameter of Choke Line.</summary>
        [System.ComponentModel.DescriptionAttribute("Outer diameter of Choke Line.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("odChkLine", DataType="lengthMeasure")]
        public lengthMeasure odChkLine {
            get {
                return this.odChkLineField;
            }
            set {
                this.odChkLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of Choke Line along riser.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of Choke Line along riser.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenChkLine", DataType="lengthMeasure")]
        public lengthMeasure lenChkLine {
            get {
                return this.lenChkLineField;
            }
            set {
                this.lenChkLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner diameter of Kill Line.</summary>
        [System.ComponentModel.DescriptionAttribute("Inner diameter of Kill Line.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("idKillLine", DataType="lengthMeasure")]
        public lengthMeasure idKillLine {
            get {
                return this.idKillLineField;
            }
            set {
                this.idKillLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Outer diameter of Kill Line.</summary>
        [System.ComponentModel.DescriptionAttribute("Outer diameter of Kill Line.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("odKillLine", DataType="lengthMeasure")]
        public lengthMeasure odKillLine {
            get {
                return this.odKillLineField;
            }
            set {
                this.odKillLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of Kill Line.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of Kill Line.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenKillLine", DataType="lengthMeasure")]
        public lengthMeasure lenKillLine {
            get {
                return this.lenKillLineField;
            }
            set {
                this.lenKillLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Container element for Blow Out Preventer component schema elements.</summary>
        [System.Xml.Serialization.XmlElementAttribute("bopComponent")]
        [System.ComponentModel.DescriptionAttribute("Container element for Blow Out Preventer component schema elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bopComponent", DataType="cs_bopComponent")]
        public cs_bopComponent[] bopComponent {
            get {
                return this.bopComponentField;
            }
            set {
                this.bopComponentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Diverter description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Diverter description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeDiverter", DataType="shortDescriptionString")]
        public string typeDiverter {
            get {
                return this.typeDiverterField;
            }
            set {
                this.typeDiverterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Diameter of diverter.</summary>
        [System.ComponentModel.DescriptionAttribute("Diameter of diverter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("diaDiverter", DataType="lengthMeasure")]
        public lengthMeasure diaDiverter {
            get {
                return this.diaDiverterField;
            }
            set {
                this.diaDiverterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Working rating pressure of the component.</summary>
        [System.ComponentModel.DescriptionAttribute("Working rating pressure of the component.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presWorkDiverter", DataType="pressureMeasure")]
        public pressureMeasure presWorkDiverter {
            get {
                return this.presWorkDiverterField;
            }
            set {
                this.presWorkDiverterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of accumulator/description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Type of accumulator/description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("accumulator", DataType="nameString")]
        public string accumulator {
            get {
                return this.accumulatorField;
            }
            set {
                this.accumulatorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Accumulator fluid capacity.</summary>
        [System.ComponentModel.DescriptionAttribute("Accumulator fluid capacity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("capAccFluid", DataType="volumeMeasure")]
        public volumeMeasure capAccFluid {
            get {
                return this.capAccFluidField;
            }
            set {
                this.capAccFluidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Accumulator pre-charge pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Accumulator pre-charge pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presAccPreCharge", DataType="pressureMeasure")]
        public pressureMeasure presAccPreCharge {
            get {
                return this.presAccPreChargeField;
            }
            set {
                this.presAccPreChargeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Accumulator pre-charge volume</summary>
        [System.ComponentModel.DescriptionAttribute("Accumulator pre-charge volume")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volAccPreCharge", DataType="volumeMeasure")]
        public volumeMeasure volAccPreCharge {
            get {
                return this.volAccPreChargeField;
            }
            set {
                this.volAccPreChargeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Accumulator operating pressure rating.</summary>
        [System.ComponentModel.DescriptionAttribute("Accumulator operating pressure rating.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presAccOpRating", DataType="pressureMeasure")]
        public pressureMeasure presAccOpRating {
            get {
                return this.presAccOpRatingField;
            }
            set {
                this.presAccOpRatingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Blow Out Preventer Control System.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Blow Out Preventer Control System.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeControlManifold", DataType="nameString")]
        public string typeControlManifold {
            get {
                return this.typeControlManifoldField;
            }
            set {
                this.typeControlManifoldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of control system.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("Description of control system.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("descControlManifold", DataType="descriptionString")]
        public string descControlManifold {
            get {
                return this.descControlManifoldField;
            }
            set {
                this.descControlManifoldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of choke manifold.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Type of choke manifold.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeChokeManifold", DataType="nameString")]
        public string typeChokeManifold {
            get {
                return this.typeChokeManifoldField;
            }
            set {
                this.typeChokeManifoldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Choke manifold pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Choke manifold pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presChokeManifold", DataType="pressureMeasure")]
        public pressureMeasure presChokeManifold {
            get {
                return this.presChokeManifoldField;
            }
            set {
                this.presChokeManifoldField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_bopComponent {
        
        private BopType typeBopCompField;
        
        private bool typeBopCompFieldSpecified;
        
        private string descCompField;
        
        private lengthMeasure idPassThruField;
        
        private pressureMeasure presWorkField;
        
        private lengthMeasure diaCloseMnField;
        
        private lengthMeasure diaCloseMxField;
        
        private string nomenclatureField;
        
        private bool isVariableField;
        
        private bool isVariableFieldSpecified;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Type of ram/preventer.</summary>
        [System.ComponentModel.DescriptionAttribute("Type of ram/preventer.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeBopComp", DataType="BopType")]
        public BopType typeBopComp {
            get {
                return this.typeBopCompField;
            }
            set {
                this.typeBopCompField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeBopCompSpecified {
            get {
                return this.typeBopCompFieldSpecified;
            }
            set {
                this.typeBopCompFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of component.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Description of component.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("descComp", DataType="shortDescriptionString")]
        public string descComp {
            get {
                return this.descCompField;
            }
            set {
                this.descCompField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner diameter that tubulars can pass thru.</summary>
        [System.ComponentModel.DescriptionAttribute("Inner diameter that tubulars can pass thru.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("idPassThru", DataType="lengthMeasure")]
        public lengthMeasure idPassThru {
            get {
                return this.idPassThruField;
            }
            set {
                this.idPassThruField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Working rating pressure of the component.</summary>
        [System.ComponentModel.DescriptionAttribute("Working rating pressure of the component.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presWork", DataType="pressureMeasure")]
        public pressureMeasure presWork {
            get {
                return this.presWorkField;
            }
            set {
                this.presWorkField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum diameter of component it will seal.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum diameter of component it will seal.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("diaCloseMn", DataType="lengthMeasure")]
        public lengthMeasure diaCloseMn {
            get {
                return this.diaCloseMnField;
            }
            set {
                this.diaCloseMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum diameter of component it will seal.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum diameter of component it will seal.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("diaCloseMx", DataType="lengthMeasure")]
        public lengthMeasure diaCloseMx {
            get {
                return this.diaCloseMxField;
            }
            set {
                this.diaCloseMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Arrangement nomenclature for the Blow Out Preventer stack (e.g. S, R, A).</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2)]
        [System.ComponentModel.DescriptionAttribute("Arrangement nomenclature for the Blow Out Preventer stack (e.g. S, R, A).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nomenclature", DataType="str2")]
        public string nomenclature {
            get {
                return this.nomenclatureField;
            }
            set {
                this.nomenclatureField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is Ram bore variable or single size? Defaults to false.   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Is Ram bore variable or single size? Defaults to false.   Values are \"true\" (or \"" +
            "1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("isVariable", DataType="logicalBoolean")]
        public bool isVariable {
            get {
                return this.isVariableField;
            }
            set {
                this.isVariableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isVariableSpecified {
            get {
                return this.isVariableFieldSpecified;
            }
            set {
                this.isVariableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_pit {
        
        private short indexField;
        
        private Energistics.DataAccess.Timestamp dTimInstallField;
        
        private bool dTimInstallFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimRemoveField;
        
        private bool dTimRemoveFieldSpecified;
        
        private volumeMeasure capMxField;
        
        private string ownerField;
        
        private PitType typePitField;
        
        private bool typePitFieldSpecified;
        
        private bool isActiveField;
        
        private bool isActiveFieldSpecified;
        
        private cs_nameTag[] nameTagField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Relative pit number of all pits on the rig. One-based.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Relative pit number of all pits on the rig. One-based.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("index", DataType="positiveCount")]
        public short index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time of installation.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time of installation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimInstall", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimInstall {
            get {
                return this.dTimInstallField;
            }
            set {
                this.dTimInstallField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimInstallSpecified {
            get {
                return this.dTimInstallFieldSpecified;
            }
            set {
                this.dTimInstallFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Removal date and time.</summary>
        [System.ComponentModel.DescriptionAttribute("Removal date and time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimRemove", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimRemove {
            get {
                return this.dTimRemoveField;
            }
            set {
                this.dTimRemoveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimRemoveSpecified {
            get {
                return this.dTimRemoveFieldSpecified;
            }
            set {
                this.dTimRemoveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum pit capacity.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Maximum pit capacity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("capMx", DataType="volumeMeasure")]
        public volumeMeasure capMx {
            get {
                return this.capMxField;
            }
            set {
                this.capMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Contractor/owner.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Contractor/owner.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("owner", DataType="str32")]
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of pit.</summary>
        [System.ComponentModel.DescriptionAttribute("The type of pit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typePit", DataType="PitType")]
        public PitType typePit {
            get {
                return this.typePitField;
            }
            set {
                this.typePitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typePitSpecified {
            get {
                return this.typePitFieldSpecified;
            }
            set {
                this.typePitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Flag to indicate if Pit is part of the active system.   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Flag to indicate if Pit is part of the active system.   Values are \"true\" (or \"1\"" +
            ") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("isActive", DataType="logicalBoolean")]
        public bool isActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isActiveSpecified {
            get {
                return this.isActiveFieldSpecified;
            }
            set {
                this.isActiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An identification tag for the pit. A serial number is a type of identification tag however some tags contain many pieces of information. This structure just identifies the tag and does not describe the contents.</summary>
        [System.Xml.Serialization.XmlElementAttribute("nameTag")]
        [System.ComponentModel.DescriptionAttribute("An identification tag for the pit. A serial number is a type of identification ta" +
            "g however some tags contain many pieces of information. This structure just iden" +
            "tifies the tag and does not describe the contents.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameTag", DataType="cs_nameTag")]
        public cs_nameTag[] nameTag {
            get {
                return this.nameTagField;
            }
            set {
                this.nameTagField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_pump {
        
        private short indexField;
        
        private string manufacturerField;
        
        private string modelField;
        
        private Energistics.DataAccess.Timestamp dTimInstallField;
        
        private bool dTimInstallFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimRemoveField;
        
        private bool dTimRemoveFieldSpecified;
        
        private string ownerField;
        
        private PumpType typePumpField;
        
        private bool typePumpFieldSpecified;
        
        private short numCylField;
        
        private bool numCylFieldSpecified;
        
        private lengthMeasure odRodField;
        
        private lengthMeasure idLinerField;
        
        private short pumpActionField;
        
        private bool pumpActionFieldSpecified;
        
        private relativePowerMeasure effField;
        
        private lengthMeasure lenStrokeField;
        
        private pressureMeasure presMxField;
        
        private powerMeasure powHydMxField;
        
        private anglePerTimeMeasure spmMxField;
        
        private volumeMeasure displacementField;
        
        private pressureMeasure presDampField;
        
        private volumeMeasure volDampField;
        
        private powerMeasure powMechMxField;
        
        private cs_nameTag[] nameTagField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Relative pump number. One-based.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Relative pump number. One-based.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("index", DataType="positiveCount")]
        public short index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturer / supplier of the item.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturer / supplier of the item.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("manufacturer", DataType="nameString")]
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturers designated model.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Manufacturers designated model.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("model", DataType="str32")]
        public string model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time of pump installation.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time of pump installation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimInstall", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimInstall {
            get {
                return this.dTimInstallField;
            }
            set {
                this.dTimInstallField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimInstallSpecified {
            get {
                return this.dTimInstallFieldSpecified;
            }
            set {
                this.dTimInstallFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time the pump was removed.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time the pump was removed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimRemove", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimRemove {
            get {
                return this.dTimRemoveField;
            }
            set {
                this.dTimRemoveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimRemoveSpecified {
            get {
                return this.dTimRemoveFieldSpecified;
            }
            set {
                this.dTimRemoveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Contractor/owner.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Contractor/owner.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("owner", DataType="str32")]
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pump type reference list.</summary>
        [System.ComponentModel.DescriptionAttribute("Pump type reference list.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typePump", DataType="PumpType")]
        public PumpType typePump {
            get {
                return this.typePumpField;
            }
            set {
                this.typePumpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typePumpSpecified {
            get {
                return this.typePumpFieldSpecified;
            }
            set {
                this.typePumpFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of cylinders (3=single acting, 2 = double acting)</summary>
        [System.ComponentModel.DescriptionAttribute("Number of cylinders (3=single acting, 2 = double acting)")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numCyl", DataType="positiveCount")]
        public short numCyl {
            get {
                return this.numCylField;
            }
            set {
                this.numCylField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numCylSpecified {
            get {
                return this.numCylFieldSpecified;
            }
            set {
                this.numCylFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rod outer diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Rod outer diameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("odRod", DataType="lengthMeasure")]
        public lengthMeasure odRod {
            get {
                return this.odRodField;
            }
            set {
                this.odRodField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner diameter of the pump liner.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Inner diameter of the pump liner.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("idLiner", DataType="lengthMeasure")]
        public lengthMeasure idLiner {
            get {
                return this.idLinerField;
            }
            set {
                this.idLinerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pump action. 1 = Single acting, 2 = double acting.</summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(1D, 2D)]
        [System.ComponentModel.DescriptionAttribute("Pump action. 1 = Single acting, 2 = double acting.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pumpAction", DataType="pumpActionIntegerCode")]
        public short pumpAction {
            get {
                return this.pumpActionField;
            }
            set {
                this.pumpActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pumpActionSpecified {
            get {
                return this.pumpActionFieldSpecified;
            }
            set {
                this.pumpActionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Efficiency of the pump.</summary>
        [System.ComponentModel.DescriptionAttribute("Efficiency of the pump.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("eff", DataType="relativePowerMeasure")]
        public relativePowerMeasure eff {
            get {
                return this.effField;
            }
            set {
                this.effField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Stroke length.</summary>
        [System.ComponentModel.DescriptionAttribute("Stroke length.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenStroke", DataType="lengthMeasure")]
        public lengthMeasure lenStroke {
            get {
                return this.lenStrokeField;
            }
            set {
                this.lenStrokeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum pump pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum pump pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presMx", DataType="pressureMeasure")]
        public pressureMeasure presMx {
            get {
                return this.presMxField;
            }
            set {
                this.presMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum hydraulics horsepower.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum hydraulics horsepower.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("powHydMx", DataType="powerMeasure")]
        public powerMeasure powHydMx {
            get {
                return this.powHydMxField;
            }
            set {
                this.powHydMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum Speed.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum Speed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("spmMx", DataType="anglePerTimeMeasure")]
        public anglePerTimeMeasure spmMx {
            get {
                return this.spmMxField;
            }
            set {
                this.spmMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pump displacement.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Pump displacement.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("displacement", DataType="volumeMeasure")]
        public volumeMeasure displacement {
            get {
                return this.displacementField;
            }
            set {
                this.displacementField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pulsation dampener pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Pulsation dampener pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presDamp", DataType="pressureMeasure")]
        public pressureMeasure presDamp {
            get {
                return this.presDampField;
            }
            set {
                this.presDampField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pulsation dampener volume.</summary>
        [System.ComponentModel.DescriptionAttribute("Pulsation dampener volume.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("volDamp", DataType="volumeMeasure")]
        public volumeMeasure volDamp {
            get {
                return this.volDampField;
            }
            set {
                this.volDampField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum mechanical power.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum mechanical power.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("powMechMx", DataType="powerMeasure")]
        public powerMeasure powMechMx {
            get {
                return this.powMechMxField;
            }
            set {
                this.powMechMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An identification tag for the pump. A serial number is a type of identification tag however some tags contain many pieces of information. This structure just identifies the tag and does not describe the contents.</summary>
        [System.Xml.Serialization.XmlElementAttribute("nameTag")]
        [System.ComponentModel.DescriptionAttribute("An identification tag for the pump. A serial number is a type of identification t" +
            "ag however some tags contain many pieces of information. This structure just ide" +
            "ntifies the tag and does not describe the contents.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameTag", DataType="cs_nameTag")]
        public cs_nameTag[] nameTag {
            get {
                return this.nameTagField;
            }
            set {
                this.nameTagField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_shaker {
        
        private string nameField;
        
        private string manufacturerField;
        
        private string modelField;
        
        private Energistics.DataAccess.Timestamp dTimInstallField;
        
        private bool dTimInstallFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimRemoveField;
        
        private bool dTimRemoveFieldSpecified;
        
        private string typeField;
        
        private string locationShakerField;
        
        private short numDecksField;
        
        private bool numDecksFieldSpecified;
        
        private short numCascLevelField;
        
        private bool numCascLevelFieldSpecified;
        
        private bool mudCleanerField;
        
        private bool mudCleanerFieldSpecified;
        
        private volumeFlowRateMeasure capFlowField;
        
        private string ownerField;
        
        private lengthMeasure sizeMeshMnField;
        
        private cs_nameTag[] nameTagField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the shaker.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the shaker.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturer / supplier of the item.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturer / supplier of the item.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("manufacturer", DataType="nameString")]
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturers designated model.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Manufacturers designated model.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("model", DataType="str32")]
        public string model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time of installation.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time of installation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimInstall", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimInstall {
            get {
                return this.dTimInstallField;
            }
            set {
                this.dTimInstallField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimInstallSpecified {
            get {
                return this.dTimInstallFieldSpecified;
            }
            set {
                this.dTimInstallFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Removal date and time.</summary>
        [System.ComponentModel.DescriptionAttribute("Removal date and time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimRemove", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimRemove {
            get {
                return this.dTimRemoveField;
            }
            set {
                this.dTimRemoveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimRemoveSpecified {
            get {
                return this.dTimRemoveFieldSpecified;
            }
            set {
                this.dTimRemoveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description for the type of object.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Description for the type of object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("type", DataType="str32")]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Shaker location on rig.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Shaker location on rig.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("locationShaker", DataType="str32")]
        public string locationShaker {
            get {
                return this.locationShakerField;
            }
            set {
                this.locationShakerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of decks.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of decks.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numDecks", DataType="nonNegativeCount")]
        public short numDecks {
            get {
                return this.numDecksField;
            }
            set {
                this.numDecksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numDecksSpecified {
            get {
                return this.numDecksFieldSpecified;
            }
            set {
                this.numDecksFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of cascade levels.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of cascade levels.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numCascLevel", DataType="nonNegativeCount")]
        public short numCascLevel {
            get {
                return this.numCascLevelField;
            }
            set {
                this.numCascLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numCascLevelSpecified {
            get {
                return this.numCascLevelFieldSpecified;
            }
            set {
                this.numCascLevelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is part of mud cleaning assembly as opposed to discrete Shale Shaker.   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Is part of mud cleaning assembly as opposed to discrete Shale Shaker.   Values ar" +
            "e \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mudCleaner", DataType="logicalBoolean")]
        public bool mudCleaner {
            get {
                return this.mudCleanerField;
            }
            set {
                this.mudCleanerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mudCleanerSpecified {
            get {
                return this.mudCleanerFieldSpecified;
            }
            set {
                this.mudCleanerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum pump rate at which the unit will efficiently operate.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum pump rate at which the unit will efficiently operate.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("capFlow", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure capFlow {
            get {
                return this.capFlowField;
            }
            set {
                this.capFlowField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Contractor/owner.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Contractor/owner.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("owner", DataType="str32")]
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum mesh size.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum mesh size.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sizeMeshMn", DataType="lengthMeasure")]
        public lengthMeasure sizeMeshMn {
            get {
                return this.sizeMeshMnField;
            }
            set {
                this.sizeMeshMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An identification tag for the shaker. A serial number is a type of identification tag however some tags contain many pieces of information. This structure just identifies the tag and does not describe the contents.</summary>
        [System.Xml.Serialization.XmlElementAttribute("nameTag")]
        [System.ComponentModel.DescriptionAttribute("An identification tag for the shaker. A serial number is a type of identification" +
            " tag however some tags contain many pieces of information. This structure just i" +
            "dentifies the tag and does not describe the contents.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameTag", DataType="cs_nameTag")]
        public cs_nameTag[] nameTag {
            get {
                return this.nameTagField;
            }
            set {
                this.nameTagField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_centrifuge {
        
        private string manufacturerField;
        
        private string modelField;
        
        private Energistics.DataAccess.Timestamp dTimInstallField;
        
        private bool dTimInstallFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimRemoveField;
        
        private bool dTimRemoveFieldSpecified;
        
        private string typeField;
        
        private volumeFlowRateMeasure capFlowField;
        
        private string ownerField;
        
        private cs_nameTag[] nameTagField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Manufacturer / supplier of the item.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturer / supplier of the item.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("manufacturer", DataType="nameString")]
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturers designated model.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Manufacturers designated model.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("model", DataType="str32")]
        public string model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time of installation.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time of installation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimInstall", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimInstall {
            get {
                return this.dTimInstallField;
            }
            set {
                this.dTimInstallField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimInstallSpecified {
            get {
                return this.dTimInstallFieldSpecified;
            }
            set {
                this.dTimInstallFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Removal date and time.</summary>
        [System.ComponentModel.DescriptionAttribute("Removal date and time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimRemove", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimRemove {
            get {
                return this.dTimRemoveField;
            }
            set {
                this.dTimRemoveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimRemoveSpecified {
            get {
                return this.dTimRemoveFieldSpecified;
            }
            set {
                this.dTimRemoveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description for the type of object.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Description for the type of object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("type", DataType="str32")]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum pump rate at which the unit will efficiently operate.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum pump rate at which the unit will efficiently operate.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("capFlow", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure capFlow {
            get {
                return this.capFlowField;
            }
            set {
                this.capFlowField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Contractor/owner.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Contractor/owner.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("owner", DataType="str32")]
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An identification tag for the centrifuge. A serial number is a type of identification tag however some tags contain many pieces of information. This structure just identifies the tag and does not describe the contents.</summary>
        [System.Xml.Serialization.XmlElementAttribute("nameTag")]
        [System.ComponentModel.DescriptionAttribute("An identification tag for the centrifuge. A serial number is a type of identifica" +
            "tion tag however some tags contain many pieces of information. This structure ju" +
            "st identifies the tag and does not describe the contents.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameTag", DataType="cs_nameTag")]
        public cs_nameTag[] nameTag {
            get {
                return this.nameTagField;
            }
            set {
                this.nameTagField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_hydrocyclone {
        
        private string manufacturerField;
        
        private string modelField;
        
        private Energistics.DataAccess.Timestamp dTimInstallField;
        
        private bool dTimInstallFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimRemoveField;
        
        private bool dTimRemoveFieldSpecified;
        
        private string typeField;
        
        private string descConeField;
        
        private string ownerField;
        
        private cs_nameTag[] nameTagField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Manufacturer / supplier of the item.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturer / supplier of the item.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("manufacturer", DataType="nameString")]
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturers designated model.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Manufacturers designated model.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("model", DataType="str32")]
        public string model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time of installation.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time of installation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimInstall", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimInstall {
            get {
                return this.dTimInstallField;
            }
            set {
                this.dTimInstallField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimInstallSpecified {
            get {
                return this.dTimInstallFieldSpecified;
            }
            set {
                this.dTimInstallFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Removal date and time.</summary>
        [System.ComponentModel.DescriptionAttribute("Removal date and time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimRemove", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimRemove {
            get {
                return this.dTimRemoveField;
            }
            set {
                this.dTimRemoveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimRemoveSpecified {
            get {
                return this.dTimRemoveFieldSpecified;
            }
            set {
                this.dTimRemoveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description for the type of object.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Description for the type of object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("type", DataType="str32")]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Cones description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Cones description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("descCone", DataType="str32")]
        public string descCone {
            get {
                return this.descConeField;
            }
            set {
                this.descConeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Contractor/owner.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Contractor/owner.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("owner", DataType="str32")]
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An identification tag for the hydrocyclone. A serial number is a type of identification tag however some tags contain many pieces of information. This structure just identifies the tag and does not describe the contents.</summary>
        [System.Xml.Serialization.XmlElementAttribute("nameTag")]
        [System.ComponentModel.DescriptionAttribute("An identification tag for the hydrocyclone. A serial number is a type of identifi" +
            "cation tag however some tags contain many pieces of information. This structure " +
            "just identifies the tag and does not describe the contents.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameTag", DataType="cs_nameTag")]
        public cs_nameTag[] nameTag {
            get {
                return this.nameTagField;
            }
            set {
                this.nameTagField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_degasser {
        
        private string manufacturerField;
        
        private string modelField;
        
        private Energistics.DataAccess.Timestamp dTimInstallField;
        
        private bool dTimInstallFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimRemoveField;
        
        private bool dTimRemoveFieldSpecified;
        
        private string typeField;
        
        private string ownerField;
        
        private lengthMeasure heightField;
        
        private lengthMeasure lenField;
        
        private lengthMeasure idField;
        
        private volumeFlowRateMeasure capFlowField;
        
        private areaMeasure areaSeparatorFlowField;
        
        private lengthMeasure htMudSealField;
        
        private lengthMeasure idInletField;
        
        private lengthMeasure idVentLineField;
        
        private lengthMeasure lenVentLineField;
        
        private volumeFlowRateMeasure capGasSepField;
        
        private volumeFlowRateMeasure capBlowdownField;
        
        private pressureMeasure presRatingField;
        
        private thermodynamicTemperatureMeasure tempRatingField;
        
        private cs_nameTag[] nameTagField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Manufacturer / supplier of the item.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturer / supplier of the item.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("manufacturer", DataType="nameString")]
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturers designated model.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Manufacturers designated model.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("model", DataType="str32")]
        public string model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time of installation.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time of installation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimInstall", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimInstall {
            get {
                return this.dTimInstallField;
            }
            set {
                this.dTimInstallField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimInstallSpecified {
            get {
                return this.dTimInstallFieldSpecified;
            }
            set {
                this.dTimInstallFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Removal date and time.</summary>
        [System.ComponentModel.DescriptionAttribute("Removal date and time.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimRemove", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimRemove {
            get {
                return this.dTimRemoveField;
            }
            set {
                this.dTimRemoveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimRemoveSpecified {
            get {
                return this.dTimRemoveFieldSpecified;
            }
            set {
                this.dTimRemoveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description for the type of object.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Description for the type of object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("type", DataType="str32")]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Contractor/owner.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Contractor/owner.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("owner", DataType="str32")]
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Height of separator.</summary>
        [System.ComponentModel.DescriptionAttribute("Height of separator.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("height", DataType="lengthMeasure")]
        public lengthMeasure height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of separator.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of separator.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("len", DataType="lengthMeasure")]
        public lengthMeasure len {
            get {
                return this.lenField;
            }
            set {
                this.lenField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Internal diameter of object.</summary>
        [System.ComponentModel.DescriptionAttribute("Internal diameter of object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("id", DataType="lengthMeasure")]
        public lengthMeasure id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum pump rate at which the unit will efficiently operate.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum pump rate at which the unit will efficiently operate.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("capFlow", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure capFlow {
            get {
                return this.capFlowField;
            }
            set {
                this.capFlowField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Flow area of separator.</summary>
        [System.ComponentModel.DescriptionAttribute("Flow area of separator.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("areaSeparatorFlow", DataType="areaMeasure")]
        public areaMeasure areaSeparatorFlow {
            get {
                return this.areaSeparatorFlowField;
            }
            set {
                this.areaSeparatorFlowField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Depth of trip-tank fluid level to provide back pressure against separator flow.</summary>
        [System.ComponentModel.DescriptionAttribute("Depth of trip-tank fluid level to provide back pressure against separator flow.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("htMudSeal", DataType="lengthMeasure")]
        public lengthMeasure htMudSeal {
            get {
                return this.htMudSealField;
            }
            set {
                this.htMudSealField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Internal diameter of inlet line.</summary>
        [System.ComponentModel.DescriptionAttribute("Internal diameter of inlet line.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("idInlet", DataType="lengthMeasure")]
        public lengthMeasure idInlet {
            get {
                return this.idInletField;
            }
            set {
                this.idInletField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Internal diameter of vent line.</summary>
        [System.ComponentModel.DescriptionAttribute("Internal diameter of vent line.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("idVentLine", DataType="lengthMeasure")]
        public lengthMeasure idVentLine {
            get {
                return this.idVentLineField;
            }
            set {
                this.idVentLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of vent line.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of vent line.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenVentLine", DataType="lengthMeasure")]
        public lengthMeasure lenVentLine {
            get {
                return this.lenVentLineField;
            }
            set {
                this.lenVentLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Safe gas separating capacity.</summary>
        [System.ComponentModel.DescriptionAttribute("Safe gas separating capacity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("capGasSep", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure capGasSep {
            get {
                return this.capGasSepField;
            }
            set {
                this.capGasSepField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gas vent rate at which the vent line pressure drop exceeds the hydrostatic  head due to the mud seal.</summary>
        [System.ComponentModel.DescriptionAttribute("Gas vent rate at which the vent line pressure drop exceeds the hydrostatic  head " +
            "due to the mud seal.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("capBlowdown", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure capBlowdown {
            get {
                return this.capBlowdownField;
            }
            set {
                this.capBlowdownField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pressure rating of the item.</summary>
        [System.ComponentModel.DescriptionAttribute("Pressure rating of the item.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presRating", DataType="pressureMeasure")]
        public pressureMeasure presRating {
            get {
                return this.presRatingField;
            }
            set {
                this.presRatingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Temperature rating of separator.</summary>
        [System.ComponentModel.DescriptionAttribute("Temperature rating of separator.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempRating", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempRating {
            get {
                return this.tempRatingField;
            }
            set {
                this.tempRatingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An identification tag for the degasser. A serial number is a type of identification tag however some tags contain many pieces of information. This structure just identifies the tag and does not describe the contents.</summary>
        [System.Xml.Serialization.XmlElementAttribute("nameTag")]
        [System.ComponentModel.DescriptionAttribute("An identification tag for the degasser. A serial number is a type of identificati" +
            "on tag however some tags contain many pieces of information. This structure just" +
            " identifies the tag and does not describe the contents.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameTag", DataType="cs_nameTag")]
        public cs_nameTag[] nameTag {
            get {
                return this.nameTagField;
            }
            set {
                this.nameTagField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_surfaceEquipment {
        
        private string descriptionField;
        
        private pressureMeasure presRatingField;
        
        private SurfEquipType typeSurfEquipField;
        
        private bool usePumpDischargeField;
        
        private bool usePumpDischargeFieldSpecified;
        
        private bool useStandpipeField;
        
        private bool useStandpipeFieldSpecified;
        
        private bool useHoseField;
        
        private bool useHoseFieldSpecified;
        
        private bool useSwivelField;
        
        private bool useSwivelFieldSpecified;
        
        private bool useKellyField;
        
        private bool useKellyFieldSpecified;
        
        private bool useTopStackField;
        
        private bool useTopStackFieldSpecified;
        
        private bool useInjStackField;
        
        private bool useInjStackFieldSpecified;
        
        private bool useSurfaceIronField;
        
        private bool useSurfaceIronFieldSpecified;
        
        private lengthMeasure idStandpipeField;
        
        private lengthMeasure lenStandpipeField;
        
        private lengthMeasure idHoseField;
        
        private lengthMeasure lenHoseField;
        
        private lengthMeasure idSwivelField;
        
        private lengthMeasure lenSwivelField;
        
        private lengthMeasure idKellyField;
        
        private lengthMeasure lenKellyField;
        
        private lengthMeasure idSurfaceIronField;
        
        private lengthMeasure lenSurfaceIronField;
        
        private lengthMeasure htSurfaceIronField;
        
        private lengthMeasure idDischargeLineField;
        
        private lengthMeasure lenDischargeLineField;
        
        private string ctWrapTypeField;
        
        private lengthMeasure odReelField;
        
        private lengthMeasure odCoreField;
        
        private lengthMeasure widReelWrapField;
        
        private lengthMeasure lenReelField;
        
        private bool injStkUpField;
        
        private bool injStkUpFieldSpecified;
        
        private lengthMeasure htInjStkField;
        
        private bool umbInsideField;
        
        private bool umbInsideFieldSpecified;
        
        private lengthMeasure odUmbilicalField;
        
        private lengthMeasure lenUmbilicalField;
        
        private lengthMeasure idTopStkField;
        
        private lengthMeasure htTopStkField;
        
        private lengthMeasure htFlangeField;
        
        /// <remarks/>
        /// <summary>Description of item and details.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Description of item and details.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="commentString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pressure rating of the item.</summary>
        [System.ComponentModel.DescriptionAttribute("Pressure rating of the item.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presRating", DataType="pressureMeasure")]
        public pressureMeasure presRating {
            get {
                return this.presRatingField;
            }
            set {
                this.presRatingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Surface equipment type (IADC1-4,Custom, Coiled Tubing).</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Surface equipment type (IADC1-4,Custom, Coiled Tubing).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeSurfEquip", DataType="SurfEquipType")]
        public SurfEquipType typeSurfEquip {
            get {
                return this.typeSurfEquipField;
            }
            set {
                this.typeSurfEquipField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Use pump discharge Line. Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Use pump discharge Line. Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("usePumpDischarge", DataType="logicalBoolean")]
        public bool usePumpDischarge {
            get {
                return this.usePumpDischargeField;
            }
            set {
                this.usePumpDischargeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool usePumpDischargeSpecified {
            get {
                return this.usePumpDischargeFieldSpecified;
            }
            set {
                this.usePumpDischargeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Use standpipe geometry.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Use standpipe geometry.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("useStandpipe", DataType="logicalBoolean")]
        public bool useStandpipe {
            get {
                return this.useStandpipeField;
            }
            set {
                this.useStandpipeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useStandpipeSpecified {
            get {
                return this.useStandpipeFieldSpecified;
            }
            set {
                this.useStandpipeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Use kelly hose geometry.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Use kelly hose geometry.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("useHose", DataType="logicalBoolean")]
        public bool useHose {
            get {
                return this.useHoseField;
            }
            set {
                this.useHoseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useHoseSpecified {
            get {
                return this.useHoseFieldSpecified;
            }
            set {
                this.useHoseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Use swivel geometry.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Use swivel geometry.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("useSwivel", DataType="logicalBoolean")]
        public bool useSwivel {
            get {
                return this.useSwivelField;
            }
            set {
                this.useSwivelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useSwivelSpecified {
            get {
                return this.useSwivelFieldSpecified;
            }
            set {
                this.useSwivelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Use kelly geometry.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Use kelly geometry.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("useKelly", DataType="logicalBoolean")]
        public bool useKelly {
            get {
                return this.useKellyField;
            }
            set {
                this.useKellyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useKellySpecified {
            get {
                return this.useKellyFieldSpecified;
            }
            set {
                this.useKellyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Use top stack height.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Use top stack height.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("useTopStack", DataType="logicalBoolean")]
        public bool useTopStack {
            get {
                return this.useTopStackField;
            }
            set {
                this.useTopStackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useTopStackSpecified {
            get {
                return this.useTopStackFieldSpecified;
            }
            set {
                this.useTopStackFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Use injector stack height.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Use injector stack height.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("useInjStack", DataType="logicalBoolean")]
        public bool useInjStack {
            get {
                return this.useInjStackField;
            }
            set {
                this.useInjStackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useInjStackSpecified {
            get {
                return this.useInjStackFieldSpecified;
            }
            set {
                this.useInjStackFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Use surface iron description.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Use surface iron description.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("useSurfaceIron", DataType="logicalBoolean")]
        public bool useSurfaceIron {
            get {
                return this.useSurfaceIronField;
            }
            set {
                this.useSurfaceIronField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useSurfaceIronSpecified {
            get {
                return this.useSurfaceIronFieldSpecified;
            }
            set {
                this.useSurfaceIronFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner diameter of standpipe.</summary>
        [System.ComponentModel.DescriptionAttribute("Inner diameter of standpipe.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("idStandpipe", DataType="lengthMeasure")]
        public lengthMeasure idStandpipe {
            get {
                return this.idStandpipeField;
            }
            set {
                this.idStandpipeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of standpipe.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of standpipe.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenStandpipe", DataType="lengthMeasure")]
        public lengthMeasure lenStandpipe {
            get {
                return this.lenStandpipeField;
            }
            set {
                this.lenStandpipeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner diameter of kelly hose.</summary>
        [System.ComponentModel.DescriptionAttribute("Inner diameter of kelly hose.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("idHose", DataType="lengthMeasure")]
        public lengthMeasure idHose {
            get {
                return this.idHoseField;
            }
            set {
                this.idHoseField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of kelly hose.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of kelly hose.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenHose", DataType="lengthMeasure")]
        public lengthMeasure lenHose {
            get {
                return this.lenHoseField;
            }
            set {
                this.lenHoseField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner diameter of swivel.</summary>
        [System.ComponentModel.DescriptionAttribute("Inner diameter of swivel.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("idSwivel", DataType="lengthMeasure")]
        public lengthMeasure idSwivel {
            get {
                return this.idSwivelField;
            }
            set {
                this.idSwivelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of swivel.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of swivel.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenSwivel", DataType="lengthMeasure")]
        public lengthMeasure lenSwivel {
            get {
                return this.lenSwivelField;
            }
            set {
                this.lenSwivelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner diameter of kelly hose.</summary>
        [System.ComponentModel.DescriptionAttribute("Inner diameter of kelly hose.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("idKelly", DataType="lengthMeasure")]
        public lengthMeasure idKelly {
            get {
                return this.idKellyField;
            }
            set {
                this.idKellyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of kelly.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of kelly.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenKelly", DataType="lengthMeasure")]
        public lengthMeasure lenKelly {
            get {
                return this.lenKellyField;
            }
            set {
                this.lenKellyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Inner diameter of surface iron.</summary>
        [System.ComponentModel.DescriptionAttribute("Inner diameter of surface iron.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("idSurfaceIron", DataType="lengthMeasure")]
        public lengthMeasure idSurfaceIron {
            get {
                return this.idSurfaceIronField;
            }
            set {
                this.idSurfaceIronField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of surface iron.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of surface iron.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenSurfaceIron", DataType="lengthMeasure")]
        public lengthMeasure lenSurfaceIron {
            get {
                return this.lenSurfaceIronField;
            }
            set {
                this.lenSurfaceIronField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Height of surface iron.</summary>
        [System.ComponentModel.DescriptionAttribute("Height of surface iron.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("htSurfaceIron", DataType="lengthMeasure")]
        public lengthMeasure htSurfaceIron {
            get {
                return this.htSurfaceIronField;
            }
            set {
                this.htSurfaceIronField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing - Inner diameter of pump discharge line.</summary>
        [System.ComponentModel.DescriptionAttribute("Coiled tubing - Inner diameter of pump discharge line.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("idDischargeLine", DataType="lengthMeasure")]
        public lengthMeasure idDischargeLine {
            get {
                return this.idDischargeLineField;
            }
            set {
                this.idDischargeLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing - Length of pump discharge line.</summary>
        [System.ComponentModel.DescriptionAttribute("Coiled tubing - Length of pump discharge line.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenDischargeLine", DataType="lengthMeasure")]
        public lengthMeasure lenDischargeLine {
            get {
                return this.lenDischargeLineField;
            }
            set {
                this.lenDischargeLineField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing - Coiled tubing wrap type.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Coiled tubing - Coiled tubing wrap type.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ctWrapType", DataType="str16")]
        public string ctWrapType {
            get {
                return this.ctWrapTypeField;
            }
            set {
                this.ctWrapTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing - Specifies the OD of the coiled tubing reel.</summary>
        [System.ComponentModel.DescriptionAttribute("Coiled tubing - Specifies the OD of the coiled tubing reel.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("odReel", DataType="lengthMeasure")]
        public lengthMeasure odReel {
            get {
                return this.odReelField;
            }
            set {
                this.odReelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing - Outer diameter of the reel core that the coiled tubing is wrapped around.</summary>
        [System.ComponentModel.DescriptionAttribute("Coiled tubing - Outer diameter of the reel core that the coiled tubing is wrapped" +
            " around.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("odCore", DataType="lengthMeasure")]
        public lengthMeasure odCore {
            get {
                return this.odCoreField;
            }
            set {
                this.odCoreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing - Width of the reel core. This is the inside dimension.</summary>
        [System.ComponentModel.DescriptionAttribute("Coiled tubing - Width of the reel core. This is the inside dimension.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("widReelWrap", DataType="lengthMeasure")]
        public lengthMeasure widReelWrap {
            get {
                return this.widReelWrapField;
            }
            set {
                this.widReelWrapField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing - Length of the coiled tubing remaining on the reel.</summary>
        [System.ComponentModel.DescriptionAttribute("Coiled tubing - Length of the coiled tubing remaining on the reel.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenReel", DataType="lengthMeasure")]
        public lengthMeasure lenReel {
            get {
                return this.lenReelField;
            }
            set {
                this.lenReelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing - Injector Stack Up.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Coiled tubing - Injector Stack Up.  Values are \"true\" (or \"1\") and \"false\" (or \"0" +
            "\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("injStkUp", DataType="logicalBoolean")]
        public bool injStkUp {
            get {
                return this.injStkUpField;
            }
            set {
                this.injStkUpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool injStkUpSpecified {
            get {
                return this.injStkUpFieldSpecified;
            }
            set {
                this.injStkUpFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing -The length of tubing from the end of the coil reel to the rotary kelly bushing.  Basically we define what is in the hole and on the reel.  This measurement takes into account  the 20 or so feet of tubing that is being straightened and shoved through the injector head.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Coiled tubing -The length of tubing from the end of the coil reel to the rotary kelly bushing.  Basically we define what is in the hole and on the reel.  This measurement takes into account  the 20 or so feet of tubing that is being straightened and shoved through the injector head.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("htInjStk", DataType="lengthMeasure")]
        public lengthMeasure htInjStk {
            get {
                return this.htInjStkField;
            }
            set {
                this.htInjStkField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing - Umbilical inside, true/false check box so that you can account for the  wireline inside the coiled tubing.  With this pressure loss calculation, you can calculate  for the strings used for logging, wire line coring, etc.   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute(@"Coiled tubing - Umbilical inside, true/false check box so that you can account for the  wireline inside the coiled tubing.  With this pressure loss calculation, you can calculate  for the strings used for logging, wire line coring, etc.   Values are ""true"" (or ""1"") and ""false"" (or ""0"").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("umbInside", DataType="logicalBoolean")]
        public bool umbInside {
            get {
                return this.umbInsideField;
            }
            set {
                this.umbInsideField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool umbInsideSpecified {
            get {
                return this.umbInsideFieldSpecified;
            }
            set {
                this.umbInsideFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing - Outer diameter of the umbilical.</summary>
        [System.ComponentModel.DescriptionAttribute("Coiled tubing - Outer diameter of the umbilical.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("odUmbilical", DataType="lengthMeasure")]
        public lengthMeasure odUmbilical {
            get {
                return this.odUmbilicalField;
            }
            set {
                this.odUmbilicalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Coiled tubing - Length of the umbilical.</summary>
        [System.ComponentModel.DescriptionAttribute("Coiled tubing - Length of the umbilical.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenUmbilical", DataType="lengthMeasure")]
        public lengthMeasure lenUmbilical {
            get {
                return this.lenUmbilicalField;
            }
            set {
                this.lenUmbilicalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Top drive - Inner diameter of top stack.</summary>
        [System.ComponentModel.DescriptionAttribute("Top drive - Inner diameter of top stack.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("idTopStk", DataType="lengthMeasure")]
        public lengthMeasure idTopStk {
            get {
                return this.idTopStkField;
            }
            set {
                this.idTopStkField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Top drive - The distance that the mud travels from the end of the standpipe  hose to the drill pipe connection at the bottom of the top drive. We are measuring the  distance that the mud will flow through the top drive.</summary>
        [System.ComponentModel.DescriptionAttribute("Top drive - The distance that the mud travels from the end of the standpipe  hose" +
            " to the drill pipe connection at the bottom of the top drive. We are measuring t" +
            "he  distance that the mud will flow through the top drive.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("htTopStk", DataType="lengthMeasure")]
        public lengthMeasure htTopStk {
            get {
                return this.htTopStkField;
            }
            set {
                this.htTopStkField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Height of flange. If you select Top Drive Stackup Height, Swivel and Kelly are disabled so that you can specify the top-drive rotary system.</summary>
        [System.ComponentModel.DescriptionAttribute("Height of flange. If you select Top Drive Stackup Height, Swivel and Kelly are di" +
            "sabled so that you can specify the top-drive rotary system.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("htFlange", DataType="lengthMeasure")]
        public lengthMeasure htFlange {
            get {
                return this.htFlangeField;
            }
            set {
                this.htFlangeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [System.Xml.Serialization.XmlRootAttribute("risks", Namespace="http://www.witsml.org/schemas/131", IsNullable=false)]
    public partial class obj_risks {
        
        private cs_documentInfo documentInfoField;
        
        private obj_risk[] riskField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A single risk.</summary>
        [System.Xml.Serialization.XmlElementAttribute("risk")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A single risk.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("risk", DataType="obj_risk")]
        public obj_risk[] risk {
            get {
                return this.riskField;
            }
            set {
                this.riskField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.3\\.1\\.([1-9]|([1-9][0-9]))")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionString")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("WITSML", "1.3.1.1")]
    public partial class obj_risk {
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string nameField;
        
        private refObjectString objectReferenceField;
        
        private RiskType typeField;
        
        private RiskCategory categoryField;
        
        private RiskSubCategory subCategoryField;
        
        private bool subCategoryFieldSpecified;
        
        private string extendCategoryField;
        
        private RiskAffectedPersonnel[] affectedPersonnelField;
        
        private Energistics.DataAccess.Timestamp dTimStartField;
        
        private bool dTimStartFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimEndField;
        
        private bool dTimEndFieldSpecified;
        
        private measuredDepthCoord mdHoleStartField;
        
        private measuredDepthCoord mdHoleEndField;
        
        private wellVerticalDepthCoord tvdHoleStartField;
        
        private wellVerticalDepthCoord tvdHoleEndField;
        
        private measuredDepthCoord mdBitStartField;
        
        private measuredDepthCoord mdBitEndField;
        
        private lengthMeasure diaHoleField;
        
        private short severityLevelField;
        
        private bool severityLevelFieldSpecified;
        
        private short probabilityLevelField;
        
        private bool probabilityLevelFieldSpecified;
        
        private string summaryField;
        
        private string detailsField;
        
        private string identificationField;
        
        private string contingencyField;
        
        private string[] mitigationField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidWellboreField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore that contains the risk.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore that contains the risk.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWellbore", DataType="nameString")]
        public string nameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the risk.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the risk.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A reference to an object that is defined within the context of a wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("A reference to an object that is defined within the context of a wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("objectReference", DataType="refObjectString")]
        public refObjectString objectReference {
            get {
                return this.objectReferenceField;
            }
            set {
                this.objectReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of risk.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The type of risk.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("type", DataType="RiskType")]
        public RiskType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The category of risk.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The category of risk.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("category", DataType="RiskCategory")]
        public RiskCategory category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The sub category of risk.</summary>
        [System.ComponentModel.DescriptionAttribute("The sub category of risk.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("subCategory", DataType="RiskSubCategory")]
        public RiskSubCategory subCategory {
            get {
                return this.subCategoryField;
            }
            set {
                this.subCategoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool subCategorySpecified {
            get {
                return this.subCategoryFieldSpecified;
            }
            set {
                this.subCategoryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Custom string to further categorize the risk.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [System.ComponentModel.DescriptionAttribute("Custom string to further categorize the risk.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("extendCategory", DataType="kindString")]
        public string extendCategory {
            get {
                return this.extendCategoryField;
            }
            set {
                this.extendCategoryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The personnel afected by the risk.</summary>
        [System.Xml.Serialization.XmlElementAttribute("affectedPersonnel")]
        [System.ComponentModel.DescriptionAttribute("The personnel afected by the risk.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("affectedPersonnel", DataType="RiskAffectedPersonnel")]
        public RiskAffectedPersonnel[] affectedPersonnel {
            get {
                return this.affectedPersonnelField;
            }
            set {
                this.affectedPersonnelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time that activities started.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time that activities started.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStart {
            get {
                return this.dTimStartField;
            }
            set {
                this.dTimStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimStartSpecified {
            get {
                return this.dTimStartFieldSpecified;
            }
            set {
                this.dTimStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time that activities were completed.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time that activities were completed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimEnd {
            get {
                return this.dTimEndField;
            }
            set {
                this.dTimEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimEndSpecified {
            get {
                return this.dTimEndFieldSpecified;
            }
            set {
                this.dTimEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured Depth at start of activity.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured Depth at start of activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdHoleStart", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdHoleStart {
            get {
                return this.mdHoleStartField;
            }
            set {
                this.mdHoleStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured Depth at end of activity.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured Depth at end of activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdHoleEnd", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdHoleEnd {
            get {
                return this.mdHoleEndField;
            }
            set {
                this.mdHoleEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True Vertical Depth at start of activity.</summary>
        [System.ComponentModel.DescriptionAttribute("True Vertical Depth at start of activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvdHoleStart", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvdHoleStart {
            get {
                return this.tvdHoleStartField;
            }
            set {
                this.tvdHoleStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True Vertical Depth at end of activity.</summary>
        [System.ComponentModel.DescriptionAttribute("True Vertical Depth at end of activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvdHoleEnd", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvdHoleEnd {
            get {
                return this.tvdHoleEndField;
            }
            set {
                this.tvdHoleEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of bit at start of activity.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of bit at start of activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdBitStart", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdBitStart {
            get {
                return this.mdBitStartField;
            }
            set {
                this.mdBitStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of bit at end of activity.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth of bit at end of activity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdBitEnd", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdBitEnd {
            get {
                return this.mdBitEndField;
            }
            set {
                this.mdBitEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hole diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Hole diameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("diaHole", DataType="lengthMeasure")]
        public lengthMeasure diaHole {
            get {
                return this.diaHoleField;
            }
            set {
                this.diaHoleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Severity Level of the Risk.  Values of 1 through 5 with 1 being the lowest.</summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(0D, 8D)]
        [System.ComponentModel.DescriptionAttribute("Severity Level of the Risk.  Values of 1 through 5 with 1 being the lowest.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("severityLevel", DataType="levelIntegerCode")]
        public short severityLevel {
            get {
                return this.severityLevelField;
            }
            set {
                this.severityLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool severityLevelSpecified {
            get {
                return this.severityLevelFieldSpecified;
            }
            set {
                this.severityLevelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Probability Level of the Risk. Values of 1 through 5 with 1 being the lowest.</summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(0D, 8D)]
        [System.ComponentModel.DescriptionAttribute("Probability Level of the Risk. Values of 1 through 5 with 1 being the lowest.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("probabilityLevel", DataType="levelIntegerCode")]
        public short probabilityLevel {
            get {
                return this.probabilityLevelField;
            }
            set {
                this.probabilityLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool probabilityLevelSpecified {
            get {
                return this.probabilityLevelFieldSpecified;
            }
            set {
                this.probabilityLevelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>summary description of risk.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("summary description of risk.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("summary", DataType="descriptionString")]
        public string summary {
            get {
                return this.summaryField;
            }
            set {
                this.summaryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Complete description of Risk.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("Complete description of Risk.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("details", DataType="descriptionString")]
        public string details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Details for identifing the Risk.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("Details for identifing the Risk.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("identification", DataType="descriptionString")]
        public string identification {
            get {
                return this.identificationField;
            }
            set {
                this.identificationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Plan of action if the Risk materializes.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("Plan of action if the Risk materializes.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("contingency", DataType="descriptionString")]
        public string contingency {
            get {
                return this.contingencyField;
            }
            set {
                this.contingencyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Plan of action to ensure the risk does not materialize.</summary>
        [System.Xml.Serialization.XmlElementAttribute("mitigation")]
        [System.ComponentModel.DescriptionAttribute("Plan of action to ensure the risk does not materialize.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mitigation", DataType="descriptionString")]
        public string[] mitigation {
            get {
                return this.mitigationField;
            }
            set {
                this.mitigationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the wellbore. This uniquely represents  the wellbore referenced by the (possibly non-unique) nameWellbore.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the wellbore. This uniquely represents  the wellbore refere" +
            "nced by the (possibly non-unique) nameWellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWellbore", DataType="uidString")]
        public string uidWellbore {
            get {
                return this.uidWellboreField;
            }
            set {
                this.uidWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [System.Xml.Serialization.XmlRootAttribute("sidewallCores", Namespace="http://www.witsml.org/schemas/131", IsNullable=false)]
    public partial class obj_sidewallCores {
        
        private cs_documentInfo documentInfoField;
        
        private obj_sidewallCore[] sidewallCoreField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A single sidewall core.</summary>
        [System.Xml.Serialization.XmlElementAttribute("sidewallCore")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A single sidewall core.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sidewallCore", DataType="obj_sidewallCore")]
        public obj_sidewallCore[] sidewallCore {
            get {
                return this.sidewallCoreField;
            }
            set {
                this.sidewallCoreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.3\\.1\\.([1-9]|([1-9][0-9]))")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionString")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("WITSML", "1.3.1.1")]
    public partial class obj_sidewallCore {
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string nameField;
        
        private Energistics.DataAccess.Timestamp dTimToolRunField;
        
        private bool dTimToolRunFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimToolPullField;
        
        private bool dTimToolPullFieldSpecified;
        
        private measuredDepthCoord mdToolReferenceField;
        
        private string coreReferenceLogField;
        
        private measuredDepthCoord mdCoreField;
        
        private string serviceCompanyField;
        
        private string analysisContractorField;
        
        private string analysisByField;
        
        private string sidewallCoringToolField;
        
        private lengthMeasure diaHoleField;
        
        private lengthMeasure diaPlugField;
        
        private short numPlugsShotField;
        
        private bool numPlugsShotFieldSpecified;
        
        private short numRecPlugsField;
        
        private bool numRecPlugsFieldSpecified;
        
        private short numMisfiredPlugsField;
        
        private bool numMisfiredPlugsFieldSpecified;
        
        private short numEmptyPlugsField;
        
        private bool numEmptyPlugsFieldSpecified;
        
        private short numLostPlugsField;
        
        private bool numLostPlugsFieldSpecified;
        
        private short numPaidPlugsField;
        
        private bool numPaidPlugsFieldSpecified;
        
        private cs_swcSample[] swcSampleField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidWellboreField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore that contains the sidewall core.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore that contains the sidewall core.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWellbore", DataType="nameString")]
        public string nameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the sidewall core.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the sidewall core.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time logging suite run in the hole.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time logging suite run in the hole.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimToolRun", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimToolRun {
            get {
                return this.dTimToolRunField;
            }
            set {
                this.dTimToolRunField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimToolRunSpecified {
            get {
                return this.dTimToolRunFieldSpecified;
            }
            set {
                this.dTimToolRunFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time logging suite pulled out of the hole.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time logging suite pulled out of the hole.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimToolPull", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimToolPull {
            get {
                return this.dTimToolPullField;
            }
            set {
                this.dTimToolPullField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimToolPullSpecified {
            get {
                return this.dTimToolPullFieldSpecified;
            }
            set {
                this.dTimToolPullFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Tool reference measured depth.</summary>
        [System.ComponentModel.DescriptionAttribute("Tool reference measured depth.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdToolReference", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdToolReference {
            get {
                return this.mdToolReferenceField;
            }
            set {
                this.mdToolReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reference log information.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Reference log information.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("coreReferenceLog", DataType="str32")]
        public string coreReferenceLog {
            get {
                return this.coreReferenceLogField;
            }
            set {
                this.coreReferenceLogField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of core.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Measured depth of core.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdCore", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdCore {
            get {
                return this.mdCoreField;
            }
            set {
                this.mdCoreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of contractor who provided the service.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of contractor who provided the service.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("serviceCompany", DataType="nameString")]
        public string serviceCompany {
            get {
                return this.serviceCompanyField;
            }
            set {
                this.serviceCompanyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Analysis company</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Analysis company")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("analysisContractor", DataType="nameString")]
        public string analysisContractor {
            get {
                return this.analysisContractorField;
            }
            set {
                this.analysisContractorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of engineer analyzing sidewall core samples.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of engineer analyzing sidewall core samples.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("analysisBy", DataType="nameString")]
        public string analysisBy {
            get {
                return this.analysisByField;
            }
            set {
                this.analysisByField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Sidewall coring tool description.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Sidewall coring tool description.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sidewallCoringTool", DataType="str32")]
        public string sidewallCoringTool {
            get {
                return this.sidewallCoringToolField;
            }
            set {
                this.sidewallCoringToolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hole diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Hole diameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("diaHole", DataType="lengthMeasure")]
        public lengthMeasure diaHole {
            get {
                return this.diaHoleField;
            }
            set {
                this.diaHoleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Diameter of plugs.</summary>
        [System.ComponentModel.DescriptionAttribute("Diameter of plugs.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("diaPlug", DataType="lengthMeasure")]
        public lengthMeasure diaPlug {
            get {
                return this.diaPlugField;
            }
            set {
                this.diaPlugField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of shots fired.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of shots fired.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numPlugsShot", DataType="nonNegativeCount")]
        public short numPlugsShot {
            get {
                return this.numPlugsShotField;
            }
            set {
                this.numPlugsShotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numPlugsShotSpecified {
            get {
                return this.numPlugsShotFieldSpecified;
            }
            set {
                this.numPlugsShotFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of recovered plugs.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of recovered plugs.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numRecPlugs", DataType="nonNegativeCount")]
        public short numRecPlugs {
            get {
                return this.numRecPlugsField;
            }
            set {
                this.numRecPlugsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numRecPlugsSpecified {
            get {
                return this.numRecPlugsFieldSpecified;
            }
            set {
                this.numRecPlugsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of plugs that misfired.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of plugs that misfired.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numMisfiredPlugs", DataType="nonNegativeCount")]
        public short numMisfiredPlugs {
            get {
                return this.numMisfiredPlugsField;
            }
            set {
                this.numMisfiredPlugsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numMisfiredPlugsSpecified {
            get {
                return this.numMisfiredPlugsFieldSpecified;
            }
            set {
                this.numMisfiredPlugsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of plugs that fired OK but were empty.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of plugs that fired OK but were empty.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numEmptyPlugs", DataType="nonNegativeCount")]
        public short numEmptyPlugs {
            get {
                return this.numEmptyPlugsField;
            }
            set {
                this.numEmptyPlugsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numEmptyPlugsSpecified {
            get {
                return this.numEmptyPlugsFieldSpecified;
            }
            set {
                this.numEmptyPlugsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of lost plugs.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of lost plugs.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numLostPlugs", DataType="nonNegativeCount")]
        public short numLostPlugs {
            get {
                return this.numLostPlugsField;
            }
            set {
                this.numLostPlugsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numLostPlugsSpecified {
            get {
                return this.numLostPlugsFieldSpecified;
            }
            set {
                this.numLostPlugsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of plugs paid for by client.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of plugs paid for by client.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numPaidPlugs", DataType="nonNegativeCount")]
        public short numPaidPlugs {
            get {
                return this.numPaidPlugsField;
            }
            set {
                this.numPaidPlugsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numPaidPlugsSpecified {
            get {
                return this.numPaidPlugsFieldSpecified;
            }
            set {
                this.numPaidPlugsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Set of plug sample descriptions.</summary>
        [System.Xml.Serialization.XmlElementAttribute("swcSample")]
        [System.ComponentModel.DescriptionAttribute("Set of plug sample descriptions.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("swcSample", DataType="cs_swcSample")]
        public cs_swcSample[] swcSample {
            get {
                return this.swcSampleField;
            }
            set {
                this.swcSampleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the wellbore. This uniquely represents  the wellbore referenced by the (possibly non-unique) nameWellbore.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the wellbore. This uniquely represents  the wellbore refere" +
            "nced by the (possibly non-unique) nameWellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWellbore", DataType="uidString")]
        public string uidWellbore {
            get {
                return this.uidWellboreField;
            }
            set {
                this.uidWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_swcSample {
        
        private measuredDepthCoord mdField;
        
        private cs_lithology lithologyField;
        
        private cs_show showField;
        
        private string nameFormationField;
        
        private string commentsField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Along hole measured depth of measurement from the drill datum.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Along hole measured depth of measurement from the drill datum.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("md", DataType="measuredDepthCoord")]
        public measuredDepthCoord md {
            get {
                return this.mdField;
            }
            set {
                this.mdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Set of Lithology records for the Interval</summary>
        [System.ComponentModel.DescriptionAttribute("Set of Lithology records for the Interval")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lithology", DataType="cs_lithology")]
        public cs_lithology lithology {
            get {
                return this.lithologyField;
            }
            set {
                this.lithologyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Show description for the plug.</summary>
        [System.ComponentModel.DescriptionAttribute("Show description for the plug.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("show", DataType="cs_show")]
        public cs_show show {
            get {
                return this.showField;
            }
            set {
                this.showField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of formation penetrated.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Name of formation penetrated.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameFormation", DataType="str32")]
        public string nameFormation {
            get {
                return this.nameFormationField;
            }
            set {
                this.nameFormationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comments and remarks.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Comments and remarks.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comments", DataType="commentString")]
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [System.Xml.Serialization.XmlRootAttribute("surveyPrograms", Namespace="http://www.witsml.org/schemas/131", IsNullable=false)]
    public partial class obj_surveyPrograms {
        
        private cs_documentInfo documentInfoField;
        
        private obj_surveyProgram[] surveyProgramField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A single survey program .</summary>
        [System.Xml.Serialization.XmlElementAttribute("surveyProgram")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A single survey program .")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("surveyProgram", DataType="obj_surveyProgram")]
        public obj_surveyProgram[] surveyProgram {
            get {
                return this.surveyProgramField;
            }
            set {
                this.surveyProgramField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.3\\.1\\.([1-9]|([1-9][0-9]))")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionString")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("WITSML", "1.3.1.1")]
    public partial class obj_surveyProgram {
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string nameField;
        
        private short surveyVerField;
        
        private Energistics.DataAccess.Timestamp dTimTrajProgField;
        
        private bool dTimTrajProgFieldSpecified;
        
        private string engineerField;
        
        private string finalField;
        
        private cs_surveySection[] surveySectionField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidWellboreField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore that contains the survey program.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore that contains the survey program.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWellbore", DataType="nameString")]
        public string nameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the survey program.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the survey program.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Survey version number, incremented every time the program is modified.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Survey version number, incremented every time the program is modified.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("surveyVer", DataType="positiveCount")]
        public short surveyVer {
            get {
                return this.surveyVerField;
            }
            set {
                this.surveyVerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time trajectory program was created or edited.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time trajectory program was created or edited.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimTrajProg", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimTrajProg {
            get {
                return this.dTimTrajProgField;
            }
            set {
                this.dTimTrajProgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimTrajProgSpecified {
            get {
                return this.dTimTrajProgFieldSpecified;
            }
            set {
                this.dTimTrajProgFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of engineer.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Name of engineer.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("engineer", DataType="str32")]
        public string engineer {
            get {
                return this.engineerField;
            }
            set {
                this.engineerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is program a final or intermediate/preliminary?</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Is program a final or intermediate/preliminary?")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("final", DataType="str16")]
        public string final {
            get {
                return this.finalField;
            }
            set {
                this.finalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Survey section object.</summary>
        [System.Xml.Serialization.XmlElementAttribute("surveySection")]
        [System.ComponentModel.DescriptionAttribute("Survey section object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("surveySection", DataType="cs_surveySection")]
        public cs_surveySection[] surveySection {
            get {
                return this.surveySectionField;
            }
            set {
                this.surveySectionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the wellbore. This uniquely represents  the wellbore referenced by the (possibly non-unique) nameWellbore.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the wellbore. This uniquely represents  the wellbore refere" +
            "nced by the (possibly non-unique) nameWellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWellbore", DataType="uidString")]
        public string uidWellbore {
            get {
                return this.uidWellboreField;
            }
            set {
                this.uidWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_surveySection {
        
        private short sequenceField;
        
        private string nameField;
        
        private measuredDepthCoord mdStartField;
        
        private measuredDepthCoord mdEndField;
        
        private string nameSurveyCompanyField;
        
        private string nameToolField;
        
        private string typeToolField;
        
        private string modelErrorField;
        
        private bool overwriteField;
        
        private bool overwriteFieldSpecified;
        
        private lengthMeasure frequencyMxField;
        
        private ItemState itemStateField;
        
        private bool itemStateFieldSpecified;
        
        private string commentsField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Order in which program sections will be executed / were executed.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Order in which program sections will be executed / were executed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sequence", DataType="positiveCount")]
        public short sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of survey program section.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of survey program section.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hole measured depth at which the survey run will begin/began.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Hole measured depth at which the survey run will begin/began.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdStart", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdStart {
            get {
                return this.mdStartField;
            }
            set {
                this.mdStartField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hole measured depth at which the survey run will end/ended.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Hole measured depth at which the survey run will end/ended.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdEnd", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdEnd {
            get {
                return this.mdEndField;
            }
            set {
                this.mdEndField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Company who will run / has run sruvey tool.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Company who will run / has run sruvey tool.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameSurveyCompany", DataType="nameString")]
        public string nameSurveyCompany {
            get {
                return this.nameSurveyCompanyField;
            }
            set {
                this.nameSurveyCompanyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of survey tool to be used / used for this section.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of survey tool to be used / used for this section.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameTool", DataType="nameString")]
        public string nameTool {
            get {
                return this.nameToolField;
            }
            set {
                this.nameToolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of tool used.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Type of tool used.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeTool", DataType="nameString")]
        public string typeTool {
            get {
                return this.typeToolField;
            }
            set {
                this.typeToolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Error model used to calculate ellipses of uncertainty.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Error model used to calculate ellipses of uncertainty.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("modelError", DataType="nameString")]
        public string modelError {
            get {
                return this.modelErrorField;
            }
            set {
                this.modelErrorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Normally true, higher index trajectory takes precedence over overlapping  section of previous trajectory.  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Normally true, higher index trajectory takes precedence over overlapping  section" +
            " of previous trajectory.  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("overwrite", DataType="logicalBoolean")]
        public bool overwrite {
            get {
                return this.overwriteField;
            }
            set {
                this.overwriteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool overwriteSpecified {
            get {
                return this.overwriteFieldSpecified;
            }
            set {
                this.overwriteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum allowable depth frequency for survey stations for this survey run.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum allowable depth frequency for survey stations for this survey run.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("frequencyMx", DataType="lengthMeasure")]
        public lengthMeasure frequencyMx {
            get {
                return this.frequencyMxField;
            }
            set {
                this.frequencyMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The item state for the data object.</summary>
        [System.ComponentModel.DescriptionAttribute("The item state for the data object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("itemState", DataType="ItemState")]
        public ItemState itemState {
            get {
                return this.itemStateField;
            }
            set {
                this.itemStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool itemStateSpecified {
            get {
                return this.itemStateFieldSpecified;
            }
            set {
                this.itemStateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comments and remarks.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Comments and remarks.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comments", DataType="commentString")]
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [System.Xml.Serialization.XmlRootAttribute("targets", Namespace="http://www.witsml.org/schemas/131", IsNullable=false)]
    public partial class obj_targets {
        
        private cs_documentInfo documentInfoField;
        
        private obj_target[] targetField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A single target.</summary>
        [System.Xml.Serialization.XmlElementAttribute("target")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A single target.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("target", DataType="obj_target")]
        public obj_target[] target {
            get {
                return this.targetField;
            }
            set {
                this.targetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.3\\.1\\.([1-9]|([1-9][0-9]))")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionString")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("WITSML", "1.3.1.1")]
    public partial class obj_target {
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string nameField;
        
        private refNameString parentTargetField;
        
        private lengthMeasure dispNsCenterField;
        
        private lengthMeasure dispEwCenterField;
        
        private wellVerticalDepthCoord tvdField;
        
        private lengthMeasure dispNsOffsetField;
        
        private lengthMeasure dispEwOffsetField;
        
        private lengthMeasure thickAboveField;
        
        private lengthMeasure thickBelowField;
        
        private planeAngleMeasure dipField;
        
        private planeAngleMeasure strikeField;
        
        private planeAngleMeasure rotationField;
        
        private lengthMeasure lenMajorAxisField;
        
        private lengthMeasure widMinorAxisField;
        
        private TargetScope typeTargetScopeField;
        
        private bool typeTargetScopeFieldSpecified;
        
        private lengthMeasure dispNsSectOrigField;
        
        private lengthMeasure dispEwSectOrigField;
        
        private AziRef aziRefField;
        
        private bool aziRefFieldSpecified;
        
        private TargetCategory catTargField;
        
        private bool catTargFieldSpecified;
        
        private cs_location[] locationField;
        
        private cs_targetSection[] targetSectionField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidWellboreField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore that contains the target.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore that contains the target.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWellbore", DataType="nameString")]
        public string nameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the target.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the target.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the parent target. This represents a relationship  between a drillers and geological target.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the parent target. This represents a relationship  between a driller" +
            "s and geological target.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("parentTarget", DataType="refNameString")]
        public refNameString parentTarget {
            get {
                return this.parentTargetField;
            }
            set {
                this.parentTargetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Northing of target center point in map coordinates.</summary>
        [System.ComponentModel.DescriptionAttribute("Northing of target center point in map coordinates.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dispNsCenter", DataType="lengthMeasure")]
        public lengthMeasure dispNsCenter {
            get {
                return this.dispNsCenterField;
            }
            set {
                this.dispNsCenterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Easting of target center point in map coordinates.</summary>
        [System.ComponentModel.DescriptionAttribute("Easting of target center point in map coordinates.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dispEwCenter", DataType="lengthMeasure")]
        public lengthMeasure dispEwCenter {
            get {
                return this.dispEwCenterField;
            }
            set {
                this.dispEwCenterField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Vertical depth of the measurements.</summary>
        [System.ComponentModel.DescriptionAttribute("Vertical depth of the measurements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvd", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvd {
            get {
                return this.tvdField;
            }
            set {
                this.tvdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>North-south offset of target intercept point from shape center.</summary>
        [System.ComponentModel.DescriptionAttribute("North-south offset of target intercept point from shape center.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dispNsOffset", DataType="lengthMeasure")]
        public lengthMeasure dispNsOffset {
            get {
                return this.dispNsOffsetField;
            }
            set {
                this.dispNsOffsetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>East-west offset of target intercept point from shape center.</summary>
        [System.ComponentModel.DescriptionAttribute("East-west offset of target intercept point from shape center.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dispEwOffset", DataType="lengthMeasure")]
        public lengthMeasure dispEwOffset {
            get {
                return this.dispEwOffsetField;
            }
            set {
                this.dispEwOffsetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Height of target above center point.</summary>
        [System.ComponentModel.DescriptionAttribute("Height of target above center point.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("thickAbove", DataType="lengthMeasure")]
        public lengthMeasure thickAbove {
            get {
                return this.thickAboveField;
            }
            set {
                this.thickAboveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Depth of target below center point.</summary>
        [System.ComponentModel.DescriptionAttribute("Depth of target below center point.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("thickBelow", DataType="lengthMeasure")]
        public lengthMeasure thickBelow {
            get {
                return this.thickBelowField;
            }
            set {
                this.thickBelowField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Angle of dip with respect to horizontal.</summary>
        [System.ComponentModel.DescriptionAttribute("Angle of dip with respect to horizontal.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dip", DataType="planeAngleMeasure")]
        public planeAngleMeasure dip {
            get {
                return this.dipField;
            }
            set {
                this.dipField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Direction of dip with respect to north azimuth reference.</summary>
        [System.ComponentModel.DescriptionAttribute("Direction of dip with respect to north azimuth reference.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("strike", DataType="planeAngleMeasure")]
        public planeAngleMeasure strike {
            get {
                return this.strikeField;
            }
            set {
                this.strikeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Direction of target geometry with respect to north azimuth reference.</summary>
        [System.ComponentModel.DescriptionAttribute("Direction of target geometry with respect to north azimuth reference.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rotation", DataType="planeAngleMeasure")]
        public planeAngleMeasure rotation {
            get {
                return this.rotationField;
            }
            set {
                this.rotationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance from center to perimeter in rotation direction.   This may be ignored depending on the value of typeTargetScope.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance from center to perimeter in rotation direction.   This may be ignored de" +
            "pending on the value of typeTargetScope.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenMajorAxis", DataType="lengthMeasure")]
        public lengthMeasure lenMajorAxis {
            get {
                return this.lenMajorAxisField;
            }
            set {
                this.lenMajorAxisField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance from center to perimeter at 90 deg to rotation direction.   This may be ignored depending on the value of typeTargetScope.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance from center to perimeter at 90 deg to rotation direction.   This may be " +
            "ignored depending on the value of typeTargetScope.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("widMinorAxis", DataType="lengthMeasure")]
        public lengthMeasure widMinorAxis {
            get {
                return this.widMinorAxisField;
            }
            set {
                this.widMinorAxisField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of scope of the drilling target.</summary>
        [System.ComponentModel.DescriptionAttribute("The type of scope of the drilling target.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeTargetScope", DataType="TargetScope")]
        public TargetScope typeTargetScope {
            get {
                return this.typeTargetScopeField;
            }
            set {
                this.typeTargetScopeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeTargetScopeSpecified {
            get {
                return this.typeTargetScopeFieldSpecified;
            }
            set {
                this.typeTargetScopeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Origin north-south used as starting point for sections, mandatory parameter when sections are used..</summary>
        [System.ComponentModel.DescriptionAttribute("Origin north-south used as starting point for sections, mandatory parameter when " +
            "sections are used..")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dispNsSectOrig", DataType="lengthMeasure")]
        public lengthMeasure dispNsSectOrig {
            get {
                return this.dispNsSectOrigField;
            }
            set {
                this.dispNsSectOrigField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Origin east-west used as starting point for sections, mandatory parameter when sections are used.</summary>
        [System.ComponentModel.DescriptionAttribute("Origin east-west used as starting point for sections, mandatory parameter when se" +
            "ctions are used.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dispEwSectOrig", DataType="lengthMeasure")]
        public lengthMeasure dispEwSectOrig {
            get {
                return this.dispEwSectOrigField;
            }
            set {
                this.dispEwSectOrigField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Specifies the definition of north.</summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the definition of north.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("aziRef", DataType="AziRef")]
        public AziRef aziRef {
            get {
                return this.aziRefField;
            }
            set {
                this.aziRefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool aziRefSpecified {
            get {
                return this.aziRefFieldSpecified;
            }
            set {
                this.aziRefFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Geological or drillers target.</summary>
        [System.ComponentModel.DescriptionAttribute("Geological or drillers target.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("catTarg", DataType="TargetCategory")]
        public TargetCategory catTarg {
            get {
                return this.catTargField;
            }
            set {
                this.catTargField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool catTargSpecified {
            get {
                return this.catTargFieldSpecified;
            }
            set {
                this.catTargFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The 2D coordinates of the item at the start of the  section. The location object is mandatory for the first section starting point.</summary>
        [System.Xml.Serialization.XmlElementAttribute("location")]
        [System.ComponentModel.DescriptionAttribute("The 2D coordinates of the item at the start of the  section. The location object " +
            "is mandatory for the first section starting point.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("location", DataType="cs_location")]
        public cs_location[] location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Sections describing target. These may be ignored depending on the value of typeTargetScope.</summary>
        [System.Xml.Serialization.XmlElementAttribute("targetSection")]
        [System.ComponentModel.DescriptionAttribute("Sections describing target. These may be ignored depending on the value of typeTa" +
            "rgetScope.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("targetSection", DataType="cs_targetSection")]
        public cs_targetSection[] targetSection {
            get {
                return this.targetSectionField;
            }
            set {
                this.targetSectionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the wellbore. This uniquely represents  the wellbore referenced by the (possibly non-unique) nameWellbore.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the wellbore. This uniquely represents  the wellbore refere" +
            "nced by the (possibly non-unique) nameWellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWellbore", DataType="uidString")]
        public string uidWellbore {
            get {
                return this.uidWellboreField;
            }
            set {
                this.uidWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_targetSection {
        
        private short sectNumberField;
        
        private TargetSectionScope typeTargetSectionScopeField;
        
        private lengthMeasure lenRadiusField;
        
        private planeAngleMeasure angleArcField;
        
        private lengthMeasure thickAboveField;
        
        private lengthMeasure thickBelowField;
        
        private cs_location[] locationField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Sequence number of section, 1,2,3.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Sequence number of section, 1,2,3.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sectNumber", DataType="positiveCount")]
        public short sectNumber {
            get {
                return this.sectNumberField;
            }
            set {
                this.sectNumberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Section scope: Line or Arc.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Section scope: Line or Arc.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeTargetSectionScope", DataType="TargetSectionScope")]
        public TargetSectionScope typeTargetSectionScope {
            get {
                return this.typeTargetSectionScopeField;
            }
            set {
                this.typeTargetSectionScopeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of straight line section or radius of arc for continuous curve section.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of straight line section or radius of arc for continuous curve section.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenRadius", DataType="lengthMeasure")]
        public lengthMeasure lenRadius {
            get {
                return this.lenRadiusField;
            }
            set {
                this.lenRadiusField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Direction of straight line section or radius of arc for continuous curve section.</summary>
        [System.ComponentModel.DescriptionAttribute("Direction of straight line section or radius of arc for continuous curve section." +
            "")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("angleArc", DataType="planeAngleMeasure")]
        public planeAngleMeasure angleArc {
            get {
                return this.angleArcField;
            }
            set {
                this.angleArcField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Height of target above center point at the start of the section.   In the case of an arc, the thickness above should vary linearly with the arc length.</summary>
        [System.ComponentModel.DescriptionAttribute("Height of target above center point at the start of the section.   In the case of" +
            " an arc, the thickness above should vary linearly with the arc length.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("thickAbove", DataType="lengthMeasure")]
        public lengthMeasure thickAbove {
            get {
                return this.thickAboveField;
            }
            set {
                this.thickAboveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Depth of target below center point at the start of the section.   In the case of an arc, the thickness below should vary linearly with the arc length.</summary>
        [System.ComponentModel.DescriptionAttribute("Depth of target below center point at the start of the section.   In the case of " +
            "an arc, the thickness below should vary linearly with the arc length.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("thickBelow", DataType="lengthMeasure")]
        public lengthMeasure thickBelow {
            get {
                return this.thickBelowField;
            }
            set {
                this.thickBelowField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The 2D coordinates of the item at the start of the section.   This is redundant information and can be computed by starting at the section origin and applying  the sequence of angleArcs and lenRadius.</summary>
        [System.Xml.Serialization.XmlElementAttribute("location")]
        [System.ComponentModel.DescriptionAttribute("The 2D coordinates of the item at the start of the section.   This is redundant i" +
            "nformation and can be computed by starting at the section origin and applying  t" +
            "he sequence of angleArcs and lenRadius.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("location", DataType="cs_location")]
        public cs_location[] location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [System.Xml.Serialization.XmlRootAttribute("trajectorys", Namespace="http://www.witsml.org/schemas/131", IsNullable=false)]
    public partial class obj_trajectorys {
        
        private cs_documentInfo documentInfoField;
        
        private obj_trajectory[] trajectoryField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A single trajectory.</summary>
        [System.Xml.Serialization.XmlElementAttribute("trajectory")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A single trajectory.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("trajectory", DataType="obj_trajectory")]
        public obj_trajectory[] trajectory {
            get {
                return this.trajectoryField;
            }
            set {
                this.trajectoryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.3\\.1\\.([1-9]|([1-9][0-9]))")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionString")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("WITSML", "1.3.1.1")]
    public partial class obj_trajectory {
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string nameField;
        
        private bool objectGrowingField;
        
        private bool objectGrowingFieldSpecified;
        
        private cs_refWellboreTrajectory parentTrajectoryField;
        
        private Energistics.DataAccess.Timestamp dTimTrajStartField;
        
        private bool dTimTrajStartFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimTrajEndField;
        
        private bool dTimTrajEndFieldSpecified;
        
        private measuredDepthCoord mdMnField;
        
        private measuredDepthCoord mdMxField;
        
        private string serviceCompanyField;
        
        private planeAngleMeasure magDeclUsedField;
        
        private planeAngleMeasure gridCorUsedField;
        
        private planeAngleMeasure aziVertSectField;
        
        private lengthMeasure dispNsVertSectOrigField;
        
        private lengthMeasure dispEwVertSectOrigField;
        
        private bool definitiveField;
        
        private bool definitiveFieldSpecified;
        
        private bool memoryField;
        
        private bool memoryFieldSpecified;
        
        private bool finalTrajField;
        
        private bool finalTrajFieldSpecified;
        
        private AziRef aziRefField;
        
        private bool aziRefFieldSpecified;
        
        private cs_trajectoryStation[] trajectoryStationField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidWellboreField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore that contains the trajectory.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore that contains the trajectory.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWellbore", DataType="nameString")]
        public string nameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the trajectory.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the trajectory.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Whether or not the trajectory is growing.  True ("true" or "1") indicates the that the trajectory is still growing  in size (that is, trajectoryStation values are still being added). For example, it may be connected to a realtime stream. False ("false" or "0") indicates that the trajectory is  closed (that is, no further trajectoryStation values will be added). Not given indicates that the status of the trajectory is not known. This value is only relevant within the context of a server.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Whether or not the trajectory is growing.  True (""true"" or ""1"") indicates the that the trajectory is still growing  in size (that is, trajectoryStation values are still being added). For example, it may be connected to a realtime stream. False (""false"" or ""0"") indicates that the trajectory is  closed (that is, no further trajectoryStation values will be added). Not given indicates that the status of the trajectory is not known. This value is only relevant within the context of a server.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("objectGrowing", DataType="logicalBoolean")]
        public bool objectGrowing {
            get {
                return this.objectGrowingField;
            }
            set {
                this.objectGrowingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool objectGrowingSpecified {
            get {
                return this.objectGrowingFieldSpecified;
            }
            set {
                this.objectGrowingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>If a trajectory is tied into another trajectory,  a pointer to the parent trajectory.   The trajectory may be in another wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("If a trajectory is tied into another trajectory,  a pointer to the parent traject" +
            "ory.   The trajectory may be in another wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("parentTrajectory", DataType="cs_refWellboreTrajectory")]
        public cs_refWellboreTrajectory parentTrajectory {
            get {
                return this.parentTrajectoryField;
            }
            set {
                this.parentTrajectoryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Start date and time of trajectory station measurements. Note that this is NOT a server query parameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Start date and time of trajectory station measurements. Note that this is NOT a s" +
            "erver query parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimTrajStart", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimTrajStart {
            get {
                return this.dTimTrajStartField;
            }
            set {
                this.dTimTrajStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimTrajStartSpecified {
            get {
                return this.dTimTrajStartFieldSpecified;
            }
            set {
                this.dTimTrajStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>End date and time of trajectory station measurements. Note that this is NOT a server query parameter.</summary>
        [System.ComponentModel.DescriptionAttribute("End date and time of trajectory station measurements. Note that this is NOT a ser" +
            "ver query parameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimTrajEnd", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimTrajEnd {
            get {
                return this.dTimTrajEndField;
            }
            set {
                this.dTimTrajEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimTrajEndSpecified {
            get {
                return this.dTimTrajEndFieldSpecified;
            }
            set {
                this.dTimTrajEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum measured depth of trajectory. This is a query parameter. It's value will be populated by the server to reflect the values of md in the returned trajectoryStations.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum measured depth of trajectory. This is a query parameter. It\'s value will " +
            "be populated by the server to reflect the values of md in the returned trajector" +
            "yStations.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdMn", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdMn {
            get {
                return this.mdMnField;
            }
            set {
                this.mdMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum measured depth of trajectory. This is a query parameter. It's value will be populated by the server to reflect the values of md in the returned trajectoryStations.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum measured depth of trajectory. This is a query parameter. It\'s value will " +
            "be populated by the server to reflect the values of md in the returned trajector" +
            "yStations.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdMx", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdMx {
            get {
                return this.mdMxField;
            }
            set {
                this.mdMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of contractor who provided the service.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of contractor who provided the service.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("serviceCompany", DataType="nameString")]
        public string serviceCompany {
            get {
                return this.serviceCompanyField;
            }
            set {
                this.serviceCompanyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Magnetic declination used to correct a magnetic survey.  Starting value if stations have individual values.</summary>
        [System.ComponentModel.DescriptionAttribute("Magnetic declination used to correct a magnetic survey.  Starting value if statio" +
            "ns have individual values.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("magDeclUsed", DataType="planeAngleMeasure")]
        public planeAngleMeasure magDeclUsed {
            get {
                return this.magDeclUsedField;
            }
            set {
                this.magDeclUsedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Grid correction used to correct a survey.  Starting value if stations have individual values.</summary>
        [System.ComponentModel.DescriptionAttribute("Grid correction used to correct a survey.  Starting value if stations have indivi" +
            "dual values.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gridCorUsed", DataType="planeAngleMeasure")]
        public planeAngleMeasure gridCorUsed {
            get {
                return this.gridCorUsedField;
            }
            set {
                this.gridCorUsedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Azimuth used for vertical section plot/computations.</summary>
        [System.ComponentModel.DescriptionAttribute("Azimuth used for vertical section plot/computations.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("aziVertSect", DataType="planeAngleMeasure")]
        public planeAngleMeasure aziVertSect {
            get {
                return this.aziVertSectField;
            }
            set {
                this.aziVertSectField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Origin north-south used for vertical section plot/computations.</summary>
        [System.ComponentModel.DescriptionAttribute("Origin north-south used for vertical section plot/computations.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dispNsVertSectOrig", DataType="lengthMeasure")]
        public lengthMeasure dispNsVertSectOrig {
            get {
                return this.dispNsVertSectOrigField;
            }
            set {
                this.dispNsVertSectOrigField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Origin east-west used for vertical section plot/computations.</summary>
        [System.ComponentModel.DescriptionAttribute("Origin east-west used for vertical section plot/computations.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dispEwVertSectOrig", DataType="lengthMeasure")]
        public lengthMeasure dispEwVertSectOrig {
            get {
                return this.dispEwVertSectOrigField;
            }
            set {
                this.dispEwVertSectOrigField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True ("true" or "1") indicates that this trajectory is definitive for  this wellbore. False ("false" or "0") or not given indicates otherwise. There can only be one trajectory per wellbore with definitive=true and it must define the geometry of the whole wellbore (surface to bottom). The definitive trajectory may represent a composite of information in many other trajectories. A query requesting a subset of the possible information can provide a simplistic view of the geometry of the wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute(@"True (""true"" or ""1"") indicates that this trajectory is definitive for  this wellbore. False (""false"" or ""0"") or not given indicates otherwise. There can only be one trajectory per wellbore with definitive=true and it must define the geometry of the whole wellbore (surface to bottom). The definitive trajectory may represent a composite of information in many other trajectories. A query requesting a subset of the possible information can provide a simplistic view of the geometry of the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("definitive", DataType="logicalBoolean")]
        public bool definitive {
            get {
                return this.definitiveField;
            }
            set {
                this.definitiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool definitiveSpecified {
            get {
                return this.definitiveFieldSpecified;
            }
            set {
                this.definitiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is trajectory a result of a memory dump from a tool?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Is trajectory a result of a memory dump from a tool?   Values are \"true\" (or \"1\")" +
            " and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("memory", DataType="logicalBoolean")]
        public bool memory {
            get {
                return this.memoryField;
            }
            set {
                this.memoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool memorySpecified {
            get {
                return this.memoryFieldSpecified;
            }
            set {
                this.memoryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is trajectory a final or intermediate/preliminary?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Is trajectory a final or intermediate/preliminary?   Values are \"true\" (or \"1\") a" +
            "nd \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("finalTraj", DataType="logicalBoolean")]
        public bool finalTraj {
            get {
                return this.finalTrajField;
            }
            set {
                this.finalTrajField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool finalTrajSpecified {
            get {
                return this.finalTrajFieldSpecified;
            }
            set {
                this.finalTrajFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Specifies the definition of north. While this is optional because of legacy data, it is strongly recommended  that this always be specified.</summary>
        [System.ComponentModel.DescriptionAttribute("Specifies the definition of north. While this is optional because of legacy data," +
            " it is strongly recommended  that this always be specified.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("aziRef", DataType="AziRef")]
        public AziRef aziRef {
            get {
                return this.aziRefField;
            }
            set {
                this.aziRefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool aziRefSpecified {
            get {
                return this.aziRefFieldSpecified;
            }
            set {
                this.aziRefFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Container element for trajectory station elements.</summary>
        [System.Xml.Serialization.XmlElementAttribute("trajectoryStation")]
        [System.ComponentModel.DescriptionAttribute("Container element for trajectory station elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("trajectoryStation", DataType="cs_trajectoryStation")]
        public cs_trajectoryStation[] trajectoryStation {
            get {
                return this.trajectoryStationField;
            }
            set {
                this.trajectoryStationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the wellbore. This uniquely represents  the wellbore referenced by the (possibly non-unique) nameWellbore.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the wellbore. This uniquely represents  the wellbore refere" +
            "nced by the (possibly non-unique) nameWellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWellbore", DataType="uidString")]
        public string uidWellbore {
            get {
                return this.uidWellboreField;
            }
            set {
                this.uidWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_refWellboreTrajectory {
        
        private refNameString trajectoryReferenceField;
        
        private refNameString wellboreParentField;
        
        /// <remarks/>
        /// <summary>A pointer to the trajectory within the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A pointer to the trajectory within the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("trajectoryReference", DataType="refNameString")]
        public refNameString trajectoryReference {
            get {
                return this.trajectoryReferenceField;
            }
            set {
                this.trajectoryReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the wellbore that contains the trajectoryReference. This is not needed unless the trajectory is outside the  context of a common parent wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the wellbore that contains the trajectoryReference. This is not need" +
            "ed unless the trajectory is outside the  context of a common parent wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellboreParent", DataType="refNameString")]
        public refNameString wellboreParent {
            get {
                return this.wellboreParentField;
            }
            set {
                this.wellboreParentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [System.Xml.Serialization.XmlRootAttribute("trajectoryStations", Namespace="http://www.witsml.org/schemas/131", IsNullable=false)]
    public partial class obj_trajectoryStations {
        
        private cs_documentInfo documentInfoField;
        
        private obj_trajectoryStation[] trajectoryStationField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A single trajectory station.</summary>
        [System.Xml.Serialization.XmlElementAttribute("trajectoryStation")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A single trajectory station.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("trajectoryStation", DataType="obj_trajectoryStation")]
        public obj_trajectoryStation[] trajectoryStation {
            get {
                return this.trajectoryStationField;
            }
            set {
                this.trajectoryStationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.3\\.1\\.([1-9]|([1-9][0-9]))")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionString")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("WITSML", "1.3.1.1")]
    public partial class obj_trajectoryStation {
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string nameTrajectoryField;
        
        private refNameString targetField;
        
        private Energistics.DataAccess.Timestamp dTimStnField;
        
        private bool dTimStnFieldSpecified;
        
        private TrajStationType typeTrajStationField;
        
        private TypeSurveyTool typeSurveyToolField;
        
        private bool typeSurveyToolFieldSpecified;
        
        private measuredDepthCoord mdField;
        
        private wellVerticalDepthCoord tvdField;
        
        private planeAngleMeasure inclField;
        
        private planeAngleMeasure aziField;
        
        private planeAngleMeasure mtfField;
        
        private planeAngleMeasure gtfField;
        
        private lengthMeasure dispNsField;
        
        private lengthMeasure dispEwField;
        
        private lengthMeasure vertSectField;
        
        private anglePerLengthMeasure dlsField;
        
        private anglePerLengthMeasure rateTurnField;
        
        private anglePerLengthMeasure rateBuildField;
        
        private measuredDepthCoord mdDeltaField;
        
        private wellVerticalDepthCoord tvdDeltaField;
        
        private string modelToolErrorField;
        
        private accelerationLinearMeasure gravTotalUncertField;
        
        private planeAngleMeasure dipAngleUncertField;
        
        private magneticInductionMeasure magTotalUncertField;
        
        private bool gravAccelCorUsedField;
        
        private bool gravAccelCorUsedFieldSpecified;
        
        private bool magXAxialCorUsedField;
        
        private bool magXAxialCorUsedFieldSpecified;
        
        private bool sagCorUsedField;
        
        private bool sagCorUsedFieldSpecified;
        
        private bool magDrlstrCorUsedField;
        
        private bool magDrlstrCorUsedFieldSpecified;
        
        private accelerationLinearMeasure gravTotalFieldReferenceField;
        
        private magneticInductionMeasure magTotalFieldReferenceField;
        
        private planeAngleMeasure magDipAngleReferenceField;
        
        private string magModelUsedField;
        
        private string magModelValidField;
        
        private string geoModelUsedField;
        
        private TrajStationStatus statusTrajStationField;
        
        private bool statusTrajStationFieldSpecified;
        
        private cs_stnTrajRawData rawDataField;
        
        private cs_stnTrajCorUsed corUsedField;
        
        private cs_stnTrajValid validField;
        
        private cs_stnTrajMatrixCov matrixCovField;
        
        private cs_location[] locationField;
        
        private cs_refWellboreTrajectoryStation sourceStationField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidWellboreField;
        
        private string uidTrajectoryField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore that contains the trajectory.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore that contains the trajectory.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWellbore", DataType="nameString")]
        public string nameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the trajectory that contains the trajectory station.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the trajectory that contains the trajectory statio" +
            "n.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameTrajectory", DataType="nameString")]
        public string nameTrajectory {
            get {
                return this.nameTrajectoryField;
            }
            set {
                this.nameTrajectoryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the intended target of this station.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the intended target of this station.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("target", DataType="refNameString")]
        public refNameString target {
            get {
                return this.targetField;
            }
            set {
                this.targetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time the station was measured or created.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time the station was measured or created.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimStn", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimStn {
            get {
                return this.dTimStnField;
            }
            set {
                this.dTimStnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimStnSpecified {
            get {
                return this.dTimStnFieldSpecified;
            }
            set {
                this.dTimStnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of survey station.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Type of survey station.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeTrajStation", DataType="TrajStationType")]
        public TrajStationType typeTrajStation {
            get {
                return this.typeTrajStationField;
            }
            set {
                this.typeTrajStationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The type of tool used for the measurements.</summary>
        [System.ComponentModel.DescriptionAttribute("The type of tool used for the measurements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeSurveyTool", DataType="TypeSurveyTool")]
        public TypeSurveyTool typeSurveyTool {
            get {
                return this.typeSurveyToolField;
            }
            set {
                this.typeSurveyToolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSurveyToolSpecified {
            get {
                return this.typeSurveyToolFieldSpecified;
            }
            set {
                this.typeSurveyToolFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth of measurement from the drill datum.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Measured depth of measurement from the drill datum.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("md", DataType="measuredDepthCoord")]
        public measuredDepthCoord md {
            get {
                return this.mdField;
            }
            set {
                this.mdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Vertical depth of the measurements.</summary>
        [System.ComponentModel.DescriptionAttribute("Vertical depth of the measurements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvd", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvd {
            get {
                return this.tvdField;
            }
            set {
                this.tvdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hole inclination, measured from vertical.</summary>
        [System.ComponentModel.DescriptionAttribute("Hole inclination, measured from vertical.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("incl", DataType="planeAngleMeasure")]
        public planeAngleMeasure incl {
            get {
                return this.inclField;
            }
            set {
                this.inclField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hole azimuth. Corrected to wells azimuth reference.</summary>
        [System.ComponentModel.DescriptionAttribute("Hole azimuth. Corrected to wells azimuth reference.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("azi", DataType="planeAngleMeasure")]
        public planeAngleMeasure azi {
            get {
                return this.aziField;
            }
            set {
                this.aziField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Toolface angle (magnetic).</summary>
        [System.ComponentModel.DescriptionAttribute("Toolface angle (magnetic).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mtf", DataType="planeAngleMeasure")]
        public planeAngleMeasure mtf {
            get {
                return this.mtfField;
            }
            set {
                this.mtfField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Toolface angle (gravity).</summary>
        [System.ComponentModel.DescriptionAttribute("Toolface angle (gravity).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gtf", DataType="planeAngleMeasure")]
        public planeAngleMeasure gtf {
            get {
                return this.gtfField;
            }
            set {
                this.gtfField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>North-south offset, positive to the North.  This is relative to wellLocation with a North axis orientation of aziRef. If a displacement with respect to a different point is desired then define a localCRS and specify local coordinates in location.</summary>
        [System.ComponentModel.DescriptionAttribute("North-south offset, positive to the North.  This is relative to wellLocation with" +
            " a North axis orientation of aziRef. If a displacement with respect to a differe" +
            "nt point is desired then define a localCRS and specify local coordinates in loca" +
            "tion.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dispNs", DataType="lengthMeasure")]
        public lengthMeasure dispNs {
            get {
                return this.dispNsField;
            }
            set {
                this.dispNsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>East-west offset, positive to the East. This is relative to wellLocation with a North axis orientation of aziRef.  If a displacement with respect to a different point is desired then define a localCRS and specify local coordinates in location.</summary>
        [System.ComponentModel.DescriptionAttribute("East-west offset, positive to the East. This is relative to wellLocation with a N" +
            "orth axis orientation of aziRef.  If a displacement with respect to a different " +
            "point is desired then define a localCRS and specify local coordinates in locatio" +
            "n.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dispEw", DataType="lengthMeasure")]
        public lengthMeasure dispEw {
            get {
                return this.dispEwField;
            }
            set {
                this.dispEwField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance along vertical section azimuth plane.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance along vertical section azimuth plane.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("vertSect", DataType="lengthMeasure")]
        public lengthMeasure vertSect {
            get {
                return this.vertSectField;
            }
            set {
                this.vertSectField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Dogleg severity.</summary>
        [System.ComponentModel.DescriptionAttribute("Dogleg severity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dls", DataType="anglePerLengthMeasure")]
        public anglePerLengthMeasure dls {
            get {
                return this.dlsField;
            }
            set {
                this.dlsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Turn rate, radius of curvature computation.</summary>
        [System.ComponentModel.DescriptionAttribute("Turn rate, radius of curvature computation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rateTurn", DataType="anglePerLengthMeasure")]
        public anglePerLengthMeasure rateTurn {
            get {
                return this.rateTurnField;
            }
            set {
                this.rateTurnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Build Rate, radius of curvature computation.</summary>
        [System.ComponentModel.DescriptionAttribute("Build Rate, radius of curvature computation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rateBuild", DataType="anglePerLengthMeasure")]
        public anglePerLengthMeasure rateBuild {
            get {
                return this.rateBuildField;
            }
            set {
                this.rateBuildField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Delta measured depth from previous station.</summary>
        [System.ComponentModel.DescriptionAttribute("Delta measured depth from previous station.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdDelta", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdDelta {
            get {
                return this.mdDeltaField;
            }
            set {
                this.mdDeltaField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Delta true vertical depth from previous station.</summary>
        [System.ComponentModel.DescriptionAttribute("Delta true vertical depth from previous station.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvdDelta", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvdDelta {
            get {
                return this.tvdDeltaField;
            }
            set {
                this.tvdDeltaField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Tool error model used to compute covariance matrix.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Tool error model used to compute covariance matrix.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("modelToolError", DataType="commentString")]
        public string modelToolError {
            get {
                return this.modelToolErrorField;
            }
            set {
                this.modelToolErrorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Survey tool gravity uncertainty.</summary>
        [System.ComponentModel.DescriptionAttribute("Survey tool gravity uncertainty.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gravTotalUncert", DataType="accelerationLinearMeasure")]
        public accelerationLinearMeasure gravTotalUncert {
            get {
                return this.gravTotalUncertField;
            }
            set {
                this.gravTotalUncertField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Survey tool dip uncertainty.</summary>
        [System.ComponentModel.DescriptionAttribute("Survey tool dip uncertainty.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dipAngleUncert", DataType="planeAngleMeasure")]
        public planeAngleMeasure dipAngleUncert {
            get {
                return this.dipAngleUncertField;
            }
            set {
                this.dipAngleUncertField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Survey tool magnetic uncertainty.</summary>
        [System.ComponentModel.DescriptionAttribute("Survey tool magnetic uncertainty.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("magTotalUncert", DataType="magneticInductionMeasure")]
        public magneticInductionMeasure magTotalUncert {
            get {
                return this.magTotalUncertField;
            }
            set {
                this.magTotalUncertField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Was an accelerometer alignment correction applied to survey computation?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Was an accelerometer alignment correction applied to survey computation?   Values" +
            " are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gravAccelCorUsed", DataType="logicalBoolean")]
        public bool gravAccelCorUsed {
            get {
                return this.gravAccelCorUsedField;
            }
            set {
                this.gravAccelCorUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gravAccelCorUsedSpecified {
            get {
                return this.gravAccelCorUsedFieldSpecified;
            }
            set {
                this.gravAccelCorUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Was a magnetometer alignment correction applied to survey computation?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Was a magnetometer alignment correction applied to survey computation?   Values a" +
            "re \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("magXAxialCorUsed", DataType="logicalBoolean")]
        public bool magXAxialCorUsed {
            get {
                return this.magXAxialCorUsedField;
            }
            set {
                this.magXAxialCorUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool magXAxialCorUsedSpecified {
            get {
                return this.magXAxialCorUsedFieldSpecified;
            }
            set {
                this.magXAxialCorUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Was a bottom hole assembly sag correction applied to the survey computation?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Was a bottom hole assembly sag correction applied to the survey computation?   Va" +
            "lues are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sagCorUsed", DataType="logicalBoolean")]
        public bool sagCorUsed {
            get {
                return this.sagCorUsedField;
            }
            set {
                this.sagCorUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sagCorUsedSpecified {
            get {
                return this.sagCorUsedFieldSpecified;
            }
            set {
                this.sagCorUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Was a drillstring magnetism correction applied to survey computation?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Was a drillstring magnetism correction applied to survey computation?   Values ar" +
            "e \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("magDrlstrCorUsed", DataType="logicalBoolean")]
        public bool magDrlstrCorUsed {
            get {
                return this.magDrlstrCorUsedField;
            }
            set {
                this.magDrlstrCorUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool magDrlstrCorUsedSpecified {
            get {
                return this.magDrlstrCorUsedFieldSpecified;
            }
            set {
                this.magDrlstrCorUsedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gravitational field theoretical/reference value.</summary>
        [System.ComponentModel.DescriptionAttribute("Gravitational field theoretical/reference value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gravTotalFieldReference", DataType="accelerationLinearMeasure")]
        public accelerationLinearMeasure gravTotalFieldReference {
            get {
                return this.gravTotalFieldReferenceField;
            }
            set {
                this.gravTotalFieldReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Geomagnetic field theoretical/reference value.</summary>
        [System.ComponentModel.DescriptionAttribute("Geomagnetic field theoretical/reference value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("magTotalFieldReference", DataType="magneticInductionMeasure")]
        public magneticInductionMeasure magTotalFieldReference {
            get {
                return this.magTotalFieldReferenceField;
            }
            set {
                this.magTotalFieldReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Magnetic dip angle theoretical/reference value.</summary>
        [System.ComponentModel.DescriptionAttribute("Magnetic dip angle theoretical/reference value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("magDipAngleReference", DataType="planeAngleMeasure")]
        public planeAngleMeasure magDipAngleReference {
            get {
                return this.magDipAngleReferenceField;
            }
            set {
                this.magDipAngleReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Geomagnetic model used.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Geomagnetic model used.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("magModelUsed", DataType="nameString")]
        public string magModelUsed {
            get {
                return this.magModelUsedField;
            }
            set {
                this.magModelUsedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Current valid interval for the geomagnetic model used.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Current valid interval for the geomagnetic model used.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("magModelValid", DataType="nameString")]
        public string magModelValid {
            get {
                return this.magModelValidField;
            }
            set {
                this.magModelValidField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gravitational model used.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Gravitational model used.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("geoModelUsed", DataType="nameString")]
        public string geoModelUsed {
            get {
                return this.geoModelUsedField;
            }
            set {
                this.geoModelUsedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Status of the station.</summary>
        [System.ComponentModel.DescriptionAttribute("Status of the station.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("statusTrajStation", DataType="TrajStationStatus")]
        public TrajStationStatus statusTrajStation {
            get {
                return this.statusTrajStationField;
            }
            set {
                this.statusTrajStationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusTrajStationSpecified {
            get {
                return this.statusTrajStationFieldSpecified;
            }
            set {
                this.statusTrajStationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Applies only to measured magnetic stations.</summary>
        [System.ComponentModel.DescriptionAttribute("Applies only to measured magnetic stations.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rawData", DataType="cs_stnTrajRawData")]
        public cs_stnTrajRawData rawData {
            get {
                return this.rawDataField;
            }
            set {
                this.rawDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Applies only to measured magnetic stations.</summary>
        [System.ComponentModel.DescriptionAttribute("Applies only to measured magnetic stations.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("corUsed", DataType="cs_stnTrajCorUsed")]
        public cs_stnTrajCorUsed corUsed {
            get {
                return this.corUsedField;
            }
            set {
                this.corUsedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Applies only to measured magnetic stations.</summary>
        [System.ComponentModel.DescriptionAttribute("Applies only to measured magnetic stations.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("valid", DataType="cs_stnTrajValid")]
        public cs_stnTrajValid valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Covariance matrix for error model.</summary>
        [System.ComponentModel.DescriptionAttribute("Covariance matrix for error model.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("matrixCov", DataType="cs_stnTrajMatrixCov")]
        public cs_stnTrajMatrixCov matrixCov {
            get {
                return this.matrixCovField;
            }
            set {
                this.matrixCovField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The 2D coordinates of the item.  Note that within the context of trajectory, the "original" coordinates are inherently local coordinates as defined above.</summary>
        [System.Xml.Serialization.XmlElementAttribute("location")]
        [System.ComponentModel.DescriptionAttribute("The 2D coordinates of the item.  Note that within the context of trajectory, the " +
            "\"original\" coordinates are inherently local coordinates as defined above.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("location", DataType="cs_location")]
        public cs_location[] location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the trajectoryStation from which this station was derived. The trajectoryStation may be in another wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the trajectoryStation from which this station was derived. The traje" +
            "ctoryStation may be in another wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sourceStation", DataType="cs_refWellboreTrajectoryStation")]
        public cs_refWellboreTrajectoryStation sourceStation {
            get {
                return this.sourceStationField;
            }
            set {
                this.sourceStationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the wellbore. This uniquely represents  the wellbore referenced by the (possibly non-unique) nameWellbore.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the wellbore. This uniquely represents  the wellbore refere" +
            "nced by the (possibly non-unique) nameWellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWellbore", DataType="uidString")]
        public string uidWellbore {
            get {
                return this.uidWellboreField;
            }
            set {
                this.uidWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the trajectory. This uniquely represents  the trajectory referenced by the (possibly non-unique) nameTraj.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the trajectory. This uniquely represents  the trajectory re" +
            "ferenced by the (possibly non-unique) nameTraj.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidTrajectory", DataType="uidString")]
        public string uidTrajectory {
            get {
                return this.uidTrajectoryField;
            }
            set {
                this.uidTrajectoryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [System.Xml.Serialization.XmlRootAttribute("tubulars", Namespace="http://www.witsml.org/schemas/131", IsNullable=false)]
    public partial class obj_tubulars {
        
        private cs_documentInfo documentInfoField;
        
        private obj_tubular[] tubularField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A single tubular (assembly).  This represents the "transient" assemblies used in drilling a well as opposed to the "fixed" assemblies (see wbGeometry).</summary>
        [System.Xml.Serialization.XmlElementAttribute("tubular")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A single tubular (assembly).  This represents the \"transient\" assemblies used in " +
            "drilling a well as opposed to the \"fixed\" assemblies (see wbGeometry).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tubular", DataType="obj_tubular")]
        public obj_tubular[] tubular {
            get {
                return this.tubularField;
            }
            set {
                this.tubularField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.3\\.1\\.([1-9]|([1-9][0-9]))")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionString")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("WITSML", "1.3.1.1")]
    public partial class obj_tubular {
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string nameField;
        
        private TubularAssembly typeTubularAssyField;
        
        private bool valveFloatField;
        
        private bool valveFloatFieldSpecified;
        
        private bool sourceNuclearField;
        
        private bool sourceNuclearFieldSpecified;
        
        private lengthMeasure diaHoleAssyField;
        
        private cs_tubularComponent[] tubularComponentField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidWellboreField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore that contains the tubular.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore that contains the tubular.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWellbore", DataType="nameString")]
        public string nameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the tubular (assembly).</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the tubular (assembly).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of tubular assembly.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Type of tubular assembly.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeTubularAssy", DataType="TubularAssembly")]
        public TubularAssembly typeTubularAssy {
            get {
                return this.typeTubularAssyField;
            }
            set {
                this.typeTubularAssyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is float valve present?  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Is float valve present?  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("valveFloat", DataType="logicalBoolean")]
        public bool valveFloat {
            get {
                return this.valveFloatField;
            }
            set {
                this.valveFloatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valveFloatSpecified {
            get {
                return this.valveFloatFieldSpecified;
            }
            set {
                this.valveFloatFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is nuclear tool present?  Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Is nuclear tool present?  Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sourceNuclear", DataType="logicalBoolean")]
        public bool sourceNuclear {
            get {
                return this.sourceNuclearField;
            }
            set {
                this.sourceNuclearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sourceNuclearSpecified {
            get {
                return this.sourceNuclearFieldSpecified;
            }
            set {
                this.sourceNuclearFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum hole size generated by assembly.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum hole size generated by assembly.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("diaHoleAssy", DataType="lengthMeasure")]
        public lengthMeasure diaHoleAssy {
            get {
                return this.diaHoleAssyField;
            }
            set {
                this.diaHoleAssyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Container element for the tubular component elements.</summary>
        [System.Xml.Serialization.XmlElementAttribute("tubularComponent")]
        [System.ComponentModel.DescriptionAttribute("Container element for the tubular component elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tubularComponent", DataType="cs_tubularComponent")]
        public cs_tubularComponent[] tubularComponent {
            get {
                return this.tubularComponentField;
            }
            set {
                this.tubularComponentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the wellbore. This uniquely represents  the wellbore referenced by the (possibly non-unique) nameWellbore.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the wellbore. This uniquely represents  the wellbore refere" +
            "nced by the (possibly non-unique) nameWellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWellbore", DataType="uidString")]
        public string uidWellbore {
            get {
                return this.uidWellboreField;
            }
            set {
                this.uidWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_tubularComponent {
        
        private TubularComponent typeTubularCompField;
        
        private short sequenceField;
        
        private string descriptionField;
        
        private lengthMeasure idField;
        
        private lengthMeasure odField;
        
        private lengthMeasure odMxField;
        
        private lengthMeasure lenField;
        
        private lengthMeasure lenJointAvField;
        
        private short numJointStandField;
        
        private bool numJointStandFieldSpecified;
        
        private massPerLengthMeasure wtPerLenField;
        
        private string gradeField;
        
        private lengthMeasure odDriftField;
        
        private pressureMeasure tensYieldField;
        
        private pressureMeasure tqYieldField;
        
        private pressureMeasure stressFatigField;
        
        private lengthMeasure lenFishneckField;
        
        private lengthMeasure idFishneckField;
        
        private lengthMeasure odFishneckField;
        
        private volumeMeasure dispField;
        
        private pressureMeasure presBurstField;
        
        private pressureMeasure presCollapseField;
        
        private string classServiceField;
        
        private lengthPerLengthMeasure wearWallField;
        
        private lengthMeasure thickWallField;
        
        private BoxPinConfig configConField;
        
        private bool configConFieldSpecified;
        
        private forcePerLengthMeasure bendStiffnessField;
        
        private forcePerLengthMeasure axialStiffnessField;
        
        private forcePerLengthMeasure torsionalStiffnessField;
        
        private MaterialType typeMaterialField;
        
        private bool typeMaterialFieldSpecified;
        
        private anglePerLengthMeasure doglegMxField;
        
        private string vendorField;
        
        private string modelField;
        
        private cs_nameTag[] nameTagField;
        
        private cs_bitRecord bitRecordField;
        
        private areaMeasure areaNozzleFlowField;
        
        private cs_nozzle[] nozzleField;
        
        private cs_connection[] connectionField;
        
        private cs_jar jarField;
        
        private cs_mwdTool mwdToolField;
        
        private cs_motor motorField;
        
        private cs_stabilizer[] stabilizerField;
        
        private cs_bend[] bendField;
        
        private cs_holeOpener holeOpenerField;
        
        private cs_rotarySteerableTool rotarySteerableToolField;
        
        private cs_customData customDataField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Type of component.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Type of component.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeTubularComp", DataType="TubularComponent")]
        public TubularComponent typeTubularComp {
            get {
                return this.typeTubularCompField;
            }
            set {
                this.typeTubularCompField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The sequence within which the components entered the hole. That is, a sequence number of 1 entered first, 2 entered next, etc.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("The sequence within which the components entered the hole. That is, a sequence nu" +
            "mber of 1 entered first, 2 entered next, etc.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sequence", DataType="positiveCount")]
        public short sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of item and details.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Description of item and details.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="commentString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Internal diameter of object.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Internal diameter of object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("id", DataType="lengthMeasure")]
        public lengthMeasure id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Outside diameter of the body of the item.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Outside diameter of the body of the item.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("od", DataType="lengthMeasure")]
        public lengthMeasure od {
            get {
                return this.odField;
            }
            set {
                this.odField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum outside diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum outside diameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("odMx", DataType="lengthMeasure")]
        public lengthMeasure odMx {
            get {
                return this.odMxField;
            }
            set {
                this.odMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of the item.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Length of the item.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("len", DataType="lengthMeasure")]
        public lengthMeasure len {
            get {
                return this.lenField;
            }
            set {
                this.lenField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Average length of joint for tubulars.</summary>
        [System.ComponentModel.DescriptionAttribute("Average length of joint for tubulars.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenJointAv", DataType="lengthMeasure")]
        public lengthMeasure lenJointAv {
            get {
                return this.lenJointAvField;
            }
            set {
                this.lenJointAvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of joints per stand of tubular.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of joints per stand of tubular.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numJointStand", DataType="nonNegativeCount")]
        public short numJointStand {
            get {
                return this.numJointStandField;
            }
            set {
                this.numJointStandField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numJointStandSpecified {
            get {
                return this.numJointStandFieldSpecified;
            }
            set {
                this.numJointStandFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Weight per unit length.</summary>
        [System.ComponentModel.DescriptionAttribute("Weight per unit length.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wtPerLen", DataType="massPerLengthMeasure")]
        public massPerLengthMeasure wtPerLen {
            get {
                return this.wtPerLenField;
            }
            set {
                this.wtPerLenField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Material grade for the tubular section.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Material grade for the tubular section.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("grade", DataType="str32")]
        public string grade {
            get {
                return this.gradeField;
            }
            set {
                this.gradeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum pass through diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum pass through diameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("odDrift", DataType="lengthMeasure")]
        public lengthMeasure odDrift {
            get {
                return this.odDriftField;
            }
            set {
                this.odDriftField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Yield stress of steel - worn stress.</summary>
        [System.ComponentModel.DescriptionAttribute("Yield stress of steel - worn stress.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tensYield", DataType="pressureMeasure")]
        public pressureMeasure tensYield {
            get {
                return this.tensYieldField;
            }
            set {
                this.tensYieldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Torque yield stress - worn stress.</summary>
        [System.ComponentModel.DescriptionAttribute("Torque yield stress - worn stress.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tqYield", DataType="pressureMeasure")]
        public pressureMeasure tqYield {
            get {
                return this.tqYieldField;
            }
            set {
                this.tqYieldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fatigue endurance limit.</summary>
        [System.ComponentModel.DescriptionAttribute("Fatigue endurance limit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stressFatig", DataType="pressureMeasure")]
        public pressureMeasure stressFatig {
            get {
                return this.stressFatigField;
            }
            set {
                this.stressFatigField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fish neck length.</summary>
        [System.ComponentModel.DescriptionAttribute("Fish neck length.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenFishneck", DataType="lengthMeasure")]
        public lengthMeasure lenFishneck {
            get {
                return this.lenFishneckField;
            }
            set {
                this.lenFishneckField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fish neck inside diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Fish neck inside diameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("idFishneck", DataType="lengthMeasure")]
        public lengthMeasure idFishneck {
            get {
                return this.idFishneckField;
            }
            set {
                this.idFishneckField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Fish neck outside diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Fish neck outside diameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("odFishneck", DataType="lengthMeasure")]
        public lengthMeasure odFishneck {
            get {
                return this.odFishneckField;
            }
            set {
                this.odFishneckField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Closed end displacement.</summary>
        [System.ComponentModel.DescriptionAttribute("Closed end displacement.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("disp", DataType="volumeMeasure")]
        public volumeMeasure disp {
            get {
                return this.dispField;
            }
            set {
                this.dispField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Burst pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Burst pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presBurst", DataType="pressureMeasure")]
        public pressureMeasure presBurst {
            get {
                return this.presBurstField;
            }
            set {
                this.presBurstField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Collapse pressure.</summary>
        [System.ComponentModel.DescriptionAttribute("Collapse pressure.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presCollapse", DataType="pressureMeasure")]
        public pressureMeasure presCollapse {
            get {
                return this.presCollapseField;
            }
            set {
                this.presCollapseField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Service class.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Service class.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("classService", DataType="str32")]
        public string classService {
            get {
                return this.classServiceField;
            }
            set {
                this.classServiceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Wall thickness wear (commonly in percent).</summary>
        [System.ComponentModel.DescriptionAttribute("Wall thickness wear (commonly in percent).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wearWall", DataType="lengthPerLengthMeasure")]
        public lengthPerLengthMeasure wearWall {
            get {
                return this.wearWallField;
            }
            set {
                this.wearWallField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Wall thickness.</summary>
        [System.ComponentModel.DescriptionAttribute("Wall thickness.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("thickWall", DataType="lengthMeasure")]
        public lengthMeasure thickWall {
            get {
                return this.thickWallField;
            }
            set {
                this.thickWallField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Box/Pin configuration.</summary>
        [System.ComponentModel.DescriptionAttribute("Box/Pin configuration.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("configCon", DataType="BoxPinConfig")]
        public BoxPinConfig configCon {
            get {
                return this.configConField;
            }
            set {
                this.configConField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool configConSpecified {
            get {
                return this.configConFieldSpecified;
            }
            set {
                this.configConFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bending stiffness of tubular.</summary>
        [System.ComponentModel.DescriptionAttribute("Bending stiffness of tubular.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bendStiffness", DataType="forcePerLengthMeasure")]
        public forcePerLengthMeasure bendStiffness {
            get {
                return this.bendStiffnessField;
            }
            set {
                this.bendStiffnessField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Axial stiffness of tubular.</summary>
        [System.ComponentModel.DescriptionAttribute("Axial stiffness of tubular.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("axialStiffness", DataType="forcePerLengthMeasure")]
        public forcePerLengthMeasure axialStiffness {
            get {
                return this.axialStiffnessField;
            }
            set {
                this.axialStiffnessField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Torsional stiffness of tubular.</summary>
        [System.ComponentModel.DescriptionAttribute("Torsional stiffness of tubular.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("torsionalStiffness", DataType="forcePerLengthMeasure")]
        public forcePerLengthMeasure torsionalStiffness {
            get {
                return this.torsionalStiffnessField;
            }
            set {
                this.torsionalStiffnessField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of material.</summary>
        [System.ComponentModel.DescriptionAttribute("Type of material.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeMaterial", DataType="MaterialType")]
        public MaterialType typeMaterial {
            get {
                return this.typeMaterialField;
            }
            set {
                this.typeMaterialField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeMaterialSpecified {
            get {
                return this.typeMaterialFieldSpecified;
            }
            set {
                this.typeMaterialFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum dogleg severity.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum dogleg severity.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("doglegMx", DataType="anglePerLengthMeasure")]
        public anglePerLengthMeasure doglegMx {
            get {
                return this.doglegMxField;
            }
            set {
                this.doglegMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of vendor.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of vendor.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("vendor", DataType="nameString")]
        public string vendor {
            get {
                return this.vendorField;
            }
            set {
                this.vendorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Component name from manufacturer.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Component name from manufacturer.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("model", DataType="nameString")]
        public string model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An identification tag for the component tool. A serial number is a type of identification tag however some tags contain many pieces of information. This structure just identifies the tag and does not describe the contents.</summary>
        [System.Xml.Serialization.XmlElementAttribute("nameTag")]
        [System.ComponentModel.DescriptionAttribute("An identification tag for the component tool. A serial number is a type of identi" +
            "fication tag however some tags contain many pieces of information. This structur" +
            "e just identifies the tag and does not describe the contents.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameTag", DataType="cs_nameTag")]
        public cs_nameTag[] nameTag {
            get {
                return this.nameTagField;
            }
            set {
                this.nameTagField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bit object.</summary>
        [System.ComponentModel.DescriptionAttribute("Bit object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bitRecord", DataType="cs_bitRecord")]
        public cs_bitRecord bitRecord {
            get {
                return this.bitRecordField;
            }
            set {
                this.bitRecordField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Total area of nozzles.</summary>
        [System.ComponentModel.DescriptionAttribute("Total area of nozzles.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("areaNozzleFlow", DataType="areaMeasure")]
        public areaMeasure areaNozzleFlow {
            get {
                return this.areaNozzleFlowField;
            }
            set {
                this.areaNozzleFlowField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Set of nozzle objects.  Examples of items that have nozzles are bit, hole opener, circulation sub, jetting sub, pressure relief sub.</summary>
        [System.Xml.Serialization.XmlElementAttribute("nozzle")]
        [System.ComponentModel.DescriptionAttribute("Set of nozzle objects.  Examples of items that have nozzles are bit, hole opener," +
            " circulation sub, jetting sub, pressure relief sub.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nozzle", DataType="cs_nozzle")]
        public cs_nozzle[] nozzle {
            get {
                return this.nozzleField;
            }
            set {
                this.nozzleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Connection object.</summary>
        [System.Xml.Serialization.XmlElementAttribute("connection")]
        [System.ComponentModel.DescriptionAttribute("Connection object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("connection", DataType="cs_connection")]
        public cs_connection[] connection {
            get {
                return this.connectionField;
            }
            set {
                this.connectionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Jar object.</summary>
        [System.ComponentModel.DescriptionAttribute("Jar object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("jar", DataType="cs_jar")]
        public cs_jar jar {
            get {
                return this.jarField;
            }
            set {
                this.jarField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>MWD (measurement while drilling) tool object.</summary>
        [System.ComponentModel.DescriptionAttribute("MWD (measurement while drilling) tool object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mwdTool", DataType="cs_mwdTool")]
        public cs_mwdTool mwdTool {
            get {
                return this.mwdToolField;
            }
            set {
                this.mwdToolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Motor object.</summary>
        [System.ComponentModel.DescriptionAttribute("Motor object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("motor", DataType="cs_motor")]
        public cs_motor motor {
            get {
                return this.motorField;
            }
            set {
                this.motorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Stabilizer object.</summary>
        [System.Xml.Serialization.XmlElementAttribute("stabilizer")]
        [System.ComponentModel.DescriptionAttribute("Stabilizer object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stabilizer", DataType="cs_stabilizer")]
        public cs_stabilizer[] stabilizer {
            get {
                return this.stabilizerField;
            }
            set {
                this.stabilizerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bend object.</summary>
        [System.Xml.Serialization.XmlElementAttribute("bend")]
        [System.ComponentModel.DescriptionAttribute("Bend object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bend", DataType="cs_bend")]
        public cs_bend[] bend {
            get {
                return this.bendField;
            }
            set {
                this.bendField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Hole opener object.</summary>
        [System.ComponentModel.DescriptionAttribute("Hole opener object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("holeOpener", DataType="cs_holeOpener")]
        public cs_holeOpener holeOpener {
            get {
                return this.holeOpenerField;
            }
            set {
                this.holeOpenerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Rotary Steerable Tool.</summary>
        [System.ComponentModel.DescriptionAttribute("Rotary Steerable Tool.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rotarySteerableTool", DataType="cs_rotarySteerableTool")]
        public cs_rotarySteerableTool rotarySteerableTool {
            get {
                return this.rotarySteerableToolField;
            }
            set {
                this.rotarySteerableToolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_bitRecord {
        
        private string numBitField;
        
        private lengthMeasure diaBitField;
        
        private lengthMeasure diaPassThruField;
        
        private lengthMeasure diaPilotField;
        
        private string manufacturerField;
        
        private BitType typeBitField;
        
        private bool typeBitFieldSpecified;
        
        private cost costField;
        
        private string codeIADCField;
        
        private short condInitInnerField;
        
        private bool condInitInnerFieldSpecified;
        
        private short condInitOuterField;
        
        private bool condInitOuterFieldSpecified;
        
        private BitDullCode condInitDullField;
        
        private bool condInitDullFieldSpecified;
        
        private string condInitLocationField;
        
        private string condInitBearingField;
        
        private string condInitGaugeField;
        
        private string condInitOtherField;
        
        private BitReasonPulled condInitReasonField;
        
        private bool condInitReasonFieldSpecified;
        
        private short condFinalInnerField;
        
        private bool condFinalInnerFieldSpecified;
        
        private short condFinalOuterField;
        
        private bool condFinalOuterFieldSpecified;
        
        private BitDullCode condFinalDullField;
        
        private bool condFinalDullFieldSpecified;
        
        private string condFinalLocationField;
        
        private string condFinalBearingField;
        
        private string condFinalGaugeField;
        
        private string condFinalOtherField;
        
        private BitReasonPulled condFinalReasonField;
        
        private bool condFinalReasonFieldSpecified;
        
        private string driveField;
        
        private string bitClassField;
        
        private cs_customData customDataField;
        
        /// <remarks/>
        /// <summary>Bit number and rerun number e.g. "4.1" for the first rerun of bit 4.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Bit number and rerun number e.g. \"4.1\" for the first rerun of bit 4.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numBit", DataType="str32")]
        public string numBit {
            get {
                return this.numBitField;
            }
            set {
                this.numBitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Diameter of drilled hole.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Diameter of drilled hole.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("diaBit", DataType="lengthMeasure")]
        public lengthMeasure diaBit {
            get {
                return this.diaBitField;
            }
            set {
                this.diaBitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum hole or tubing which bit will pass through (for bi-center bits).</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum hole or tubing which bit will pass through (for bi-center bits).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("diaPassThru", DataType="lengthMeasure")]
        public lengthMeasure diaPassThru {
            get {
                return this.diaPassThruField;
            }
            set {
                this.diaPassThruField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Diameter of pilot bit (for bi-center bits).</summary>
        [System.ComponentModel.DescriptionAttribute("Diameter of pilot bit (for bi-center bits).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("diaPilot", DataType="lengthMeasure")]
        public lengthMeasure diaPilot {
            get {
                return this.diaPilotField;
            }
            set {
                this.diaPilotField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturer / supplier of the item.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturer / supplier of the item.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("manufacturer", DataType="nameString")]
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of bit.</summary>
        [System.ComponentModel.DescriptionAttribute("Type of bit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeBit", DataType="BitType")]
        public BitType typeBit {
            get {
                return this.typeBitField;
            }
            set {
                this.typeBitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeBitSpecified {
            get {
                return this.typeBitFieldSpecified;
            }
            set {
                this.typeBitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bit cost in local currency.</summary>
        [System.ComponentModel.DescriptionAttribute("Bit cost in local currency.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("cost", DataType="cost")]
        public cost cost {
            get {
                return this.costField;
            }
            set {
                this.costField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>IADC bit code.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("IADC bit code.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("codeIADC", DataType="str32")]
        public string codeIADC {
            get {
                return this.codeIADCField;
            }
            set {
                this.codeIADCField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Condition of inner tooth rows (inner 2/3 of bit) (0-8).</summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(0D, 8D)]
        [System.ComponentModel.DescriptionAttribute("Condition of inner tooth rows (inner 2/3 of bit) (0-8).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condInitInner", DataType="iadcIntegerCode")]
        public short condInitInner {
            get {
                return this.condInitInnerField;
            }
            set {
                this.condInitInnerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool condInitInnerSpecified {
            get {
                return this.condInitInnerFieldSpecified;
            }
            set {
                this.condInitInnerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Condition of outer tooth rows (outer 1/3 of bit) (0-8).</summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(0D, 8D)]
        [System.ComponentModel.DescriptionAttribute("Condition of outer tooth rows (outer 1/3 of bit) (0-8).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condInitOuter", DataType="iadcIntegerCode")]
        public short condInitOuter {
            get {
                return this.condInitOuterField;
            }
            set {
                this.condInitOuterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool condInitOuterSpecified {
            get {
                return this.condInitOuterFieldSpecified;
            }
            set {
                this.condInitOuterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Overall dull condition from IADC bit wear 2 character codes.</summary>
        [System.ComponentModel.DescriptionAttribute("Overall dull condition from IADC bit wear 2 character codes.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condInitDull", DataType="BitDullCode")]
        public BitDullCode condInitDull {
            get {
                return this.condInitDullField;
            }
            set {
                this.condInitDullField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool condInitDullSpecified {
            get {
                return this.condInitDullFieldSpecified;
            }
            set {
                this.condInitDullFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Row and cone numbers for items which need location information (e.g. Cracked Cone, Lost Cone etc).</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Row and cone numbers for items which need location information (e.g. Cracked Cone" +
            ", Lost Cone etc).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condInitLocation", DataType="str32")]
        public string condInitLocation {
            get {
                return this.condInitLocationField;
            }
            set {
                this.condInitLocationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Condition of bit bearings (integer 0-8 or E, F, N or X)).</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-8EFNX]")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(1)]
        [System.ComponentModel.DescriptionAttribute("Condition of bit bearings (integer 0-8 or E, F, N or X)).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condInitBearing", DataType="iadcBearingWearCode")]
        public string condInitBearing {
            get {
                return this.condInitBearingField;
            }
            set {
                this.condInitBearingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Condition of bit gauge in 1/16 of an inch. I = in gauge, else number of 16ths out of gauge.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Condition of bit gauge in 1/16 of an inch. I = in gauge, else number of 16ths out" +
            " of gauge.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condInitGauge", DataType="str32")]
        public string condInitGauge {
            get {
                return this.condInitGaugeField;
            }
            set {
                this.condInitGaugeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Other comments on bit condition from IADC list (BitDullCode in standard list).</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Other comments on bit condition from IADC list (BitDullCode in standard list).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condInitOther", DataType="str32")]
        public string condInitOther {
            get {
                return this.condInitOtherField;
            }
            set {
                this.condInitOtherField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reason bit was pulled from IADC codes.</summary>
        [System.ComponentModel.DescriptionAttribute("Reason bit was pulled from IADC codes.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condInitReason", DataType="BitReasonPulled")]
        public BitReasonPulled condInitReason {
            get {
                return this.condInitReasonField;
            }
            set {
                this.condInitReasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool condInitReasonSpecified {
            get {
                return this.condInitReasonFieldSpecified;
            }
            set {
                this.condInitReasonFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Condition of inner tooth rows (inner 2/3 of bit) (0-8).</summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(0D, 8D)]
        [System.ComponentModel.DescriptionAttribute("Condition of inner tooth rows (inner 2/3 of bit) (0-8).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condFinalInner", DataType="iadcIntegerCode")]
        public short condFinalInner {
            get {
                return this.condFinalInnerField;
            }
            set {
                this.condFinalInnerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool condFinalInnerSpecified {
            get {
                return this.condFinalInnerFieldSpecified;
            }
            set {
                this.condFinalInnerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Condition of outer tooth rows (outer 1/3 of bit) (0-8).</summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(0D, 8D)]
        [System.ComponentModel.DescriptionAttribute("Condition of outer tooth rows (outer 1/3 of bit) (0-8).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condFinalOuter", DataType="iadcIntegerCode")]
        public short condFinalOuter {
            get {
                return this.condFinalOuterField;
            }
            set {
                this.condFinalOuterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool condFinalOuterSpecified {
            get {
                return this.condFinalOuterFieldSpecified;
            }
            set {
                this.condFinalOuterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Overall dull condition from IADC bit wear 2 character codes.</summary>
        [System.ComponentModel.DescriptionAttribute("Overall dull condition from IADC bit wear 2 character codes.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condFinalDull", DataType="BitDullCode")]
        public BitDullCode condFinalDull {
            get {
                return this.condFinalDullField;
            }
            set {
                this.condFinalDullField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool condFinalDullSpecified {
            get {
                return this.condFinalDullFieldSpecified;
            }
            set {
                this.condFinalDullFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Row and cone numbers for items which need location information (e.g. Cracked Cone, Lost Cone etc).</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Row and cone numbers for items which need location information (e.g. Cracked Cone" +
            ", Lost Cone etc).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condFinalLocation", DataType="str32")]
        public string condFinalLocation {
            get {
                return this.condFinalLocationField;
            }
            set {
                this.condFinalLocationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Condition of bit bearings (integer 0-8 or E, F, N or X).</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-8EFNX]")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(1)]
        [System.ComponentModel.DescriptionAttribute("Condition of bit bearings (integer 0-8 or E, F, N or X).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condFinalBearing", DataType="iadcBearingWearCode")]
        public string condFinalBearing {
            get {
                return this.condFinalBearingField;
            }
            set {
                this.condFinalBearingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Condition of bit gauge in 1/16 of a inch. I = in gauge, else number of 16ths out of gauge.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Condition of bit gauge in 1/16 of a inch. I = in gauge, else number of 16ths out " +
            "of gauge.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condFinalGauge", DataType="str32")]
        public string condFinalGauge {
            get {
                return this.condFinalGaugeField;
            }
            set {
                this.condFinalGaugeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Other comments on bit condition from IADC list (BitDullCode in Standard LISTS).</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Other comments on bit condition from IADC list (BitDullCode in Standard LISTS).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condFinalOther", DataType="str32")]
        public string condFinalOther {
            get {
                return this.condFinalOtherField;
            }
            set {
                this.condFinalOtherField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Reason bit was pulled from IADC codes.</summary>
        [System.ComponentModel.DescriptionAttribute("Reason bit was pulled from IADC codes.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("condFinalReason", DataType="BitReasonPulled")]
        public BitReasonPulled condFinalReason {
            get {
                return this.condFinalReasonField;
            }
            set {
                this.condFinalReasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool condFinalReasonSpecified {
            get {
                return this.condFinalReasonFieldSpecified;
            }
            set {
                this.condFinalReasonFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bit drive type (Motor, rotary table etc).</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Bit drive type (Motor, rotary table etc).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("drive", DataType="str32")]
        public string drive {
            get {
                return this.driveField;
            }
            set {
                this.driveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>N = new, U = used.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2)]
        [System.ComponentModel.DescriptionAttribute("N = new, U = used.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bitClass", DataType="str2")]
        public string bitClass {
            get {
                return this.bitClassField;
            }
            set {
                this.bitClassField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_nozzle {
        
        private short indexField;
        
        private bool indexFieldSpecified;
        
        private lengthMeasure diaNozzleField;
        
        private NozzleType typeNozzleField;
        
        private bool typeNozzleFieldSpecified;
        
        private lengthMeasure lenField;
        
        private string orientationField;
        
        private cs_customData customDataField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Index if this is an indexed object.</summary>
        [System.ComponentModel.DescriptionAttribute("Index if this is an indexed object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("index", DataType="positiveCount")]
        public short index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool indexSpecified {
            get {
                return this.indexFieldSpecified;
            }
            set {
                this.indexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Nozzle diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Nozzle diameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("diaNozzle", DataType="lengthMeasure")]
        public lengthMeasure diaNozzle {
            get {
                return this.diaNozzleField;
            }
            set {
                this.diaNozzleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Nozzle type.</summary>
        [System.ComponentModel.DescriptionAttribute("Nozzle type.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeNozzle", DataType="NozzleType")]
        public NozzleType typeNozzle {
            get {
                return this.typeNozzleField;
            }
            set {
                this.typeNozzleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeNozzleSpecified {
            get {
                return this.typeNozzleFieldSpecified;
            }
            set {
                this.typeNozzleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of the nozzle.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of the nozzle.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("len", DataType="lengthMeasure")]
        public lengthMeasure len {
            get {
                return this.lenField;
            }
            set {
                this.lenField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Nozzle orientation.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Nozzle orientation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("orientation", DataType="str32")]
        public string orientation {
            get {
                return this.orientationField;
            }
            set {
                this.orientationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_connection {
        
        private lengthMeasure idField;
        
        private lengthMeasure odField;
        
        private lengthMeasure lenField;
        
        private string typeThreadField;
        
        private lengthMeasure sizeThreadField;
        
        private pressureMeasure tensYieldField;
        
        private pressureMeasure tqYieldField;
        
        private ConnectionPosition positionField;
        
        private bool positionFieldSpecified;
        
        private areaMeasure criticalCrossSectionField;
        
        private pressureMeasure presLeakField;
        
        private momentOfForceMeasure tqMakeupField;
        
        private cs_customData customDataField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Internal diameter of object.</summary>
        [System.ComponentModel.DescriptionAttribute("Internal diameter of object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("id", DataType="lengthMeasure")]
        public lengthMeasure id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Outside diameter of the body of the item.</summary>
        [System.ComponentModel.DescriptionAttribute("Outside diameter of the body of the item.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("od", DataType="lengthMeasure")]
        public lengthMeasure od {
            get {
                return this.odField;
            }
            set {
                this.odField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of the item.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of the item.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("len", DataType="lengthMeasure")]
        public lengthMeasure len {
            get {
                return this.lenField;
            }
            set {
                this.lenField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Thread type from API RP7G, 5CT.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Thread type from API RP7G, 5CT.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeThread", DataType="str32")]
        public string typeThread {
            get {
                return this.typeThreadField;
            }
            set {
                this.typeThreadField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Thread size.</summary>
        [System.ComponentModel.DescriptionAttribute("Thread size.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sizeThread", DataType="lengthMeasure")]
        public lengthMeasure sizeThread {
            get {
                return this.sizeThreadField;
            }
            set {
                this.sizeThreadField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Yield stress of steel - worn stress.</summary>
        [System.ComponentModel.DescriptionAttribute("Yield stress of steel - worn stress.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tensYield", DataType="pressureMeasure")]
        public pressureMeasure tensYield {
            get {
                return this.tensYieldField;
            }
            set {
                this.tensYieldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Torque yield stress.</summary>
        [System.ComponentModel.DescriptionAttribute("Torque yield stress.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tqYield", DataType="pressureMeasure")]
        public pressureMeasure tqYield {
            get {
                return this.tqYieldField;
            }
            set {
                this.tqYieldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Where connected.</summary>
        [System.ComponentModel.DescriptionAttribute("Where connected.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("position", DataType="ConnectionPosition")]
        public ConnectionPosition position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool positionSpecified {
            get {
                return this.positionFieldSpecified;
            }
            set {
                this.positionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>For bending stiffness ratio.</summary>
        [System.ComponentModel.DescriptionAttribute("For bending stiffness ratio.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("criticalCrossSection", DataType="areaMeasure")]
        public areaMeasure criticalCrossSection {
            get {
                return this.criticalCrossSectionField;
            }
            set {
                this.criticalCrossSectionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Leak pressure rating.</summary>
        [System.ComponentModel.DescriptionAttribute("Leak pressure rating.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presLeak", DataType="pressureMeasure")]
        public pressureMeasure presLeak {
            get {
                return this.presLeakField;
            }
            set {
                this.presLeakField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Make up torque.</summary>
        [System.ComponentModel.DescriptionAttribute("Make up torque.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tqMakeup", DataType="momentOfForceMeasure")]
        public momentOfForceMeasure tqMakeup {
            get {
                return this.tqMakeupField;
            }
            set {
                this.tqMakeupField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_jar {
        
        private forceMeasure forUpSetField;
        
        private forceMeasure forDownSetField;
        
        private forceMeasure forUpTripField;
        
        private forceMeasure forDownTripField;
        
        private forceMeasure forPmpOpenField;
        
        private forceMeasure forSealFricField;
        
        private JarType typeJarField;
        
        private bool typeJarFieldSpecified;
        
        private JarAction jarActionField;
        
        private bool jarActionFieldSpecified;
        
        private cs_customData customDataField;
        
        /// <remarks/>
        /// <summary>Up set force.</summary>
        [System.ComponentModel.DescriptionAttribute("Up set force.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("forUpSet", DataType="forceMeasure")]
        public forceMeasure forUpSet {
            get {
                return this.forUpSetField;
            }
            set {
                this.forUpSetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Down set force.</summary>
        [System.ComponentModel.DescriptionAttribute("Down set force.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("forDownSet", DataType="forceMeasure")]
        public forceMeasure forDownSet {
            get {
                return this.forDownSetField;
            }
            set {
                this.forDownSetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Up trip force.</summary>
        [System.ComponentModel.DescriptionAttribute("Up trip force.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("forUpTrip", DataType="forceMeasure")]
        public forceMeasure forUpTrip {
            get {
                return this.forUpTripField;
            }
            set {
                this.forUpTripField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Down trip force.</summary>
        [System.ComponentModel.DescriptionAttribute("Down trip force.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("forDownTrip", DataType="forceMeasure")]
        public forceMeasure forDownTrip {
            get {
                return this.forDownTripField;
            }
            set {
                this.forDownTripField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pump open force.</summary>
        [System.ComponentModel.DescriptionAttribute("Pump open force.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("forPmpOpen", DataType="forceMeasure")]
        public forceMeasure forPmpOpen {
            get {
                return this.forPmpOpenField;
            }
            set {
                this.forPmpOpenField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Seal friction force.</summary>
        [System.ComponentModel.DescriptionAttribute("Seal friction force.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("forSealFric", DataType="forceMeasure")]
        public forceMeasure forSealFric {
            get {
                return this.forSealFricField;
            }
            set {
                this.forSealFricField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The kind of jar.</summary>
        [System.ComponentModel.DescriptionAttribute("The kind of jar.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeJar", DataType="JarType")]
        public JarType typeJar {
            get {
                return this.typeJarField;
            }
            set {
                this.typeJarField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeJarSpecified {
            get {
                return this.typeJarFieldSpecified;
            }
            set {
                this.typeJarFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The jar action.</summary>
        [System.ComponentModel.DescriptionAttribute("The jar action.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("jarAction", DataType="JarAction")]
        public JarAction jarAction {
            get {
                return this.jarActionField;
            }
            set {
                this.jarActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool jarActionSpecified {
            get {
                return this.jarActionFieldSpecified;
            }
            set {
                this.jarActionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_mwdTool {
        
        private volumeFlowRateMeasure flowrateMnField;
        
        private volumeFlowRateMeasure flowrateMxField;
        
        private thermodynamicTemperatureMeasure tempMxField;
        
        private lengthMeasure idEquvField;
        
        private cs_sensor[] sensorField;
        
        private cs_customData customDataField;
        
        /// <remarks/>
        /// <summary>Minimum flow rate.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum flow rate.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowrateMn", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure flowrateMn {
            get {
                return this.flowrateMnField;
            }
            set {
                this.flowrateMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum flow rate.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum flow rate.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowrateMx", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure flowrateMx {
            get {
                return this.flowrateMxField;
            }
            set {
                this.flowrateMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum Temperature.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum Temperature.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempMx", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempMx {
            get {
                return this.tempMxField;
            }
            set {
                this.tempMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Equivalent inner diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Equivalent inner diameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("idEquv", DataType="lengthMeasure")]
        public lengthMeasure idEquv {
            get {
                return this.idEquvField;
            }
            set {
                this.idEquvField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Sensor object.</summary>
        [System.Xml.Serialization.XmlElementAttribute("sensor")]
        [System.ComponentModel.DescriptionAttribute("Sensor object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sensor", DataType="cs_sensor")]
        public cs_sensor[] sensor {
            get {
                return this.sensorField;
            }
            set {
                this.sensorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_sensor {
        
        private MeasurementType typeMeasurementField;
        
        private bool typeMeasurementFieldSpecified;
        
        private lengthMeasure offsetBotField;
        
        private string commentsField;
        
        private cs_customData customDataField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Type from POSC.</summary>
        [System.ComponentModel.DescriptionAttribute("Type from POSC.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeMeasurement", DataType="MeasurementType")]
        public MeasurementType typeMeasurement {
            get {
                return this.typeMeasurementField;
            }
            set {
                this.typeMeasurementField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeMeasurementSpecified {
            get {
                return this.typeMeasurementFieldSpecified;
            }
            set {
                this.typeMeasurementFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Offset from bottom of measurement while drilling tool.</summary>
        [System.ComponentModel.DescriptionAttribute("Offset from bottom of measurement while drilling tool.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("offsetBot", DataType="lengthMeasure")]
        public lengthMeasure offsetBot {
            get {
                return this.offsetBotField;
            }
            set {
                this.offsetBotField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Comments and remarks.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Comments and remarks.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comments", DataType="commentString")]
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_motor {
        
        private lengthMeasure offsetToolField;
        
        private double presLossFactField;
        
        private bool presLossFactFieldSpecified;
        
        private volumeFlowRateMeasure flowrateMnField;
        
        private volumeFlowRateMeasure flowrateMxField;
        
        private lengthMeasure diaRotorNozzleField;
        
        private lengthMeasure clearanceBearBoxField;
        
        private short lobesRotorField;
        
        private bool lobesRotorFieldSpecified;
        
        private short lobesStatorField;
        
        private bool lobesStatorFieldSpecified;
        
        private BearingType typeBearingField;
        
        private bool typeBearingFieldSpecified;
        
        private thermodynamicTemperatureMeasure tempOpMxField;
        
        private bool rotorCatcherField;
        
        private bool rotorCatcherFieldSpecified;
        
        private bool dumpValveField;
        
        private bool dumpValveFieldSpecified;
        
        private lengthMeasure diaNozzleField;
        
        private bool rotatableField;
        
        private bool rotatableFieldSpecified;
        
        private planeAngleMeasure bendSettingsMnField;
        
        private planeAngleMeasure bendSettingsMxField;
        
        private cs_customData customDataField;
        
        /// <remarks/>
        /// <summary>Tool offset from bottom.</summary>
        [System.ComponentModel.DescriptionAttribute("Tool offset from bottom.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("offsetTool", DataType="lengthMeasure")]
        public lengthMeasure offsetTool {
            get {
                return this.offsetToolField;
            }
            set {
                this.offsetToolField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pressure loss factor.</summary>
        [System.ComponentModel.DescriptionAttribute("Pressure loss factor.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("presLossFact", DataType="unitlessQuantity")]
        public double presLossFact {
            get {
                return this.presLossFactField;
            }
            set {
                this.presLossFactField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool presLossFactSpecified {
            get {
                return this.presLossFactFieldSpecified;
            }
            set {
                this.presLossFactFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum flow rate.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum flow rate.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowrateMn", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure flowrateMn {
            get {
                return this.flowrateMnField;
            }
            set {
                this.flowrateMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum flow rate.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum flow rate.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowrateMx", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure flowrateMx {
            get {
                return this.flowrateMxField;
            }
            set {
                this.flowrateMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Diameter of rotor at nozzle.</summary>
        [System.ComponentModel.DescriptionAttribute("Diameter of rotor at nozzle.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("diaRotorNozzle", DataType="lengthMeasure")]
        public lengthMeasure diaRotorNozzle {
            get {
                return this.diaRotorNozzleField;
            }
            set {
                this.diaRotorNozzleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Clearance inside bearing box.</summary>
        [System.ComponentModel.DescriptionAttribute("Clearance inside bearing box.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("clearanceBearBox", DataType="lengthMeasure")]
        public lengthMeasure clearanceBearBox {
            get {
                return this.clearanceBearBoxField;
            }
            set {
                this.clearanceBearBoxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of rotor lobes.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of rotor lobes.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lobesRotor", DataType="nonNegativeCount")]
        public short lobesRotor {
            get {
                return this.lobesRotorField;
            }
            set {
                this.lobesRotorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lobesRotorSpecified {
            get {
                return this.lobesRotorFieldSpecified;
            }
            set {
                this.lobesRotorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of stator lobes.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of stator lobes.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lobesStator", DataType="nonNegativeCount")]
        public short lobesStator {
            get {
                return this.lobesStatorField;
            }
            set {
                this.lobesStatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lobesStatorSpecified {
            get {
                return this.lobesStatorFieldSpecified;
            }
            set {
                this.lobesStatorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of bearing.</summary>
        [System.ComponentModel.DescriptionAttribute("Type of bearing.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeBearing", DataType="BearingType")]
        public BearingType typeBearing {
            get {
                return this.typeBearingField;
            }
            set {
                this.typeBearingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeBearingSpecified {
            get {
                return this.typeBearingFieldSpecified;
            }
            set {
                this.typeBearingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum operating temperature.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum operating temperature.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tempOpMx", DataType="thermodynamicTemperatureMeasure")]
        public thermodynamicTemperatureMeasure tempOpMx {
            get {
                return this.tempOpMxField;
            }
            set {
                this.tempOpMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is rotor catcher present?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Is rotor catcher present?   Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rotorCatcher", DataType="logicalBoolean")]
        public bool rotorCatcher {
            get {
                return this.rotorCatcherField;
            }
            set {
                this.rotorCatcherField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rotorCatcherSpecified {
            get {
                return this.rotorCatcherFieldSpecified;
            }
            set {
                this.rotorCatcherFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is dump valve present?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Is dump valve present?   Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dumpValve", DataType="logicalBoolean")]
        public bool dumpValve {
            get {
                return this.dumpValveField;
            }
            set {
                this.dumpValveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dumpValveSpecified {
            get {
                return this.dumpValveFieldSpecified;
            }
            set {
                this.dumpValveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Nozzle diameter.</summary>
        [System.ComponentModel.DescriptionAttribute("Nozzle diameter.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("diaNozzle", DataType="lengthMeasure")]
        public lengthMeasure diaNozzle {
            get {
                return this.diaNozzleField;
            }
            set {
                this.diaNozzleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is motor rotatable?   Values are "true" (or "1") and "false" (or "0").</summary>
        [System.ComponentModel.DescriptionAttribute("Is motor rotatable?   Values are \"true\" (or \"1\") and \"false\" (or \"0\").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rotatable", DataType="logicalBoolean")]
        public bool rotatable {
            get {
                return this.rotatableField;
            }
            set {
                this.rotatableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rotatableSpecified {
            get {
                return this.rotatableFieldSpecified;
            }
            set {
                this.rotatableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum bend angle setting.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum bend angle setting.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bendSettingsMn", DataType="planeAngleMeasure")]
        public planeAngleMeasure bendSettingsMn {
            get {
                return this.bendSettingsMnField;
            }
            set {
                this.bendSettingsMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum bend angle setting.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum bend angle setting.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bendSettingsMx", DataType="planeAngleMeasure")]
        public planeAngleMeasure bendSettingsMx {
            get {
                return this.bendSettingsMxField;
            }
            set {
                this.bendSettingsMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_stabilizer {
        
        private lengthMeasure lenBladeField;
        
        private lengthMeasure lenBladeGaugeField;
        
        private lengthMeasure odBladeMxField;
        
        private lengthMeasure odBladeMnField;
        
        private lengthMeasure distBladeBotField;
        
        private BladeShapeType shapeBladeField;
        
        private bool shapeBladeFieldSpecified;
        
        private double factFricField;
        
        private bool factFricFieldSpecified;
        
        private BladeType typeBladeField;
        
        private bool typeBladeFieldSpecified;
        
        private cs_customData customDataField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Length of blade.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of blade.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenBlade", DataType="lengthMeasure")]
        public lengthMeasure lenBlade {
            get {
                return this.lenBladeField;
            }
            set {
                this.lenBladeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Gauge Length of blade. That is, the length of the blade which measures at the odBladeMx.</summary>
        [System.ComponentModel.DescriptionAttribute("Gauge Length of blade. That is, the length of the blade which measures at the odB" +
            "ladeMx.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("lenBladeGauge", DataType="lengthMeasure")]
        public lengthMeasure lenBladeGauge {
            get {
                return this.lenBladeGaugeField;
            }
            set {
                this.lenBladeGaugeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum outer diameter of blade.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum outer diameter of blade.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("odBladeMx", DataType="lengthMeasure")]
        public lengthMeasure odBladeMx {
            get {
                return this.odBladeMxField;
            }
            set {
                this.odBladeMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum outer diameter of blade.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum outer diameter of blade.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("odBladeMn", DataType="lengthMeasure")]
        public lengthMeasure odBladeMn {
            get {
                return this.odBladeMnField;
            }
            set {
                this.odBladeMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance of blade bottom from bottom of component.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance of blade bottom from bottom of component.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("distBladeBot", DataType="lengthMeasure")]
        public lengthMeasure distBladeBot {
            get {
                return this.distBladeBotField;
            }
            set {
                this.distBladeBotField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Blade shape.</summary>
        [System.ComponentModel.DescriptionAttribute("Blade shape.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("shapeBlade", DataType="BladeShapeType")]
        public BladeShapeType shapeBlade {
            get {
                return this.shapeBladeField;
            }
            set {
                this.shapeBladeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool shapeBladeSpecified {
            get {
                return this.shapeBladeFieldSpecified;
            }
            set {
                this.shapeBladeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Friction factor.</summary>
        [System.ComponentModel.DescriptionAttribute("Friction factor.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("factFric", DataType="unitlessQuantity")]
        public double factFric {
            get {
                return this.factFricField;
            }
            set {
                this.factFricField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool factFricSpecified {
            get {
                return this.factFricFieldSpecified;
            }
            set {
                this.factFricFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Blade type.</summary>
        [System.ComponentModel.DescriptionAttribute("Blade type.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeBlade", DataType="BladeType")]
        public BladeType typeBlade {
            get {
                return this.typeBladeField;
            }
            set {
                this.typeBladeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeBladeSpecified {
            get {
                return this.typeBladeFieldSpecified;
            }
            set {
                this.typeBladeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_bend {
        
        private planeAngleMeasure angleField;
        
        private lengthMeasure distBendBotField;
        
        private cs_customData customDataField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Angle of the bend.</summary>
        [System.ComponentModel.DescriptionAttribute("Angle of the bend.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("angle", DataType="planeAngleMeasure")]
        public planeAngleMeasure angle {
            get {
                return this.angleField;
            }
            set {
                this.angleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Distance of bend from bottom of component.</summary>
        [System.ComponentModel.DescriptionAttribute("Distance of bend from bottom of component.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("distBendBot", DataType="lengthMeasure")]
        public lengthMeasure distBendBot {
            get {
                return this.distBendBotField;
            }
            set {
                this.distBendBotField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_holeOpener {
        
        private HoleOpenerType typeHoleOpenerField;
        
        private bool typeHoleOpenerFieldSpecified;
        
        private short numCutterField;
        
        private bool numCutterFieldSpecified;
        
        private string manufacturerField;
        
        private lengthMeasure diaHoleOpenerField;
        
        private cs_customData customDataField;
        
        /// <remarks/>
        /// <summary>Under reamer or fixed blade.</summary>
        [System.ComponentModel.DescriptionAttribute("Under reamer or fixed blade.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeHoleOpener", DataType="HoleOpenerType")]
        public HoleOpenerType typeHoleOpener {
            get {
                return this.typeHoleOpenerField;
            }
            set {
                this.typeHoleOpenerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeHoleOpenerSpecified {
            get {
                return this.typeHoleOpenerFieldSpecified;
            }
            set {
                this.typeHoleOpenerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Number of cutters.</summary>
        [System.ComponentModel.DescriptionAttribute("Number of cutters.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numCutter", DataType="nonNegativeCount")]
        public short numCutter {
            get {
                return this.numCutterField;
            }
            set {
                this.numCutterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numCutterSpecified {
            get {
                return this.numCutterFieldSpecified;
            }
            set {
                this.numCutterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Manufacturer / supplier of the item.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Manufacturer / supplier of the item.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("manufacturer", DataType="nameString")]
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Diameter of the reamer.</summary>
        [System.ComponentModel.DescriptionAttribute("Diameter of the reamer.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("diaHoleOpener", DataType="lengthMeasure")]
        public lengthMeasure diaHoleOpener {
            get {
                return this.diaHoleOpenerField;
            }
            set {
                this.diaHoleOpenerField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_rotarySteerableTool {
        
        private DeflectionMethod deflectionMethodField;
        
        private abstractMeasure itemField;
        
        private lengthMeasure holeSizeMnField;
        
        private lengthMeasure holeSizeMxField;
        
        private forceMeasure wobMxField;
        
        private anglePerTimeMeasure operatingSpeedField;
        
        private anglePerTimeMeasure speedMxField;
        
        private volumeFlowRateMeasure flowRateMnField;
        
        private volumeFlowRateMeasure flowRateMxField;
        
        private volumeFlowRateMeasure downLinkFlowRateMnField;
        
        private volumeFlowRateMeasure downLinkFlowRateMxField;
        
        private double pressLossFactField;
        
        private bool pressLossFactFieldSpecified;
        
        private short padCountField;
        
        private bool padCountFieldSpecified;
        
        private lengthMeasure padLenField;
        
        private lengthMeasure padWidthField;
        
        private lengthMeasure padOffsetField;
        
        private lengthMeasure openPadOdField;
        
        private lengthMeasure closePadOdField;
        
        private cs_sensor[] sensorField;
        
        private cs_customData customDataField;
        
        /// <remarks/>
        /// <summary>Method used to direct the deviation of the trajectory: PointBit or PushBit.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Method used to direct the deviation of the trajectory: PointBit or PushBit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("deflectionMethod", DataType="DeflectionMethod")]
        public DeflectionMethod deflectionMethod {
            get {
                return this.deflectionMethodField;
            }
            set {
                this.deflectionMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bendAngle", typeof(planeAngleMeasure))]
        [System.Xml.Serialization.XmlElementAttribute("bendOffset", typeof(lengthMeasure))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bendAngle", DataType="planeAngleMeasure")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bendOffset", DataType="lengthMeasure")]
        public abstractMeasure Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum size of hole in which the tool can operate.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum size of hole in which the tool can operate.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("holeSizeMn", DataType="lengthMeasure")]
        public lengthMeasure holeSizeMn {
            get {
                return this.holeSizeMnField;
            }
            set {
                this.holeSizeMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum size of hole in which the tool can operate.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum size of hole in which the tool can operate.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("holeSizeMx", DataType="lengthMeasure")]
        public lengthMeasure holeSizeMx {
            get {
                return this.holeSizeMxField;
            }
            set {
                this.holeSizeMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum weight on the bit.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum weight on the bit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wobMx", DataType="forceMeasure")]
        public forceMeasure wobMx {
            get {
                return this.wobMxField;
            }
            set {
                this.wobMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Suggested operating speed.</summary>
        [System.ComponentModel.DescriptionAttribute("Suggested operating speed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("operatingSpeed", DataType="anglePerTimeMeasure")]
        public anglePerTimeMeasure operatingSpeed {
            get {
                return this.operatingSpeedField;
            }
            set {
                this.operatingSpeedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum rotation speed.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum rotation speed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("speedMx", DataType="anglePerTimeMeasure")]
        public anglePerTimeMeasure speedMx {
            get {
                return this.speedMxField;
            }
            set {
                this.speedMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum flow rate for tool operation.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum flow rate for tool operation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowRateMn", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure flowRateMn {
            get {
                return this.flowRateMnField;
            }
            set {
                this.flowRateMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum flow rate for tool operation.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum flow rate for tool operation.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("flowRateMx", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure flowRateMx {
            get {
                return this.flowRateMxField;
            }
            set {
                this.flowRateMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Minimum flow rate for programming tool.</summary>
        [System.ComponentModel.DescriptionAttribute("Minimum flow rate for programming tool.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("downLinkFlowRateMn", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure downLinkFlowRateMn {
            get {
                return this.downLinkFlowRateMnField;
            }
            set {
                this.downLinkFlowRateMnField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Maximum flow rate for programming tool.</summary>
        [System.ComponentModel.DescriptionAttribute("Maximum flow rate for programming tool.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("downLinkFlowRateMx", DataType="volumeFlowRateMeasure")]
        public volumeFlowRateMeasure downLinkFlowRateMx {
            get {
                return this.downLinkFlowRateMxField;
            }
            set {
                this.downLinkFlowRateMxField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Pressure drop across tool.</summary>
        [System.ComponentModel.DescriptionAttribute("Pressure drop across tool.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pressLossFact", DataType="unitlessQuantity")]
        public double pressLossFact {
            get {
                return this.pressLossFactField;
            }
            set {
                this.pressLossFactField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pressLossFactSpecified {
            get {
                return this.pressLossFactFieldSpecified;
            }
            set {
                this.pressLossFactFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The number of contact pads.</summary>
        [System.ComponentModel.DescriptionAttribute("The number of contact pads.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("padCount", DataType="nonNegativeCount")]
        public short padCount {
            get {
                return this.padCountField;
            }
            set {
                this.padCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool padCountSpecified {
            get {
                return this.padCountFieldSpecified;
            }
            set {
                this.padCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Length of contact pad.</summary>
        [System.ComponentModel.DescriptionAttribute("Length of contact pad.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("padLen", DataType="lengthMeasure")]
        public lengthMeasure padLen {
            get {
                return this.padLenField;
            }
            set {
                this.padLenField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Width of contact pad.</summary>
        [System.ComponentModel.DescriptionAttribute("Width of contact pad.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("padWidth", DataType="lengthMeasure")]
        public lengthMeasure padWidth {
            get {
                return this.padWidthField;
            }
            set {
                this.padWidthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Offset from bottom of pad to bottom connector.</summary>
        [System.ComponentModel.DescriptionAttribute("Offset from bottom of pad to bottom connector.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("padOffset", DataType="lengthMeasure")]
        public lengthMeasure padOffset {
            get {
                return this.padOffsetField;
            }
            set {
                this.padOffsetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Outside diameter of tool when pads are activated.</summary>
        [System.ComponentModel.DescriptionAttribute("Outside diameter of tool when pads are activated.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("openPadOd", DataType="lengthMeasure")]
        public lengthMeasure openPadOd {
            get {
                return this.openPadOdField;
            }
            set {
                this.openPadOdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Outiside diameter of tool when pads are closed.</summary>
        [System.ComponentModel.DescriptionAttribute("Outiside diameter of tool when pads are closed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("closePadOd", DataType="lengthMeasure")]
        public lengthMeasure closePadOd {
            get {
                return this.closePadOdField;
            }
            set {
                this.closePadOdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A sensor.</summary>
        [System.Xml.Serialization.XmlElementAttribute("sensor")]
        [System.ComponentModel.DescriptionAttribute("A sensor.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sensor", DataType="cs_sensor")]
        public cs_sensor[] sensor {
            get {
                return this.sensorField;
            }
            set {
                this.sensorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [System.Xml.Serialization.XmlRootAttribute("wbGeometrys", Namespace="http://www.witsml.org/schemas/131", IsNullable=false)]
    public partial class obj_wbGeometrys {
        
        private cs_documentInfo documentInfoField;
        
        private obj_wbGeometry[] wbGeometryField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A single wellbore geometry.</summary>
        [System.Xml.Serialization.XmlElementAttribute("wbGeometry")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A single wellbore geometry.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wbGeometry", DataType="obj_wbGeometry")]
        public obj_wbGeometry[] wbGeometry {
            get {
                return this.wbGeometryField;
            }
            set {
                this.wbGeometryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.3\\.1\\.([1-9]|([1-9][0-9]))")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionString")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("WITSML", "1.3.1.1")]
    public partial class obj_wbGeometry {
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string nameField;
        
        private Energistics.DataAccess.Timestamp dTimReportField;
        
        private measuredDepthCoord mdBottomField;
        
        private lengthMeasure gapAirField;
        
        private lengthMeasure depthWaterMeanField;
        
        private cs_wbGeometrySection[] wbGeometrySectionField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidWellboreField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore that contains the wellbore geometry.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore that contains the wellbore geometry.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWellbore", DataType="nameString")]
        public string nameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore geometry.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore geometry.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Time report generated.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Time report generated.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimReport", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimReport {
            get {
                return this.dTimReportField;
            }
            set {
                this.dTimReportField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Measured depth at bottom.</summary>
        [System.ComponentModel.DescriptionAttribute("Measured depth at bottom.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdBottom", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdBottom {
            get {
                return this.mdBottomField;
            }
            set {
                this.mdBottomField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Air gap.</summary>
        [System.ComponentModel.DescriptionAttribute("Air gap.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("gapAir", DataType="lengthMeasure")]
        public lengthMeasure gapAir {
            get {
                return this.gapAirField;
            }
            set {
                this.gapAirField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Water depth.</summary>
        [System.ComponentModel.DescriptionAttribute("Water depth.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("depthWaterMean", DataType="lengthMeasure")]
        public lengthMeasure depthWaterMean {
            get {
                return this.depthWaterMeanField;
            }
            set {
                this.depthWaterMeanField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Wellbore geometry section object.</summary>
        [System.Xml.Serialization.XmlElementAttribute("wbGeometrySection")]
        [System.ComponentModel.DescriptionAttribute("Wellbore geometry section object.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wbGeometrySection", DataType="cs_wbGeometrySection")]
        public cs_wbGeometrySection[] wbGeometrySection {
            get {
                return this.wbGeometrySectionField;
            }
            set {
                this.wbGeometrySectionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the wellbore. This uniquely represents  the wellbore referenced by the (possibly non-unique) nameWellbore.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the wellbore. This uniquely represents  the wellbore refere" +
            "nced by the (possibly non-unique) nameWellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWellbore", DataType="uidString")]
        public string uidWellbore {
            get {
                return this.uidWellboreField;
            }
            set {
                this.uidWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [System.Xml.Serialization.XmlRootAttribute("wells", Namespace="http://www.witsml.org/schemas/131", IsNullable=false)]
    public partial class obj_wells {
        
        private cs_documentInfo documentInfoField;
        
        private obj_well[] wellField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information about a single well. A well is a unique surface location from which wellbores are drilled  into the Earth for the purpose of either (1) finding or producing  underground resources; or (2) providing services related to the  production of underground resources.</summary>
        [System.Xml.Serialization.XmlElementAttribute("well")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"Information about a single well. A well is a unique surface location from which wellbores are drilled  into the Earth for the purpose of either (1) finding or producing  underground resources; or (2) providing services related to the  production of underground resources.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("well", DataType="obj_well")]
        public obj_well[] well {
            get {
                return this.wellField;
            }
            set {
                this.wellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.3\\.1\\.([1-9]|([1-9][0-9]))")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionString")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("WITSML", "1.3.1.1")]
    public partial class obj_well {
        
        private string nameField;
        
        private string nameLegalField;
        
        private string numLicenseField;
        
        private string numGovtField;
        
        private Energistics.DataAccess.Timestamp dTimLicenseField;
        
        private bool dTimLicenseFieldSpecified;
        
        private string fieldField;
        
        private string countryField;
        
        private string stateField;
        
        private string countyField;
        
        private string regionField;
        
        private string districtField;
        
        private string blockField;
        
        private string timeZoneField;
        
        private string operatorField;
        
        private string operatorDivField;
        
        private dimensionlessMeasure pcInterestField;
        
        private string numAPIField;
        
        private WellStatus statusWellField;
        
        private bool statusWellFieldSpecified;
        
        private WellPurpose purposeWellField;
        
        private bool purposeWellFieldSpecified;
        
        private WellFluid fluidWellField;
        
        private bool fluidWellFieldSpecified;
        
        private WellDirection directionWellField;
        
        private bool directionWellFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimSpudField;
        
        private bool dTimSpudFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimPaField;
        
        private bool dTimPaFieldSpecified;
        
        private wellElevationCoord wellheadElevationField;
        
        private cs_wellDatum[] wellDatumField;
        
        private wellElevationCoord groundElevationField;
        
        private wellVerticalDepthCoord waterDepthField;
        
        private cs_location[] wellLocationField;
        
        private cs_referencePoint[] referencePointField;
        
        private cs_wellCRS[] wellCRSField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Legal name of the well.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Legal name of the well.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameLegal", DataType="nameString")]
        public string nameLegal {
            get {
                return this.nameLegalField;
            }
            set {
                this.nameLegalField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>License number of the well.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("License number of the well.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numLicense", DataType="nameString")]
        public string numLicense {
            get {
                return this.numLicenseField;
            }
            set {
                this.numLicenseField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Government assigned well number.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Government assigned well number.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numGovt", DataType="nameString")]
        public string numGovt {
            get {
                return this.numGovtField;
            }
            set {
                this.numGovtField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time license  was issued.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time license  was issued.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimLicense", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimLicense {
            get {
                return this.dTimLicenseField;
            }
            set {
                this.dTimLicenseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimLicenseSpecified {
            get {
                return this.dTimLicenseFieldSpecified;
            }
            set {
                this.dTimLicenseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of the field in which the well is located.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of the field in which the well is located.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("field", DataType="nameString")]
        public string field {
            get {
                return this.fieldField;
            }
            set {
                this.fieldField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Country in which well is located.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Country in which well is located.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("country", DataType="str32")]
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>State or province in which well is located.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("State or province in which well is located.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("state", DataType="str32")]
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>County in which the well is located.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("County in which the well is located.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("county", DataType="str32")]
        public string county {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Geo-political region.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Geo-political region.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("region", DataType="str32")]
        public string region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Geo-political district name.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Geo-political district name.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("district", DataType="str32")]
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Block name in which well is located.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Block name in which well is located.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("block", DataType="str32")]
        public string block {
            get {
                return this.blockField;
            }
            set {
                this.blockField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The time zone in which well is located.   It is the deviation in hours and minutes from UTC. This should be the normal time zone at the well and not a seasonally  adjusted value such as daylight savings time. While the time zone is optional in a date time value, it is strongly advised that the zone always be specified in each date time value. The time zone in a date time value may use seasonally adjusted values.</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[Z]|([-+](([01][0-9])|(2[0-3])):[0-5][0-9])")]
        [System.ComponentModel.DescriptionAttribute(@"The time zone in which well is located.   It is the deviation in hours and minutes from UTC. This should be the normal time zone at the well and not a seasonally  adjusted value such as daylight savings time. While the time zone is optional in a date time value, it is strongly advised that the zone always be specified in each date time value. The time zone in a date time value may use seasonally adjusted values.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("timeZone", DataType="timeZone")]
        public string timeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Operator company name.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Operator company name.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("operator", DataType="nameString")]
        public string @operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Division of operator company.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Division of operator company.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("operatorDiv", DataType="nameString")]
        public string operatorDiv {
            get {
                return this.operatorDivField;
            }
            set {
                this.operatorDivField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Interest for Operator. Commonly in percent.</summary>
        [System.ComponentModel.DescriptionAttribute("Interest for Operator. Commonly in percent.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pcInterest", DataType="dimensionlessMeasure")]
        public dimensionlessMeasure pcInterest {
            get {
                return this.pcInterestField;
            }
            set {
                this.pcInterestField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>American Petroleum Institute well number.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("American Petroleum Institute well number.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numAPI", DataType="str32")]
        public string numAPI {
            get {
                return this.numAPIField;
            }
            set {
                this.numAPIField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>POSC Well status.</summary>
        [System.ComponentModel.DescriptionAttribute("POSC Well status.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("statusWell", DataType="WellStatus")]
        public WellStatus statusWell {
            get {
                return this.statusWellField;
            }
            set {
                this.statusWellField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusWellSpecified {
            get {
                return this.statusWellFieldSpecified;
            }
            set {
                this.statusWellFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>POSC well purpose.</summary>
        [System.ComponentModel.DescriptionAttribute("POSC well purpose.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("purposeWell", DataType="WellPurpose")]
        public WellPurpose purposeWell {
            get {
                return this.purposeWellField;
            }
            set {
                this.purposeWellField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool purposeWellSpecified {
            get {
                return this.purposeWellFieldSpecified;
            }
            set {
                this.purposeWellFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>POSC well fluid. The type of fluid being produced from or injected  into a well facility.</summary>
        [System.ComponentModel.DescriptionAttribute("POSC well fluid. The type of fluid being produced from or injected  into a well f" +
            "acility.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("fluidWell", DataType="WellFluid")]
        public WellFluid fluidWell {
            get {
                return this.fluidWellField;
            }
            set {
                this.fluidWellField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fluidWellSpecified {
            get {
                return this.fluidWellFieldSpecified;
            }
            set {
                this.fluidWellFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>POSC well direction. The direction of flow of the fluids in a well facility (generally, injected or produced, or some combination).</summary>
        [System.ComponentModel.DescriptionAttribute("POSC well direction. The direction of flow of the fluids in a well facility (gene" +
            "rally, injected or produced, or some combination).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("directionWell", DataType="WellDirection")]
        public WellDirection directionWell {
            get {
                return this.directionWellField;
            }
            set {
                this.directionWellField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool directionWellSpecified {
            get {
                return this.directionWellFieldSpecified;
            }
            set {
                this.directionWellFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time at which well was spudded.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time at which well was spudded.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimSpud", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimSpud {
            get {
                return this.dTimSpudField;
            }
            set {
                this.dTimSpudField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimSpudSpecified {
            get {
                return this.dTimSpudFieldSpecified;
            }
            set {
                this.dTimSpudFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time at which well was plugged and abandoned.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time at which well was plugged and abandoned.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimPa", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimPa {
            get {
                return this.dTimPaField;
            }
            set {
                this.dTimPaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimPaSpecified {
            get {
                return this.dTimPaFieldSpecified;
            }
            set {
                this.dTimPaFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Elevation of wellhead relative to a wellDatum.</summary>
        [System.ComponentModel.DescriptionAttribute("Elevation of wellhead relative to a wellDatum.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellheadElevation", DataType="wellElevationCoord")]
        public wellElevationCoord wellheadElevation {
            get {
                return this.wellheadElevationField;
            }
            set {
                this.wellheadElevationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A datum to which elevations and depths are referenced.</summary>
        [System.Xml.Serialization.XmlElementAttribute("wellDatum")]
        [System.ComponentModel.DescriptionAttribute("A datum to which elevations and depths are referenced.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellDatum", DataType="cs_wellDatum")]
        public cs_wellDatum[] wellDatum {
            get {
                return this.wellDatumField;
            }
            set {
                this.wellDatumField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Elevation of ground level (land rigs).</summary>
        [System.ComponentModel.DescriptionAttribute("Elevation of ground level (land rigs).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("groundElevation", DataType="wellElevationCoord")]
        public wellElevationCoord groundElevation {
            get {
                return this.groundElevationField;
            }
            set {
                this.groundElevationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Depth of water (not land rigs).</summary>
        [System.ComponentModel.DescriptionAttribute("Depth of water (not land rigs).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("waterDepth", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord waterDepth {
            get {
                return this.waterDepthField;
            }
            set {
                this.waterDepthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>the 2D coordinates of the well surface point in one coordinate reference system.  This is where the well crosses ground level on land and crosses the platform offshore.</summary>
        [System.Xml.Serialization.XmlElementAttribute("wellLocation")]
        [System.ComponentModel.DescriptionAttribute("the 2D coordinates of the well surface point in one coordinate reference system. " +
            " This is where the well crosses ground level on land and crosses the platform of" +
            "fshore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellLocation", DataType="cs_location")]
        public cs_location[] wellLocation {
            get {
                return this.wellLocationField;
            }
            set {
                this.wellLocationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Defines a reference point within the context of the well.</summary>
        [System.Xml.Serialization.XmlElementAttribute("referencePoint")]
        [System.ComponentModel.DescriptionAttribute("Defines a reference point within the context of the well.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("referencePoint", DataType="cs_referencePoint")]
        public cs_referencePoint[] referencePoint {
            get {
                return this.referencePointField;
            }
            set {
                this.referencePointField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A coordinate reference system that was used within  the context of this well.</summary>
        [System.Xml.Serialization.XmlElementAttribute("wellCRS")]
        [System.ComponentModel.DescriptionAttribute("A coordinate reference system that was used within  the context of this well.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellCRS", DataType="cs_wellCRS")]
        public cs_wellCRS[] wellCRS {
            get {
                return this.wellCRSField;
            }
            set {
                this.wellCRSField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_wellDatum {
        
        private string nameField;
        
        private ElevCodeEnum codeField;
        
        private bool codeFieldSpecified;
        
        private wellKnownNameStruct datumNameField;
        
        private string[] kindField;
        
        private cs_refWellWellbore wellboreField;
        
        private cs_refWellWellboreRig rigField;
        
        private wellElevationCoord elevationField;
        
        private measuredDepthCoord measuredDepthField;
        
        private string commentField;
        
        private bool defaultMeasuredDepthField;
        
        private bool defaultMeasuredDepthFieldSpecified;
        
        private bool defaultVerticalDepthField;
        
        private bool defaultVerticalDepthFieldSpecified;
        
        private bool defaultElevationField;
        
        private bool defaultElevationFieldSpecified;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The human understandable contextual name of the reference datum.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The human understandable contextual name of the reference datum.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The code value that represents the type of reference datum.  This may represent a point on a device (e.g., kelly bushing) or it may represent  a vertical reference datum (e.g., mean sea level).</summary>
        [System.ComponentModel.DescriptionAttribute("The code value that represents the type of reference datum.  This may represent a" +
            " point on a device (e.g., kelly bushing) or it may represent  a vertical referen" +
            "ce datum (e.g., mean sea level).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("code", DataType="ElevCodeEnum")]
        public ElevCodeEnum code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool codeSpecified {
            get {
                return this.codeFieldSpecified;
            }
            set {
                this.codeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The name of the vertical reference datum in a particular naming system. This should only be specified if the above 'code' represents some variation of sea level. An optional short name (code) can also be specified. Specifying a well known datum is highly desired  if the above code is a variant of sea level because sea level varies over time and space. An example would be to specify a name of 'Caspian Sea' with a code of '5106' in the 'EPSG' naming system.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The name of the vertical reference datum in a particular naming system. This should only be specified if the above 'code' represents some variation of sea level. An optional short name (code) can also be specified. Specifying a well known datum is highly desired  if the above code is a variant of sea level because sea level varies over time and space. An example would be to specify a name of 'Caspian Sea' with a code of '5106' in the 'EPSG' naming system.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("datumName", DataType="wellKnownNameStruct")]
        public wellKnownNameStruct datumName {
            get {
                return this.datumNameField;
            }
            set {
                this.datumNameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Since various activities may use different points as  measurement datums, it is useful to characterize the point based on its usage.  A well reference datum may have more than one such characterization.  For example, it may be the datum used by the driller and logger for measuring  their depths. Example usage values would be 'permanent','driller', 'logger' 'WRP' (well reference point) and 'SRP' (site reference point).</summary>
        [System.Xml.Serialization.XmlElementAttribute("kind")]
        [System.ComponentModel.DescriptionAttribute(@"Since various activities may use different points as  measurement datums, it is useful to characterize the point based on its usage.  A well reference datum may have more than one such characterization.  For example, it may be the datum used by the driller and logger for measuring  their depths. Example usage values would be 'permanent','driller', 'logger' 'WRP' (well reference point) and 'SRP' (site reference point).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("kind", DataType="kindString")]
        public string[] kind {
            get {
                return this.kindField;
            }
            set {
                this.kindField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the wellbore that contains the reference datum. This should be specified if a measured depth is given.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the wellbore that contains the reference datum. This should be speci" +
            "fied if a measured depth is given.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellbore", DataType="cs_refWellWellbore")]
        public cs_refWellWellbore wellbore {
            get {
                return this.wellboreField;
            }
            set {
                this.wellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the rig that contains the device used  as a reference datum. The rig may be associated with a wellbore in another well (e.g., pattern drilling using a rig on a track).</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the rig that contains the device used  as a reference datum. The rig" +
            " may be associated with a wellbore in another well (e.g., pattern drilling using" +
            " a rig on a track).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rig", DataType="cs_refWellWellboreRig")]
        public cs_refWellWellboreRig rig {
            get {
                return this.rigField;
            }
            set {
                this.rigField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The gravity based elevation coordinate of this reference datum  as measured from another datum. Positive moving upward from the elevation datum. An elevation should be given unless this is a vertical reference datum (e.g., sea level).</summary>
        [System.ComponentModel.DescriptionAttribute("The gravity based elevation coordinate of this reference datum  as measured from " +
            "another datum. Positive moving upward from the elevation datum. An elevation sho" +
            "uld be given unless this is a vertical reference datum (e.g., sea level).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("elevation", DataType="wellElevationCoord")]
        public wellElevationCoord elevation {
            get {
                return this.elevationField;
            }
            set {
                this.elevationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth coordinate of this reference datum as measured from another datum. The measured depth datum should either be the same as the elevation datum or it should be relatable to the elevation datum through other datums. Positive moving toward the bottomhole from the measured depth datum. This should be given when a local reference is "downhole",  such as a kickoff point or ocean bottom template, and the borehole may not be vertical. If a Depth is given then an Elevation should also be given.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The measured depth coordinate of this reference datum as measured from another datum. The measured depth datum should either be the same as the elevation datum or it should be relatable to the elevation datum through other datums. Positive moving toward the bottomhole from the measured depth datum. This should be given when a local reference is ""downhole"",  such as a kickoff point or ocean bottom template, and the borehole may not be vertical. If a Depth is given then an Elevation should also be given.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("measuredDepth", DataType="measuredDepthCoord")]
        public measuredDepthCoord measuredDepth {
            get {
                return this.measuredDepthField;
            }
            set {
                this.measuredDepthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A contextual description of the well reference datum.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A contextual description of the well reference datum.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("comment", DataType="commentString")]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True indicates that this is the default reference datum for measured depth coordinates.  False or not given indicates that this is not the default reference datum. Measured depth coordinates that do not specify a datum reference should be  assumed to be measured relative to this default reference datum. Only one reference datum may be designated as the default measured depth datum for each well. Values are "true" (or "1") and "false" ( or "0").</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"True indicates that this is the default reference datum for measured depth coordinates.  False or not given indicates that this is not the default reference datum. Measured depth coordinates that do not specify a datum reference should be  assumed to be measured relative to this default reference datum. Only one reference datum may be designated as the default measured depth datum for each well. Values are ""true"" (or ""1"") and ""false"" ( or ""0"").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("defaultMeasuredDepth", DataType="logicalBoolean")]
        public bool defaultMeasuredDepth {
            get {
                return this.defaultMeasuredDepthField;
            }
            set {
                this.defaultMeasuredDepthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool defaultMeasuredDepthSpecified {
            get {
                return this.defaultMeasuredDepthFieldSpecified;
            }
            set {
                this.defaultMeasuredDepthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True indicates that this is the default reference datum for vertical depth coordinates.  False or not given indicates that this is not the default reference datum. Vertical depth coordinates that do not specify a datum reference should be  assumed to be measured relative to the default reference datum. Only one reference datum may be designated as the default vertical depth datum for each well. Values are "true" (or "1") and "false" ( or "0").</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"True indicates that this is the default reference datum for vertical depth coordinates.  False or not given indicates that this is not the default reference datum. Vertical depth coordinates that do not specify a datum reference should be  assumed to be measured relative to the default reference datum. Only one reference datum may be designated as the default vertical depth datum for each well. Values are ""true"" (or ""1"") and ""false"" ( or ""0"").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("defaultVerticalDepth", DataType="logicalBoolean")]
        public bool defaultVerticalDepth {
            get {
                return this.defaultVerticalDepthField;
            }
            set {
                this.defaultVerticalDepthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool defaultVerticalDepthSpecified {
            get {
                return this.defaultVerticalDepthFieldSpecified;
            }
            set {
                this.defaultVerticalDepthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True indicates that this is the default reference datum for elevation coordinates.   False or not given indicates that this is not the default reference datum. Elevation coordinates that do not specify a datum reference should be assumed to be measured relative to the default reference datum. Only one reference datum may be designated as the default elevation datum for each well. Values are "true" (or "1") and "false" ( or "0").</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"True indicates that this is the default reference datum for elevation coordinates.   False or not given indicates that this is not the default reference datum. Elevation coordinates that do not specify a datum reference should be assumed to be measured relative to the default reference datum. Only one reference datum may be designated as the default elevation datum for each well. Values are ""true"" (or ""1"") and ""false"" ( or ""0"").")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("defaultElevation", DataType="logicalBoolean")]
        public bool defaultElevation {
            get {
                return this.defaultElevationField;
            }
            set {
                this.defaultElevationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool defaultElevationSpecified {
            get {
                return this.defaultElevationFieldSpecified;
            }
            set {
                this.defaultElevationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class wellKnownNameStruct {
        
        private string namingSystemField;
        
        private string codeField;
        
        private string valueField;
        
        /// <remarks/>
        /// <summary>The naming system within the name is unique.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("The naming system within the name is unique.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("namingSystem", DataType="nameString")]
        public string namingSystem {
            get {
                return this.namingSystemField;
            }
            set {
                this.namingSystemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A unique (short) code associated with the name.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [System.ComponentModel.DescriptionAttribute("A unique (short) code associated with the name.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("code", DataType="kindString")]
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_refWellWellbore {
        
        private refNameString wellboreReferenceField;
        
        private refNameString wellParentField;
        
        /// <remarks/>
        /// <summary>A pointer the wellbore with which there is a relationship.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A pointer the wellbore with which there is a relationship.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellboreReference", DataType="refNameString")]
        public refNameString wellboreReference {
            get {
                return this.wellboreReferenceField;
            }
            set {
                this.wellboreReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the well that contains the wellboreReference. This is not needed unless the referenced wellbore is outside the  context of a common parent well.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the well that contains the wellboreReference. This is not needed unl" +
            "ess the referenced wellbore is outside the  context of a common parent well.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellParent", DataType="refNameString")]
        public refNameString wellParent {
            get {
                return this.wellParentField;
            }
            set {
                this.wellParentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_refWellWellboreRig {
        
        private refNameString rigReferenceField;
        
        private refNameString wellboreParentField;
        
        private refNameString wellParentField;
        
        /// <remarks/>
        /// <summary>A pointer to the rig with which there is a relationship.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A pointer to the rig with which there is a relationship.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("rigReference", DataType="refNameString")]
        public refNameString rigReference {
            get {
                return this.rigReferenceField;
            }
            set {
                this.rigReferenceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the wellbore that contains the rigReference. This is not needed unless the referenced rig is outside the  context of a common parent wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the wellbore that contains the rigReference. This is not needed unle" +
            "ss the referenced rig is outside the  context of a common parent wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellboreParent", DataType="refNameString")]
        public refNameString wellboreParent {
            get {
                return this.wellboreParentField;
            }
            set {
                this.wellboreParentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the well that contains the wellboreParent. This is not needed unless the referenced wellbore is outside the  context of a common parent well.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the well that contains the wellboreParent. This is not needed unless" +
            " the referenced wellbore is outside the  context of a common parent well.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellParent", DataType="refNameString")]
        public refNameString wellParent {
            get {
                return this.wellParentField;
            }
            set {
                this.wellParentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_referencePoint {
        
        private string nameField;
        
        private string typeField;
        
        private wellElevationCoord elevationField;
        
        private measuredDepthCoord measuredDepthField;
        
        private cs_location[] locationField;
        
        private string descriptionField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the point.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the point.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The kind of point. For example,  'well reference point', 'platform reference point', 'sea surface', 'sea bottom'.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [System.ComponentModel.DescriptionAttribute("The kind of point. For example,  \'well reference point\', \'platform reference poin" +
            "t\', \'sea surface\', \'sea bottom\'.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("type", DataType="kindString")]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The gravity based elevation coordinate of this point  as measured from a datum. Positive moving upward from the elevation datum.</summary>
        [System.ComponentModel.DescriptionAttribute("The gravity based elevation coordinate of this point  as measured from a datum. P" +
            "ositive moving upward from the elevation datum.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("elevation", DataType="wellElevationCoord")]
        public wellElevationCoord elevation {
            get {
                return this.elevationField;
            }
            set {
                this.elevationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The measured depth coordinate of this reference point. Positive moving toward the bottomhole from the measured depth datum. This should be given when the reference is "downhole", such as an ocean  bottom template, or when the reference point is also used as a vertical well datum. The measured depth value can be used to determine if the reference point and a vertical well datum are at the same point.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The measured depth coordinate of this reference point. Positive moving toward the bottomhole from the measured depth datum. This should be given when the reference is ""downhole"", such as an ocean  bottom template, or when the reference point is also used as a vertical well datum. The measured depth value can be used to determine if the reference point and a vertical well datum are at the same point.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("measuredDepth", DataType="measuredDepthCoord")]
        public measuredDepthCoord measuredDepth {
            get {
                return this.measuredDepthField;
            }
            set {
                this.measuredDepthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Two dimensional coordinates that locate the point.</summary>
        [System.Xml.Serialization.XmlElementAttribute("location")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Two dimensional coordinates that locate the point.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("location", DataType="cs_location")]
        public cs_location[] location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A textual description of the point.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A textual description of the point.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="commentString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_wellCRS {
        
        private string nameField;
        
        private object itemField;
        
        private string descriptionField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the system.  For a geographic system this is commonly the name of the datum.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the system.  For a geographic system this is commo" +
            "nly the name of the datum.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("geographic", typeof(cs_geodeticModel))]
        [System.Xml.Serialization.XmlElementAttribute("localCRS", typeof(cs_localCRS))]
        [System.Xml.Serialization.XmlElementAttribute("mapProjection", typeof(cs_projectionx))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mapProjection", DataType="cs_projectionx")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("geographic", DataType="cs_geodeticModel")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("localCRS", DataType="cs_localCRS")]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A textual description of the system.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("A textual description of the system.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="descriptionString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_geodeticModel {
        
        private wellKnownNameStruct nameCRSField;
        
        private GeodeticDatum geodeticDatumCodeField;
        
        private bool geodeticDatumCodeFieldSpecified;
        
        private lengthMeasure xTranslationField;
        
        private lengthMeasure yTranslationField;
        
        private lengthMeasure zTranslationField;
        
        private planeAngleMeasure xRotationField;
        
        private planeAngleMeasure yRotationField;
        
        private planeAngleMeasure zRotationField;
        
        private double scaleFactorField;
        
        private bool scaleFactorFieldSpecified;
        
        private Ellipsoid ellipsoidCodeField;
        
        private bool ellipsoidCodeFieldSpecified;
        
        private lengthMeasure ellipsoidSemiMajorAxisField;
        
        private double ellipsoidInverseFlatteningField;
        
        private bool ellipsoidInverseFlatteningFieldSpecified;
        
        /// <remarks/>
        /// <summary>The name of the coordinate reference system in a particular naming system. An optional short name (code) can also be specified. Specifying a well known system is highly desired. An example would be to specify a name of 'ED50' with a code of '4230' in the 'EPSG' naming system. Note that specifying a name in the EPSG naming system is asserting that the parameters in the EPSG database are appropriate for this CRS. This is  also true for any other naming system. If in doubt, contact your local geodesist.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The name of the coordinate reference system in a particular naming system. An optional short name (code) can also be specified. Specifying a well known system is highly desired. An example would be to specify a name of 'ED50' with a code of '4230' in the 'EPSG' naming system. Note that specifying a name in the EPSG naming system is asserting that the parameters in the EPSG database are appropriate for this CRS. This is  also true for any other naming system. If in doubt, contact your local geodesist.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameCRS", DataType="wellKnownNameStruct")]
        public wellKnownNameStruct nameCRS {
            get {
                return this.nameCRSField;
            }
            set {
                this.nameCRSField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Geodetic datum code. This defines a system in the Geoshare naming system and should probably not be used with CRSName.</summary>
        [System.ComponentModel.DescriptionAttribute("Geodetic datum code. This defines a system in the Geoshare naming system and shou" +
            "ld probably not be used with CRSName.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("geodeticDatumCode", DataType="GeodeticDatum")]
        public GeodeticDatum geodeticDatumCode {
            get {
                return this.geodeticDatumCodeField;
            }
            set {
                this.geodeticDatumCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool geodeticDatumCodeSpecified {
            get {
                return this.geodeticDatumCodeFieldSpecified;
            }
            set {
                this.geodeticDatumCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Ellipsoid translation (3). Units are meters by convention.</summary>
        [System.ComponentModel.DescriptionAttribute("Ellipsoid translation (3). Units are meters by convention.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("xTranslation", DataType="lengthMeasure")]
        public lengthMeasure xTranslation {
            get {
                return this.xTranslationField;
            }
            set {
                this.xTranslationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Ellipsoid translation (3). Units are meters by convention.</summary>
        [System.ComponentModel.DescriptionAttribute("Ellipsoid translation (3). Units are meters by convention.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("yTranslation", DataType="lengthMeasure")]
        public lengthMeasure yTranslation {
            get {
                return this.yTranslationField;
            }
            set {
                this.yTranslationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Ellipsoid translation (3). Units are meters by convention.</summary>
        [System.ComponentModel.DescriptionAttribute("Ellipsoid translation (3). Units are meters by convention.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("zTranslation", DataType="lengthMeasure")]
        public lengthMeasure zTranslation {
            get {
                return this.zTranslationField;
            }
            set {
                this.zTranslationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Ellipsoid rotation (3). Seconds of arc by convention.</summary>
        [System.ComponentModel.DescriptionAttribute("Ellipsoid rotation (3). Seconds of arc by convention.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("xRotation", DataType="planeAngleMeasure")]
        public planeAngleMeasure xRotation {
            get {
                return this.xRotationField;
            }
            set {
                this.xRotationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Ellipsoid rotation (3). Seconds of arc by convention.</summary>
        [System.ComponentModel.DescriptionAttribute("Ellipsoid rotation (3). Seconds of arc by convention.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("yRotation", DataType="planeAngleMeasure")]
        public planeAngleMeasure yRotation {
            get {
                return this.yRotationField;
            }
            set {
                this.yRotationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Ellipsoid rotation (3). Seconds of arc by convention.</summary>
        [System.ComponentModel.DescriptionAttribute("Ellipsoid rotation (3). Seconds of arc by convention.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("zRotation", DataType="planeAngleMeasure")]
        public planeAngleMeasure zRotation {
            get {
                return this.zRotationField;
            }
            set {
                this.zRotationField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Ellipsoid scale factor.</summary>
        [System.ComponentModel.DescriptionAttribute("Ellipsoid scale factor.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("scaleFactor", DataType="unitlessQuantity")]
        public double scaleFactor {
            get {
                return this.scaleFactorField;
            }
            set {
                this.scaleFactorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool scaleFactorSpecified {
            get {
                return this.scaleFactorFieldSpecified;
            }
            set {
                this.scaleFactorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Ellipsoid code (spheroid) defining geographic or planar coordinates.  Implied if geodeticDatumCode is specified (and is not user defined).</summary>
        [System.ComponentModel.DescriptionAttribute("Ellipsoid code (spheroid) defining geographic or planar coordinates.  Implied if " +
            "geodeticDatumCode is specified (and is not user defined).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ellipsoidCode", DataType="Ellipsoid")]
        public Ellipsoid ellipsoidCode {
            get {
                return this.ellipsoidCodeField;
            }
            set {
                this.ellipsoidCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ellipsoidCodeSpecified {
            get {
                return this.ellipsoidCodeFieldSpecified;
            }
            set {
                this.ellipsoidCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Ellipsoid semi-major axis size. Implied if geodeticDatumCode or ellipsoidCode  specified.</summary>
        [System.ComponentModel.DescriptionAttribute("Ellipsoid semi-major axis size. Implied if geodeticDatumCode or ellipsoidCode  sp" +
            "ecified.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ellipsoidSemiMajorAxis", DataType="lengthMeasure")]
        public lengthMeasure ellipsoidSemiMajorAxis {
            get {
                return this.ellipsoidSemiMajorAxisField;
            }
            set {
                this.ellipsoidSemiMajorAxisField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Ellipsoid inverse flattening value (ie. 1/x). Implied if geodeticDatumCode  or ellipsoidCode specified.</summary>
        [System.ComponentModel.DescriptionAttribute("Ellipsoid inverse flattening value (ie. 1/x). Implied if geodeticDatumCode  or el" +
            "lipsoidCode specified.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("ellipsoidInverseFlattening", DataType="unitlessQuantity")]
        public double ellipsoidInverseFlattening {
            get {
                return this.ellipsoidInverseFlatteningField;
            }
            set {
                this.ellipsoidInverseFlatteningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ellipsoidInverseFlatteningSpecified {
            get {
                return this.ellipsoidInverseFlatteningFieldSpecified;
            }
            set {
                this.ellipsoidInverseFlatteningFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_localCRS {
        
        private object itemField;
        
        private yAxisAzimuth yAxisAzimuthField;
        
        private string yAxisDescriptionField;
        
        private bool xRotationCounterClockwiseField;
        
        private bool xRotationCounterClockwiseFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("origin", typeof(refNameString))]
        [System.Xml.Serialization.XmlElementAttribute("originDescription", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("usesWellAsOrigin", typeof(bool))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("usesWellAsOrigin", DataType="logicalBoolean")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("origin", DataType="refNameString")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("originDescription", DataType="commentString")]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The angle of the Y axis from North (as described  in attribute northDirection). Defaults to zero. Positive clockwise.</summary>
        [System.ComponentModel.DescriptionAttribute("The angle of the Y axis from North (as described  in attribute northDirection). D" +
            "efaults to zero. Positive clockwise.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("yAxisAzimuth", DataType="yAxisAzimuth")]
        public yAxisAzimuth yAxisAzimuth {
            get {
                return this.yAxisAzimuthField;
            }
            set {
                this.yAxisAzimuthField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A free-form description of the Y axis.  Examples would be 'parallel to the west side of the platform', or  'along the main entry road'.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("A free-form description of the Y axis.  Examples would be \'parallel to the west s" +
            "ide of the platform\', or  \'along the main entry road\'.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("yAxisDescription", DataType="commentString")]
        public string yAxisDescription {
            get {
                return this.yAxisDescriptionField;
            }
            set {
                this.yAxisDescriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True ("true" or "1") indicates that the X axis is rotated  counter-clockwise from the Y axis when viewed from above the earth looking down. False ("false" or "0") or not given indicates a clockwise rotation.  Generally the X axis is rotated clockwise.</summary>
        [System.ComponentModel.DescriptionAttribute("True (\"true\" or \"1\") indicates that the X axis is rotated  counter-clockwise from" +
            " the Y axis when viewed from above the earth looking down. False (\"false\" or \"0\"" +
            ") or not given indicates a clockwise rotation.  Generally the X axis is rotated " +
            "clockwise.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("xRotationCounterClockwise", DataType="logicalBoolean")]
        public bool xRotationCounterClockwise {
            get {
                return this.xRotationCounterClockwiseField;
            }
            set {
                this.xRotationCounterClockwiseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool xRotationCounterClockwiseSpecified {
            get {
                return this.xRotationCounterClockwiseFieldSpecified;
            }
            set {
                this.xRotationCounterClockwiseFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_projectionx {
        
        private wellKnownNameStruct nameCRSField;
        
        private Projection projectionCodeField;
        
        private bool projectionCodeFieldSpecified;
        
        private refNameString projectedFromField;
        
        private planeAngleMeasure stdParallel1Field;
        
        private planeAngleMeasure stdParallel2Field;
        
        private planeAngleMeasure centralMeridianField;
        
        private planeAngleMeasure originLatitudeField;
        
        private planeAngleMeasure originLongitudeField;
        
        private planeAngleMeasure latitude1Field;
        
        private planeAngleMeasure longitude1Field;
        
        private planeAngleMeasure latitude2Field;
        
        private planeAngleMeasure longitude2Field;
        
        private planeAngleMeasure latitudeForScaleField;
        
        private planeAngleMeasure longitudeForScaleField;
        
        private planeAngleMeasure trueScaleLatitudeField;
        
        private lengthMeasure spheroidRadiusField;
        
        private double scaleFactorField;
        
        private bool scaleFactorFieldSpecified;
        
        private ProjectionVariantsObliqueMercator methodVariantField;
        
        private bool methodVariantFieldSpecified;
        
        private lengthMeasure perspectiveHeightField;
        
        private string zoneField;
        
        private NADTypes nADTypeField;
        
        private bool nADTypeFieldSpecified;
        
        private lengthMeasure falseEastingField;
        
        private lengthMeasure falseNorthingField;
        
        private planeAngleMeasure bearingField;
        
        private Hemispheres hemisphereField;
        
        private bool hemisphereFieldSpecified;
        
        private string descriptionField;
        
        private indexedObject[] parameterField;
        
        /// <remarks/>
        /// <summary>The name of the coordinate reference system in a particular naming system. An optional short name (code) can also be specified. Specifying a well known system is highly desired. An example would be to specify a name of 'WGS 84 / UTM zone 10N' with a code of '32610' in the 'EPSG' naming system. Note that specifying a name in the EPSG naming system is asserting that the parameters in the EPSG database are appropriate for this CRS. This is  also true for any other naming system. If in doubt, contact your local geodesist.</summary>
        [System.ComponentModel.DescriptionAttribute(@"The name of the coordinate reference system in a particular naming system. An optional short name (code) can also be specified. Specifying a well known system is highly desired. An example would be to specify a name of 'WGS 84 / UTM zone 10N' with a code of '32610' in the 'EPSG' naming system. Note that specifying a name in the EPSG naming system is asserting that the parameters in the EPSG database are appropriate for this CRS. This is  also true for any other naming system. If in doubt, contact your local geodesist.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameCRS", DataType="wellKnownNameStruct")]
        public wellKnownNameStruct nameCRS {
            get {
                return this.nameCRSField;
            }
            set {
                this.nameCRSField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A code to identify the type of projection.</summary>
        [System.ComponentModel.DescriptionAttribute("A code to identify the type of projection.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("projectionCode", DataType="Projection")]
        public Projection projectionCode {
            get {
                return this.projectionCodeField;
            }
            set {
                this.projectionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool projectionCodeSpecified {
            get {
                return this.projectionCodeFieldSpecified;
            }
            set {
                this.projectionCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the wellCRS that represents the geographic system from which this system was projected.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the wellCRS that represents the geographic system from which this sy" +
            "stem was projected.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("projectedFrom", DataType="refNameString")]
        public refNameString projectedFrom {
            get {
                return this.projectedFromField;
            }
            set {
                this.projectedFromField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Latitude of first standard parallel.</summary>
        [System.ComponentModel.DescriptionAttribute("Latitude of first standard parallel.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stdParallel1", DataType="planeAngleMeasure")]
        public planeAngleMeasure stdParallel1 {
            get {
                return this.stdParallel1Field;
            }
            set {
                this.stdParallel1Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Latitude of second standard parallel, if used.</summary>
        [System.ComponentModel.DescriptionAttribute("Latitude of second standard parallel, if used.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stdParallel2", DataType="planeAngleMeasure")]
        public planeAngleMeasure stdParallel2 {
            get {
                return this.stdParallel2Field;
            }
            set {
                this.stdParallel2Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Longitude of the Y axis of the resulting map.</summary>
        [System.ComponentModel.DescriptionAttribute("Longitude of the Y axis of the resulting map.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("centralMeridian", DataType="planeAngleMeasure")]
        public planeAngleMeasure centralMeridian {
            get {
                return this.centralMeridianField;
            }
            set {
                this.centralMeridianField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Latitude at which the X axis intersects the central meridian.</summary>
        [System.ComponentModel.DescriptionAttribute("Latitude at which the X axis intersects the central meridian.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("originLatitude", DataType="planeAngleMeasure")]
        public planeAngleMeasure originLatitude {
            get {
                return this.originLatitudeField;
            }
            set {
                this.originLatitudeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Longitude of the central meridian.</summary>
        [System.ComponentModel.DescriptionAttribute("Longitude of the central meridian.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("originLongitude", DataType="planeAngleMeasure")]
        public planeAngleMeasure originLongitude {
            get {
                return this.originLongitudeField;
            }
            set {
                this.originLongitudeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Latitude of the first point if the two-point specification  of the central line is used.</summary>
        [System.ComponentModel.DescriptionAttribute("Latitude of the first point if the two-point specification  of the central line i" +
            "s used.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("latitude1", DataType="planeAngleMeasure")]
        public planeAngleMeasure latitude1 {
            get {
                return this.latitude1Field;
            }
            set {
                this.latitude1Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Longitude of the first point if the two-point specification  of the central line is used.</summary>
        [System.ComponentModel.DescriptionAttribute("Longitude of the first point if the two-point specification  of the central line " +
            "is used.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("longitude1", DataType="planeAngleMeasure")]
        public planeAngleMeasure longitude1 {
            get {
                return this.longitude1Field;
            }
            set {
                this.longitude1Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Latitude of the second point if the two-point specification  of the central line is used.</summary>
        [System.ComponentModel.DescriptionAttribute("Latitude of the second point if the two-point specification  of the central line " +
            "is used.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("latitude2", DataType="planeAngleMeasure")]
        public planeAngleMeasure latitude2 {
            get {
                return this.latitude2Field;
            }
            set {
                this.latitude2Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Longitude of the second point if the two-point specification  of the central line is used.</summary>
        [System.ComponentModel.DescriptionAttribute("Longitude of the second point if the two-point specification  of the central line" +
            " is used.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("longitude2", DataType="planeAngleMeasure")]
        public planeAngleMeasure longitude2 {
            get {
                return this.longitude2Field;
            }
            set {
                this.longitude2Field = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Latitude of a point for which the scale factor is specified exactly.  Default to origin.</summary>
        [System.ComponentModel.DescriptionAttribute("Latitude of a point for which the scale factor is specified exactly.  Default to " +
            "origin.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("latitudeForScale", DataType="planeAngleMeasure")]
        public planeAngleMeasure latitudeForScale {
            get {
                return this.latitudeForScaleField;
            }
            set {
                this.latitudeForScaleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Longitude of a point for which the scale factor is specified exactly.  Default to origin.</summary>
        [System.ComponentModel.DescriptionAttribute("Longitude of a point for which the scale factor is specified exactly.  Default to" +
            " origin.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("longitudeForScale", DataType="planeAngleMeasure")]
        public planeAngleMeasure longitudeForScale {
            get {
                return this.longitudeForScaleField;
            }
            set {
                this.longitudeForScaleField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Latitude at which the scale on the map is exact. If none is provided,  scale is assumed to be exact at the equator.</summary>
        [System.ComponentModel.DescriptionAttribute("Latitude at which the scale on the map is exact. If none is provided,  scale is a" +
            "ssumed to be exact at the equator.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("trueScaleLatitude", DataType="planeAngleMeasure")]
        public planeAngleMeasure trueScaleLatitude {
            get {
                return this.trueScaleLatitudeField;
            }
            set {
                this.trueScaleLatitudeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Spheroid radius.</summary>
        [System.ComponentModel.DescriptionAttribute("Spheroid radius.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("spheroidRadius", DataType="lengthMeasure")]
        public lengthMeasure spheroidRadius {
            get {
                return this.spheroidRadiusField;
            }
            set {
                this.spheroidRadiusField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Ellipsoid scale factor.</summary>
        [System.ComponentModel.DescriptionAttribute("Ellipsoid scale factor.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("scaleFactor", DataType="unitlessQuantity")]
        public double scaleFactor {
            get {
                return this.scaleFactorField;
            }
            set {
                this.scaleFactorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool scaleFactorSpecified {
            get {
                return this.scaleFactorFieldSpecified;
            }
            set {
                this.scaleFactorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Projection method variant - establishes minor variations of the projection.  Geoshare proposal.</summary>
        [System.ComponentModel.DescriptionAttribute("Projection method variant - establishes minor variations of the projection.  Geos" +
            "hare proposal.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("methodVariant", DataType="ProjectionVariantsObliqueMercator")]
        public ProjectionVariantsObliqueMercator methodVariant {
            get {
                return this.methodVariantField;
            }
            set {
                this.methodVariantField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool methodVariantSpecified {
            get {
                return this.methodVariantFieldSpecified;
            }
            set {
                this.methodVariantFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Height above the surface origin location from which the perspective is taken.</summary>
        [System.ComponentModel.DescriptionAttribute("Height above the surface origin location from which the perspective is taken.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("perspectiveHeight", DataType="lengthMeasure")]
        public lengthMeasure perspectiveHeight {
            get {
                return this.perspectiveHeightField;
            }
            set {
                this.perspectiveHeightField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Zone for the type of projection. Zones have values from 1 to 60 with a required direction of "N" (North) or "S" (South). For example, "21N".</summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([1-9]|[1-5][0-9]|60)[NS]")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(3)]
        [System.ComponentModel.DescriptionAttribute("Zone for the type of projection. Zones have values from 1 to 60 with a required d" +
            "irection of \"N\" (North) or \"S\" (South). For example, \"21N\".")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("zone", DataType="geodeticZoneString")]
        public string zone {
            get {
                return this.zoneField;
            }
            set {
                this.zoneField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>North American Datum type.</summary>
        [System.ComponentModel.DescriptionAttribute("North American Datum type.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("NADType", DataType="NADTypes")]
        public NADTypes NADType {
            get {
                return this.nADTypeField;
            }
            set {
                this.nADTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NADTypeSpecified {
            get {
                return this.nADTypeFieldSpecified;
            }
            set {
                this.nADTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Artificial value added to the X axis.</summary>
        [System.ComponentModel.DescriptionAttribute("Artificial value added to the X axis.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("falseEasting", DataType="lengthMeasure")]
        public lengthMeasure falseEasting {
            get {
                return this.falseEastingField;
            }
            set {
                this.falseEastingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Artificial value added to the Y axis.</summary>
        [System.ComponentModel.DescriptionAttribute("Artificial value added to the Y axis.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("falseNorthing", DataType="lengthMeasure")]
        public lengthMeasure falseNorthing {
            get {
                return this.falseNorthingField;
            }
            set {
                this.falseNorthingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Bearing angle of the great circle with respect to north at the central  point.</summary>
        [System.ComponentModel.DescriptionAttribute("Bearing angle of the great circle with respect to north at the central  point.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bearing", DataType="planeAngleMeasure")]
        public planeAngleMeasure bearing {
            get {
                return this.bearingField;
            }
            set {
                this.bearingField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Is the projection in the northern hemisphere or the southern hemisphere.</summary>
        [System.ComponentModel.DescriptionAttribute("Is the projection in the northern hemisphere or the southern hemisphere.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("hemisphere", DataType="Hemispheres")]
        public Hemispheres hemisphere {
            get {
                return this.hemisphereField;
            }
            set {
                this.hemisphereField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hemisphereSpecified {
            get {
                return this.hemisphereFieldSpecified;
            }
            set {
                this.hemisphereFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of item and details.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Description of item and details.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="commentString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Parameter describing the user-defined projection.</summary>
        [System.Xml.Serialization.XmlElementAttribute("parameter")]
        [System.ComponentModel.DescriptionAttribute("Parameter describing the user-defined projection.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("parameter", DataType="indexedObject")]
        public indexedObject[] parameter {
            get {
                return this.parameterField;
            }
            set {
                this.parameterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [System.Xml.Serialization.XmlRootAttribute("wellbores", Namespace="http://www.witsml.org/schemas/131", IsNullable=false)]
    public partial class obj_wellbores {
        
        private cs_documentInfo documentInfoField;
        
        private obj_wellbore[] wellboreField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information about a single wellbore. A wellbore is a unique, oriented path from the bottom of a drilled  borehole to the surface of the Earth. The path must not overlap or cross itself.</summary>
        [System.Xml.Serialization.XmlElementAttribute("wellbore")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Information about a single wellbore. A wellbore is a unique, oriented path from t" +
            "he bottom of a drilled  borehole to the surface of the Earth. The path must not " +
            "overlap or cross itself.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellbore", DataType="obj_wellbore")]
        public obj_wellbore[] wellbore {
            get {
                return this.wellboreField;
            }
            set {
                this.wellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.3\\.1\\.([1-9]|([1-9][0-9]))")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionString")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("WITSML", "1.3.1.1")]
    public partial class obj_wellbore {
        
        private string nameWellField;
        
        private string nameField;
        
        private refNameString parentWellboreField;
        
        private string numberField;
        
        private string suffixAPIField;
        
        private string numGovtField;
        
        private WellStatus statusWellboreField;
        
        private bool statusWellboreFieldSpecified;
        
        private WellPurpose purposeWellboreField;
        
        private bool purposeWellboreFieldSpecified;
        
        private WellboreType typeWellboreField;
        
        private bool typeWellboreFieldSpecified;
        
        private WellboreShape shapeField;
        
        private bool shapeFieldSpecified;
        
        private Energistics.DataAccess.Timestamp dTimKickoffField;
        
        private bool dTimKickoffFieldSpecified;
        
        private bool achievedTDField;
        
        private bool achievedTDFieldSpecified;
        
        private measuredDepthCoord mdCurrentField;
        
        private wellVerticalDepthCoord tvdCurrentField;
        
        private measuredDepthCoord mdKickoffField;
        
        private wellVerticalDepthCoord tvdKickoffField;
        
        private measuredDepthCoord mdPlannedField;
        
        private wellVerticalDepthCoord tvdPlannedField;
        
        private measuredDepthCoord mdSubSeaPlannedField;
        
        private wellVerticalDepthCoord tvdSubSeaPlannedField;
        
        private timeMeasure dayTargetField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>This is a pointer to the parent wellbore. No parent = starts from top.</summary>
        [System.ComponentModel.DescriptionAttribute("This is a pointer to the parent wellbore. No parent = starts from top.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("parentWellbore", DataType="refNameString")]
        public refNameString parentWellbore {
            get {
                return this.parentWellboreField;
            }
            set {
                this.parentWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Operator borehole number.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Operator borehole number.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("number", DataType="str32")]
        public string number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>API suffix.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("API suffix.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("suffixAPI", DataType="nameString")]
        public string suffixAPI {
            get {
                return this.suffixAPIField;
            }
            set {
                this.suffixAPIField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Government assigned number.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Government assigned number.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("numGovt", DataType="nameString")]
        public string numGovt {
            get {
                return this.numGovtField;
            }
            set {
                this.numGovtField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>POSC wellbore status.</summary>
        [System.ComponentModel.DescriptionAttribute("POSC wellbore status.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("statusWellbore", DataType="WellStatus")]
        public WellStatus statusWellbore {
            get {
                return this.statusWellboreField;
            }
            set {
                this.statusWellboreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusWellboreSpecified {
            get {
                return this.statusWellboreFieldSpecified;
            }
            set {
                this.statusWellboreFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>POSC wellbore purpose.</summary>
        [System.ComponentModel.DescriptionAttribute("POSC wellbore purpose.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("purposeWellbore", DataType="WellPurpose")]
        public WellPurpose purposeWellbore {
            get {
                return this.purposeWellboreField;
            }
            set {
                this.purposeWellboreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool purposeWellboreSpecified {
            get {
                return this.purposeWellboreFieldSpecified;
            }
            set {
                this.purposeWellboreFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Type of wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("Type of wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeWellbore", DataType="WellboreType")]
        public WellboreType typeWellbore {
            get {
                return this.typeWellboreField;
            }
            set {
                this.typeWellboreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeWellboreSpecified {
            get {
                return this.typeWellboreFieldSpecified;
            }
            set {
                this.typeWellboreFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>POSC wellbore trajectory shape.</summary>
        [System.ComponentModel.DescriptionAttribute("POSC wellbore trajectory shape.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("shape", DataType="WellboreShape")]
        public WellboreShape shape {
            get {
                return this.shapeField;
            }
            set {
                this.shapeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool shapeSpecified {
            get {
                return this.shapeFieldSpecified;
            }
            set {
                this.shapeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time of wellbore kickoff.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time of wellbore kickoff.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dTimKickoff", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp dTimKickoff {
            get {
                return this.dTimKickoffField;
            }
            set {
                this.dTimKickoffField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dTimKickoffSpecified {
            get {
                return this.dTimKickoffFieldSpecified;
            }
            set {
                this.dTimKickoffFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True ("true" of "1") indicates that the wellbore has  acheieved total depth. That is, drilling has completed. False ("false" or "0") indicates otherwise.  Not given indicates that it is not known whether total depth has been reached.</summary>
        [System.ComponentModel.DescriptionAttribute("True (\"true\" of \"1\") indicates that the wellbore has  acheieved total depth. That" +
            " is, drilling has completed. False (\"false\" or \"0\") indicates otherwise.  Not gi" +
            "ven indicates that it is not known whether total depth has been reached.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("achievedTD", DataType="logicalBoolean")]
        public bool achievedTD {
            get {
                return this.achievedTDField;
            }
            set {
                this.achievedTDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool achievedTDSpecified {
            get {
                return this.achievedTDFieldSpecified;
            }
            set {
                this.achievedTDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The current measured depth of the borehole. If status is plugged,  indicates the maximum depth reached before plugging.</summary>
        [System.ComponentModel.DescriptionAttribute("The current measured depth of the borehole. If status is plugged,  indicates the " +
            "maximum depth reached before plugging.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdCurrent", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdCurrent {
            get {
                return this.mdCurrentField;
            }
            set {
                this.mdCurrentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The current true vertical depth of the borehole.  If status is plugged, indicates the  maximum depth reached before plugging.</summary>
        [System.ComponentModel.DescriptionAttribute("The current true vertical depth of the borehole.  If status is plugged, indicates" +
            " the  maximum depth reached before plugging.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvdCurrent", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvdCurrent {
            get {
                return this.tvdCurrentField;
            }
            set {
                this.tvdCurrentField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Kickoff measured depth of the wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("Kickoff measured depth of the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdKickoff", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdKickoff {
            get {
                return this.mdKickoffField;
            }
            set {
                this.mdKickoffField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Kickoff true vertical depth of the wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("Kickoff true vertical depth of the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvdKickoff", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvdKickoff {
            get {
                return this.tvdKickoffField;
            }
            set {
                this.tvdKickoffField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Planned measured depth for the wellbore total depth.</summary>
        [System.ComponentModel.DescriptionAttribute("Planned measured depth for the wellbore total depth.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdPlanned", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdPlanned {
            get {
                return this.mdPlannedField;
            }
            set {
                this.mdPlannedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Planned true vertical depth for the wellbore total depth.</summary>
        [System.ComponentModel.DescriptionAttribute("Planned true vertical depth for the wellbore total depth.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvdPlanned", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvdPlanned {
            get {
                return this.tvdPlannedField;
            }
            set {
                this.tvdPlannedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Planned measured for the wellbore total depth - with respect to seabed.</summary>
        [System.ComponentModel.DescriptionAttribute("Planned measured for the wellbore total depth - with respect to seabed.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mdSubSeaPlanned", DataType="measuredDepthCoord")]
        public measuredDepthCoord mdSubSeaPlanned {
            get {
                return this.mdSubSeaPlannedField;
            }
            set {
                this.mdSubSeaPlannedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Planned true vertical depth for the wellbore total depth - with respect to seabed.</summary>
        [System.ComponentModel.DescriptionAttribute("Planned true vertical depth for the wellbore total depth - with respect to seabed" +
            ".")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("tvdSubSeaPlanned", DataType="wellVerticalDepthCoord")]
        public wellVerticalDepthCoord tvdSubSeaPlanned {
            get {
                return this.tvdSubSeaPlannedField;
            }
            set {
                this.tvdSubSeaPlannedField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Target days for drilling wellbore.</summary>
        [System.ComponentModel.DescriptionAttribute("Target days for drilling wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dayTarget", DataType="timeMeasure")]
        public timeMeasure dayTarget {
            get {
                return this.dayTargetField;
            }
            set {
                this.dayTargetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [System.Xml.Serialization.XmlRootAttribute("wellLogs", Namespace="http://www.witsml.org/schemas/131", IsNullable=false)]
    public partial class obj_wellLogs {
        
        private cs_documentInfo documentInfoField;
        
        private obj_wellLog[] wellLogField;
        
        private string versionField;
        
        /// <remarks/>
        /// <summary>Information about the XML message instance.</summary>
        [System.ComponentModel.DescriptionAttribute("Information about the XML message instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("documentInfo", DataType="cs_documentInfo")]
        public cs_documentInfo documentInfo {
            get {
                return this.documentInfoField;
            }
            set {
                this.documentInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A single well log.</summary>
        [System.Xml.Serialization.XmlElementAttribute("wellLog")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A single well log.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellLog", DataType="obj_wellLog")]
        public obj_wellLog[] wellLog {
            get {
                return this.wellLogField;
            }
            set {
                this.wellLogField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data object schema version.  The fourth level must match the  version of the schema constraints (enumerations and XML loader files) that are assumed by the document instance.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("1\\.3\\.1\\.([1-9]|([1-9][0-9]))")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Data object schema version.  The fourth level must match the  version of the sche" +
            "ma constraints (enumerations and XML loader files) that are assumed by the docum" +
            "ent instance.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("version", DataType="schemaVersionString")]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    [Energistics.SchemaGatherer.EnergisticsDataObjectAttribute("WITSML", "1.3.1.1")]
    public partial class obj_wellLog {
        
        private string nameWellField;
        
        private string nameWellboreField;
        
        private string nameField;
        
        private bool objectGrowingField;
        
        private bool objectGrowingFieldSpecified;
        
        private string serviceCompanyField;
        
        private string runNumberField;
        
        private short bhaRunNumberField;
        
        private bool bhaRunNumberFieldSpecified;
        
        private Energistics.DataAccess.Timestamp creationDateField;
        
        private bool creationDateFieldSpecified;
        
        private string descriptionField;
        
        private LogIndexType indexTypeField;
        
        private genericMeasure minIndexField;
        
        private genericMeasure maxIndexField;
        
        private Energistics.DataAccess.Timestamp minDateTimeIndexField;
        
        private bool minDateTimeIndexFieldSpecified;
        
        private Energistics.DataAccess.Timestamp maxDateTimeIndexField;
        
        private bool maxDateTimeIndexFieldSpecified;
        
        private string nullValueField;
        
        private indexedObject[] logParamField;
        
        private cs_wellLogCurveInfo[] logCurveInfoField;
        
        private cs_blockInfo[] blockInfoField;
        
        private data[] logDataField;
        
        private cs_commonData commonDataField;
        
        private cs_customData customDataField;
        
        private string uidWellField;
        
        private string uidWellboreField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well that contains the wellbore.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well that contains the wellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWell", DataType="nameString")]
        public string nameWell {
            get {
                return this.nameWellField;
            }
            set {
                this.nameWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the wellbore that contains the log.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the wellbore that contains the log.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nameWellbore", DataType="nameString")]
        public string nameWellbore {
            get {
                return this.nameWellboreField;
            }
            set {
                this.nameWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Human recognizable context for the well log.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Human recognizable context for the well log.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("name", DataType="nameString")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Whether or not the wellLog is growing.  True ("true" or "1") indicates the that the wellLog is still growing  in size (that is, logData values are still being added). For example, it may be connected to a realtime stream. False ("false" or "0") indicates that the wellLog is  closed (that is, no further logData values will be added). Not given indicates that the status of the wellLog is not known. This value is only relevant within the context of a server.</summary>
        [System.ComponentModel.DescriptionAttribute(@"Whether or not the wellLog is growing.  True (""true"" or ""1"") indicates the that the wellLog is still growing  in size (that is, logData values are still being added). For example, it may be connected to a realtime stream. False (""false"" or ""0"") indicates that the wellLog is  closed (that is, no further logData values will be added). Not given indicates that the status of the wellLog is not known. This value is only relevant within the context of a server.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("objectGrowing", DataType="logicalBoolean")]
        public bool objectGrowing {
            get {
                return this.objectGrowingField;
            }
            set {
                this.objectGrowingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool objectGrowingSpecified {
            get {
                return this.objectGrowingFieldSpecified;
            }
            set {
                this.objectGrowingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name of contractor who provided the service.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Name of contractor who provided the service.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("serviceCompany", DataType="nameString")]
        public string serviceCompany {
            get {
                return this.serviceCompanyField;
            }
            set {
                this.serviceCompanyField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Log run number. This should normally be a number; however  some legacy systems encode other information in this value.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Log run number. This should normally be a number; however  some legacy systems en" +
            "code other information in this value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("runNumber", DataType="str16")]
        public string runNumber {
            get {
                return this.runNumberField;
            }
            set {
                this.runNumberField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The bottom hole assembly run number associated with this log.</summary>
        [System.ComponentModel.DescriptionAttribute("The bottom hole assembly run number associated with this log.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("bhaRunNumber", DataType="positiveCount")]
        public short bhaRunNumber {
            get {
                return this.bhaRunNumberField;
            }
            set {
                this.bhaRunNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bhaRunNumberSpecified {
            get {
                return this.bhaRunNumberFieldSpecified;
            }
            set {
                this.bhaRunNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Date and time that the log was created.</summary>
        [System.ComponentModel.DescriptionAttribute("Date and time that the log was created.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("creationDate", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp creationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool creationDateSpecified {
            get {
                return this.creationDateFieldSpecified;
            }
            set {
                this.creationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of item and details.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(4000)]
        [System.ComponentModel.DescriptionAttribute("Description of item and details.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="commentString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Primary index type.  If the log is comprised of both DEPTH- and TIME-indexed passes,         the primary index type of the log should be DEPTH.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("Primary index type.  If the log is comprised of both DEPTH- and TIME-indexed pass" +
            "es,         the primary index type of the log should be DEPTH.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("indexType", DataType="LogIndexType")]
        public LogIndexType indexType {
            get {
                return this.indexTypeField;
            }
            set {
                this.indexTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A bounding primary index value for the data records of the log.           The minimum indexType value for all data records of the log.</summary>
        [System.ComponentModel.DescriptionAttribute("A bounding primary index value for the data records of the log.           The min" +
            "imum indexType value for all data records of the log.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("minIndex", DataType="genericMeasure")]
        public genericMeasure minIndex {
            get {
                return this.minIndexField;
            }
            set {
                this.minIndexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A bounding primary index value for the data records of the log.           The maximum indexType value for all data records of the log.</summary>
        [System.ComponentModel.DescriptionAttribute("A bounding primary index value for the data records of the log.           The max" +
            "imum indexType value for all data records of the log.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("maxIndex", DataType="genericMeasure")]
        public genericMeasure maxIndex {
            get {
                return this.maxIndexField;
            }
            set {
                this.maxIndexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A bounding (date time) index value for the data records of the log.           The minimum date time index value for all data records of the log. If an index is elapsed time and a start date time is specified then the corresponding date time should be calculated.</summary>
        [System.ComponentModel.DescriptionAttribute(@"A bounding (date time) index value for the data records of the log.           The minimum date time index value for all data records of the log. If an index is elapsed time and a start date time is specified then the corresponding date time should be calculated.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("minDateTimeIndex", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp minDateTimeIndex {
            get {
                return this.minDateTimeIndexField;
            }
            set {
                this.minDateTimeIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool minDateTimeIndexSpecified {
            get {
                return this.minDateTimeIndexFieldSpecified;
            }
            set {
                this.minDateTimeIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A bounding (date time) index value for the data records of the log.           The maximum date time index value for all data records of the log.  If an index is elapsed time and a start date time is specified then the corresponding date time should be calculated.</summary>
        [System.ComponentModel.DescriptionAttribute(@"A bounding (date time) index value for the data records of the log.           The maximum date time index value for all data records of the log.  If an index is elapsed time and a start date time is specified then the corresponding date time should be calculated.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("maxDateTimeIndex", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp maxDateTimeIndex {
            get {
                return this.maxDateTimeIndexField;
            }
            set {
                this.maxDateTimeIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxDateTimeIndexSpecified {
            get {
                return this.maxDateTimeIndexFieldSpecified;
            }
            set {
                this.maxDateTimeIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An empty string is the default representation of a null value for a  curve (i.e. when the null value representation is not explicitly defined).  If a null value representation is defined for a log, this becomes the default for all curves in that log (but can be overridden at the block and curve level). An empty string is always a valid null value representation in the comma delimited list. An empty string is not a valid null value representation within a space delimited or base64 encoded array. Specifying a null value also makes it easier to transform data back to a  legacy format without having to scan the data to insure that the null pattern  does not exist in the data.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute(@"An empty string is the default representation of a null value for a  curve (i.e. when the null value representation is not explicitly defined).  If a null value representation is defined for a log, this becomes the default for all curves in that log (but can be overridden at the block and curve level). An empty string is always a valid null value representation in the comma delimited list. An empty string is not a valid null value representation within a space delimited or base64 encoded array. Specifying a null value also makes it easier to transform data back to a  legacy format without having to scan the data to insure that the null pattern  does not exist in the data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nullValue", DataType="encodedValueString")]
        public string nullValue {
            get {
                return this.nullValueField;
            }
            set {
                this.nullValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Log parameters that apply to the overall log.</summary>
        [System.Xml.Serialization.XmlElementAttribute("logParam")]
        [System.ComponentModel.DescriptionAttribute("Log parameters that apply to the overall log.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("logParam", DataType="indexedObject")]
        public indexedObject[] logParam {
            get {
                return this.logParamField;
            }
            set {
                this.logParamField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Information about a curve mnemonic.  This defines curve information whose data can be recorded into many blocks.</summary>
        [System.Xml.Serialization.XmlElementAttribute("logCurveInfo")]
        [System.ComponentModel.DescriptionAttribute("Information about a curve mnemonic.  This defines curve information whose data ca" +
            "n be recorded into many blocks.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("logCurveInfo", DataType="cs_wellLogCurveInfo")]
        public cs_wellLogCurveInfo[] logCurveInfo {
            get {
                return this.logCurveInfoField;
            }
            set {
                this.logCurveInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The description of a data block.</summary>
        [System.Xml.Serialization.XmlElementAttribute("blockInfo")]
        [System.ComponentModel.DescriptionAttribute("The description of a data block.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("blockInfo", DataType="cs_blockInfo")]
        public cs_blockInfo[] blockInfo {
            get {
                return this.blockInfoField;
            }
            set {
                this.blockInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Container for one or more blocks of well log data.</summary>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        [System.ComponentModel.DescriptionAttribute("Container for one or more blocks of well log data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("logData", DataType="cs_wellLogData")]
        public data[] logData {
            get {
                return this.logDataField;
            }
            set {
                this.logDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that contains elements that are common to all data  objects.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that contains elements that are common to all data  objects.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("commonData", DataType="cs_commonData")]
        public cs_commonData commonData {
            get {
                return this.commonDataField;
            }
            set {
                this.commonDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A container element that can contain custom or user defined  data elements.</summary>
        [System.ComponentModel.DescriptionAttribute("A container element that can contain custom or user defined  data elements.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("customData", DataType="cs_customData")]
        public cs_customData customData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the well. This uniquely represents  the well referenced by the (possibly non-unique) nameWell.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the well. This uniquely represents  the well referenced by " +
            "the (possibly non-unique) nameWell.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWell", DataType="uidString")]
        public string uidWell {
            get {
                return this.uidWellField;
            }
            set {
                this.uidWellField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the wellbore. This uniquely represents  the wellbore referenced by the (possibly non-unique) nameWellbore.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the wellbore. This uniquely represents  the wellbore refere" +
            "nced by the (possibly non-unique) nameWellbore.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uidWellbore", DataType="uidString")]
        public string uidWellbore {
            get {
                return this.uidWellboreField;
            }
            set {
                this.uidWellboreField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_wellLogCurveInfo {
        
        private string mnemonicField;
        
        private RealtimeData classWitsmlField;
        
        private bool classWitsmlFieldSpecified;
        
        private string unitField;
        
        private string mnemAliasField;
        
        private string nullValueField;
        
        private bool alternateIndexField;
        
        private bool alternateIndexFieldSpecified;
        
        private refNameString wellDatumField;
        
        private string curveDescriptionField;
        
        private lengthMeasure sensorOffsetField;
        
        private string dataSourceField;
        
        private perLengthMeasure densDataField;
        
        private LogTraceState traceStateField;
        
        private bool traceStateFieldSpecified;
        
        private LogTraceOrigin traceOriginField;
        
        private bool traceOriginFieldSpecified;
        
        private object itemField;
        
        private cs_axisDefinition[] axisDefinitionField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The curve name. More than one curve can have  the same mnemonic but something like the array definition should be  different between them.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("The curve name. More than one curve can have  the same mnemonic but something lik" +
            "e the array definition should be  different between them.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mnemonic", DataType="str32")]
        public string mnemonic {
            get {
                return this.mnemonicField;
            }
            set {
                this.mnemonicField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The curve classification obtained from a lookup in the vendors  mnemonic catalog.</summary>
        [System.ComponentModel.DescriptionAttribute("The curve classification obtained from a lookup in the vendors  mnemonic catalog." +
            "")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("classWitsml", DataType="RealtimeData")]
        public RealtimeData classWitsml {
            get {
                return this.classWitsmlField;
            }
            set {
                this.classWitsmlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool classWitsmlSpecified {
            get {
                return this.classWitsmlFieldSpecified;
            }
            set {
                this.classWitsmlFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unit of measurement for the data values.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(24)]
        [System.ComponentModel.DescriptionAttribute("Unit of measurement for the data values.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("unit", DataType="uomString")]
        public string unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Name alias for this trace.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Name alias for this trace.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("mnemAlias", DataType="str32")]
        public string mnemAlias {
            get {
                return this.mnemAliasField;
            }
            set {
                this.mnemAliasField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An empty string is the default representation of a null value for a  curve (i.e., when the null value representation is not explicitly defined).  If a null value is defined in the logCurveInfo, it overrides any null value specified at the  logHeader level.  An empty string is always a valid null value representation in the comma delimited list. An empty string is not a valid null value representation within a space delimited or base64 encoded array. Specifying a null value also makes it easier to transform data back to a  legacy format without having to scan the data to insure that the null pattern  does not exist in the data.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute(@"An empty string is the default representation of a null value for a  curve (i.e., when the null value representation is not explicitly defined).  If a null value is defined in the logCurveInfo, it overrides any null value specified at the  logHeader level.  An empty string is always a valid null value representation in the comma delimited list. An empty string is not a valid null value representation within a space delimited or base64 encoded array. Specifying a null value also makes it easier to transform data back to a  legacy format without having to scan the data to insure that the null pattern  does not exist in the data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nullValue", DataType="encodedValueString")]
        public string nullValue {
            get {
                return this.nullValueField;
            }
            set {
                this.nullValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>True (true or 1) if this curve is a candidate to be a primary index. False (false or 0) or not given, indicates otherwise. An index curve should monotonically change when sorted on its own values (i.e., no duplicates).</summary>
        [System.ComponentModel.DescriptionAttribute("True (true or 1) if this curve is a candidate to be a primary index. False (false" +
            " or 0) or not given, indicates otherwise. An index curve should monotonically ch" +
            "ange when sorted on its own values (i.e., no duplicates).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("alternateIndex", DataType="logicalBoolean")]
        public bool alternateIndex {
            get {
                return this.alternateIndexField;
            }
            set {
                this.alternateIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool alternateIndexSpecified {
            get {
                return this.alternateIndexFieldSpecified;
            }
            set {
                this.alternateIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A pointer to the wellDatum that represents the values of this trace. This is only relevant for measured depths, vertical depths or elevations.</summary>
        [System.ComponentModel.DescriptionAttribute("A pointer to the wellDatum that represents the values of this trace. This is only" +
            " relevant for measured depths, vertical depths or elevations.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("wellDatum", DataType="refNameString")]
        public refNameString wellDatum {
            get {
                return this.wellDatumField;
            }
            set {
                this.wellDatumField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Description of the curve.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("Description of the curve.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("curveDescription", DataType="descriptionString")]
        public string curveDescription {
            get {
                return this.curveDescriptionField;
            }
            set {
                this.curveDescriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Offset of sensor from a downhole equipment vertical reference (the drill bit, for MWD logs;  the tool zero reference for wireline logs).  This element is only informative (log values are presented at actual depth, not requiring subtraction of an offset).</summary>
        [System.ComponentModel.DescriptionAttribute("Offset of sensor from a downhole equipment vertical reference (the drill bit, for" +
            " MWD logs;  the tool zero reference for wireline logs).  This element is only in" +
            "formative (log values are presented at actual depth, not requiring subtraction o" +
            "f an offset).")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("sensorOffset", DataType="lengthMeasure")]
        public lengthMeasure sensorOffset {
            get {
                return this.sensorOffsetField;
            }
            set {
                this.sensorOffsetField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data source, could be tool name/id.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute("Data source, could be tool name/id.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dataSource", DataType="str32")]
        public string dataSource {
            get {
                return this.dataSourceField;
            }
            set {
                this.dataSourceField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Data density of sample in samples per length unit.</summary>
        [System.ComponentModel.DescriptionAttribute("Data density of sample in samples per length unit.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("densData", DataType="perLengthMeasure")]
        public perLengthMeasure densData {
            get {
                return this.densDataField;
            }
            set {
                this.densDataField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>State of trace data.</summary>
        [System.ComponentModel.DescriptionAttribute("State of trace data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("traceState", DataType="LogTraceState")]
        public LogTraceState traceState {
            get {
                return this.traceStateField;
            }
            set {
                this.traceStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool traceStateSpecified {
            get {
                return this.traceStateFieldSpecified;
            }
            set {
                this.traceStateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Origin of trace data.</summary>
        [System.ComponentModel.DescriptionAttribute("Origin of trace data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("traceOrigin", DataType="LogTraceOrigin")]
        public LogTraceOrigin traceOrigin {
            get {
                return this.traceOriginField;
            }
            set {
                this.traceOriginField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool traceOriginSpecified {
            get {
                return this.traceOriginFieldSpecified;
            }
            set {
                this.traceOriginFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("encodingDef", typeof(ArrayElementDataType))]
        [System.Xml.Serialization.XmlElementAttribute("typeLogData", typeof(LogDataType))]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("typeLogData", DataType="LogDataType")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("encodingDef", DataType="ArrayElementDataType")]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Indicates that the curve is an array curve (i.e., multi-valued samples),  and provides meta data by which an axis of the array can be understood. A separate definition is required for each axis of an N-dimensional array.</summary>
        [System.Xml.Serialization.XmlElementAttribute("axisDefinition")]
        [System.ComponentModel.DescriptionAttribute("Indicates that the curve is an array curve (i.e., multi-valued samples),  and pro" +
            "vides meta data by which an axis of the array can be understood. A separate defi" +
            "nition is required for each axis of an N-dimensional array.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("axisDefinition", DataType="cs_axisDefinition")]
        public cs_axisDefinition[] axisDefinition {
            get {
                return this.axisDefinitionField;
            }
            set {
                this.axisDefinitionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the curve. This value must be unique within the context of the wellLog. This value will be referenced by block curve descriptors.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the curve. This value must be unique within the context of " +
            "the wellLog. This value will be referenced by block curve descriptors.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_blockInfo {
        
        private int dataRowCountField;
        
        private bool dataRowCountFieldSpecified;
        
        private string passField;
        
        private string descriptionField;
        
        private LogIndexType indexTypeField;
        
        private genericMeasure startIndexField;
        
        private genericMeasure endIndexField;
        
        private ratioGenericMeasure stepIncrementField;
        
        private Energistics.DataAccess.Timestamp startDateTimeIndexField;
        
        private bool startDateTimeIndexFieldSpecified;
        
        private Energistics.DataAccess.Timestamp endDateTimeIndexField;
        
        private bool endDateTimeIndexFieldSpecified;
        
        private LogIndexDirection directionField;
        
        private bool directionFieldSpecified;
        
        private indexCurve indexCurveField;
        
        private string nullValueField;
        
        private indexedObject[] logParamField;
        
        private cs_blockCurveInfo[] blockCurveInfoField;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>The number of data rows in the persistent block.  If a value is specified for this element in a query then the  server will limit the number of data rows in the result but the return value will still be the number of data rows in  the persistent block.</summary>
        [System.ComponentModel.DescriptionAttribute("The number of data rows in the persistent block.  If a value is specified for thi" +
            "s element in a query then the  server will limit the number of data rows in the " +
            "result but the return value will still be the number of data rows in  the persis" +
            "tent block.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("dataRowCount", DataType="positiveBigCount")]
        public int dataRowCount {
            get {
                return this.dataRowCountField;
            }
            set {
                this.dataRowCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dataRowCountSpecified {
            get {
                return this.dataRowCountFieldSpecified;
            }
            set {
                this.dataRowCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Identifies the pass within the run.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.ComponentModel.DescriptionAttribute("Identifies the pass within the run.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("pass", DataType="str16")]
        public string pass {
            get {
                return this.passField;
            }
            set {
                this.passField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A description of the block. For example, 'main log section',  'repeat section', 'logged going in hole' 'main log section, curve group 1',  'composite'.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(256)]
        [System.ComponentModel.DescriptionAttribute("A description of the block. For example, \'main log section\',  \'repeat section\', \'" +
            "logged going in hole\' \'main log section, curve group 1\',  \'composite\'.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("description", DataType="descriptionString")]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Primary index type. The index may be a quantity type or it may be a dateTime type. At least one of the index sets must be given. If both are given then "indexType" and  "indexCurve" must represent an elapsed time from "startDateTimeIndex". The start and end indexes are server query parameters and will be  populated with valid values in a GetFromStore result.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute(@"Primary index type. The index may be a quantity type or it may be a dateTime type. At least one of the index sets must be given. If both are given then ""indexType"" and  ""indexCurve"" must represent an elapsed time from ""startDateTimeIndex"". The start and end indexes are server query parameters and will be  populated with valid values in a GetFromStore result.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("indexType", DataType="LogIndexType")]
        public LogIndexType indexType {
            get {
                return this.indexTypeField;
            }
            set {
                this.indexTypeField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>When the direction is defined as "Increasing",  the startIndex is the starting (minimum) index value at which the first data point is located.  When the log header defines the direction as "Decreasing", the startIndex  is the starting (maximum) index value at which the first data point is located.</summary>
        [System.ComponentModel.DescriptionAttribute(@"When the direction is defined as ""Increasing"",  the startIndex is the starting (minimum) index value at which the first data point is located.  When the log header defines the direction as ""Decreasing"", the startIndex  is the starting (maximum) index value at which the first data point is located.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("startIndex", DataType="genericMeasure")]
        public genericMeasure startIndex {
            get {
                return this.startIndexField;
            }
            set {
                this.startIndexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>When the direction is defined as "Increasing", the endIndex  is the ending (maximum) index value at which the last data point is located.   When the log header defines the direction as Decreasing, the endIndex is the ending  (minimum) index value at which the last data point is located.</summary>
        [System.ComponentModel.DescriptionAttribute(@"When the direction is defined as ""Increasing"", the endIndex  is the ending (maximum) index value at which the last data point is located.   When the log header defines the direction as Decreasing, the endIndex is the ending  (minimum) index value at which the last data point is located.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("endIndex", DataType="genericMeasure")]
        public genericMeasure endIndex {
            get {
                return this.endIndexField;
            }
            set {
                this.endIndexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The sampling increment. Set to zero for unequal sampling. For curves that are originally sampled at a constant increment, this value should be retained because calculated values may have cumulative errors.</summary>
        [System.ComponentModel.DescriptionAttribute("The sampling increment. Set to zero for unequal sampling. For curves that are ori" +
            "ginally sampled at a constant increment, this value should be retained because c" +
            "alculated values may have cumulative errors.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("stepIncrement", DataType="ratioGenericMeasure")]
        public ratioGenericMeasure stepIncrement {
            get {
                return this.stepIncrementField;
            }
            set {
                this.stepIncrementField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>When the direction is defined as "Increasing",  the startIndex is the starting (minimum) index value at which the first data point is located.  When the log header defines the direction as "Decreasing", the startIndex  is the starting (maximum) index value at which the first data point is located.</summary>
        [System.ComponentModel.DescriptionAttribute(@"When the direction is defined as ""Increasing"",  the startIndex is the starting (minimum) index value at which the first data point is located.  When the log header defines the direction as ""Decreasing"", the startIndex  is the starting (maximum) index value at which the first data point is located.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("startDateTimeIndex", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp startDateTimeIndex {
            get {
                return this.startDateTimeIndexField;
            }
            set {
                this.startDateTimeIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startDateTimeIndexSpecified {
            get {
                return this.startDateTimeIndexFieldSpecified;
            }
            set {
                this.startDateTimeIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>When the direction is defined as "Increasing", the endIndex  is the ending (maximum) index value at which the last data point is located.   When the log header defines the direction as Decreasing, the endIndex is the ending  (minimum) index value at which the last data point is located.  This value is optional when startDateTimeIndex represents a reference for elapsed times. Otherwise, it should be defined when startDateTimeIndex is defined.</summary>
        [System.ComponentModel.DescriptionAttribute(@"When the direction is defined as ""Increasing"", the endIndex  is the ending (maximum) index value at which the last data point is located.   When the log header defines the direction as Decreasing, the endIndex is the ending  (minimum) index value at which the last data point is located.  This value is optional when startDateTimeIndex represents a reference for elapsed times. Otherwise, it should be defined when startDateTimeIndex is defined.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("endDateTimeIndex", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp endDateTimeIndex {
            get {
                return this.endDateTimeIndexField;
            }
            set {
                this.endDateTimeIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endDateTimeIndexSpecified {
            get {
                return this.endDateTimeIndexFieldSpecified;
            }
            set {
                this.endDateTimeIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The polarity of change in index values associated with successive data records. Increasing or Decreasing. Mixed is not a valid value.</summary>
        [System.ComponentModel.DescriptionAttribute("The polarity of change in index values associated with successive data records. I" +
            "ncreasing or Decreasing. Mixed is not a valid value.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("direction", DataType="LogIndexDirection")]
        public LogIndexDirection direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool directionSpecified {
            get {
                return this.directionFieldSpecified;
            }
            set {
                this.directionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The mnemonic of the index curve plus the column index. A column index of zero indicates an implied trace whose values start at startIndex  and increment by stepIncrement for each row.</summary>
        [System.ComponentModel.DescriptionAttribute("The mnemonic of the index curve plus the column index. A column index of zero ind" +
            "icates an implied trace whose values start at startIndex  and increment by stepI" +
            "ncrement for each row.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("indexCurve", DataType="indexCurve")]
        public indexCurve indexCurve {
            get {
                return this.indexCurveField;
            }
            set {
                this.indexCurveField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>An empty string is the default representation of a null value for a  curve (i.e. when the null value representation is not explicitly defined).  If a null value representation is defined for a log, this becomes the default for all curves in that log (but can be overridden at the block or curve level). An empty string is always a valid null value representation in the comma delimited list. An empty string is not a valid null value representation within a space delimited or base64 encoded array. Specifying a null value also makes it easier to transform data back to a  legacy format without having to scan the data to insure that the null pattern  does not exist in the data.</summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(32)]
        [System.ComponentModel.DescriptionAttribute(@"An empty string is the default representation of a null value for a  curve (i.e. when the null value representation is not explicitly defined).  If a null value representation is defined for a log, this becomes the default for all curves in that log (but can be overridden at the block or curve level). An empty string is always a valid null value representation in the comma delimited list. An empty string is not a valid null value representation within a space delimited or base64 encoded array. Specifying a null value also makes it easier to transform data back to a  legacy format without having to scan the data to insure that the null pattern  does not exist in the data.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("nullValue", DataType="str32")]
        public string nullValue {
            get {
                return this.nullValueField;
            }
            set {
                this.nullValueField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Log parameters that apply to this block.</summary>
        [System.Xml.Serialization.XmlElementAttribute("logParam")]
        [System.ComponentModel.DescriptionAttribute("Log parameters that apply to this block.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("logParam", DataType="indexedObject")]
        public indexedObject[] logParam {
            get {
                return this.logParamField;
            }
            set {
                this.logParamField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A curve occurring in data records defined by this block,  and its position within the data record.  Each curve in the block must have a different mnemonic.</summary>
        [System.Xml.Serialization.XmlElementAttribute("blockCurveInfo")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A curve occurring in data records defined by this block,  and its position within" +
            " the data record.  Each curve in the block must have a different mnemonic.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("blockCurveInfo", DataType="cs_blockCurveInfo")]
        public cs_blockCurveInfo[] blockCurveInfo {
            get {
                return this.blockCurveInfoField;
            }
            set {
                this.blockCurveInfoField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>Unique identifier for the block. This value must be unique within the context of the wellLog. This value will be pointed to by data levels that are associated with this block.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("Unique identifier for the block. This value must be unique within the context of " +
            "the wellLog. This value will be pointed to by data levels that are associated wi" +
            "th this block.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class cs_blockCurveInfo {
        
        private string curveIdField;
        
        private short columnIndexField;
        
        private genericMeasure minIndexField;
        
        private genericMeasure maxIndexField;
        
        private Energistics.DataAccess.Timestamp minDateTimeIndexField;
        
        private bool minDateTimeIndexFieldSpecified;
        
        private Energistics.DataAccess.Timestamp maxDateTimeIndexField;
        
        private bool maxDateTimeIndexFieldSpecified;
        
        private string uidField;
        
        /// <remarks/>
        /// <summary>A pointer to the curveInfo's curveId that this curve represents.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A pointer to the curveInfo\'s curveId that this curve represents.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("curveId", DataType="refString")]
        public string curveId {
            get {
                return this.curveIdField;
            }
            set {
                this.curveIdField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>A 1-based index of curve data in the data records. A value of zero indicates an implied curve with no values in the data record.</summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.ComponentModel.DescriptionAttribute("A 1-based index of curve data in the data records. A value of zero indicates an i" +
            "mplied curve with no values in the data record.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("columnIndex", DataType="nonNegativeCount")]
        public short columnIndex {
            get {
                return this.columnIndexField;
            }
            set {
                this.columnIndexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The minimum index value at which the first valid data point is located. This value will be properly set by the server to reflect data in the returned document.</summary>
        [System.ComponentModel.DescriptionAttribute("The minimum index value at which the first valid data point is located. This valu" +
            "e will be properly set by the server to reflect data in the returned document.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("minIndex", DataType="genericMeasure")]
        public genericMeasure minIndex {
            get {
                return this.minIndexField;
            }
            set {
                this.minIndexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum index value at which the last valid data point is located. This value will be properly set by the server to reflect data in the returned document.</summary>
        [System.ComponentModel.DescriptionAttribute("The maximum index value at which the last valid data point is located. This value" +
            " will be properly set by the server to reflect data in the returned document.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("maxIndex", DataType="genericMeasure")]
        public genericMeasure maxIndex {
            get {
                return this.maxIndexField;
            }
            set {
                this.maxIndexField = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The minimum index value at which the first valid data point is located. This value will be properly set by the server to reflect data  in the returned document.</summary>
        [System.ComponentModel.DescriptionAttribute("The minimum index value at which the first valid data point is located. This valu" +
            "e will be properly set by the server to reflect data  in the returned document.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("minDateTimeIndex", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp minDateTimeIndex {
            get {
                return this.minDateTimeIndexField;
            }
            set {
                this.minDateTimeIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool minDateTimeIndexSpecified {
            get {
                return this.minDateTimeIndexFieldSpecified;
            }
            set {
                this.minDateTimeIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The maximum index value at which the last valid data point  is located. This value will be properly set by the server to reflect data  in the returned document.</summary>
        [System.ComponentModel.DescriptionAttribute("The maximum index value at which the last valid data point  is located. This valu" +
            "e will be properly set by the server to reflect data  in the returned document.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("maxDateTimeIndex", DataType="timestamp")]
        public Energistics.DataAccess.Timestamp maxDateTimeIndex {
            get {
                return this.maxDateTimeIndexField;
            }
            set {
                this.maxDateTimeIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxDateTimeIndexSpecified {
            get {
                return this.maxDateTimeIndexFieldSpecified;
            }
            set {
                this.maxDateTimeIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        /// <summary>The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute(@"The unique identifier of a container element. This attribute is generally required within the context of a WITSML server. There should be no assumption as to the semantic content of this attribute. This should only be used with recurring container types (i.e., maxOccurs greater than one). The value is only required to be unique within the context of the nearest recurring parent element.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("uid", DataType="uidString")]
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.witsml.org/schemas/131")]
    public partial class data {
        
        private string idField;
        
        private string valueField;
        
        /// <remarks/>
        /// <summary>A pointer to the block descriptor's uid that this level represents.  If more than one block descriptor is specified then this attribute is required.</summary>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^ ]*")]
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(64)]
        [System.ComponentModel.DescriptionAttribute("A pointer to the block descriptor\'s uid that this level represents.  If more than" +
            " one block descriptor is specified then this attribute is required.")]
        [Energistics.DataAccess.Reflection.EnergisticsDataTypeAttribute("id", DataType="refString")]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
}
