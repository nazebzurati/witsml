// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen.exe, version 0.9.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Energistics.Etp.v12.Datatypes
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	public partial class Version : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse(@"{""type"":""record"",""name"":""Version"",""namespace"":""Energistics.Etp.v12.Datatypes"",""fields"":[{""name"":""major"",""default"":0,""type"":""int""},{""name"":""minor"",""default"":0,""type"":""int""},{""name"":""revision"",""default"":0,""type"":""int""},{""name"":""patch"",""default"":0,""type"":""int""}],""fullName"":""Energistics.Etp.v12.Datatypes.Version"",""depends"":[]}");
		private int _major;
		private int _minor;
		private int _revision;
		private int _patch;
		public virtual Schema Schema
		{
			get
			{
				return Version._SCHEMA;
			}
		}
		public int Major
		{
			get
			{
				return this._major;
			}
			set
			{
				this._major = value;
			}
		}
		public int Minor
		{
			get
			{
				return this._minor;
			}
			set
			{
				this._minor = value;
			}
		}
		public int Revision
		{
			get
			{
				return this._revision;
			}
			set
			{
				this._revision = value;
			}
		}
		public int Patch
		{
			get
			{
				return this._patch;
			}
			set
			{
				this._patch = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this._major;
			case 1: return this._minor;
			case 2: return this._revision;
			case 3: return this._patch;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this._major = (System.Int32)fieldValue; break;
			case 1: this._minor = (System.Int32)fieldValue; break;
			case 2: this._revision = (System.Int32)fieldValue; break;
			case 3: this._patch = (System.Int32)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
